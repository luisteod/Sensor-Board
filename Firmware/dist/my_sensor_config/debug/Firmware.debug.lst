

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Mon Apr 24 09:00:41 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	16F15223
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	_default_in_flash_text,global,class=STRCODE,delta=2,noexec
     5                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    10                           	psect	clrtext,global,class=CODE,delta=2
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    14                           	psect	text1,local,class=CODE,merge=1,delta=2
    15                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    16                           	psect	text3,local,class=CODE,merge=1,delta=2
    17                           	psect	text4,local,class=CODE,merge=1,delta=2
    18                           	psect	text5,local,class=CODE,merge=1,delta=2
    19                           	psect	text6,local,class=CODE,merge=1,delta=2
    20                           	psect	text7,local,class=CODE,merge=1,delta=2
    21                           	psect	text8,local,class=CODE,merge=1,delta=2
    22                           	psect	text9,local,class=CODE,merge=1,delta=2
    23                           	psect	text10,local,class=CODE,merge=1,delta=2
    24                           	psect	text11,local,class=CODE,merge=1,delta=2
    25                           	psect	text12,local,class=CODE,merge=1,delta=2
    26                           	psect	text13,local,class=CODE,merge=1,delta=2
    27                           	psect	text14,local,class=CODE,merge=1,delta=2
    28                           	psect	text15,local,class=CODE,merge=1,delta=2
    29                           	psect	text16,local,class=CODE,merge=1,delta=2
    30                           	psect	text17,local,class=CODE,merge=1,delta=2
    31                           	psect	text18,local,class=CODE,merge=1,delta=2
    32                           	psect	text19,local,class=CODE,merge=1,delta=2
    33                           	psect	text20,local,class=CODE,merge=1,inline,delta=2
    34                           	psect	text21,local,class=CODE,merge=1,inline,delta=2
    35                           	psect	text22,local,class=CODE,merge=1,delta=2
    36                           	psect	text23,local,class=CODE,merge=1,delta=2
    37                           	psect	text24,local,class=CODE,merge=1,delta=2
    38                           	psect	text25,local,class=CODE,merge=1,delta=2
    39                           	psect	text26,local,class=CODE,merge=1,inline,delta=2
    40                           	psect	text27,local,class=CODE,merge=1,inline,delta=2
    41                           	psect	intentry,global,class=CODE,delta=2
    42                           	psect	text29,local,class=CODE,merge=1,delta=2
    43                           	psect	text30,local,class=CODE,merge=1,delta=2
    44                           	psect	text31,local,class=CODE,merge=1,delta=2
    45                           	psect	text32,local,class=CODE,merge=1,delta=2
    46                           	psect	text33,local,class=CODE,merge=1,delta=2
    47                           	psect	text34,local,class=CODE,merge=1,inline,delta=2
    48                           	psect	text35,local,class=CODE,merge=1,inline,delta=2
    49                           	psect	text36,local,class=CODE,merge=1,delta=2
    50                           	psect	text37,local,class=CODE,merge=1,delta=2
    51                           	psect	text38,local,class=CODE,merge=1,delta=2
    52                           	psect	text39,local,class=CODE,merge=1,inline,delta=2
    53                           	psect	text40,local,class=CODE,merge=1,inline,delta=2
    54                           	psect	text41,local,class=CODE,merge=1,inline,delta=2
    55                           	psect	text42,local,class=CODE,merge=1,inline,delta=2
    56                           	psect	text43,local,class=CODE,merge=1,inline,delta=2
    57                           	psect	text44,local,class=CODE,merge=1,delta=2
    58                           	psect	text45,local,class=CODE,merge=1,delta=2
    59                           	psect	text46,local,class=CODE,merge=1,inline,delta=2
    60                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    61                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    62                           	dabs	1,0x7E,2
    63     0000                     
    64                           ; Generated 19/07/2022 GMT
    65                           ; 
    66                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
    67                           ; All rights reserved.
    68                           ; 
    69                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    70                           ; 
    71                           ; Redistribution and use in source and binary forms, with or without modification, are
    72                           ; permitted provided that the following conditions are met:
    73                           ; 
    74                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    75                           ;        conditions and the following disclaimer.
    76                           ; 
    77                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    78                           ;        of conditions and the following disclaimer in the documentation and/or other
    79                           ;        materials provided with the distribution. Publication is not required when
    80                           ;        this file is used in an embedded application.
    81                           ; 
    82                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    83                           ;        software without specific prior written permission.
    84                           ; 
    85                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    86                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    87                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    88                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    89                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    90                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    91                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    92                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    93                           ; 
    94                           ; 
    95                           ; Code-generator required, PIC16F15223 Definitions
    96                           ; 
    97                           ; SFR Addresses
    98     0000                     	;# 
    99     0001                     	;# 
   100     0002                     	;# 
   101     0003                     	;# 
   102     0004                     	;# 
   103     0005                     	;# 
   104     0006                     	;# 
   105     0007                     	;# 
   106     0008                     	;# 
   107     0009                     	;# 
   108     000A                     	;# 
   109     000B                     	;# 
   110     000C                     	;# 
   111     000E                     	;# 
   112     0012                     	;# 
   113     0014                     	;# 
   114     0018                     	;# 
   115     001A                     	;# 
   116     009A                     	;# 
   117     009B                     	;# 
   118     009B                     	;# 
   119     009C                     	;# 
   120     009D                     	;# 
   121     009E                     	;# 
   122     009F                     	;# 
   123     010E                     	;# 
   124     010F                     	;# 
   125     0119                     	;# 
   126     011A                     	;# 
   127     011B                     	;# 
   128     011B                     	;# 
   129     011C                     	;# 
   130     011D                     	;# 
   131     011E                     	;# 
   132     011F                     	;# 
   133     018C                     	;# 
   134     018D                     	;# 
   135     018E                     	;# 
   136     018F                     	;# 
   137     0190                     	;# 
   138     0191                     	;# 
   139     0192                     	;# 
   140     020C                     	;# 
   141     020D                     	;# 
   142     020E                     	;# 
   143     020E                     	;# 
   144     020F                     	;# 
   145     020F                     	;# 
   146     0210                     	;# 
   147     0210                     	;# 
   148     0211                     	;# 
   149     0211                     	;# 
   150     028C                     	;# 
   151     028C                     	;# 
   152     028D                     	;# 
   153     028D                     	;# 
   154     028E                     	;# 
   155     028F                     	;# 
   156     0290                     	;# 
   157     0291                     	;# 
   158     030C                     	;# 
   159     030C                     	;# 
   160     030D                     	;# 
   161     030E                     	;# 
   162     030F                     	;# 
   163     0310                     	;# 
   164     0310                     	;# 
   165     0311                     	;# 
   166     0312                     	;# 
   167     0313                     	;# 
   168     0314                     	;# 
   169     0314                     	;# 
   170     0315                     	;# 
   171     0316                     	;# 
   172     0318                     	;# 
   173     0318                     	;# 
   174     0319                     	;# 
   175     031A                     	;# 
   176     059C                     	;# 
   177     059C                     	;# 
   178     059D                     	;# 
   179     059D                     	;# 
   180     059E                     	;# 
   181     059F                     	;# 
   182     070C                     	;# 
   183     070D                     	;# 
   184     070E                     	;# 
   185     0716                     	;# 
   186     0717                     	;# 
   187     0718                     	;# 
   188     080C                     	;# 
   189     0811                     	;# 
   190     0813                     	;# 
   191     0814                     	;# 
   192     081A                     	;# 
   193     081A                     	;# 
   194     081B                     	;# 
   195     081C                     	;# 
   196     081C                     	;# 
   197     081D                     	;# 
   198     081E                     	;# 
   199     081F                     	;# 
   200     088E                     	;# 
   201     0890                     	;# 
   202     0891                     	;# 
   203     0892                     	;# 
   204     0893                     	;# 
   205     090C                     	;# 
   206     1E8F                     	;# 
   207     1E90                     	;# 
   208     1E91                     	;# 
   209     1E92                     	;# 
   210     1E93                     	;# 
   211     1E9C                     	;# 
   212     1EA1                     	;# 
   213     1EA2                     	;# 
   214     1EC3                     	;# 
   215     1EC5                     	;# 
   216     1EC6                     	;# 
   217     1EC7                     	;# 
   218     1ECB                     	;# 
   219     1ECB                     	;# 
   220     1ECB                     	;# 
   221     1ECC                     	;# 
   222     1ECC                     	;# 
   223     1ECC                     	;# 
   224     1F10                     	;# 
   225     1F11                     	;# 
   226     1F12                     	;# 
   227     1F14                     	;# 
   228     1F15                     	;# 
   229     1F20                     	;# 
   230     1F21                     	;# 
   231     1F22                     	;# 
   232     1F23                     	;# 
   233     1F24                     	;# 
   234     1F25                     	;# 
   235     1F38                     	;# 
   236     1F39                     	;# 
   237     1F3A                     	;# 
   238     1F3B                     	;# 
   239     1F3C                     	;# 
   240     1F3D                     	;# 
   241     1F3E                     	;# 
   242     1F3F                     	;# 
   243     1F4E                     	;# 
   244     1F4F                     	;# 
   245     1F50                     	;# 
   246     1F51                     	;# 
   247     1F52                     	;# 
   248     1F53                     	;# 
   249     1F54                     	;# 
   250     1F55                     	;# 
   251     1FE4                     	;# 
   252     1FE5                     	;# 
   253     1FE6                     	;# 
   254     1FE7                     	;# 
   255     1FE8                     	;# 
   256     1FE8                     	;# 
   257     1FE9                     	;# 
   258     1FEA                     	;# 
   259     1FEB                     	;# 
   260     1FED                     	;# 
   261     1FEE                     	;# 
   262     1FEF                     	;# 
   263     0000                     	;# 
   264     0001                     	;# 
   265     0002                     	;# 
   266     0003                     	;# 
   267     0004                     	;# 
   268     0005                     	;# 
   269     0006                     	;# 
   270     0007                     	;# 
   271     0008                     	;# 
   272     0009                     	;# 
   273     000A                     	;# 
   274     000B                     	;# 
   275     000C                     	;# 
   276     000E                     	;# 
   277     0012                     	;# 
   278     0014                     	;# 
   279     0018                     	;# 
   280     001A                     	;# 
   281     009A                     	;# 
   282     009B                     	;# 
   283     009B                     	;# 
   284     009C                     	;# 
   285     009D                     	;# 
   286     009E                     	;# 
   287     009F                     	;# 
   288     010E                     	;# 
   289     010F                     	;# 
   290     0119                     	;# 
   291     011A                     	;# 
   292     011B                     	;# 
   293     011B                     	;# 
   294     011C                     	;# 
   295     011D                     	;# 
   296     011E                     	;# 
   297     011F                     	;# 
   298     018C                     	;# 
   299     018D                     	;# 
   300     018E                     	;# 
   301     018F                     	;# 
   302     0190                     	;# 
   303     0191                     	;# 
   304     0192                     	;# 
   305     020C                     	;# 
   306     020D                     	;# 
   307     020E                     	;# 
   308     020E                     	;# 
   309     020F                     	;# 
   310     020F                     	;# 
   311     0210                     	;# 
   312     0210                     	;# 
   313     0211                     	;# 
   314     0211                     	;# 
   315     028C                     	;# 
   316     028C                     	;# 
   317     028D                     	;# 
   318     028D                     	;# 
   319     028E                     	;# 
   320     028F                     	;# 
   321     0290                     	;# 
   322     0291                     	;# 
   323     030C                     	;# 
   324     030C                     	;# 
   325     030D                     	;# 
   326     030E                     	;# 
   327     030F                     	;# 
   328     0310                     	;# 
   329     0310                     	;# 
   330     0311                     	;# 
   331     0312                     	;# 
   332     0313                     	;# 
   333     0314                     	;# 
   334     0314                     	;# 
   335     0315                     	;# 
   336     0316                     	;# 
   337     0318                     	;# 
   338     0318                     	;# 
   339     0319                     	;# 
   340     031A                     	;# 
   341     059C                     	;# 
   342     059C                     	;# 
   343     059D                     	;# 
   344     059D                     	;# 
   345     059E                     	;# 
   346     059F                     	;# 
   347     070C                     	;# 
   348     070D                     	;# 
   349     070E                     	;# 
   350     0716                     	;# 
   351     0717                     	;# 
   352     0718                     	;# 
   353     080C                     	;# 
   354     0811                     	;# 
   355     0813                     	;# 
   356     0814                     	;# 
   357     081A                     	;# 
   358     081A                     	;# 
   359     081B                     	;# 
   360     081C                     	;# 
   361     081C                     	;# 
   362     081D                     	;# 
   363     081E                     	;# 
   364     081F                     	;# 
   365     088E                     	;# 
   366     0890                     	;# 
   367     0891                     	;# 
   368     0892                     	;# 
   369     0893                     	;# 
   370     090C                     	;# 
   371     1E8F                     	;# 
   372     1E90                     	;# 
   373     1E91                     	;# 
   374     1E92                     	;# 
   375     1E93                     	;# 
   376     1E9C                     	;# 
   377     1EA1                     	;# 
   378     1EA2                     	;# 
   379     1EC3                     	;# 
   380     1EC5                     	;# 
   381     1EC6                     	;# 
   382     1EC7                     	;# 
   383     1ECB                     	;# 
   384     1ECB                     	;# 
   385     1ECB                     	;# 
   386     1ECC                     	;# 
   387     1ECC                     	;# 
   388     1ECC                     	;# 
   389     1F10                     	;# 
   390     1F11                     	;# 
   391     1F12                     	;# 
   392     1F14                     	;# 
   393     1F15                     	;# 
   394     1F20                     	;# 
   395     1F21                     	;# 
   396     1F22                     	;# 
   397     1F23                     	;# 
   398     1F24                     	;# 
   399     1F25                     	;# 
   400     1F38                     	;# 
   401     1F39                     	;# 
   402     1F3A                     	;# 
   403     1F3B                     	;# 
   404     1F3C                     	;# 
   405     1F3D                     	;# 
   406     1F3E                     	;# 
   407     1F3F                     	;# 
   408     1F4E                     	;# 
   409     1F4F                     	;# 
   410     1F50                     	;# 
   411     1F51                     	;# 
   412     1F52                     	;# 
   413     1F53                     	;# 
   414     1F54                     	;# 
   415     1F55                     	;# 
   416     1FE4                     	;# 
   417     1FE5                     	;# 
   418     1FE6                     	;# 
   419     1FE7                     	;# 
   420     1FE8                     	;# 
   421     1FE8                     	;# 
   422     1FE9                     	;# 
   423     1FEA                     	;# 
   424     1FEB                     	;# 
   425     1FED                     	;# 
   426     1FEE                     	;# 
   427     1FEF                     	;# 
   428     0000                     	;# 
   429     0001                     	;# 
   430     0002                     	;# 
   431     0003                     	;# 
   432     0004                     	;# 
   433     0005                     	;# 
   434     0006                     	;# 
   435     0007                     	;# 
   436     0008                     	;# 
   437     0009                     	;# 
   438     000A                     	;# 
   439     000B                     	;# 
   440     000C                     	;# 
   441     000E                     	;# 
   442     0012                     	;# 
   443     0014                     	;# 
   444     0018                     	;# 
   445     001A                     	;# 
   446     009A                     	;# 
   447     009B                     	;# 
   448     009B                     	;# 
   449     009C                     	;# 
   450     009D                     	;# 
   451     009E                     	;# 
   452     009F                     	;# 
   453     010E                     	;# 
   454     010F                     	;# 
   455     0119                     	;# 
   456     011A                     	;# 
   457     011B                     	;# 
   458     011B                     	;# 
   459     011C                     	;# 
   460     011D                     	;# 
   461     011E                     	;# 
   462     011F                     	;# 
   463     018C                     	;# 
   464     018D                     	;# 
   465     018E                     	;# 
   466     018F                     	;# 
   467     0190                     	;# 
   468     0191                     	;# 
   469     0192                     	;# 
   470     020C                     	;# 
   471     020D                     	;# 
   472     020E                     	;# 
   473     020E                     	;# 
   474     020F                     	;# 
   475     020F                     	;# 
   476     0210                     	;# 
   477     0210                     	;# 
   478     0211                     	;# 
   479     0211                     	;# 
   480     028C                     	;# 
   481     028C                     	;# 
   482     028D                     	;# 
   483     028D                     	;# 
   484     028E                     	;# 
   485     028F                     	;# 
   486     0290                     	;# 
   487     0291                     	;# 
   488     030C                     	;# 
   489     030C                     	;# 
   490     030D                     	;# 
   491     030E                     	;# 
   492     030F                     	;# 
   493     0310                     	;# 
   494     0310                     	;# 
   495     0311                     	;# 
   496     0312                     	;# 
   497     0313                     	;# 
   498     0314                     	;# 
   499     0314                     	;# 
   500     0315                     	;# 
   501     0316                     	;# 
   502     0318                     	;# 
   503     0318                     	;# 
   504     0319                     	;# 
   505     031A                     	;# 
   506     059C                     	;# 
   507     059C                     	;# 
   508     059D                     	;# 
   509     059D                     	;# 
   510     059E                     	;# 
   511     059F                     	;# 
   512     070C                     	;# 
   513     070D                     	;# 
   514     070E                     	;# 
   515     0716                     	;# 
   516     0717                     	;# 
   517     0718                     	;# 
   518     080C                     	;# 
   519     0811                     	;# 
   520     0813                     	;# 
   521     0814                     	;# 
   522     081A                     	;# 
   523     081A                     	;# 
   524     081B                     	;# 
   525     081C                     	;# 
   526     081C                     	;# 
   527     081D                     	;# 
   528     081E                     	;# 
   529     081F                     	;# 
   530     088E                     	;# 
   531     0890                     	;# 
   532     0891                     	;# 
   533     0892                     	;# 
   534     0893                     	;# 
   535     090C                     	;# 
   536     1E8F                     	;# 
   537     1E90                     	;# 
   538     1E91                     	;# 
   539     1E92                     	;# 
   540     1E93                     	;# 
   541     1E9C                     	;# 
   542     1EA1                     	;# 
   543     1EA2                     	;# 
   544     1EC3                     	;# 
   545     1EC5                     	;# 
   546     1EC6                     	;# 
   547     1EC7                     	;# 
   548     1ECB                     	;# 
   549     1ECB                     	;# 
   550     1ECB                     	;# 
   551     1ECC                     	;# 
   552     1ECC                     	;# 
   553     1ECC                     	;# 
   554     1F10                     	;# 
   555     1F11                     	;# 
   556     1F12                     	;# 
   557     1F14                     	;# 
   558     1F15                     	;# 
   559     1F20                     	;# 
   560     1F21                     	;# 
   561     1F22                     	;# 
   562     1F23                     	;# 
   563     1F24                     	;# 
   564     1F25                     	;# 
   565     1F38                     	;# 
   566     1F39                     	;# 
   567     1F3A                     	;# 
   568     1F3B                     	;# 
   569     1F3C                     	;# 
   570     1F3D                     	;# 
   571     1F3E                     	;# 
   572     1F3F                     	;# 
   573     1F4E                     	;# 
   574     1F4F                     	;# 
   575     1F50                     	;# 
   576     1F51                     	;# 
   577     1F52                     	;# 
   578     1F53                     	;# 
   579     1F54                     	;# 
   580     1F55                     	;# 
   581     1FE4                     	;# 
   582     1FE5                     	;# 
   583     1FE6                     	;# 
   584     1FE7                     	;# 
   585     1FE8                     	;# 
   586     1FE8                     	;# 
   587     1FE9                     	;# 
   588     1FEA                     	;# 
   589     1FEB                     	;# 
   590     1FED                     	;# 
   591     1FEE                     	;# 
   592     1FEF                     	;# 
   593     0000                     	;# 
   594     0001                     	;# 
   595     0002                     	;# 
   596     0003                     	;# 
   597     0004                     	;# 
   598     0005                     	;# 
   599     0006                     	;# 
   600     0007                     	;# 
   601     0008                     	;# 
   602     0009                     	;# 
   603     000A                     	;# 
   604     000B                     	;# 
   605     000C                     	;# 
   606     000E                     	;# 
   607     0012                     	;# 
   608     0014                     	;# 
   609     0018                     	;# 
   610     001A                     	;# 
   611     009A                     	;# 
   612     009B                     	;# 
   613     009B                     	;# 
   614     009C                     	;# 
   615     009D                     	;# 
   616     009E                     	;# 
   617     009F                     	;# 
   618     010E                     	;# 
   619     010F                     	;# 
   620     0119                     	;# 
   621     011A                     	;# 
   622     011B                     	;# 
   623     011B                     	;# 
   624     011C                     	;# 
   625     011D                     	;# 
   626     011E                     	;# 
   627     011F                     	;# 
   628     018C                     	;# 
   629     018D                     	;# 
   630     018E                     	;# 
   631     018F                     	;# 
   632     0190                     	;# 
   633     0191                     	;# 
   634     0192                     	;# 
   635     020C                     	;# 
   636     020D                     	;# 
   637     020E                     	;# 
   638     020E                     	;# 
   639     020F                     	;# 
   640     020F                     	;# 
   641     0210                     	;# 
   642     0210                     	;# 
   643     0211                     	;# 
   644     0211                     	;# 
   645     028C                     	;# 
   646     028C                     	;# 
   647     028D                     	;# 
   648     028D                     	;# 
   649     028E                     	;# 
   650     028F                     	;# 
   651     0290                     	;# 
   652     0291                     	;# 
   653     030C                     	;# 
   654     030C                     	;# 
   655     030D                     	;# 
   656     030E                     	;# 
   657     030F                     	;# 
   658     0310                     	;# 
   659     0310                     	;# 
   660     0311                     	;# 
   661     0312                     	;# 
   662     0313                     	;# 
   663     0314                     	;# 
   664     0314                     	;# 
   665     0315                     	;# 
   666     0316                     	;# 
   667     0318                     	;# 
   668     0318                     	;# 
   669     0319                     	;# 
   670     031A                     	;# 
   671     059C                     	;# 
   672     059C                     	;# 
   673     059D                     	;# 
   674     059D                     	;# 
   675     059E                     	;# 
   676     059F                     	;# 
   677     070C                     	;# 
   678     070D                     	;# 
   679     070E                     	;# 
   680     0716                     	;# 
   681     0717                     	;# 
   682     0718                     	;# 
   683     080C                     	;# 
   684     0811                     	;# 
   685     0813                     	;# 
   686     0814                     	;# 
   687     081A                     	;# 
   688     081A                     	;# 
   689     081B                     	;# 
   690     081C                     	;# 
   691     081C                     	;# 
   692     081D                     	;# 
   693     081E                     	;# 
   694     081F                     	;# 
   695     088E                     	;# 
   696     0890                     	;# 
   697     0891                     	;# 
   698     0892                     	;# 
   699     0893                     	;# 
   700     090C                     	;# 
   701     1E8F                     	;# 
   702     1E90                     	;# 
   703     1E91                     	;# 
   704     1E92                     	;# 
   705     1E93                     	;# 
   706     1E9C                     	;# 
   707     1EA1                     	;# 
   708     1EA2                     	;# 
   709     1EC3                     	;# 
   710     1EC5                     	;# 
   711     1EC6                     	;# 
   712     1EC7                     	;# 
   713     1ECB                     	;# 
   714     1ECB                     	;# 
   715     1ECB                     	;# 
   716     1ECC                     	;# 
   717     1ECC                     	;# 
   718     1ECC                     	;# 
   719     1F10                     	;# 
   720     1F11                     	;# 
   721     1F12                     	;# 
   722     1F14                     	;# 
   723     1F15                     	;# 
   724     1F20                     	;# 
   725     1F21                     	;# 
   726     1F22                     	;# 
   727     1F23                     	;# 
   728     1F24                     	;# 
   729     1F25                     	;# 
   730     1F38                     	;# 
   731     1F39                     	;# 
   732     1F3A                     	;# 
   733     1F3B                     	;# 
   734     1F3C                     	;# 
   735     1F3D                     	;# 
   736     1F3E                     	;# 
   737     1F3F                     	;# 
   738     1F4E                     	;# 
   739     1F4F                     	;# 
   740     1F50                     	;# 
   741     1F51                     	;# 
   742     1F52                     	;# 
   743     1F53                     	;# 
   744     1F54                     	;# 
   745     1F55                     	;# 
   746     1FE4                     	;# 
   747     1FE5                     	;# 
   748     1FE6                     	;# 
   749     1FE7                     	;# 
   750     1FE8                     	;# 
   751     1FE8                     	;# 
   752     1FE9                     	;# 
   753     1FEA                     	;# 
   754     1FEB                     	;# 
   755     1FED                     	;# 
   756     1FEE                     	;# 
   757     1FEF                     	;# 
   758     0000                     	;# 
   759     0001                     	;# 
   760     0002                     	;# 
   761     0003                     	;# 
   762     0004                     	;# 
   763     0005                     	;# 
   764     0006                     	;# 
   765     0007                     	;# 
   766     0008                     	;# 
   767     0009                     	;# 
   768     000A                     	;# 
   769     000B                     	;# 
   770     000C                     	;# 
   771     000E                     	;# 
   772     0012                     	;# 
   773     0014                     	;# 
   774     0018                     	;# 
   775     001A                     	;# 
   776     009A                     	;# 
   777     009B                     	;# 
   778     009B                     	;# 
   779     009C                     	;# 
   780     009D                     	;# 
   781     009E                     	;# 
   782     009F                     	;# 
   783     010E                     	;# 
   784     010F                     	;# 
   785     0119                     	;# 
   786     011A                     	;# 
   787     011B                     	;# 
   788     011B                     	;# 
   789     011C                     	;# 
   790     011D                     	;# 
   791     011E                     	;# 
   792     011F                     	;# 
   793     018C                     	;# 
   794     018D                     	;# 
   795     018E                     	;# 
   796     018F                     	;# 
   797     0190                     	;# 
   798     0191                     	;# 
   799     0192                     	;# 
   800     020C                     	;# 
   801     020D                     	;# 
   802     020E                     	;# 
   803     020E                     	;# 
   804     020F                     	;# 
   805     020F                     	;# 
   806     0210                     	;# 
   807     0210                     	;# 
   808     0211                     	;# 
   809     0211                     	;# 
   810     028C                     	;# 
   811     028C                     	;# 
   812     028D                     	;# 
   813     028D                     	;# 
   814     028E                     	;# 
   815     028F                     	;# 
   816     0290                     	;# 
   817     0291                     	;# 
   818     030C                     	;# 
   819     030C                     	;# 
   820     030D                     	;# 
   821     030E                     	;# 
   822     030F                     	;# 
   823     0310                     	;# 
   824     0310                     	;# 
   825     0311                     	;# 
   826     0312                     	;# 
   827     0313                     	;# 
   828     0314                     	;# 
   829     0314                     	;# 
   830     0315                     	;# 
   831     0316                     	;# 
   832     0318                     	;# 
   833     0318                     	;# 
   834     0319                     	;# 
   835     031A                     	;# 
   836     059C                     	;# 
   837     059C                     	;# 
   838     059D                     	;# 
   839     059D                     	;# 
   840     059E                     	;# 
   841     059F                     	;# 
   842     070C                     	;# 
   843     070D                     	;# 
   844     070E                     	;# 
   845     0716                     	;# 
   846     0717                     	;# 
   847     0718                     	;# 
   848     080C                     	;# 
   849     0811                     	;# 
   850     0813                     	;# 
   851     0814                     	;# 
   852     081A                     	;# 
   853     081A                     	;# 
   854     081B                     	;# 
   855     081C                     	;# 
   856     081C                     	;# 
   857     081D                     	;# 
   858     081E                     	;# 
   859     081F                     	;# 
   860     088E                     	;# 
   861     0890                     	;# 
   862     0891                     	;# 
   863     0892                     	;# 
   864     0893                     	;# 
   865     090C                     	;# 
   866     1E8F                     	;# 
   867     1E90                     	;# 
   868     1E91                     	;# 
   869     1E92                     	;# 
   870     1E93                     	;# 
   871     1E9C                     	;# 
   872     1EA1                     	;# 
   873     1EA2                     	;# 
   874     1EC3                     	;# 
   875     1EC5                     	;# 
   876     1EC6                     	;# 
   877     1EC7                     	;# 
   878     1ECB                     	;# 
   879     1ECB                     	;# 
   880     1ECB                     	;# 
   881     1ECC                     	;# 
   882     1ECC                     	;# 
   883     1ECC                     	;# 
   884     1F10                     	;# 
   885     1F11                     	;# 
   886     1F12                     	;# 
   887     1F14                     	;# 
   888     1F15                     	;# 
   889     1F20                     	;# 
   890     1F21                     	;# 
   891     1F22                     	;# 
   892     1F23                     	;# 
   893     1F24                     	;# 
   894     1F25                     	;# 
   895     1F38                     	;# 
   896     1F39                     	;# 
   897     1F3A                     	;# 
   898     1F3B                     	;# 
   899     1F3C                     	;# 
   900     1F3D                     	;# 
   901     1F3E                     	;# 
   902     1F3F                     	;# 
   903     1F4E                     	;# 
   904     1F4F                     	;# 
   905     1F50                     	;# 
   906     1F51                     	;# 
   907     1F52                     	;# 
   908     1F53                     	;# 
   909     1F54                     	;# 
   910     1F55                     	;# 
   911     1FE4                     	;# 
   912     1FE5                     	;# 
   913     1FE6                     	;# 
   914     1FE7                     	;# 
   915     1FE8                     	;# 
   916     1FE8                     	;# 
   917     1FE9                     	;# 
   918     1FEA                     	;# 
   919     1FEB                     	;# 
   920     1FED                     	;# 
   921     1FEE                     	;# 
   922     1FEF                     	;# 
   923     0000                     	;# 
   924     0001                     	;# 
   925     0002                     	;# 
   926     0003                     	;# 
   927     0004                     	;# 
   928     0005                     	;# 
   929     0006                     	;# 
   930     0007                     	;# 
   931     0008                     	;# 
   932     0009                     	;# 
   933     000A                     	;# 
   934     000B                     	;# 
   935     000C                     	;# 
   936     000E                     	;# 
   937     0012                     	;# 
   938     0014                     	;# 
   939     0018                     	;# 
   940     001A                     	;# 
   941     009A                     	;# 
   942     009B                     	;# 
   943     009B                     	;# 
   944     009C                     	;# 
   945     009D                     	;# 
   946     009E                     	;# 
   947     009F                     	;# 
   948     010E                     	;# 
   949     010F                     	;# 
   950     0119                     	;# 
   951     011A                     	;# 
   952     011B                     	;# 
   953     011B                     	;# 
   954     011C                     	;# 
   955     011D                     	;# 
   956     011E                     	;# 
   957     011F                     	;# 
   958     018C                     	;# 
   959     018D                     	;# 
   960     018E                     	;# 
   961     018F                     	;# 
   962     0190                     	;# 
   963     0191                     	;# 
   964     0192                     	;# 
   965     020C                     	;# 
   966     020D                     	;# 
   967     020E                     	;# 
   968     020E                     	;# 
   969     020F                     	;# 
   970     020F                     	;# 
   971     0210                     	;# 
   972     0210                     	;# 
   973     0211                     	;# 
   974     0211                     	;# 
   975     028C                     	;# 
   976     028C                     	;# 
   977     028D                     	;# 
   978     028D                     	;# 
   979     028E                     	;# 
   980     028F                     	;# 
   981     0290                     	;# 
   982     0291                     	;# 
   983     030C                     	;# 
   984     030C                     	;# 
   985     030D                     	;# 
   986     030E                     	;# 
   987     030F                     	;# 
   988     0310                     	;# 
   989     0310                     	;# 
   990     0311                     	;# 
   991     0312                     	;# 
   992     0313                     	;# 
   993     0314                     	;# 
   994     0314                     	;# 
   995     0315                     	;# 
   996     0316                     	;# 
   997     0318                     	;# 
   998     0318                     	;# 
   999     0319                     	;# 
  1000     031A                     	;# 
  1001     059C                     	;# 
  1002     059C                     	;# 
  1003     059D                     	;# 
  1004     059D                     	;# 
  1005     059E                     	;# 
  1006     059F                     	;# 
  1007     070C                     	;# 
  1008     070D                     	;# 
  1009     070E                     	;# 
  1010     0716                     	;# 
  1011     0717                     	;# 
  1012     0718                     	;# 
  1013     080C                     	;# 
  1014     0811                     	;# 
  1015     0813                     	;# 
  1016     0814                     	;# 
  1017     081A                     	;# 
  1018     081A                     	;# 
  1019     081B                     	;# 
  1020     081C                     	;# 
  1021     081C                     	;# 
  1022     081D                     	;# 
  1023     081E                     	;# 
  1024     081F                     	;# 
  1025     088E                     	;# 
  1026     0890                     	;# 
  1027     0891                     	;# 
  1028     0892                     	;# 
  1029     0893                     	;# 
  1030     090C                     	;# 
  1031     1E8F                     	;# 
  1032     1E90                     	;# 
  1033     1E91                     	;# 
  1034     1E92                     	;# 
  1035     1E93                     	;# 
  1036     1E9C                     	;# 
  1037     1EA1                     	;# 
  1038     1EA2                     	;# 
  1039     1EC3                     	;# 
  1040     1EC5                     	;# 
  1041     1EC6                     	;# 
  1042     1EC7                     	;# 
  1043     1ECB                     	;# 
  1044     1ECB                     	;# 
  1045     1ECB                     	;# 
  1046     1ECC                     	;# 
  1047     1ECC                     	;# 
  1048     1ECC                     	;# 
  1049     1F10                     	;# 
  1050     1F11                     	;# 
  1051     1F12                     	;# 
  1052     1F14                     	;# 
  1053     1F15                     	;# 
  1054     1F20                     	;# 
  1055     1F21                     	;# 
  1056     1F22                     	;# 
  1057     1F23                     	;# 
  1058     1F24                     	;# 
  1059     1F25                     	;# 
  1060     1F38                     	;# 
  1061     1F39                     	;# 
  1062     1F3A                     	;# 
  1063     1F3B                     	;# 
  1064     1F3C                     	;# 
  1065     1F3D                     	;# 
  1066     1F3E                     	;# 
  1067     1F3F                     	;# 
  1068     1F4E                     	;# 
  1069     1F4F                     	;# 
  1070     1F50                     	;# 
  1071     1F51                     	;# 
  1072     1F52                     	;# 
  1073     1F53                     	;# 
  1074     1F54                     	;# 
  1075     1F55                     	;# 
  1076     1FE4                     	;# 
  1077     1FE5                     	;# 
  1078     1FE6                     	;# 
  1079     1FE7                     	;# 
  1080     1FE8                     	;# 
  1081     1FE8                     	;# 
  1082     1FE9                     	;# 
  1083     1FEA                     	;# 
  1084     1FEB                     	;# 
  1085     1FED                     	;# 
  1086     1FEE                     	;# 
  1087     1FEF                     	;# 
  1088     0000                     	;# 
  1089     0001                     	;# 
  1090     0002                     	;# 
  1091     0003                     	;# 
  1092     0004                     	;# 
  1093     0005                     	;# 
  1094     0006                     	;# 
  1095     0007                     	;# 
  1096     0008                     	;# 
  1097     0009                     	;# 
  1098     000A                     	;# 
  1099     000B                     	;# 
  1100     000C                     	;# 
  1101     000E                     	;# 
  1102     0012                     	;# 
  1103     0014                     	;# 
  1104     0018                     	;# 
  1105     001A                     	;# 
  1106     009A                     	;# 
  1107     009B                     	;# 
  1108     009B                     	;# 
  1109     009C                     	;# 
  1110     009D                     	;# 
  1111     009E                     	;# 
  1112     009F                     	;# 
  1113     010E                     	;# 
  1114     010F                     	;# 
  1115     0119                     	;# 
  1116     011A                     	;# 
  1117     011B                     	;# 
  1118     011B                     	;# 
  1119     011C                     	;# 
  1120     011D                     	;# 
  1121     011E                     	;# 
  1122     011F                     	;# 
  1123     018C                     	;# 
  1124     018D                     	;# 
  1125     018E                     	;# 
  1126     018F                     	;# 
  1127     0190                     	;# 
  1128     0191                     	;# 
  1129     0192                     	;# 
  1130     020C                     	;# 
  1131     020D                     	;# 
  1132     020E                     	;# 
  1133     020E                     	;# 
  1134     020F                     	;# 
  1135     020F                     	;# 
  1136     0210                     	;# 
  1137     0210                     	;# 
  1138     0211                     	;# 
  1139     0211                     	;# 
  1140     028C                     	;# 
  1141     028C                     	;# 
  1142     028D                     	;# 
  1143     028D                     	;# 
  1144     028E                     	;# 
  1145     028F                     	;# 
  1146     0290                     	;# 
  1147     0291                     	;# 
  1148     030C                     	;# 
  1149     030C                     	;# 
  1150     030D                     	;# 
  1151     030E                     	;# 
  1152     030F                     	;# 
  1153     0310                     	;# 
  1154     0310                     	;# 
  1155     0311                     	;# 
  1156     0312                     	;# 
  1157     0313                     	;# 
  1158     0314                     	;# 
  1159     0314                     	;# 
  1160     0315                     	;# 
  1161     0316                     	;# 
  1162     0318                     	;# 
  1163     0318                     	;# 
  1164     0319                     	;# 
  1165     031A                     	;# 
  1166     059C                     	;# 
  1167     059C                     	;# 
  1168     059D                     	;# 
  1169     059D                     	;# 
  1170     059E                     	;# 
  1171     059F                     	;# 
  1172     070C                     	;# 
  1173     070D                     	;# 
  1174     070E                     	;# 
  1175     0716                     	;# 
  1176     0717                     	;# 
  1177     0718                     	;# 
  1178     080C                     	;# 
  1179     0811                     	;# 
  1180     0813                     	;# 
  1181     0814                     	;# 
  1182     081A                     	;# 
  1183     081A                     	;# 
  1184     081B                     	;# 
  1185     081C                     	;# 
  1186     081C                     	;# 
  1187     081D                     	;# 
  1188     081E                     	;# 
  1189     081F                     	;# 
  1190     088E                     	;# 
  1191     0890                     	;# 
  1192     0891                     	;# 
  1193     0892                     	;# 
  1194     0893                     	;# 
  1195     090C                     	;# 
  1196     1E8F                     	;# 
  1197     1E90                     	;# 
  1198     1E91                     	;# 
  1199     1E92                     	;# 
  1200     1E93                     	;# 
  1201     1E9C                     	;# 
  1202     1EA1                     	;# 
  1203     1EA2                     	;# 
  1204     1EC3                     	;# 
  1205     1EC5                     	;# 
  1206     1EC6                     	;# 
  1207     1EC7                     	;# 
  1208     1ECB                     	;# 
  1209     1ECB                     	;# 
  1210     1ECB                     	;# 
  1211     1ECC                     	;# 
  1212     1ECC                     	;# 
  1213     1ECC                     	;# 
  1214     1F10                     	;# 
  1215     1F11                     	;# 
  1216     1F12                     	;# 
  1217     1F14                     	;# 
  1218     1F15                     	;# 
  1219     1F20                     	;# 
  1220     1F21                     	;# 
  1221     1F22                     	;# 
  1222     1F23                     	;# 
  1223     1F24                     	;# 
  1224     1F25                     	;# 
  1225     1F38                     	;# 
  1226     1F39                     	;# 
  1227     1F3A                     	;# 
  1228     1F3B                     	;# 
  1229     1F3C                     	;# 
  1230     1F3D                     	;# 
  1231     1F3E                     	;# 
  1232     1F3F                     	;# 
  1233     1F4E                     	;# 
  1234     1F4F                     	;# 
  1235     1F50                     	;# 
  1236     1F51                     	;# 
  1237     1F52                     	;# 
  1238     1F53                     	;# 
  1239     1F54                     	;# 
  1240     1F55                     	;# 
  1241     1FE4                     	;# 
  1242     1FE5                     	;# 
  1243     1FE6                     	;# 
  1244     1FE7                     	;# 
  1245     1FE8                     	;# 
  1246     1FE8                     	;# 
  1247     1FE9                     	;# 
  1248     1FEA                     	;# 
  1249     1FEB                     	;# 
  1250     1FED                     	;# 
  1251     1FEE                     	;# 
  1252     1FEF                     	;# 
  1253     0000                     	;# 
  1254     0001                     	;# 
  1255     0002                     	;# 
  1256     0003                     	;# 
  1257     0004                     	;# 
  1258     0005                     	;# 
  1259     0006                     	;# 
  1260     0007                     	;# 
  1261     0008                     	;# 
  1262     0009                     	;# 
  1263     000A                     	;# 
  1264     000B                     	;# 
  1265     000C                     	;# 
  1266     000E                     	;# 
  1267     0012                     	;# 
  1268     0014                     	;# 
  1269     0018                     	;# 
  1270     001A                     	;# 
  1271     009A                     	;# 
  1272     009B                     	;# 
  1273     009B                     	;# 
  1274     009C                     	;# 
  1275     009D                     	;# 
  1276     009E                     	;# 
  1277     009F                     	;# 
  1278     010E                     	;# 
  1279     010F                     	;# 
  1280     0119                     	;# 
  1281     011A                     	;# 
  1282     011B                     	;# 
  1283     011B                     	;# 
  1284     011C                     	;# 
  1285     011D                     	;# 
  1286     011E                     	;# 
  1287     011F                     	;# 
  1288     018C                     	;# 
  1289     018D                     	;# 
  1290     018E                     	;# 
  1291     018F                     	;# 
  1292     0190                     	;# 
  1293     0191                     	;# 
  1294     0192                     	;# 
  1295     020C                     	;# 
  1296     020D                     	;# 
  1297     020E                     	;# 
  1298     020E                     	;# 
  1299     020F                     	;# 
  1300     020F                     	;# 
  1301     0210                     	;# 
  1302     0210                     	;# 
  1303     0211                     	;# 
  1304     0211                     	;# 
  1305     028C                     	;# 
  1306     028C                     	;# 
  1307     028D                     	;# 
  1308     028D                     	;# 
  1309     028E                     	;# 
  1310     028F                     	;# 
  1311     0290                     	;# 
  1312     0291                     	;# 
  1313     030C                     	;# 
  1314     030C                     	;# 
  1315     030D                     	;# 
  1316     030E                     	;# 
  1317     030F                     	;# 
  1318     0310                     	;# 
  1319     0310                     	;# 
  1320     0311                     	;# 
  1321     0312                     	;# 
  1322     0313                     	;# 
  1323     0314                     	;# 
  1324     0314                     	;# 
  1325     0315                     	;# 
  1326     0316                     	;# 
  1327     0318                     	;# 
  1328     0318                     	;# 
  1329     0319                     	;# 
  1330     031A                     	;# 
  1331     059C                     	;# 
  1332     059C                     	;# 
  1333     059D                     	;# 
  1334     059D                     	;# 
  1335     059E                     	;# 
  1336     059F                     	;# 
  1337     070C                     	;# 
  1338     070D                     	;# 
  1339     070E                     	;# 
  1340     0716                     	;# 
  1341     0717                     	;# 
  1342     0718                     	;# 
  1343     080C                     	;# 
  1344     0811                     	;# 
  1345     0813                     	;# 
  1346     0814                     	;# 
  1347     081A                     	;# 
  1348     081A                     	;# 
  1349     081B                     	;# 
  1350     081C                     	;# 
  1351     081C                     	;# 
  1352     081D                     	;# 
  1353     081E                     	;# 
  1354     081F                     	;# 
  1355     088E                     	;# 
  1356     0890                     	;# 
  1357     0891                     	;# 
  1358     0892                     	;# 
  1359     0893                     	;# 
  1360     090C                     	;# 
  1361     1E8F                     	;# 
  1362     1E90                     	;# 
  1363     1E91                     	;# 
  1364     1E92                     	;# 
  1365     1E93                     	;# 
  1366     1E9C                     	;# 
  1367     1EA1                     	;# 
  1368     1EA2                     	;# 
  1369     1EC3                     	;# 
  1370     1EC5                     	;# 
  1371     1EC6                     	;# 
  1372     1EC7                     	;# 
  1373     1ECB                     	;# 
  1374     1ECB                     	;# 
  1375     1ECB                     	;# 
  1376     1ECC                     	;# 
  1377     1ECC                     	;# 
  1378     1ECC                     	;# 
  1379     1F10                     	;# 
  1380     1F11                     	;# 
  1381     1F12                     	;# 
  1382     1F14                     	;# 
  1383     1F15                     	;# 
  1384     1F20                     	;# 
  1385     1F21                     	;# 
  1386     1F22                     	;# 
  1387     1F23                     	;# 
  1388     1F24                     	;# 
  1389     1F25                     	;# 
  1390     1F38                     	;# 
  1391     1F39                     	;# 
  1392     1F3A                     	;# 
  1393     1F3B                     	;# 
  1394     1F3C                     	;# 
  1395     1F3D                     	;# 
  1396     1F3E                     	;# 
  1397     1F3F                     	;# 
  1398     1F4E                     	;# 
  1399     1F4F                     	;# 
  1400     1F50                     	;# 
  1401     1F51                     	;# 
  1402     1F52                     	;# 
  1403     1F53                     	;# 
  1404     1F54                     	;# 
  1405     1F55                     	;# 
  1406     1FE4                     	;# 
  1407     1FE5                     	;# 
  1408     1FE6                     	;# 
  1409     1FE7                     	;# 
  1410     1FE8                     	;# 
  1411     1FE8                     	;# 
  1412     1FE9                     	;# 
  1413     1FEA                     	;# 
  1414     1FEB                     	;# 
  1415     1FED                     	;# 
  1416     1FEE                     	;# 
  1417     1FEF                     	;# 
  1418     0000                     	;# 
  1419     0001                     	;# 
  1420     0002                     	;# 
  1421     0003                     	;# 
  1422     0004                     	;# 
  1423     0005                     	;# 
  1424     0006                     	;# 
  1425     0007                     	;# 
  1426     0008                     	;# 
  1427     0009                     	;# 
  1428     000A                     	;# 
  1429     000B                     	;# 
  1430     000C                     	;# 
  1431     000E                     	;# 
  1432     0012                     	;# 
  1433     0014                     	;# 
  1434     0018                     	;# 
  1435     001A                     	;# 
  1436     009A                     	;# 
  1437     009B                     	;# 
  1438     009B                     	;# 
  1439     009C                     	;# 
  1440     009D                     	;# 
  1441     009E                     	;# 
  1442     009F                     	;# 
  1443     010E                     	;# 
  1444     010F                     	;# 
  1445     0119                     	;# 
  1446     011A                     	;# 
  1447     011B                     	;# 
  1448     011B                     	;# 
  1449     011C                     	;# 
  1450     011D                     	;# 
  1451     011E                     	;# 
  1452     011F                     	;# 
  1453     018C                     	;# 
  1454     018D                     	;# 
  1455     018E                     	;# 
  1456     018F                     	;# 
  1457     0190                     	;# 
  1458     0191                     	;# 
  1459     0192                     	;# 
  1460     020C                     	;# 
  1461     020D                     	;# 
  1462     020E                     	;# 
  1463     020E                     	;# 
  1464     020F                     	;# 
  1465     020F                     	;# 
  1466     0210                     	;# 
  1467     0210                     	;# 
  1468     0211                     	;# 
  1469     0211                     	;# 
  1470     028C                     	;# 
  1471     028C                     	;# 
  1472     028D                     	;# 
  1473     028D                     	;# 
  1474     028E                     	;# 
  1475     028F                     	;# 
  1476     0290                     	;# 
  1477     0291                     	;# 
  1478     030C                     	;# 
  1479     030C                     	;# 
  1480     030D                     	;# 
  1481     030E                     	;# 
  1482     030F                     	;# 
  1483     0310                     	;# 
  1484     0310                     	;# 
  1485     0311                     	;# 
  1486     0312                     	;# 
  1487     0313                     	;# 
  1488     0314                     	;# 
  1489     0314                     	;# 
  1490     0315                     	;# 
  1491     0316                     	;# 
  1492     0318                     	;# 
  1493     0318                     	;# 
  1494     0319                     	;# 
  1495     031A                     	;# 
  1496     059C                     	;# 
  1497     059C                     	;# 
  1498     059D                     	;# 
  1499     059D                     	;# 
  1500     059E                     	;# 
  1501     059F                     	;# 
  1502     070C                     	;# 
  1503     070D                     	;# 
  1504     070E                     	;# 
  1505     0716                     	;# 
  1506     0717                     	;# 
  1507     0718                     	;# 
  1508     080C                     	;# 
  1509     0811                     	;# 
  1510     0813                     	;# 
  1511     0814                     	;# 
  1512     081A                     	;# 
  1513     081A                     	;# 
  1514     081B                     	;# 
  1515     081C                     	;# 
  1516     081C                     	;# 
  1517     081D                     	;# 
  1518     081E                     	;# 
  1519     081F                     	;# 
  1520     088E                     	;# 
  1521     0890                     	;# 
  1522     0891                     	;# 
  1523     0892                     	;# 
  1524     0893                     	;# 
  1525     090C                     	;# 
  1526     1E8F                     	;# 
  1527     1E90                     	;# 
  1528     1E91                     	;# 
  1529     1E92                     	;# 
  1530     1E93                     	;# 
  1531     1E9C                     	;# 
  1532     1EA1                     	;# 
  1533     1EA2                     	;# 
  1534     1EC3                     	;# 
  1535     1EC5                     	;# 
  1536     1EC6                     	;# 
  1537     1EC7                     	;# 
  1538     1ECB                     	;# 
  1539     1ECB                     	;# 
  1540     1ECB                     	;# 
  1541     1ECC                     	;# 
  1542     1ECC                     	;# 
  1543     1ECC                     	;# 
  1544     1F10                     	;# 
  1545     1F11                     	;# 
  1546     1F12                     	;# 
  1547     1F14                     	;# 
  1548     1F15                     	;# 
  1549     1F20                     	;# 
  1550     1F21                     	;# 
  1551     1F22                     	;# 
  1552     1F23                     	;# 
  1553     1F24                     	;# 
  1554     1F25                     	;# 
  1555     1F38                     	;# 
  1556     1F39                     	;# 
  1557     1F3A                     	;# 
  1558     1F3B                     	;# 
  1559     1F3C                     	;# 
  1560     1F3D                     	;# 
  1561     1F3E                     	;# 
  1562     1F3F                     	;# 
  1563     1F4E                     	;# 
  1564     1F4F                     	;# 
  1565     1F50                     	;# 
  1566     1F51                     	;# 
  1567     1F52                     	;# 
  1568     1F53                     	;# 
  1569     1F54                     	;# 
  1570     1F55                     	;# 
  1571     1FE4                     	;# 
  1572     1FE5                     	;# 
  1573     1FE6                     	;# 
  1574     1FE7                     	;# 
  1575     1FE8                     	;# 
  1576     1FE8                     	;# 
  1577     1FE9                     	;# 
  1578     1FEA                     	;# 
  1579     1FEB                     	;# 
  1580     1FED                     	;# 
  1581     1FEE                     	;# 
  1582     1FEF                     	;# 
  1583                           
  1584 ;; Function _I2C1_SlaveDefWrColInterruptHandler is unused but had its address taken
  1585     0000                     
  1586 ;; Function _I2C1_SlaveDefBusColInterruptHandler is unused but had its address taken
  1587     0040                     _default_in_flash_absaddr	set	64
  1588     0040                     _default_in_flash_absaddr	set	64
  1589                           
  1590                           	psect	_default_in_flash_text
  1591     0040                     __p_default_in_flash_text:
  1592     0040                     _default_in_flash:
  1593     0040  3401               	retlw	1
  1594     0041  3400               	retlw	0
  1595     0042  3401               	retlw	1
  1596     0043  3400               	retlw	0
  1597     0044  3401               	retlw	1
  1598     0045  3400               	retlw	0
  1599     0046  3401               	retlw	1
  1600     0047  3400               	retlw	0
  1601     0048  3401               	retlw	1
  1602     0049  3400               	retlw	0
  1603     004A  3401               	retlw	1
  1604     004B  3400               	retlw	0
  1605     004C  3402               	retlw	2
  1606     004D  3400               	retlw	0
  1607     004E  3402               	retlw	2
  1608     004F  3400               	retlw	0
  1609     0050  3402               	retlw	2
  1610     0051  3400               	retlw	0
  1611     0052  3402               	retlw	2
  1612     0053  3400               	retlw	0
  1613     0054  3402               	retlw	2
  1614     0055  3400               	retlw	0
  1615     0056  3402               	retlw	2
  1616     0057  3400               	retlw	0
  1617     0058  3403               	retlw	3
  1618     0059  3400               	retlw	0
  1619     005A  3403               	retlw	3
  1620     005B  3400               	retlw	0
  1621     005C  3403               	retlw	3
  1622     005D  3400               	retlw	0
  1623     005E  3403               	retlw	3
  1624     005F  3400               	retlw	0
  1625     0060  3403               	retlw	3
  1626     0061  3400               	retlw	0
  1627     0062  3403               	retlw	3
  1628     0063  3400               	retlw	0
  1629     0064  3404               	retlw	4
  1630     0065  3400               	retlw	0
  1631     0066  3404               	retlw	4
  1632     0067  3400               	retlw	0
  1633     0068  3404               	retlw	4
  1634     0069  3400               	retlw	0
  1635     006A  3404               	retlw	4
  1636     006B  3400               	retlw	0
  1637     006C  3404               	retlw	4
  1638     006D  3400               	retlw	0
  1639     006E  3404               	retlw	4
  1640     006F  3400               	retlw	0
  1641     0070  3405               	retlw	5
  1642     0071  3400               	retlw	0
  1643     0072  3405               	retlw	5
  1644     0073  3400               	retlw	0
  1645     0074  3405               	retlw	5
  1646     0075  3400               	retlw	0
  1647     0076  3405               	retlw	5
  1648     0077  3400               	retlw	0
  1649     0078  3405               	retlw	5
  1650     0079  3400               	retlw	0
  1651     007A  3405               	retlw	5
  1652     007B  3400               	retlw	0
  1653     007C  3406               	retlw	6
  1654     007D  3400               	retlw	0
  1655     007E  3406               	retlw	6
  1656     007F  3400               	retlw	0
  1657     0080  3406               	retlw	6
  1658     0081  3400               	retlw	0
  1659     0082  3406               	retlw	6
  1660     0083  3400               	retlw	0
  1661     0084  3406               	retlw	6
  1662     0085  3400               	retlw	0
  1663     0086  3406               	retlw	6
  1664     0087  3400               	retlw	0
  1665     0088  3407               	retlw	7
  1666     0089  3400               	retlw	0
  1667     008A  3407               	retlw	7
  1668     008B  3400               	retlw	0
  1669     008C  3407               	retlw	7
  1670     008D  3400               	retlw	0
  1671     008E  3407               	retlw	7
  1672     008F  3400               	retlw	0
  1673     0090  3407               	retlw	7
  1674     0091  3400               	retlw	0
  1675     0092  3407               	retlw	7
  1676     0093  3400               	retlw	0
  1677     0094  3408               	retlw	8
  1678     0095  3400               	retlw	0
  1679     0096  3408               	retlw	8
  1680     0097  3400               	retlw	0
  1681     0098  3408               	retlw	8
  1682     0099  3400               	retlw	0
  1683     009A  3408               	retlw	8
  1684     009B  3400               	retlw	0
  1685     009C  3408               	retlw	8
  1686     009D  3400               	retlw	0
  1687     009E  3408               	retlw	8
  1688     009F  3400               	retlw	0
  1689     00A0  3409               	retlw	9
  1690     00A1  3400               	retlw	0
  1691     00A2  3409               	retlw	9
  1692     00A3  3400               	retlw	0
  1693     00A4  3409               	retlw	9
  1694     00A5  3400               	retlw	0
  1695     00A6  3409               	retlw	9
  1696     00A7  3400               	retlw	0
  1697     00A8  3409               	retlw	9
  1698     00A9  3400               	retlw	0
  1699     00AA  3409               	retlw	9
  1700     00AB  3400               	retlw	0
  1701     00AC  340A               	retlw	10
  1702     00AD  3400               	retlw	0
  1703     00AE  340A               	retlw	10
  1704     00AF  3400               	retlw	0
  1705     00B0  340A               	retlw	10
  1706     00B1  3400               	retlw	0
  1707     00B2  340A               	retlw	10
  1708     00B3  3400               	retlw	0
  1709     00B4  340A               	retlw	10
  1710     00B5  3400               	retlw	0
  1711     00B6  340A               	retlw	10
  1712     00B7  3400               	retlw	0
  1713     00B8  340B               	retlw	11
  1714     00B9  3400               	retlw	0
  1715     00BA  340B               	retlw	11
  1716     00BB  3400               	retlw	0
  1717     00BC  340B               	retlw	11
  1718     00BD  3400               	retlw	0
  1719     00BE  340B               	retlw	11
  1720     00BF  3400               	retlw	0
  1721     00C0  340B               	retlw	11
  1722     00C1  3400               	retlw	0
  1723     00C2  340B               	retlw	11
  1724     00C3  3400               	retlw	0
  1725     00C4  340C               	retlw	12
  1726     00C5  3400               	retlw	0
  1727     00C6  340C               	retlw	12
  1728     00C7  3400               	retlw	0
  1729     00C8  340C               	retlw	12
  1730     00C9  3400               	retlw	0
  1731     00CA  340C               	retlw	12
  1732     00CB  3400               	retlw	0
  1733     00CC  340C               	retlw	12
  1734     00CD  3400               	retlw	0
  1735     00CE  340C               	retlw	12
  1736     00CF  3400               	retlw	0
  1737     00D0                     __end_of_default_in_flash:
  1738                           
  1739                           	psect	nvBANK0
  1740     0052                     __pnvBANK0:
  1741     0052                     _TMR0_InterruptHandler:
  1742     0052                     	ds	2
  1743     0018                     _LATAbits	set	24
  1744     000B                     _INTCONbits	set	11
  1745     0014                     _TRISC	set	20
  1746     0012                     _TRISA	set	18
  1747     001A                     _LATC	set	26
  1748     0018                     _LATA	set	24
  1749     000C                     _PORTA	set	12
  1750     000E                     _PORTC	set	14
  1751     018C                     _SSP1BUF	set	396
  1752     0191                     _SSP1CON2bits	set	401
  1753     018F                     _SSP1STATbits	set	399
  1754     018E                     _SSP1MSK	set	398
  1755     018D                     _SSP1ADD	set	397
  1756     0190                     _SSP1CON1bits	set	400
  1757     0191                     _SSP1CON2	set	401
  1758     0190                     _SSP1CON1	set	400
  1759     018F                     _SSP1STAT	set	399
  1760     059E                     _T0CON0bits	set	1438
  1761     059E                     _T0CON0	set	1438
  1762     059C                     _TMR0L	set	1436
  1763     059D                     _TMR0H	set	1437
  1764     059F                     _T0CON1	set	1439
  1765     070D                     _PIR1bits	set	1805
  1766     0717                     _PIE1bits	set	1815
  1767     070C                     _PIR0bits	set	1804
  1768     0716                     _PIE0bits	set	1814
  1769     080C                     _WDTCON	set	2060
  1770     081F                     _NVMCON2	set	2079
  1771     081C                     _NVMDATL	set	2076
  1772     081D                     _NVMDATH	set	2077
  1773     081E                     _NVMCON1bits	set	2078
  1774     081B                     _NVMADRH	set	2075
  1775     081A                     _NVMADRL	set	2074
  1776     0892                     _OSCTUNE	set	2194
  1777     0893                     _OSCFRQ	set	2195
  1778     0891                     _OSCEN	set	2193
  1779     1EC6                     _SSP1DATPPS	set	7878
  1780     1EC5                     _SSP1CLKPPS	set	7877
  1781     1F21                     _RC1PPS	set	7969
  1782     1F20                     _RC0PPS	set	7968
  1783     1F52                     _INLVLC	set	8018
  1784     1F3C                     _INLVLA	set	7996
  1785     1F51                     _SLRCONC	set	8017
  1786     1F3B                     _SLRCONA	set	7995
  1787     1F50                     _ODCONC	set	8016
  1788     1F3A                     _ODCONA	set	7994
  1789     1F4F                     _WPUC	set	8015
  1790     1F39                     _WPUA	set	7993
  1791     1F38                     _ANSELA	set	7992
  1792     1F4E                     _ANSELC	set	8014
  1793                           
  1794                           	psect	cinit
  1795     00D0                     start_initialization:	
  1796                           ; #config settings
  1797                           
  1798     00D0                     __initialization:
  1799                           
  1800                           ; Clear objects allocated to COMMON
  1801     00D0  01F8               	clrf	__pbssCOMMON& (0+127)
  1802     00D1  01F9               	clrf	(__pbssCOMMON+1)& (0+127)
  1803     00D2  01FA               	clrf	(__pbssCOMMON+2)& (0+127)
  1804                           
  1805                           ; Clear objects allocated to BANK0
  1806     00D3  3020               	movlw	low __pbssBANK0
  1807     00D4  0084               	movwf	4
  1808     00D5  3000               	movlw	high __pbssBANK0
  1809     00D6  0085               	movwf	5
  1810     00D7  301A               	movlw	26
  1811     00D8  3184  24CD  3180   	fcall	clear_ram0
  1812                           
  1813                           ; Clear objects allocated to BANK1
  1814     00DB  30A0               	movlw	low __pbssBANK1
  1815     00DC  0084               	movwf	4
  1816     00DD  3000               	movlw	high __pbssBANK1
  1817     00DE  0085               	movwf	5
  1818     00DF  3040               	movlw	64
  1819     00E0  3184  24CD  3180   	fcall	clear_ram0
  1820     00E3                     end_of_initialization:	
  1821                           ;End of C runtime variable initialization code
  1822                           
  1823     00E3                     __end_of__initialization:
  1824     00E3  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  1825     00E4  0140               	movlb	0
  1826     00E5  2B64               	ljmp	_main	;jump to C main() function
  1827                           
  1828                           	psect	bssCOMMON
  1829     0078                     __pbssCOMMON:
  1830     0078                     _i2c1WrData:
  1831     0078                     	ds	1
  1832     0079                     _i2cReadCnt@i2c1_slave$F749:
  1833     0079                     	ds	1
  1834     007A                     _LED_timer:
  1835     007A                     	ds	1
  1836                           
  1837                           	psect	bssBANK0
  1838     0020                     __pbssBANK0:
  1839     0020                     _i2cDataRead:
  1840     0020                     	ds	3
  1841     0023                     data_recv_handler@ramBuff:
  1842     0023                     	ds	2
  1843     0025                     _I2C1_SlaveWrColInterruptHandler:
  1844     0025                     	ds	2
  1845     0027                     _I2C1_SlaveBusColInterruptHandler:
  1846     0027                     	ds	2
  1847     0029                     _I2C1_SlaveAddrInterruptHandler:
  1848     0029                     	ds	2
  1849     002B                     _I2C1_SlaveWrInterruptHandler:
  1850     002B                     	ds	2
  1851     002D                     _I2C1_SlaveRdInterruptHandler:
  1852     002D                     	ds	2
  1853     002F                     _MSSP1_InterruptHandler:
  1854     002F                     	ds	2
  1855     0031                     _i2cReadCnt@i2c1_slave$F1134:
  1856     0031                     	ds	1
  1857     0032                     _i2cReadCnt@i2c1_slave$F1096:
  1858     0032                     	ds	1
  1859     0033                     _debug:
  1860     0033                     	ds	1
  1861     0034                     _i2c1SlaveState:
  1862     0034                     	ds	1
  1863     0035                     _i2c1SlaveAddr:
  1864     0035                     	ds	1
  1865     0036                     _i2c1RdData:
  1866     0036                     	ds	1
  1867     0037                     _i2cReadCnt@i2c1_slave$F179:
  1868     0037                     	ds	1
  1869     0038                     _error_flag:
  1870     0038                     	ds	1
  1871     0039                     _i2cReadCnt:
  1872     0039                     	ds	1
  1873                           
  1874                           	psect	bssBANK1
  1875     00A0                     __pbssBANK1:
  1876     00A0                     memory_initialize@ramBuff:
  1877     00A0                     	ds	64
  1878                           
  1879                           	psect	clrtext
  1880     04CD                     clear_ram0:	
  1881                           ;	Called with FSR0 containing the base address, and
  1882                           ;	WREG with the size to clear
  1883                           
  1884     04CD  0064               	clrwdt	;clear the watchdog before getting into this loop
  1885     04CE                     clrloop0:
  1886     04CE  0180               	clrf	0	;clear RAM location pointed to by FSR
  1887     04CF  3101               	addfsr 0,1
  1888     04D0  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  1889     04D1  2CCE               	goto	clrloop0	;have we reached the end yet?
  1890     04D2  3400               	retlw	0	;all done for this memory range, return
  1891                           
  1892                           	psect	cstackCOMMON
  1893     0070                     __pcstackCOMMON:
  1894     0070                     ?_TMR0_ISR:
  1895     0070                     ?_I2C1_SlaveOpen:	
  1896                           ; 1 bytes @ 0x0
  1897                           
  1898     0070                     ?_I2C1_SlaveSetSlaveAddr:	
  1899                           ; 1 bytes @ 0x0
  1900                           
  1901     0070                     ?_I2C1_SlaveSetSlaveMask:	
  1902                           ; 1 bytes @ 0x0
  1903                           
  1904     0070                     ?_I2C1_Isr:	
  1905                           ; 1 bytes @ 0x0
  1906                           
  1907     0070                     ?_I2C1_SlaveDefWrInterruptHandler:	
  1908                           ; 1 bytes @ 0x0
  1909                           
  1910     0070                     ?_I2C1_SlaveDefRdInterruptHandler:	
  1911                           ; 1 bytes @ 0x0
  1912                           
  1913     0070                     ??_I2C1_SlaveDefRdInterruptHandler:	
  1914                           ; 1 bytes @ 0x0
  1915                           
  1916     0070                     ?_I2C1_SlaveDefAddrInterruptHandler:	
  1917                           ; 1 bytes @ 0x0
  1918                           
  1919     0070                     ??_I2C1_SlaveDefAddrInterruptHandler:	
  1920                           ; 1 bytes @ 0x0
  1921                           
  1922     0070                     ?_I2C1_SlaveEnableIrq:	
  1923                           ; 1 bytes @ 0x0
  1924                           
  1925     0070                     ?_I2C1_SlaveGetRxData:	
  1926                           ; 1 bytes @ 0x0
  1927                           
  1928     0070                     ??_I2C1_SlaveGetRxData:	
  1929                           ; 1 bytes @ 0x0
  1930                           
  1931     0070                     ?_I2C1_SlaveSendTxData:	
  1932                           ; 1 bytes @ 0x0
  1933                           
  1934     0070                     ??_I2C1_SlaveSendTxData:	
  1935                           ; 1 bytes @ 0x0
  1936                           
  1937     0070                     ?_I2C1_SlaveIsRead:	
  1938                           ; 1 bytes @ 0x0
  1939                           
  1940     0070                     ??_I2C1_SlaveIsRead:	
  1941                           ; 1 bytes @ 0x0
  1942                           
  1943     0070                     ?_I2C1_SlaveClearIrq:	
  1944                           ; 1 bytes @ 0x0
  1945                           
  1946     0070                     ??_I2C1_SlaveClearIrq:	
  1947                           ; 1 bytes @ 0x0
  1948                           
  1949     0070                     ?_I2C1_SlaveIsAddr:	
  1950                           ; 1 bytes @ 0x0
  1951                           
  1952     0070                     ??_I2C1_SlaveIsAddr:	
  1953                           ; 1 bytes @ 0x0
  1954                           
  1955     0070                     ?_I2C1_SlaveAddrCallBack:	
  1956                           ; 1 bytes @ 0x0
  1957                           
  1958     0070                     ??_I2C1_SlaveAddrCallBack:	
  1959                           ; 1 bytes @ 0x0
  1960                           
  1961     0070                     ?_I2C1_SlaveIsTxBufEmpty:	
  1962                           ; 1 bytes @ 0x0
  1963                           
  1964     0070                     ??_I2C1_SlaveIsTxBufEmpty:	
  1965                           ; 1 bytes @ 0x0
  1966                           
  1967     0070                     ?_I2C1_SlaveWrCallBack:	
  1968                           ; 1 bytes @ 0x0
  1969                           
  1970     0070                     ?_I2C1_SlaveIsRxBufFull:	
  1971                           ; 1 bytes @ 0x0
  1972                           
  1973     0070                     ??_I2C1_SlaveIsRxBufFull:	
  1974                           ; 1 bytes @ 0x0
  1975                           
  1976     0070                     ?_I2C1_SlaveRdCallBack:	
  1977                           ; 1 bytes @ 0x0
  1978                           
  1979     0070                     ?_I2C1_SlaveReleaseClock:	
  1980                           ; 1 bytes @ 0x0
  1981                           
  1982     0070                     ??_I2C1_SlaveReleaseClock:	
  1983                           ; 1 bytes @ 0x0
  1984                           
  1985     0070                     ?_TMR0_DefaultInterruptHandler:	
  1986                           ; 1 bytes @ 0x0
  1987                           
  1988     0070                     ??_TMR0_DefaultInterruptHandler:	
  1989                           ; 1 bytes @ 0x0
  1990                           
  1991     0070                     ?_OSCILLATOR_Initialize:	
  1992                           ; 1 bytes @ 0x0
  1993                           
  1994     0070                     ?_WDT_Initialize:	
  1995                           ; 1 bytes @ 0x0
  1996                           
  1997     0070                     ?_memory_initialize:	
  1998                           ; 1 bytes @ 0x0
  1999                           
  2000     0070                     ?_data_recv_handler:	
  2001                           ; 1 bytes @ 0x0
  2002                           
  2003     0070                     ??_data_recv_handler:	
  2004                           ; 1 bytes @ 0x0
  2005                           
  2006     0070                     ?_getSensorBoardType:	
  2007                           ; 1 bytes @ 0x0
  2008                           
  2009     0070                     ?_SensorBoardType_validation:	
  2010                           ; 1 bytes @ 0x0
  2011                           
  2012     0070                     ?_error_signal:	
  2013                           ; 1 bytes @ 0x0
  2014                           
  2015     0070                     ?_PIN_MANAGER_Initialize:	
  2016                           ; 1 bytes @ 0x0
  2017                           
  2018     0070                     ?_INTERRUPT_InterruptManager:	
  2019                           ; 1 bytes @ 0x0
  2020                           
  2021     0070                     ?_I2C1_Initialize:	
  2022                           ; 1 bytes @ 0x0
  2023                           
  2024     0070                     ?_I2C1_Open:	
  2025                           ; 1 bytes @ 0x0
  2026                           
  2027     0070                     ?_TMR0_Initialize:	
  2028                           ; 1 bytes @ 0x0
  2029                           
  2030     0070                     ?_SYSTEM_Initialize:	
  2031                           ; 1 bytes @ 0x0
  2032                           
  2033     0070                     ?_main:	
  2034                           ; 1 bytes @ 0x0
  2035                           
  2036     0070                     I2C1_SlaveSendTxData@data:	
  2037                           ; 1 bytes @ 0x0
  2038                           
  2039                           
  2040                           ; 1 bytes @ 0x0
  2041     0070                     	ds	1
  2042     0071                     ??_TMR0_ISR:
  2043     0071                     ??_I2C1_Isr:	
  2044                           ; 1 bytes @ 0x1
  2045                           
  2046     0071                     ??_I2C1_SlaveDefWrInterruptHandler:	
  2047                           ; 1 bytes @ 0x1
  2048                           
  2049     0071                     ??_I2C1_SlaveWrCallBack:	
  2050                           ; 1 bytes @ 0x1
  2051                           
  2052     0071                     ??_I2C1_SlaveRdCallBack:	
  2053                           ; 1 bytes @ 0x1
  2054                           
  2055                           
  2056                           ; 1 bytes @ 0x1
  2057     0071                     	ds	2
  2058     0073                     ??_I2C1_SlaveOpen:
  2059     0073                     ??_I2C1_SlaveSetSlaveAddr:	
  2060                           ; 1 bytes @ 0x3
  2061                           
  2062     0073                     ??_I2C1_SlaveSetSlaveMask:	
  2063                           ; 1 bytes @ 0x3
  2064                           
  2065     0073                     ?_I2C1_SlaveSetIsrHandler:	
  2066                           ; 1 bytes @ 0x3
  2067                           
  2068     0073                     ?_I2C1_SlaveSetBusColIntHandler:	
  2069                           ; 1 bytes @ 0x3
  2070                           
  2071     0073                     ?_I2C1_SlaveSetWriteIntHandler:	
  2072                           ; 1 bytes @ 0x3
  2073                           
  2074     0073                     ?_I2C1_SlaveSetReadIntHandler:	
  2075                           ; 1 bytes @ 0x3
  2076                           
  2077     0073                     ?_I2C1_SlaveSetAddrIntHandler:	
  2078                           ; 1 bytes @ 0x3
  2079                           
  2080     0073                     ?_I2C1_SlaveSetWrColIntHandler:	
  2081                           ; 1 bytes @ 0x3
  2082                           
  2083     0073                     ??_I2C1_SlaveEnableIrq:	
  2084                           ; 1 bytes @ 0x3
  2085                           
  2086     0073                     ?_TMR0_SetInterruptHandler:	
  2087                           ; 1 bytes @ 0x3
  2088                           
  2089     0073                     ?_FLASH_EraseBlock:	
  2090                           ; 1 bytes @ 0x3
  2091                           
  2092     0073                     ??_OSCILLATOR_Initialize:	
  2093                           ; 1 bytes @ 0x3
  2094                           
  2095     0073                     ??_WDT_Initialize:	
  2096                           ; 1 bytes @ 0x3
  2097                           
  2098     0073                     ??_getSensorBoardType:	
  2099                           ; 1 bytes @ 0x3
  2100                           
  2101     0073                     ??_SensorBoardType_validation:	
  2102                           ; 1 bytes @ 0x3
  2103                           
  2104     0073                     ??_error_signal:	
  2105                           ; 1 bytes @ 0x3
  2106                           
  2107     0073                     ??_PIN_MANAGER_Initialize:	
  2108                           ; 1 bytes @ 0x3
  2109                           
  2110     0073                     ??_INTERRUPT_InterruptManager:	
  2111                           ; 1 bytes @ 0x3
  2112                           
  2113     0073                     ??_I2C1_Initialize:	
  2114                           ; 1 bytes @ 0x3
  2115                           
  2116     0073                     ?_FLASH_ReadWord:	
  2117                           ; 1 bytes @ 0x3
  2118                           
  2119     0073                     ?___wmul:	
  2120                           ; 2 bytes @ 0x3
  2121                           
  2122     0073                     SensorBoardType_validation@SensorBoardType:	
  2123                           ; 2 bytes @ 0x3
  2124                           
  2125     0073                     I2C1_SlaveSetSlaveAddr@slaveAddr:	
  2126                           ; 1 bytes @ 0x3
  2127                           
  2128     0073                     I2C1_SlaveSetSlaveMask@maskAddr:	
  2129                           ; 1 bytes @ 0x3
  2130                           
  2131     0073                     I2C1_SlaveSetIsrHandler@handler:	
  2132                           ; 1 bytes @ 0x3
  2133                           
  2134     0073                     I2C1_SlaveSetReadIntHandler@handler:	
  2135                           ; 2 bytes @ 0x3
  2136                           
  2137     0073                     I2C1_SlaveSetWriteIntHandler@handler:	
  2138                           ; 2 bytes @ 0x3
  2139                           
  2140     0073                     I2C1_SlaveSetAddrIntHandler@handler:	
  2141                           ; 2 bytes @ 0x3
  2142                           
  2143     0073                     I2C1_SlaveSetWrColIntHandler@handler:	
  2144                           ; 2 bytes @ 0x3
  2145                           
  2146     0073                     I2C1_SlaveSetBusColIntHandler@handler:	
  2147                           ; 2 bytes @ 0x3
  2148                           
  2149     0073                     TMR0_SetInterruptHandler@InterruptHandler:	
  2150                           ; 2 bytes @ 0x3
  2151                           
  2152     0073                     FLASH_ReadWord@flashAddr:	
  2153                           ; 2 bytes @ 0x3
  2154                           
  2155     0073                     FLASH_EraseBlock@startAddr:	
  2156                           ; 2 bytes @ 0x3
  2157                           
  2158     0073                     ___wmul@multiplier:	
  2159                           ; 2 bytes @ 0x3
  2160                           
  2161                           
  2162                           ; 2 bytes @ 0x3
  2163     0073                     	ds	2
  2164     0075                     ??_FLASH_ReadWord:
  2165     0075                     ??_I2C1_SlaveSetIsrHandler:	
  2166                           ; 1 bytes @ 0x5
  2167                           
  2168     0075                     ??_I2C1_SlaveSetBusColIntHandler:	
  2169                           ; 1 bytes @ 0x5
  2170                           
  2171     0075                     ??_I2C1_SlaveSetWriteIntHandler:	
  2172                           ; 1 bytes @ 0x5
  2173                           
  2174     0075                     ??_I2C1_SlaveSetReadIntHandler:	
  2175                           ; 1 bytes @ 0x5
  2176                           
  2177     0075                     ??_I2C1_SlaveSetAddrIntHandler:	
  2178                           ; 1 bytes @ 0x5
  2179                           
  2180     0075                     ??_I2C1_SlaveSetWrColIntHandler:	
  2181                           ; 1 bytes @ 0x5
  2182                           
  2183     0075                     ??_TMR0_SetInterruptHandler:	
  2184                           ; 1 bytes @ 0x5
  2185                           
  2186     0075                     ??_FLASH_EraseBlock:	
  2187                           ; 1 bytes @ 0x5
  2188                           
  2189     0075                     ??_I2C1_Open:	
  2190                           ; 1 bytes @ 0x5
  2191                           
  2192     0075                     ??_TMR0_Initialize:	
  2193                           ; 1 bytes @ 0x5
  2194                           
  2195     0075                     ??_SYSTEM_Initialize:	
  2196                           ; 1 bytes @ 0x5
  2197                           
  2198     0075                     FLASH_ReadWord@GIEBitValue:	
  2199                           ; 1 bytes @ 0x5
  2200                           
  2201     0075                     FLASH_EraseBlock@GIEBitValue:	
  2202                           ; 1 bytes @ 0x5
  2203                           
  2204     0075                     ___wmul@multiplicand:	
  2205                           ; 1 bytes @ 0x5
  2206                           
  2207                           
  2208                           ; 2 bytes @ 0x5
  2209     0075                     	ds	2
  2210     0077                     ??_FLASH_WriteWord:
  2211     0077                     ??___wmul:	
  2212                           ; 1 bytes @ 0x7
  2213                           
  2214                           
  2215                           ; 1 bytes @ 0x7
  2216     0077                     	ds	1
  2217     0078                     ??_main:
  2218                           
  2219                           	psect	cstackBANK0
  2220     003A                     __pcstackBANK0:	
  2221                           ; 1 bytes @ 0x8
  2222                           
  2223     003A                     ?_FLASH_WriteBlock:
  2224     003A                     FLASH_WriteBlock@writeAddr:	
  2225                           ; 1 bytes @ 0x0
  2226                           
  2227     003A                     ___wmul@product:	
  2228                           ; 2 bytes @ 0x0
  2229                           
  2230                           
  2231                           ; 2 bytes @ 0x0
  2232     003A                     	ds	2
  2233     003C                     FLASH_WriteBlock@flashWordArray:
  2234                           
  2235                           ; 1 bytes @ 0x2
  2236     003C                     	ds	1
  2237     003D                     ??_FLASH_WriteBlock:
  2238                           
  2239                           ; 1 bytes @ 0x3
  2240     003D                     	ds	3
  2241     0040                     FLASH_WriteBlock@blockStartAddr:
  2242                           
  2243                           ; 2 bytes @ 0x6
  2244     0040                     	ds	2
  2245     0042                     FLASH_WriteBlock@GIEBitValue:
  2246                           
  2247                           ; 1 bytes @ 0x8
  2248     0042                     	ds	1
  2249     0043                     FLASH_WriteBlock@i:
  2250                           
  2251                           ; 1 bytes @ 0x9
  2252     0043                     	ds	1
  2253     0044                     ?_FLASH_WriteWord:
  2254     0044                     FLASH_WriteWord@flashAddr:	
  2255                           ; 1 bytes @ 0xA
  2256                           
  2257                           
  2258                           ; 2 bytes @ 0xA
  2259     0044                     	ds	2
  2260     0046                     FLASH_WriteWord@ramBuf:
  2261                           
  2262                           ; 1 bytes @ 0xC
  2263     0046                     	ds	1
  2264     0047                     FLASH_WriteWord@word:
  2265                           
  2266                           ; 2 bytes @ 0xD
  2267     0047                     	ds	2
  2268     0049                     FLASH_WriteWord@offset:
  2269                           
  2270                           ; 1 bytes @ 0xF
  2271     0049                     	ds	1
  2272     004A                     FLASH_WriteWord@blockStartAddr:
  2273                           
  2274                           ; 2 bytes @ 0x10
  2275     004A                     	ds	2
  2276     004C                     FLASH_WriteWord@i:
  2277                           
  2278                           ; 1 bytes @ 0x12
  2279     004C                     	ds	1
  2280     004D                     ??_memory_initialize:
  2281                           
  2282                           ; 1 bytes @ 0x13
  2283     004D                     	ds	2
  2284     004F                     memory_initialize@TAG:
  2285                           
  2286                           ; 1 bytes @ 0x15
  2287     004F                     	ds	1
  2288     0050                     main@atlas:
  2289                           
  2290                           ; 1 bytes @ 0x16
  2291     0050                     	ds	1
  2292     0051                     main@TAG:
  2293                           
  2294                           ; 1 bytes @ 0x17
  2295     0051                     	ds	1
  2296                           
  2297                           	psect	maintext
  2298     0364                     __pmaintext:	
  2299 ;;
  2300 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  2301 ;;
  2302 ;; *************** function _main *****************
  2303 ;; Defined at:
  2304 ;;		line 50 in file "main.c"
  2305 ;; Parameters:    Size  Location     Type
  2306 ;;		None
  2307 ;; Auto vars:     Size  Location     Type
  2308 ;;  atlas           1   22[BANK0 ] volatile unsigned char 
  2309 ;;  TAG             1   23[BANK0 ] unsigned char 
  2310 ;; Return value:  Size  Location     Type
  2311 ;;                  1    wreg      void 
  2312 ;; Registers used:
  2313 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2314 ;; Tracked objects:
  2315 ;;		On entry : B3F/0
  2316 ;;		On exit  : 0/0
  2317 ;;		Unchanged: 0/0
  2318 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2319 ;;      Params:         0       0       0       0
  2320 ;;      Locals:         0       2       0       0
  2321 ;;      Temps:          0       0       0       0
  2322 ;;      Totals:         0       2       0       0
  2323 ;;Total ram usage:        2 bytes
  2324 ;; Hardware stack levels required when called: 9
  2325 ;; This function calls:
  2326 ;;		_I2C1_Open
  2327 ;;		_SYSTEM_Initialize
  2328 ;;		_SensorBoardType_validation
  2329 ;;		_error_signal
  2330 ;;		_getSensorBoardType
  2331 ;;		_memory_initialize
  2332 ;; This function is called by:
  2333 ;;		Startup code after reset
  2334 ;; This function uses a non-reentrant model
  2335 ;;
  2336                           
  2337     0364                     _main:	
  2338                           ;psect for function _main
  2339                           
  2340     0364                     l2304:	
  2341                           ;incstack = 0
  2342                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2343                           
  2344                           
  2345                           ;main.c: 53:     SYSTEM_Initialize();
  2346     0364  3184  2459  3183   	fcall	_SYSTEM_Initialize
  2347                           
  2348                           ;main.c: 55:     uint8_t TAG = getSensorBoardType();
  2349     0367  3184  2478  3183   	fcall	_getSensorBoardType
  2350     036A  0140               	movlb	0	; select bank0
  2351     036B  00D1               	movwf	main@TAG
  2352                           
  2353                           ;main.c: 57:     if(SensorBoardType_validation(TAG)){
  2354     036C  0851               	movf	main@TAG,w
  2355     036D  3184  2449  3183   	fcall	_SensorBoardType_validation
  2356     0370  3A00               	xorlw	0
  2357     0371  1903               	skipnz
  2358     0372  2B74               	goto	u911
  2359     0373  2B75               	goto	u910
  2360     0374                     u911:
  2361     0374  2B7B               	goto	l2308
  2362     0375                     u910:
  2363     0375                     l2306:
  2364                           
  2365                           ;main.c: 59:         memory_initialize(TAG);
  2366     0375  0140               	movlb	0	; select bank0
  2367     0376  0851               	movf	main@TAG,w
  2368     0377  3180  20E6  3183   	fcall	_memory_initialize
  2369                           
  2370                           ;main.c: 60:     }
  2371     037A  2B7E               	goto	l2310
  2372     037B                     l2308:
  2373                           
  2374                           ;main.c: 62:         error_signal();
  2375     037B  3185  251C  3183   	fcall	_error_signal
  2376     037E                     l2310:
  2377                           
  2378                           ;main.c: 65:     I2C1_Open();
  2379     037E  3183  2301  3183   	fcall	_I2C1_Open
  2380     0381                     l2312:
  2381                           
  2382                           ;main.c: 76:     (INTCONbits.GIE = 1);
  2383     0381  178B               	bsf	11,7	;volatile
  2384     0382                     l2314:
  2385                           
  2386                           ;main.c: 79:     (INTCONbits.PEIE = 1);
  2387     0382  170B               	bsf	11,6	;volatile
  2388     0383                     l639:	
  2389                           ;main.c: 87:     while (1)
  2390                           
  2391                           
  2392                           ;main.c: 88:     {;main.c: 91:         volatile uint8_t atlas = debug;
  2393     0383  0140               	movlb	0	; select bank0
  2394     0384  0833               	movf	_debug,w
  2395     0385  00D0               	movwf	main@atlas	;volatile
  2396     0386  2B83               	goto	l639
  2397     0387  2831               	ljmp	start
  2398     0388                     __end_of_main:
  2399                           
  2400                           	psect	text1
  2401     00E6                     __ptext1:	
  2402 ;; *************** function _memory_initialize *****************
  2403 ;; Defined at:
  2404 ;;		line 6 in file "flash_memory_filling.c"
  2405 ;; Parameters:    Size  Location     Type
  2406 ;;  TAG             1    wreg     unsigned char 
  2407 ;; Auto vars:     Size  Location     Type
  2408 ;;  TAG             1   21[BANK0 ] unsigned char 
  2409 ;; Return value:  Size  Location     Type
  2410 ;;                  1    wreg      void 
  2411 ;; Registers used:
  2412 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2413 ;; Tracked objects:
  2414 ;;		On entry : 0/0
  2415 ;;		On exit  : 0/0
  2416 ;;		Unchanged: 0/0
  2417 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2418 ;;      Params:         0       0       0       0
  2419 ;;      Locals:         0       1       0       0
  2420 ;;      Temps:          0       2       0       0
  2421 ;;      Totals:         0       3       0       0
  2422 ;;Total ram usage:        3 bytes
  2423 ;; Hardware stack levels used: 1
  2424 ;; Hardware stack levels required when called: 8
  2425 ;; This function calls:
  2426 ;;		_FLASH_ReadWord
  2427 ;;		_FLASH_WriteWord
  2428 ;;		___wmul
  2429 ;; This function is called by:
  2430 ;;		_main
  2431 ;; This function uses a non-reentrant model
  2432 ;;
  2433                           
  2434     00E6                     _memory_initialize:	
  2435                           ;psect for function _memory_initialize
  2436                           
  2437                           
  2438                           ;incstack = 0
  2439                           ; Regs used in _memory_initialize: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2440                           ;memory_initialize@TAG stored from wreg
  2441     00E6  0140               	movlb	0	; select bank0
  2442     00E7  00CF               	movwf	memory_initialize@TAG
  2443     00E8                     l2288:
  2444                           
  2445                           ;flash_memory_filling.c: 6: void memory_initialize(uint8_t TAG);flash_memory_filling.c: 
      +                          7: {;flash_memory_filling.c: 9:     static uint16_t ramBuff[32];;flash_memory_filling.c:
      +                           11:     if(FLASH_ReadWord(0x780) != 0x55)
  2446     00E8  3080               	movlw	128
  2447     00E9  00F3               	movwf	FLASH_ReadWord@flashAddr
  2448     00EA  3007               	movlw	7
  2449     00EB  00F4               	movwf	FLASH_ReadWord@flashAddr+1
  2450     00EC  3184  2403  3180   	fcall	_FLASH_ReadWord
  2451     00EF  3055               	movlw	85
  2452     00F0  0673               	xorwf	?_FLASH_ReadWord,w
  2453     00F1  0474               	iorwf	?_FLASH_ReadWord+1,w
  2454     00F2  1903               	btfsc	3,2
  2455     00F3  28F5               	goto	u901
  2456     00F4  28F6               	goto	u900
  2457     00F5                     u901:
  2458     00F5  29E9               	goto	l32
  2459     00F6                     u900:
  2460     00F6                     l2290:
  2461                           
  2462                           ;flash_memory_filling.c: 12:     {;flash_memory_filling.c: 13:         FLASH_WriteWord(0
      +                          x780, ramBuff, 0x55);
  2463     00F6  3080               	movlw	128
  2464     00F7  0140               	movlb	0	; select bank0
  2465     00F8  00C4               	movwf	FLASH_WriteWord@flashAddr
  2466     00F9  3007               	movlw	7
  2467     00FA  00C5               	movwf	FLASH_WriteWord@flashAddr+1
  2468     00FB  30A0               	movlw	(low (memory_initialize@ramBuff| 0))& (0+255)
  2469     00FC  00C6               	movwf	FLASH_WriteWord@ramBuf
  2470     00FD  3055               	movlw	85
  2471     00FE  00C7               	movwf	FLASH_WriteWord@word
  2472     00FF  3000               	movlw	0
  2473     0100  00C8               	movwf	FLASH_WriteWord@word+1
  2474     0101  3182  22C3  3180   	fcall	_FLASH_WriteWord
  2475                           
  2476                           ;flash_memory_filling.c: 14:         FLASH_WriteWord(0x780 + 1, ramBuff, 0x00 );
  2477     0104  3081               	movlw	129
  2478     0105  0140               	movlb	0	; select bank0
  2479     0106  00C4               	movwf	FLASH_WriteWord@flashAddr
  2480     0107  3007               	movlw	7
  2481     0108  00C5               	movwf	FLASH_WriteWord@flashAddr+1
  2482     0109  30A0               	movlw	(low (memory_initialize@ramBuff| 0))& (0+255)
  2483     010A  00C6               	movwf	FLASH_WriteWord@ramBuf
  2484     010B  3000               	movlw	0
  2485     010C  00C7               	movwf	FLASH_WriteWord@word
  2486     010D  00C8               	movwf	FLASH_WriteWord@word+1
  2487     010E  3182  22C3  3180   	fcall	_FLASH_WriteWord
  2488     0111                     l2292:
  2489                           
  2490                           ;flash_memory_filling.c: 15:         FLASH_WriteWord(0x780 + 2, ramBuff, (uint16_t)defau
      +                          lt_in_flash[TAG - 1][0]);
  2491     0111  3082               	movlw	130
  2492     0112  0140               	movlb	0	; select bank0
  2493     0113  00C4               	movwf	FLASH_WriteWord@flashAddr
  2494     0114  3007               	movlw	7
  2495     0115  00C5               	movwf	FLASH_WriteWord@flashAddr+1
  2496     0116  30A0               	movlw	(low (memory_initialize@ramBuff| 0))& (0+255)
  2497     0117  00C6               	movwf	FLASH_WriteWord@ramBuf
  2498     0118  084F               	movf	memory_initialize@TAG,w
  2499     0119  00CD               	movwf	??_memory_initialize
  2500     011A  01CE               	clrf	??_memory_initialize+1
  2501     011B  084D               	movf	??_memory_initialize,w
  2502     011C  00F3               	movwf	___wmul@multiplier
  2503     011D  084E               	movf	??_memory_initialize+1,w
  2504     011E  00F4               	movwf	___wmul@multiplier+1
  2505     011F  300C               	movlw	12
  2506     0120  00F5               	movwf	___wmul@multiplicand
  2507     0121  3000               	movlw	0
  2508     0122  00F6               	movwf	___wmul@multiplicand+1
  2509     0123  3183  23AB  3180   	fcall	___wmul
  2510     0126  3034               	movlw	52
  2511     0127  0773               	addwf	?___wmul,w
  2512     0128  0084               	movwf	4
  2513     0129  3000               	movlw	0
  2514     012A  3D74               	addwfc	?___wmul+1,w
  2515     012B  3880               	iorlw	128
  2516     012C  0085               	movwf	5
  2517     012D  3F00               	moviw [0]fsr0
  2518     012E  0140               	movlb	0	; select bank0
  2519     012F  00C7               	movwf	FLASH_WriteWord@word
  2520     0130  3F01               	moviw [1]fsr0
  2521     0131  00C8               	movwf	FLASH_WriteWord@word+1
  2522     0132  3182  22C3  3180   	fcall	_FLASH_WriteWord
  2523     0135                     l2294:
  2524                           
  2525                           ;flash_memory_filling.c: 16:         FLASH_WriteWord(0x780 + 3, ramBuff, (uint16_t)defau
      +                          lt_in_flash[TAG - 1][1]);
  2526     0135  3083               	movlw	131
  2527     0136  0140               	movlb	0	; select bank0
  2528     0137  00C4               	movwf	FLASH_WriteWord@flashAddr
  2529     0138  3007               	movlw	7
  2530     0139  00C5               	movwf	FLASH_WriteWord@flashAddr+1
  2531     013A  30A0               	movlw	(low (memory_initialize@ramBuff| 0))& (0+255)
  2532     013B  00C6               	movwf	FLASH_WriteWord@ramBuf
  2533     013C  084F               	movf	memory_initialize@TAG,w
  2534     013D  00CD               	movwf	??_memory_initialize
  2535     013E  01CE               	clrf	??_memory_initialize+1
  2536     013F  084D               	movf	??_memory_initialize,w
  2537     0140  00F3               	movwf	___wmul@multiplier
  2538     0141  084E               	movf	??_memory_initialize+1,w
  2539     0142  00F4               	movwf	___wmul@multiplier+1
  2540     0143  300C               	movlw	12
  2541     0144  00F5               	movwf	___wmul@multiplicand
  2542     0145  3000               	movlw	0
  2543     0146  00F6               	movwf	___wmul@multiplicand+1
  2544     0147  3183  23AB  3180   	fcall	___wmul
  2545     014A  3036               	movlw	54
  2546     014B  0773               	addwf	?___wmul,w
  2547     014C  0084               	movwf	4
  2548     014D  3000               	movlw	0
  2549     014E  3D74               	addwfc	?___wmul+1,w
  2550     014F  3880               	iorlw	128
  2551     0150  0085               	movwf	5
  2552     0151  3F00               	moviw [0]fsr0
  2553     0152  0140               	movlb	0	; select bank0
  2554     0153  00C7               	movwf	FLASH_WriteWord@word
  2555     0154  3F01               	moviw [1]fsr0
  2556     0155  00C8               	movwf	FLASH_WriteWord@word+1
  2557     0156  3182  22C3  3180   	fcall	_FLASH_WriteWord
  2558     0159                     l2296:
  2559                           
  2560                           ;flash_memory_filling.c: 17:         FLASH_WriteWord(0x780 + 4, ramBuff, (uint16_t)defau
      +                          lt_in_flash[TAG - 1][2]);
  2561     0159  3084               	movlw	132
  2562     015A  0140               	movlb	0	; select bank0
  2563     015B  00C4               	movwf	FLASH_WriteWord@flashAddr
  2564     015C  3007               	movlw	7
  2565     015D  00C5               	movwf	FLASH_WriteWord@flashAddr+1
  2566     015E  30A0               	movlw	(low (memory_initialize@ramBuff| 0))& (0+255)
  2567     015F  00C6               	movwf	FLASH_WriteWord@ramBuf
  2568     0160  084F               	movf	memory_initialize@TAG,w
  2569     0161  00CD               	movwf	??_memory_initialize
  2570     0162  01CE               	clrf	??_memory_initialize+1
  2571     0163  084D               	movf	??_memory_initialize,w
  2572     0164  00F3               	movwf	___wmul@multiplier
  2573     0165  084E               	movf	??_memory_initialize+1,w
  2574     0166  00F4               	movwf	___wmul@multiplier+1
  2575     0167  300C               	movlw	12
  2576     0168  00F5               	movwf	___wmul@multiplicand
  2577     0169  3000               	movlw	0
  2578     016A  00F6               	movwf	___wmul@multiplicand+1
  2579     016B  3183  23AB  3180   	fcall	___wmul
  2580     016E  3038               	movlw	56
  2581     016F  0773               	addwf	?___wmul,w
  2582     0170  0084               	movwf	4
  2583     0171  3000               	movlw	0
  2584     0172  3D74               	addwfc	?___wmul+1,w
  2585     0173  3880               	iorlw	128
  2586     0174  0085               	movwf	5
  2587     0175  3F00               	moviw [0]fsr0
  2588     0176  0140               	movlb	0	; select bank0
  2589     0177  00C7               	movwf	FLASH_WriteWord@word
  2590     0178  3F01               	moviw [1]fsr0
  2591     0179  00C8               	movwf	FLASH_WriteWord@word+1
  2592     017A  3182  22C3  3180   	fcall	_FLASH_WriteWord
  2593     017D                     l2298:
  2594                           
  2595                           ;flash_memory_filling.c: 18:         FLASH_WriteWord(0x780 + 5, ramBuff, (uint16_t)defau
      +                          lt_in_flash[TAG - 1][3]);
  2596     017D  3085               	movlw	133
  2597     017E  0140               	movlb	0	; select bank0
  2598     017F  00C4               	movwf	FLASH_WriteWord@flashAddr
  2599     0180  3007               	movlw	7
  2600     0181  00C5               	movwf	FLASH_WriteWord@flashAddr+1
  2601     0182  30A0               	movlw	(low (memory_initialize@ramBuff| 0))& (0+255)
  2602     0183  00C6               	movwf	FLASH_WriteWord@ramBuf
  2603     0184  084F               	movf	memory_initialize@TAG,w
  2604     0185  00CD               	movwf	??_memory_initialize
  2605     0186  01CE               	clrf	??_memory_initialize+1
  2606     0187  084D               	movf	??_memory_initialize,w
  2607     0188  00F3               	movwf	___wmul@multiplier
  2608     0189  084E               	movf	??_memory_initialize+1,w
  2609     018A  00F4               	movwf	___wmul@multiplier+1
  2610     018B  300C               	movlw	12
  2611     018C  00F5               	movwf	___wmul@multiplicand
  2612     018D  3000               	movlw	0
  2613     018E  00F6               	movwf	___wmul@multiplicand+1
  2614     018F  3183  23AB  3180   	fcall	___wmul
  2615     0192  303A               	movlw	58
  2616     0193  0773               	addwf	?___wmul,w
  2617     0194  0084               	movwf	4
  2618     0195  3000               	movlw	0
  2619     0196  3D74               	addwfc	?___wmul+1,w
  2620     0197  3880               	iorlw	128
  2621     0198  0085               	movwf	5
  2622     0199  3F00               	moviw [0]fsr0
  2623     019A  0140               	movlb	0	; select bank0
  2624     019B  00C7               	movwf	FLASH_WriteWord@word
  2625     019C  3F01               	moviw [1]fsr0
  2626     019D  00C8               	movwf	FLASH_WriteWord@word+1
  2627     019E  3182  22C3  3180   	fcall	_FLASH_WriteWord
  2628     01A1                     l2300:
  2629                           
  2630                           ;flash_memory_filling.c: 19:         FLASH_WriteWord(0x780 + 6, ramBuff, (uint16_t)defau
      +                          lt_in_flash[TAG - 1][4]);
  2631     01A1  3086               	movlw	134
  2632     01A2  0140               	movlb	0	; select bank0
  2633     01A3  00C4               	movwf	FLASH_WriteWord@flashAddr
  2634     01A4  3007               	movlw	7
  2635     01A5  00C5               	movwf	FLASH_WriteWord@flashAddr+1
  2636     01A6  30A0               	movlw	(low (memory_initialize@ramBuff| 0))& (0+255)
  2637     01A7  00C6               	movwf	FLASH_WriteWord@ramBuf
  2638     01A8  084F               	movf	memory_initialize@TAG,w
  2639     01A9  00CD               	movwf	??_memory_initialize
  2640     01AA  01CE               	clrf	??_memory_initialize+1
  2641     01AB  084D               	movf	??_memory_initialize,w
  2642     01AC  00F3               	movwf	___wmul@multiplier
  2643     01AD  084E               	movf	??_memory_initialize+1,w
  2644     01AE  00F4               	movwf	___wmul@multiplier+1
  2645     01AF  300C               	movlw	12
  2646     01B0  00F5               	movwf	___wmul@multiplicand
  2647     01B1  3000               	movlw	0
  2648     01B2  00F6               	movwf	___wmul@multiplicand+1
  2649     01B3  3183  23AB  3180   	fcall	___wmul
  2650     01B6  303C               	movlw	60
  2651     01B7  0773               	addwf	?___wmul,w
  2652     01B8  0084               	movwf	4
  2653     01B9  3000               	movlw	0
  2654     01BA  3D74               	addwfc	?___wmul+1,w
  2655     01BB  3880               	iorlw	128
  2656     01BC  0085               	movwf	5
  2657     01BD  3F00               	moviw [0]fsr0
  2658     01BE  0140               	movlb	0	; select bank0
  2659     01BF  00C7               	movwf	FLASH_WriteWord@word
  2660     01C0  3F01               	moviw [1]fsr0
  2661     01C1  00C8               	movwf	FLASH_WriteWord@word+1
  2662     01C2  3182  22C3  3180   	fcall	_FLASH_WriteWord
  2663     01C5                     l2302:
  2664                           
  2665                           ;flash_memory_filling.c: 20:         FLASH_WriteWord(0x780 + 7, ramBuff, (uint16_t)defau
      +                          lt_in_flash[TAG - 1][5]);
  2666     01C5  3087               	movlw	135
  2667     01C6  0140               	movlb	0	; select bank0
  2668     01C7  00C4               	movwf	FLASH_WriteWord@flashAddr
  2669     01C8  3007               	movlw	7
  2670     01C9  00C5               	movwf	FLASH_WriteWord@flashAddr+1
  2671     01CA  30A0               	movlw	(low (memory_initialize@ramBuff| 0))& (0+255)
  2672     01CB  00C6               	movwf	FLASH_WriteWord@ramBuf
  2673     01CC  084F               	movf	memory_initialize@TAG,w
  2674     01CD  00CD               	movwf	??_memory_initialize
  2675     01CE  01CE               	clrf	??_memory_initialize+1
  2676     01CF  084D               	movf	??_memory_initialize,w
  2677     01D0  00F3               	movwf	___wmul@multiplier
  2678     01D1  084E               	movf	??_memory_initialize+1,w
  2679     01D2  00F4               	movwf	___wmul@multiplier+1
  2680     01D3  300C               	movlw	12
  2681     01D4  00F5               	movwf	___wmul@multiplicand
  2682     01D5  3000               	movlw	0
  2683     01D6  00F6               	movwf	___wmul@multiplicand+1
  2684     01D7  3183  23AB  3180   	fcall	___wmul
  2685     01DA  303E               	movlw	62
  2686     01DB  0773               	addwf	?___wmul,w
  2687     01DC  0084               	movwf	4
  2688     01DD  3000               	movlw	0
  2689     01DE  3D74               	addwfc	?___wmul+1,w
  2690     01DF  3880               	iorlw	128
  2691     01E0  0085               	movwf	5
  2692     01E1  3F00               	moviw [0]fsr0
  2693     01E2  0140               	movlb	0	; select bank0
  2694     01E3  00C7               	movwf	FLASH_WriteWord@word
  2695     01E4  3F01               	moviw [1]fsr0
  2696     01E5  00C8               	movwf	FLASH_WriteWord@word+1
  2697     01E6  3182  22C3  3180   	fcall	_FLASH_WriteWord
  2698     01E9                     l32:
  2699     01E9  0008               	return
  2700     01EA                     __end_of_memory_initialize:
  2701                           
  2702                           	psect	text2
  2703     03AB                     __ptext2:	
  2704 ;; *************** function ___wmul *****************
  2705 ;; Defined at:
  2706 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\Umul16.c"
  2707 ;; Parameters:    Size  Location     Type
  2708 ;;  multiplier      2    3[COMMON] unsigned int 
  2709 ;;  multiplicand    2    5[COMMON] unsigned int 
  2710 ;; Auto vars:     Size  Location     Type
  2711 ;;  product         2    0[BANK0 ] unsigned int 
  2712 ;; Return value:  Size  Location     Type
  2713 ;;                  2    3[COMMON] unsigned int 
  2714 ;; Registers used:
  2715 ;;		wreg, status,2, status,0
  2716 ;; Tracked objects:
  2717 ;;		On entry : 0/0
  2718 ;;		On exit  : 0/0
  2719 ;;		Unchanged: 0/0
  2720 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2721 ;;      Params:         4       0       0       0
  2722 ;;      Locals:         0       2       0       0
  2723 ;;      Temps:          0       0       0       0
  2724 ;;      Totals:         4       2       0       0
  2725 ;;Total ram usage:        6 bytes
  2726 ;; Hardware stack levels used: 1
  2727 ;; Hardware stack levels required when called: 5
  2728 ;; This function calls:
  2729 ;;		Nothing
  2730 ;; This function is called by:
  2731 ;;		_memory_initialize
  2732 ;; This function uses a non-reentrant model
  2733 ;;
  2734                           
  2735     03AB                     ___wmul:	
  2736                           ;psect for function ___wmul
  2737                           
  2738     03AB                     l2274:	
  2739                           ;incstack = 0
  2740                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  2741                           
  2742     03AB  0140               	movlb	0	; select bank0
  2743     03AC  01BA               	clrf	___wmul@product
  2744     03AD  01BB               	clrf	___wmul@product+1
  2745     03AE                     l2276:
  2746     03AE  1C73               	btfss	___wmul@multiplier,0
  2747     03AF  2BB1               	goto	u861
  2748     03B0  2BB2               	goto	u860
  2749     03B1                     u861:
  2750     03B1  2BB7               	goto	l710
  2751     03B2                     u860:
  2752     03B2                     l2278:
  2753     03B2  0875               	movf	___wmul@multiplicand,w
  2754     03B3  0140               	movlb	0	; select bank0
  2755     03B4  07BA               	addwf	___wmul@product,f
  2756     03B5  0876               	movf	___wmul@multiplicand+1,w
  2757     03B6  3DBB               	addwfc	___wmul@product+1,f
  2758     03B7                     l710:
  2759     03B7  3001               	movlw	1
  2760     03B8                     u875:
  2761     03B8  35F5               	lslf	___wmul@multiplicand,f
  2762     03B9  0DF6               	rlf	___wmul@multiplicand+1,f
  2763     03BA  0B89               	decfsz	9,f
  2764     03BB  2BB8               	goto	u875
  2765     03BC                     l2280:
  2766     03BC  3001               	movlw	1
  2767     03BD                     u885:
  2768     03BD  36F4               	lsrf	___wmul@multiplier+1,f
  2769     03BE  0CF3               	rrf	___wmul@multiplier,f
  2770     03BF  0B89               	decfsz	9,f
  2771     03C0  2BBD               	goto	u885
  2772     03C1                     l2282:
  2773     03C1  0873               	movf	___wmul@multiplier,w
  2774     03C2  0474               	iorwf	___wmul@multiplier+1,w
  2775     03C3  1D03               	btfss	3,2
  2776     03C4  2BC6               	goto	u891
  2777     03C5  2BC7               	goto	u890
  2778     03C6                     u891:
  2779     03C6  2BAE               	goto	l2276
  2780     03C7                     u890:
  2781     03C7                     l2284:
  2782     03C7  0140               	movlb	0	; select bank0
  2783     03C8  083B               	movf	___wmul@product+1,w
  2784     03C9  00F4               	movwf	?___wmul+1
  2785     03CA  083A               	movf	___wmul@product,w
  2786     03CB  00F3               	movwf	?___wmul
  2787     03CC                     l712:
  2788     03CC  0008               	return
  2789     03CD                     __end_of___wmul:
  2790                           
  2791                           	psect	text3
  2792     02C3                     __ptext3:	
  2793 ;; *************** function _FLASH_WriteWord *****************
  2794 ;; Defined at:
  2795 ;;		line 75 in file "mcc_generated_files/memory.c"
  2796 ;; Parameters:    Size  Location     Type
  2797 ;;  flashAddr       2   10[BANK0 ] unsigned short 
  2798 ;;  ramBuf          1   12[BANK0 ] PTR unsigned short 
  2799 ;;		 -> memory_initialize@ramBuff(64), 
  2800 ;;  word            2   13[BANK0 ] unsigned short 
  2801 ;; Auto vars:     Size  Location     Type
  2802 ;;  blockStartAd    2   16[BANK0 ] unsigned short 
  2803 ;;  i               1   18[BANK0 ] unsigned char 
  2804 ;;  offset          1   15[BANK0 ] unsigned char 
  2805 ;; Return value:  Size  Location     Type
  2806 ;;                  1    wreg      void 
  2807 ;; Registers used:
  2808 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2809 ;; Tracked objects:
  2810 ;;		On entry : 0/0
  2811 ;;		On exit  : 0/0
  2812 ;;		Unchanged: 0/0
  2813 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2814 ;;      Params:         0       5       0       0
  2815 ;;      Locals:         0       4       0       0
  2816 ;;      Temps:          1       0       0       0
  2817 ;;      Totals:         1       9       0       0
  2818 ;;Total ram usage:       10 bytes
  2819 ;; Hardware stack levels used: 1
  2820 ;; Hardware stack levels required when called: 7
  2821 ;; This function calls:
  2822 ;;		_FLASH_ReadWord
  2823 ;;		_FLASH_WriteBlock
  2824 ;; This function is called by:
  2825 ;;		_memory_initialize
  2826 ;; This function uses a non-reentrant model
  2827 ;;
  2828                           
  2829     02C3                     _FLASH_WriteWord:	
  2830                           ;psect for function _FLASH_WriteWord
  2831                           
  2832     02C3                     l2256:	
  2833                           ;incstack = 0
  2834                           ; Regs used in _FLASH_WriteWord: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2835                           
  2836                           
  2837                           ;mcc_generated_files/memory.c: 75: void FLASH_WriteWord(uint16_t flashAddr, uint16_t *ra
      +                          mBuf, uint16_t word);mcc_generated_files/memory.c: 76: {;mcc_generated_files/memory.c: 7
      +                          7:     uint16_t blockStartAddr = (uint16_t)(flashAddr & ((0x800 -1) ^ (32 -1)));
  2838     02C3  30E0               	movlw	224
  2839     02C4  0140               	movlb	0	; select bank0
  2840     02C5  0544               	andwf	FLASH_WriteWord@flashAddr,w
  2841     02C6  00CA               	movwf	FLASH_WriteWord@blockStartAddr
  2842     02C7  3007               	movlw	7
  2843     02C8  0545               	andwf	FLASH_WriteWord@flashAddr+1,w
  2844     02C9  00CB               	movwf	FLASH_WriteWord@blockStartAddr+1
  2845     02CA                     l2258:
  2846                           
  2847                           ;mcc_generated_files/memory.c: 78:     uint8_t offset = (uint8_t)(flashAddr & (32 -1));
  2848     02CA  0844               	movf	FLASH_WriteWord@flashAddr,w
  2849     02CB  391F               	andlw	31
  2850     02CC  00C9               	movwf	FLASH_WriteWord@offset
  2851                           
  2852                           ;mcc_generated_files/memory.c: 79:     uint8_t i;;mcc_generated_files/memory.c: 82:     
      +                          for (i=0; i<32; i++)
  2853     02CD  01CC               	clrf	FLASH_WriteWord@i
  2854     02CE                     l2264:
  2855                           
  2856                           ;mcc_generated_files/memory.c: 83:     {;mcc_generated_files/memory.c: 84:         ramBu
      +                          f[i] = FLASH_ReadWord((blockStartAddr+i));
  2857     02CE  084C               	movf	FLASH_WriteWord@i,w
  2858     02CF  074A               	addwf	FLASH_WriteWord@blockStartAddr,w
  2859     02D0  00F3               	movwf	FLASH_ReadWord@flashAddr
  2860     02D1  084B               	movf	FLASH_WriteWord@blockStartAddr+1,w
  2861     02D2  1803               	skipnc
  2862     02D3  0A4B               	incf	FLASH_WriteWord@blockStartAddr+1,w
  2863     02D4  00F4               	movwf	FLASH_ReadWord@flashAddr+1
  2864     02D5  3184  2403  3182   	fcall	_FLASH_ReadWord
  2865     02D8  0140               	movlb	0	; select bank0
  2866     02D9  354C               	lslf	FLASH_WriteWord@i,w
  2867     02DA  0746               	addwf	FLASH_WriteWord@ramBuf,w
  2868     02DB  00F7               	movwf	??_FLASH_WriteWord
  2869     02DC  0877               	movf	??_FLASH_WriteWord,w
  2870     02DD  0086               	movwf	6
  2871     02DE  0187               	clrf	7
  2872     02DF  0873               	movf	?_FLASH_ReadWord,w
  2873     02E0  3FC0               	movwi [0]fsr1
  2874     02E1  0874               	movf	?_FLASH_ReadWord+1,w
  2875     02E2  3FC1               	movwi [1]fsr1
  2876     02E3                     l2266:
  2877                           
  2878                           ;mcc_generated_files/memory.c: 85:     }
  2879     02E3  3001               	movlw	1
  2880     02E4  00F7               	movwf	??_FLASH_WriteWord
  2881     02E5  0877               	movf	??_FLASH_WriteWord,w
  2882     02E6  07CC               	addwf	FLASH_WriteWord@i,f
  2883     02E7                     l2268:
  2884     02E7  3020               	movlw	32
  2885     02E8  024C               	subwf	FLASH_WriteWord@i,w
  2886     02E9  1C03               	skipc
  2887     02EA  2AEC               	goto	u851
  2888     02EB  2AED               	goto	u850
  2889     02EC                     u851:
  2890     02EC  2ACE               	goto	l2264
  2891     02ED                     u850:
  2892     02ED                     l2270:
  2893                           
  2894                           ;mcc_generated_files/memory.c: 88:     ramBuf[offset] = word;
  2895     02ED  3549               	lslf	FLASH_WriteWord@offset,w
  2896     02EE  0746               	addwf	FLASH_WriteWord@ramBuf,w
  2897     02EF  00F7               	movwf	??_FLASH_WriteWord
  2898     02F0  0877               	movf	??_FLASH_WriteWord,w
  2899     02F1  0086               	movwf	6
  2900     02F2  0187               	clrf	7
  2901     02F3  0847               	movf	FLASH_WriteWord@word,w
  2902     02F4  3FC0               	movwi [0]fsr1
  2903     02F5  0848               	movf	FLASH_WriteWord@word+1,w
  2904     02F6  3FC1               	movwi [1]fsr1
  2905     02F7                     l2272:
  2906                           
  2907                           ;mcc_generated_files/memory.c: 91:     FLASH_WriteBlock(blockStartAddr, ramBuf);
  2908     02F7  084B               	movf	FLASH_WriteWord@blockStartAddr+1,w
  2909     02F8  00BB               	movwf	FLASH_WriteBlock@writeAddr+1
  2910     02F9  084A               	movf	FLASH_WriteWord@blockStartAddr,w
  2911     02FA  00BA               	movwf	FLASH_WriteBlock@writeAddr
  2912     02FB  0846               	movf	FLASH_WriteWord@ramBuf,w
  2913     02FC  00BC               	movwf	FLASH_WriteBlock@flashWordArray
  2914     02FD  3182  2257  3182   	fcall	_FLASH_WriteBlock
  2915     0300                     l526:
  2916     0300  0008               	return
  2917     0301                     __end_of_FLASH_WriteWord:
  2918                           
  2919                           	psect	text4
  2920     0257                     __ptext4:	
  2921 ;; *************** function _FLASH_WriteBlock *****************
  2922 ;; Defined at:
  2923 ;;		line 94 in file "mcc_generated_files/memory.c"
  2924 ;; Parameters:    Size  Location     Type
  2925 ;;  writeAddr       2    0[BANK0 ] unsigned short 
  2926 ;;  flashWordArr    1    2[BANK0 ] PTR unsigned short 
  2927 ;;		 -> memory_initialize@ramBuff(64), 
  2928 ;; Auto vars:     Size  Location     Type
  2929 ;;  blockStartAd    2    6[BANK0 ] unsigned short 
  2930 ;;  i               1    9[BANK0 ] unsigned char 
  2931 ;;  GIEBitValue     1    8[BANK0 ] unsigned char 
  2932 ;; Return value:  Size  Location     Type
  2933 ;;                  1    wreg      char 
  2934 ;; Registers used:
  2935 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2936 ;; Tracked objects:
  2937 ;;		On entry : 0/0
  2938 ;;		On exit  : 0/0
  2939 ;;		Unchanged: 0/0
  2940 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2941 ;;      Params:         0       3       0       0
  2942 ;;      Locals:         0       4       0       0
  2943 ;;      Temps:          0       3       0       0
  2944 ;;      Totals:         0      10       0       0
  2945 ;;Total ram usage:       10 bytes
  2946 ;; Hardware stack levels used: 1
  2947 ;; Hardware stack levels required when called: 6
  2948 ;; This function calls:
  2949 ;;		_FLASH_EraseBlock
  2950 ;; This function is called by:
  2951 ;;		_FLASH_WriteWord
  2952 ;; This function uses a non-reentrant model
  2953 ;;
  2954                           
  2955     0257                     _FLASH_WriteBlock:	
  2956                           ;psect for function _FLASH_WriteBlock
  2957                           
  2958     0257                     l2206:	
  2959                           ;incstack = 0
  2960                           ; Regs used in _FLASH_WriteBlock: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2961                           
  2962                           
  2963                           ;mcc_generated_files/memory.c: 94: int8_t FLASH_WriteBlock(uint16_t writeAddr, uint16_t 
      +                          *flashWordArray);mcc_generated_files/memory.c: 95: {;mcc_generated_files/memory.c: 96:  
      +                             uint16_t blockStartAddr = (uint16_t )(writeAddr & ((0x800 -1) ^ (32 -1)));
  2964     0257  30E0               	movlw	224
  2965     0258  0140               	movlb	0	; select bank0
  2966     0259  053A               	andwf	FLASH_WriteBlock@writeAddr,w
  2967     025A  00C0               	movwf	FLASH_WriteBlock@blockStartAddr
  2968     025B  3007               	movlw	7
  2969     025C  053B               	andwf	FLASH_WriteBlock@writeAddr+1,w
  2970     025D  00C1               	movwf	FLASH_WriteBlock@blockStartAddr+1
  2971     025E                     l2208:
  2972                           
  2973                           ;mcc_generated_files/memory.c: 97:     uint8_t GIEBitValue = INTCONbits.GIE;
  2974     025E  3000               	movlw	0
  2975     025F  1B8B               	btfsc	11,7	;volatile
  2976     0260  3001               	movlw	1
  2977     0261  00C2               	movwf	FLASH_WriteBlock@GIEBitValue
  2978     0262                     l2210:
  2979                           
  2980                           ;mcc_generated_files/memory.c: 98:     uint8_t i;;mcc_generated_files/memory.c: 102:    
      +                           if( writeAddr != blockStartAddr )
  2981     0262  0841               	movf	FLASH_WriteBlock@blockStartAddr+1,w
  2982     0263  063B               	xorwf	FLASH_WriteBlock@writeAddr+1,w
  2983     0264  1D03               	skipz
  2984     0265  2A68               	goto	u825
  2985     0266  0840               	movf	FLASH_WriteBlock@blockStartAddr,w
  2986     0267  063A               	xorwf	FLASH_WriteBlock@writeAddr,w
  2987     0268                     u825:
  2988     0268  1903               	skipnz
  2989     0269  2A6B               	goto	u821
  2990     026A  2A6C               	goto	u820
  2991     026B                     u821:
  2992     026B  2A6D               	goto	l529
  2993     026C                     u820:
  2994     026C  2AC2               	goto	l530
  2995     026D                     l529:	
  2996                           ;mcc_generated_files/memory.c: 105:     }
  2997                           
  2998                           
  2999                           ;mcc_generated_files/memory.c: 107:     INTCONbits.GIE = 0;
  3000     026D  138B               	bcf	11,7	;volatile
  3001     026E                     l2214:
  3002                           
  3003                           ;mcc_generated_files/memory.c: 110:     FLASH_EraseBlock(writeAddr);
  3004     026E  083B               	movf	FLASH_WriteBlock@writeAddr+1,w
  3005     026F  00F4               	movwf	FLASH_EraseBlock@startAddr+1
  3006     0270  083A               	movf	FLASH_WriteBlock@writeAddr,w
  3007     0271  00F3               	movwf	FLASH_EraseBlock@startAddr
  3008     0272  3183  23CD  3182   	fcall	_FLASH_EraseBlock
  3009     0275                     l2216:
  3010                           
  3011                           ;mcc_generated_files/memory.c: 113:     NVMCON1bits.NVMREGS = 0;
  3012     0275  0150               	movlb	16	; select bank16
  3013     0276  131E               	bcf	30,6	;volsfr
  3014     0277                     l2218:
  3015                           
  3016                           ;mcc_generated_files/memory.c: 114:     NVMCON1bits.WREN = 1;
  3017     0277  151E               	bsf	30,2	;volsfr
  3018     0278                     l2220:
  3019                           
  3020                           ;mcc_generated_files/memory.c: 115:     NVMCON1bits.LWLO = 1;
  3021     0278  169E               	bsf	30,5	;volsfr
  3022     0279                     l2222:
  3023                           
  3024                           ;mcc_generated_files/memory.c: 117:     for (i=0; i<32; i++)
  3025     0279  0140               	movlb	0	; select bank0
  3026     027A  01C3               	clrf	FLASH_WriteBlock@i
  3027     027B                     l2228:
  3028                           
  3029                           ;mcc_generated_files/memory.c: 118:     {;mcc_generated_files/memory.c: 120:         NVM
      +                          ADRL = (writeAddr & 0xFF);
  3030     027B  083A               	movf	FLASH_WriteBlock@writeAddr,w
  3031     027C  0150               	movlb	16	; select bank16
  3032     027D  009A               	movwf	26	;volatile
  3033     027E                     l2230:
  3034                           
  3035                           ;mcc_generated_files/memory.c: 122:         NVMADRH = ((writeAddr & 0xFF00) >> 8);
  3036     027E  0140               	movlb	0	; select bank0
  3037     027F  083B               	movf	FLASH_WriteBlock@writeAddr+1,w
  3038     0280  0150               	movlb	16	; select bank16
  3039     0281  009B               	movwf	27	;volatile
  3040     0282                     l2232:
  3041                           
  3042                           ;mcc_generated_files/memory.c: 125:         NVMDATL = flashWordArray[i];
  3043     0282  0140               	movlb	0	; select bank0
  3044     0283  3543               	lslf	FLASH_WriteBlock@i,w
  3045     0284  073C               	addwf	FLASH_WriteBlock@flashWordArray,w
  3046     0285  00BD               	movwf	??_FLASH_WriteBlock
  3047     0286  083D               	movf	??_FLASH_WriteBlock,w
  3048     0287  0086               	movwf	6
  3049     0288  0187               	clrf	7
  3050     0289  0801               	movf	1,w
  3051     028A  0150               	movlb	16	; select bank16
  3052     028B  009C               	movwf	28	;volatile
  3053     028C                     l2234:
  3054                           
  3055                           ;mcc_generated_files/memory.c: 126:         NVMDATH = ((flashWordArray[i] & 0xFF00) >> 8
      +                          );
  3056     028C  0140               	movlb	0	; select bank0
  3057     028D  3543               	lslf	FLASH_WriteBlock@i,w
  3058     028E  073C               	addwf	FLASH_WriteBlock@flashWordArray,w
  3059     028F  00BD               	movwf	??_FLASH_WriteBlock
  3060     0290  083D               	movf	??_FLASH_WriteBlock,w
  3061     0291  0086               	movwf	6
  3062     0292  0187               	clrf	7
  3063     0293  3F40               	moviw [0]fsr1
  3064     0294  00BE               	movwf	??_FLASH_WriteBlock+1
  3065     0295  3F41               	moviw [1]fsr1
  3066     0296  00BF               	movwf	??_FLASH_WriteBlock+2
  3067     0297  083F               	movf	??_FLASH_WriteBlock+2,w
  3068     0298  0150               	movlb	16	; select bank16
  3069     0299  009D               	movwf	29	;volatile
  3070     029A                     l2236:
  3071                           
  3072                           ;mcc_generated_files/memory.c: 128:         if(i == (32 -1))
  3073     029A  301F               	movlw	31
  3074     029B  0140               	movlb	0	; select bank0
  3075     029C  0643               	xorwf	FLASH_WriteBlock@i,w
  3076     029D  1D03               	btfss	3,2
  3077     029E  2AA0               	goto	u831
  3078     029F  2AA1               	goto	u830
  3079     02A0                     u831:
  3080     02A0  2AA3               	goto	l2240
  3081     02A1                     u830:
  3082     02A1                     l2238:
  3083                           
  3084                           ;mcc_generated_files/memory.c: 129:         {;mcc_generated_files/memory.c: 131:        
      +                               NVMCON1bits.LWLO = 0;
  3085     02A1  0150               	movlb	16	; select bank16
  3086     02A2  129E               	bcf	30,5	;volsfr
  3087     02A3                     l2240:
  3088                           
  3089                           ;mcc_generated_files/memory.c: 134:         NVMCON2 = 0x55;
  3090     02A3  3055               	movlw	85
  3091     02A4  0150               	movlb	16	; select bank16
  3092     02A5  009F               	movwf	31	;volsfr
  3093                           
  3094                           ;mcc_generated_files/memory.c: 135:         NVMCON2 = 0xAA;
  3095     02A6  30AA               	movlw	170
  3096     02A7  009F               	movwf	31	;volsfr
  3097     02A8                     l2242:
  3098                           
  3099                           ;mcc_generated_files/memory.c: 136:         NVMCON1bits.WR = 1;
  3100     02A8  149E               	bsf	30,1	;volsfr
  3101     02A9                     l2244:
  3102                           
  3103                           ;mcc_generated_files/memory.c: 137:         __nop();
  3104     02A9  0000               	nop
  3105     02AA                     l2246:
  3106                           
  3107                           ;mcc_generated_files/memory.c: 138:         __nop();
  3108     02AA  0000               	nop
  3109                           
  3110                           ;mcc_generated_files/memory.c: 140:      writeAddr++;
  3111     02AB  3001               	movlw	1
  3112     02AC  0140               	movlb	0	; select bank0
  3113     02AD  07BA               	addwf	FLASH_WriteBlock@writeAddr,f
  3114     02AE  3000               	movlw	0
  3115     02AF  3DBB               	addwfc	FLASH_WriteBlock@writeAddr+1,f
  3116     02B0                     l2248:
  3117                           
  3118                           ;mcc_generated_files/memory.c: 141:     }
  3119     02B0  3001               	movlw	1
  3120     02B1  00BD               	movwf	??_FLASH_WriteBlock
  3121     02B2  083D               	movf	??_FLASH_WriteBlock,w
  3122     02B3  07C3               	addwf	FLASH_WriteBlock@i,f
  3123     02B4                     l2250:
  3124     02B4  3020               	movlw	32
  3125     02B5  0243               	subwf	FLASH_WriteBlock@i,w
  3126     02B6  1C03               	skipc
  3127     02B7  2AB9               	goto	u841
  3128     02B8  2ABA               	goto	u840
  3129     02B9                     u841:
  3130     02B9  2A7B               	goto	l2228
  3131     02BA                     u840:
  3132     02BA                     l532:
  3133                           
  3134                           ;mcc_generated_files/memory.c: 143:     NVMCON1bits.WREN = 0;
  3135     02BA  0150               	movlb	16	; select bank16
  3136     02BB  111E               	bcf	30,2	;volsfr
  3137     02BC                     l2252:
  3138                           
  3139                           ;mcc_generated_files/memory.c: 144:     INTCONbits.GIE = GIEBitValue;
  3140     02BC  0140               	movlb	0	; select bank0
  3141     02BD  0C42               	rrf	FLASH_WriteBlock@GIEBitValue,w
  3142     02BE  1C03               	skipc
  3143     02BF  138B               	bcf	11,7	;volatile
  3144     02C0  1803               	skipnc
  3145     02C1  178B               	bsf	11,7	;volatile
  3146     02C2                     l530:
  3147     02C2  0008               	return
  3148     02C3                     __end_of_FLASH_WriteBlock:
  3149                           
  3150                           	psect	text5
  3151     03CD                     __ptext5:	
  3152 ;; *************** function _FLASH_EraseBlock *****************
  3153 ;; Defined at:
  3154 ;;		line 149 in file "mcc_generated_files/memory.c"
  3155 ;; Parameters:    Size  Location     Type
  3156 ;;  startAddr       2    3[COMMON] unsigned short 
  3157 ;; Auto vars:     Size  Location     Type
  3158 ;;  GIEBitValue     1    5[COMMON] unsigned char 
  3159 ;; Return value:  Size  Location     Type
  3160 ;;                  1    wreg      void 
  3161 ;; Registers used:
  3162 ;;		wreg, status,2, status,0
  3163 ;; Tracked objects:
  3164 ;;		On entry : 0/0
  3165 ;;		On exit  : 0/0
  3166 ;;		Unchanged: 0/0
  3167 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3168 ;;      Params:         2       0       0       0
  3169 ;;      Locals:         1       0       0       0
  3170 ;;      Temps:          0       0       0       0
  3171 ;;      Totals:         3       0       0       0
  3172 ;;Total ram usage:        3 bytes
  3173 ;; Hardware stack levels used: 1
  3174 ;; Hardware stack levels required when called: 5
  3175 ;; This function calls:
  3176 ;;		Nothing
  3177 ;; This function is called by:
  3178 ;;		_FLASH_WriteBlock
  3179 ;; This function uses a non-reentrant model
  3180 ;;
  3181                           
  3182     03CD                     _FLASH_EraseBlock:	
  3183                           ;psect for function _FLASH_EraseBlock
  3184                           
  3185     03CD                     l2160:	
  3186                           ;incstack = 0
  3187                           ; Regs used in _FLASH_EraseBlock: [wreg+status,2+status,0]
  3188                           
  3189                           
  3190                           ;mcc_generated_files/memory.c: 149: void FLASH_EraseBlock(uint16_t startAddr);mcc_genera
      +                          ted_files/memory.c: 150: {;mcc_generated_files/memory.c: 151:     uint8_t GIEBitValue = 
      +                          INTCONbits.GIE;
  3191     03CD  3000               	movlw	0
  3192     03CE  1B8B               	btfsc	11,7	;volatile
  3193     03CF  3001               	movlw	1
  3194     03D0  00F5               	movwf	FLASH_EraseBlock@GIEBitValue
  3195     03D1                     l2162:
  3196                           
  3197                           ;mcc_generated_files/memory.c: 154:     INTCONbits.GIE = 0;
  3198     03D1  138B               	bcf	11,7	;volatile
  3199     03D2                     l2164:
  3200                           
  3201                           ;mcc_generated_files/memory.c: 156:     NVMADRL = (startAddr & 0xFF);
  3202     03D2  0873               	movf	FLASH_EraseBlock@startAddr,w
  3203     03D3  0150               	movlb	16	; select bank16
  3204     03D4  009A               	movwf	26	;volatile
  3205     03D5                     l2166:
  3206                           
  3207                           ;mcc_generated_files/memory.c: 158:     NVMADRH = ((startAddr & 0xFF00) >> 8);
  3208     03D5  0874               	movf	FLASH_EraseBlock@startAddr+1,w
  3209     03D6  009B               	movwf	27	;volatile
  3210     03D7                     l2168:
  3211                           
  3212                           ;mcc_generated_files/memory.c: 161:     NVMCON1bits.NVMREGS = 0;
  3213     03D7  131E               	bcf	30,6	;volsfr
  3214     03D8                     l2170:
  3215                           
  3216                           ;mcc_generated_files/memory.c: 162:     NVMCON1bits.FREE = 1;
  3217     03D8  161E               	bsf	30,4	;volsfr
  3218     03D9                     l2172:
  3219                           
  3220                           ;mcc_generated_files/memory.c: 163:     NVMCON1bits.WREN = 1;
  3221     03D9  151E               	bsf	30,2	;volsfr
  3222                           
  3223                           ;mcc_generated_files/memory.c: 166:     NVMCON2 = 0x55;
  3224     03DA  3055               	movlw	85
  3225     03DB  009F               	movwf	31	;volsfr
  3226                           
  3227                           ;mcc_generated_files/memory.c: 167:     NVMCON2 = 0xAA;
  3228     03DC  30AA               	movlw	170
  3229     03DD  009F               	movwf	31	;volsfr
  3230     03DE                     l2174:
  3231                           
  3232                           ;mcc_generated_files/memory.c: 168:     NVMCON1bits.WR = 1;
  3233     03DE  149E               	bsf	30,1	;volsfr
  3234     03DF                     l2176:
  3235                           
  3236                           ;mcc_generated_files/memory.c: 169:     __nop();
  3237     03DF  0000               	nop
  3238     03E0                     l2178:
  3239                           
  3240                           ;mcc_generated_files/memory.c: 170:     __nop();
  3241     03E0  0000               	nop
  3242     03E1                     l2180:
  3243                           
  3244                           ;mcc_generated_files/memory.c: 172:     NVMCON1bits.WREN = 0;
  3245     03E1  0150               	movlb	16	; select bank16
  3246     03E2  111E               	bcf	30,2	;volsfr
  3247     03E3                     l2182:
  3248                           
  3249                           ;mcc_generated_files/memory.c: 173:     INTCONbits.GIE = GIEBitValue;
  3250     03E3  0C75               	rrf	FLASH_EraseBlock@GIEBitValue,w
  3251     03E4  1C03               	skipc
  3252     03E5  138B               	bcf	11,7	;volatile
  3253     03E6  1803               	skipnc
  3254     03E7  178B               	bsf	11,7	;volatile
  3255     03E8                     l536:
  3256     03E8  0008               	return
  3257     03E9                     __end_of_FLASH_EraseBlock:
  3258                           
  3259                           	psect	text6
  3260     0403                     __ptext6:	
  3261 ;; *************** function _FLASH_ReadWord *****************
  3262 ;; Defined at:
  3263 ;;		line 58 in file "mcc_generated_files/memory.c"
  3264 ;; Parameters:    Size  Location     Type
  3265 ;;  flashAddr       2    3[COMMON] unsigned short 
  3266 ;; Auto vars:     Size  Location     Type
  3267 ;;  GIEBitValue     1    5[COMMON] unsigned char 
  3268 ;; Return value:  Size  Location     Type
  3269 ;;                  2    3[COMMON] unsigned short 
  3270 ;; Registers used:
  3271 ;;		wreg, status,2, status,0
  3272 ;; Tracked objects:
  3273 ;;		On entry : 0/0
  3274 ;;		On exit  : 0/0
  3275 ;;		Unchanged: 0/0
  3276 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3277 ;;      Params:         2       0       0       0
  3278 ;;      Locals:         1       0       0       0
  3279 ;;      Temps:          0       0       0       0
  3280 ;;      Totals:         3       0       0       0
  3281 ;;Total ram usage:        3 bytes
  3282 ;; Hardware stack levels used: 1
  3283 ;; Hardware stack levels required when called: 5
  3284 ;; This function calls:
  3285 ;;		Nothing
  3286 ;; This function is called by:
  3287 ;;		_memory_initialize
  3288 ;;		_FLASH_WriteWord
  3289 ;; This function uses a non-reentrant model
  3290 ;;
  3291                           
  3292     0403                     _FLASH_ReadWord:	
  3293                           ;psect for function _FLASH_ReadWord
  3294                           
  3295     0403                     l2184:	
  3296                           ;incstack = 0
  3297                           ; Regs used in _FLASH_ReadWord: [wreg+status,2+status,0]
  3298                           
  3299                           
  3300                           ;mcc_generated_files/memory.c: 58: uint16_t FLASH_ReadWord(uint16_t flashAddr);mcc_gener
      +                          ated_files/memory.c: 59: {;mcc_generated_files/memory.c: 60:     uint8_t GIEBitValue = I
      +                          NTCONbits.GIE;
  3301     0403  3000               	movlw	0
  3302     0404  1B8B               	btfsc	11,7	;volatile
  3303     0405  3001               	movlw	1
  3304     0406  00F5               	movwf	FLASH_ReadWord@GIEBitValue
  3305     0407                     l2186:
  3306                           
  3307                           ;mcc_generated_files/memory.c: 62:     INTCONbits.GIE = 0;
  3308     0407  138B               	bcf	11,7	;volatile
  3309     0408                     l2188:
  3310                           
  3311                           ;mcc_generated_files/memory.c: 63:     NVMADRL = (flashAddr & 0x00FF);
  3312     0408  0873               	movf	FLASH_ReadWord@flashAddr,w
  3313     0409  0150               	movlb	16	; select bank16
  3314     040A  009A               	movwf	26	;volatile
  3315     040B                     l2190:
  3316                           
  3317                           ;mcc_generated_files/memory.c: 64:     NVMADRH = ((flashAddr & 0xFF00) >> 8);
  3318     040B  0874               	movf	FLASH_ReadWord@flashAddr+1,w
  3319     040C  009B               	movwf	27	;volatile
  3320     040D                     l2192:
  3321                           
  3322                           ;mcc_generated_files/memory.c: 66:     NVMCON1bits.NVMREGS = 0;
  3323     040D  131E               	bcf	30,6	;volsfr
  3324     040E                     l2194:
  3325                           
  3326                           ;mcc_generated_files/memory.c: 67:     NVMCON1bits.RD = 1;
  3327     040E  141E               	bsf	30,0	;volsfr
  3328     040F                     l2196:
  3329                           
  3330                           ;mcc_generated_files/memory.c: 68:     __nop();
  3331     040F  0000               	nop
  3332     0410                     l2198:
  3333                           
  3334                           ;mcc_generated_files/memory.c: 69:     __nop();
  3335     0410  0000               	nop
  3336     0411                     l2200:
  3337                           
  3338                           ;mcc_generated_files/memory.c: 70:     INTCONbits.GIE = GIEBitValue;
  3339     0411  0C75               	rrf	FLASH_ReadWord@GIEBitValue,w
  3340     0412  1C03               	skipc
  3341     0413  138B               	bcf	11,7	;volatile
  3342     0414  1803               	skipnc
  3343     0415  178B               	bsf	11,7	;volatile
  3344     0416                     l2202:
  3345                           
  3346                           ;mcc_generated_files/memory.c: 72:     return ((uint16_t)((NVMDATH << 8) | NVMDATL));
  3347     0416  0150               	movlb	16	; select bank16
  3348     0417  081D               	movf	29,w	;volatile
  3349     0418  00F4               	movwf	?_FLASH_ReadWord+1
  3350     0419  081C               	movf	28,w	;volatile
  3351     041A  00F3               	movwf	?_FLASH_ReadWord
  3352     041B                     l521:
  3353     041B  0008               	return
  3354     041C                     __end_of_FLASH_ReadWord:
  3355                           
  3356                           	psect	text7
  3357     0478                     __ptext7:	
  3358 ;; *************** function _getSensorBoardType *****************
  3359 ;; Defined at:
  3360 ;;		line 35 in file "sensor.c"
  3361 ;; Parameters:    Size  Location     Type
  3362 ;;		None
  3363 ;; Auto vars:     Size  Location     Type
  3364 ;;		None
  3365 ;; Return value:  Size  Location     Type
  3366 ;;                  1    wreg      unsigned char 
  3367 ;; Registers used:
  3368 ;;		wreg, status,2, status,0
  3369 ;; Tracked objects:
  3370 ;;		On entry : 0/0
  3371 ;;		On exit  : 0/0
  3372 ;;		Unchanged: 0/0
  3373 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3374 ;;      Params:         0       0       0       0
  3375 ;;      Locals:         0       0       0       0
  3376 ;;      Temps:          2       0       0       0
  3377 ;;      Totals:         2       0       0       0
  3378 ;;Total ram usage:        2 bytes
  3379 ;; Hardware stack levels used: 1
  3380 ;; Hardware stack levels required when called: 5
  3381 ;; This function calls:
  3382 ;;		Nothing
  3383 ;; This function is called by:
  3384 ;;		_main
  3385 ;; This function uses a non-reentrant model
  3386 ;;
  3387                           
  3388     0478                     _getSensorBoardType:	
  3389                           ;psect for function _getSensorBoardType
  3390                           
  3391     0478                     l2016:	
  3392                           ;incstack = 0
  3393                           ; Regs used in _getSensorBoardType: [wreg+status,2+status,0]
  3394                           
  3395                           
  3396                           ;sensor.c: 37:     return (((PORTC & 0x3C)) >>2 | (PORTA & 0x30));
  3397     0478  3030               	movlw	48
  3398     0479  0140               	movlb	0	; select bank0
  3399     047A  050C               	andwf	12,w	;volatile
  3400     047B  00F3               	movwf	??_getSensorBoardType
  3401     047C  080E               	movf	14,w	;volatile
  3402     047D  00F4               	movwf	??_getSensorBoardType+1
  3403     047E  3002               	movlw	2
  3404     047F                     u625:
  3405     047F  36F4               	lsrf	??_getSensorBoardType+1,f
  3406     0480  0B89               	decfsz	9,f
  3407     0481  2C7F               	goto	u625
  3408     0482  0874               	movf	??_getSensorBoardType+1,w
  3409     0483  390F               	andlw	15
  3410     0484  0473               	iorwf	??_getSensorBoardType,w
  3411     0485                     l48:
  3412     0485  0008               	return
  3413     0486                     __end_of_getSensorBoardType:
  3414                           
  3415                           	psect	text8
  3416     051C                     __ptext8:	
  3417 ;; *************** function _error_signal *****************
  3418 ;; Defined at:
  3419 ;;		line 53 in file "sensor.c"
  3420 ;; Parameters:    Size  Location     Type
  3421 ;;		None
  3422 ;; Auto vars:     Size  Location     Type
  3423 ;;		None
  3424 ;; Return value:  Size  Location     Type
  3425 ;;                  1    wreg      void 
  3426 ;; Registers used:
  3427 ;;		None
  3428 ;; Tracked objects:
  3429 ;;		On entry : 0/0
  3430 ;;		On exit  : 0/0
  3431 ;;		Unchanged: 0/0
  3432 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3433 ;;      Params:         0       0       0       0
  3434 ;;      Locals:         0       0       0       0
  3435 ;;      Temps:          0       0       0       0
  3436 ;;      Totals:         0       0       0       0
  3437 ;;Total ram usage:        0 bytes
  3438 ;; Hardware stack levels used: 1
  3439 ;; Hardware stack levels required when called: 5
  3440 ;; This function calls:
  3441 ;;		Nothing
  3442 ;; This function is called by:
  3443 ;;		_main
  3444 ;; This function uses a non-reentrant model
  3445 ;;
  3446                           
  3447     051C                     _error_signal:	
  3448                           ;psect for function _error_signal
  3449                           
  3450     051C                     l2032:	
  3451                           ;incstack = 0
  3452                           ; Regs used in _error_signal: []
  3453                           
  3454                           
  3455                           ;sensor.c: 55:     error_flag = 1;
  3456     051C  0140               	movlb	0	; select bank0
  3457     051D  01B8               	clrf	_error_flag
  3458     051E  0AB8               	incf	_error_flag,f
  3459     051F                     l56:
  3460     051F  0008               	return
  3461     0520                     __end_of_error_signal:
  3462                           
  3463                           	psect	text9
  3464     0449                     __ptext9:	
  3465 ;; *************** function _SensorBoardType_validation *****************
  3466 ;; Defined at:
  3467 ;;		line 40 in file "sensor.c"
  3468 ;; Parameters:    Size  Location     Type
  3469 ;;  SensorBoardT    1    wreg     unsigned char 
  3470 ;; Auto vars:     Size  Location     Type
  3471 ;;  SensorBoardT    1    3[COMMON] unsigned char 
  3472 ;; Return value:  Size  Location     Type
  3473 ;;                  1    wreg      unsigned char 
  3474 ;; Registers used:
  3475 ;;		wreg, status,2, status,0
  3476 ;; Tracked objects:
  3477 ;;		On entry : 0/0
  3478 ;;		On exit  : 0/0
  3479 ;;		Unchanged: 0/0
  3480 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3481 ;;      Params:         0       0       0       0
  3482 ;;      Locals:         1       0       0       0
  3483 ;;      Temps:          0       0       0       0
  3484 ;;      Totals:         1       0       0       0
  3485 ;;Total ram usage:        1 bytes
  3486 ;; Hardware stack levels used: 1
  3487 ;; Hardware stack levels required when called: 5
  3488 ;; This function calls:
  3489 ;;		Nothing
  3490 ;; This function is called by:
  3491 ;;		_main
  3492 ;; This function uses a non-reentrant model
  3493 ;;
  3494                           
  3495     0449                     _SensorBoardType_validation:	
  3496                           ;psect for function _SensorBoardType_validation
  3497                           
  3498                           
  3499                           ;incstack = 0
  3500                           ; Regs used in _SensorBoardType_validation: [wreg+status,2+status,0]
  3501                           ;SensorBoardType_validation@SensorBoardType stored from wreg
  3502     0449  00F3               	movwf	SensorBoardType_validation@SensorBoardType
  3503     044A                     l2020:
  3504                           
  3505                           ;sensor.c: 40: uint8_t SensorBoardType_validation (uint8_t SensorBoardType);sensor.c: 41
      +                          : {;sensor.c: 42:     if(SensorBoardType>=1)
  3506     044A  0873               	movf	SensorBoardType_validation@SensorBoardType,w
  3507     044B  1903               	btfsc	3,2
  3508     044C  2C4E               	goto	u631
  3509     044D  2C4F               	goto	u630
  3510     044E                     u631:
  3511     044E  2C57               	goto	l2028
  3512     044F                     u630:
  3513     044F                     l2022:
  3514                           
  3515                           ;sensor.c: 43:     {;sensor.c: 44:         if(SensorBoardType<=12)
  3516     044F  300D               	movlw	13
  3517     0450  0273               	subwf	SensorBoardType_validation@SensorBoardType,w
  3518     0451  1803               	skipnc
  3519     0452  2C54               	goto	u641
  3520     0453  2C55               	goto	u640
  3521     0454                     u641:
  3522     0454  2C57               	goto	l2028
  3523     0455                     u640:
  3524     0455                     l2024:
  3525                           
  3526                           ;sensor.c: 45:         {;sensor.c: 46:             return(1);
  3527     0455  3001               	movlw	1
  3528     0456  2C58               	goto	l53
  3529     0457                     l2028:
  3530                           
  3531                           ;sensor.c: 50:     return(0);
  3532     0457  3000               	movlw	0
  3533     0458                     l53:
  3534     0458  0008               	return
  3535     0459                     __end_of_SensorBoardType_validation:
  3536                           
  3537                           	psect	text10
  3538     0459                     __ptext10:	
  3539 ;; *************** function _SYSTEM_Initialize *****************
  3540 ;; Defined at:
  3541 ;;		line 50 in file "mcc_generated_files/mcc.c"
  3542 ;; Parameters:    Size  Location     Type
  3543 ;;		None
  3544 ;; Auto vars:     Size  Location     Type
  3545 ;;		None
  3546 ;; Return value:  Size  Location     Type
  3547 ;;                  1    wreg      void 
  3548 ;; Registers used:
  3549 ;;		wreg, status,2, status,0, pclath, cstack
  3550 ;; Tracked objects:
  3551 ;;		On entry : 0/0
  3552 ;;		On exit  : 0/0
  3553 ;;		Unchanged: 0/0
  3554 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3555 ;;      Params:         0       0       0       0
  3556 ;;      Locals:         0       0       0       0
  3557 ;;      Temps:          0       0       0       0
  3558 ;;      Totals:         0       0       0       0
  3559 ;;Total ram usage:        0 bytes
  3560 ;; Hardware stack levels used: 1
  3561 ;; Hardware stack levels required when called: 7
  3562 ;; This function calls:
  3563 ;;		_I2C1_Initialize
  3564 ;;		_OSCILLATOR_Initialize
  3565 ;;		_PIN_MANAGER_Initialize
  3566 ;;		_TMR0_Initialize
  3567 ;;		_WDT_Initialize
  3568 ;; This function is called by:
  3569 ;;		_main
  3570 ;; This function uses a non-reentrant model
  3571 ;;
  3572                           
  3573     0459                     _SYSTEM_Initialize:	
  3574                           ;psect for function _SYSTEM_Initialize
  3575                           
  3576     0459                     l2086:	
  3577                           ;incstack = 0
  3578                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  3579                           
  3580                           
  3581                           ;mcc_generated_files/mcc.c: 53:     I2C1_Initialize();
  3582     0459  3184  24AE  3184   	fcall	_I2C1_Initialize
  3583                           
  3584                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
  3585     045C  3183  2388  3184   	fcall	_PIN_MANAGER_Initialize
  3586                           
  3587                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
  3588     045F  3184  24D9  3184   	fcall	_OSCILLATOR_Initialize
  3589     0462                     l2088:
  3590                           
  3591                           ;mcc_generated_files/mcc.c: 56:     WDT_Initialize();
  3592     0462  3185  2524  3184   	fcall	_WDT_Initialize
  3593     0465                     l2090:
  3594                           
  3595                           ;mcc_generated_files/mcc.c: 57:     TMR0_Initialize();
  3596     0465  3184  2435  3184   	fcall	_TMR0_Initialize
  3597     0468                     l588:
  3598     0468  0008               	return
  3599     0469                     __end_of_SYSTEM_Initialize:
  3600                           
  3601                           	psect	text11
  3602     0524                     __ptext11:	
  3603 ;; *************** function _WDT_Initialize *****************
  3604 ;; Defined at:
  3605 ;;		line 70 in file "mcc_generated_files/mcc.c"
  3606 ;; Parameters:    Size  Location     Type
  3607 ;;		None
  3608 ;; Auto vars:     Size  Location     Type
  3609 ;;		None
  3610 ;; Return value:  Size  Location     Type
  3611 ;;                  1    wreg      void 
  3612 ;; Registers used:
  3613 ;;		status,2
  3614 ;; Tracked objects:
  3615 ;;		On entry : 0/0
  3616 ;;		On exit  : 0/0
  3617 ;;		Unchanged: 0/0
  3618 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3619 ;;      Params:         0       0       0       0
  3620 ;;      Locals:         0       0       0       0
  3621 ;;      Temps:          0       0       0       0
  3622 ;;      Totals:         0       0       0       0
  3623 ;;Total ram usage:        0 bytes
  3624 ;; Hardware stack levels used: 1
  3625 ;; Hardware stack levels required when called: 5
  3626 ;; This function calls:
  3627 ;;		Nothing
  3628 ;; This function is called by:
  3629 ;;		_SYSTEM_Initialize
  3630 ;; This function uses a non-reentrant model
  3631 ;;
  3632                           
  3633     0524                     _WDT_Initialize:	
  3634                           ;psect for function _WDT_Initialize
  3635                           
  3636     0524                     l1984:	
  3637                           ;incstack = 0
  3638                           ; Regs used in _WDT_Initialize: [status,2]
  3639                           
  3640                           
  3641                           ;mcc_generated_files/mcc.c: 73:     WDTCON = 0x00;
  3642     0524  0150               	movlb	16	; select bank16
  3643     0525  018C               	clrf	12	;volatile
  3644     0526                     l594:
  3645     0526  0008               	return
  3646     0527                     __end_of_WDT_Initialize:
  3647                           
  3648                           	psect	text12
  3649     0435                     __ptext12:	
  3650 ;; *************** function _TMR0_Initialize *****************
  3651 ;; Defined at:
  3652 ;;		line 71 in file "mcc_generated_files/tmr0.c"
  3653 ;; Parameters:    Size  Location     Type
  3654 ;;		None
  3655 ;; Auto vars:     Size  Location     Type
  3656 ;;		None
  3657 ;; Return value:  Size  Location     Type
  3658 ;;                  1    wreg      void 
  3659 ;; Registers used:
  3660 ;;		wreg, status,2, status,0, pclath, cstack
  3661 ;; Tracked objects:
  3662 ;;		On entry : 0/0
  3663 ;;		On exit  : 0/0
  3664 ;;		Unchanged: 0/0
  3665 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3666 ;;      Params:         0       0       0       0
  3667 ;;      Locals:         0       0       0       0
  3668 ;;      Temps:          0       0       0       0
  3669 ;;      Totals:         0       0       0       0
  3670 ;;Total ram usage:        0 bytes
  3671 ;; Hardware stack levels used: 1
  3672 ;; Hardware stack levels required when called: 6
  3673 ;; This function calls:
  3674 ;;		_TMR0_SetInterruptHandler
  3675 ;; This function is called by:
  3676 ;;		_SYSTEM_Initialize
  3677 ;; This function uses a non-reentrant model
  3678 ;;
  3679                           
  3680     0435                     _TMR0_Initialize:	
  3681                           ;psect for function _TMR0_Initialize
  3682                           
  3683     0435                     l1952:	
  3684                           ;incstack = 0
  3685                           ; Regs used in _TMR0_Initialize: [wreg+status,2+status,0+pclath+cstack]
  3686                           
  3687                           
  3688                           ;mcc_generated_files/tmr0.c: 76:     T0CON1 = 0x69;
  3689     0435  3069               	movlw	105
  3690     0436  014B               	movlb	11	; select bank11
  3691     0437  009F               	movwf	31	;volatile
  3692                           
  3693                           ;mcc_generated_files/tmr0.c: 79:     TMR0H = 0x9B;
  3694     0438  309B               	movlw	155
  3695     0439  009D               	movwf	29	;volatile
  3696     043A                     l1954:
  3697                           
  3698                           ;mcc_generated_files/tmr0.c: 82:     TMR0L = 0x00;
  3699     043A  019C               	clrf	28	;volatile
  3700     043B                     l1956:
  3701                           
  3702                           ;mcc_generated_files/tmr0.c: 85:     PIR0bits.TMR0IF = 0;
  3703     043B  014E               	movlb	14	; select bank14
  3704     043C  128C               	bcf	12,5	;volatile
  3705     043D                     l1958:
  3706                           
  3707                           ;mcc_generated_files/tmr0.c: 88:     PIE0bits.TMR0IE = 1;
  3708     043D  1696               	bsf	22,5	;volatile
  3709     043E                     l1960:
  3710                           
  3711                           ;mcc_generated_files/tmr0.c: 91:     TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandl
      +                          er);
  3712     043E  303A               	movlw	low _TMR0_DefaultInterruptHandler
  3713     043F  00F3               	movwf	TMR0_SetInterruptHandler@InterruptHandler
  3714     0440  3003               	movlw	high _TMR0_DefaultInterruptHandler
  3715     0441  00F4               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1
  3716     0442  3184  24D3  3184   	fcall	_TMR0_SetInterruptHandler
  3717     0445                     l1962:
  3718                           
  3719                           ;mcc_generated_files/tmr0.c: 94:     T0CON0 = 0x80;
  3720     0445  3080               	movlw	128
  3721     0446  014B               	movlb	11	; select bank11
  3722     0447  009E               	movwf	30	;volatile
  3723     0448                     l459:
  3724     0448  0008               	return
  3725     0449                     __end_of_TMR0_Initialize:
  3726                           
  3727                           	psect	text13
  3728     04D3                     __ptext13:	
  3729 ;; *************** function _TMR0_SetInterruptHandler *****************
  3730 ;; Defined at:
  3731 ;;		line 146 in file "mcc_generated_files/tmr0.c"
  3732 ;; Parameters:    Size  Location     Type
  3733 ;;  InterruptHan    2    3[COMMON] PTR FTN()void 
  3734 ;;		 -> TMR0_DefaultInterruptHandler(1), 
  3735 ;; Auto vars:     Size  Location     Type
  3736 ;;		None
  3737 ;; Return value:  Size  Location     Type
  3738 ;;                  1    wreg      void 
  3739 ;; Registers used:
  3740 ;;		wreg
  3741 ;; Tracked objects:
  3742 ;;		On entry : 0/0
  3743 ;;		On exit  : 0/0
  3744 ;;		Unchanged: 0/0
  3745 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3746 ;;      Params:         2       0       0       0
  3747 ;;      Locals:         0       0       0       0
  3748 ;;      Temps:          0       0       0       0
  3749 ;;      Totals:         2       0       0       0
  3750 ;;Total ram usage:        2 bytes
  3751 ;; Hardware stack levels used: 1
  3752 ;; Hardware stack levels required when called: 5
  3753 ;; This function calls:
  3754 ;;		Nothing
  3755 ;; This function is called by:
  3756 ;;		_TMR0_Initialize
  3757 ;; This function uses a non-reentrant model
  3758 ;;
  3759                           
  3760     04D3                     _TMR0_SetInterruptHandler:	
  3761                           ;psect for function _TMR0_SetInterruptHandler
  3762                           
  3763     04D3                     l1774:	
  3764                           ;incstack = 0
  3765                           ; Regs used in _TMR0_SetInterruptHandler: [wreg]
  3766                           
  3767                           
  3768                           ;mcc_generated_files/tmr0.c: 147:     TMR0_InterruptHandler = InterruptHandler;
  3769     04D3  0874               	movf	TMR0_SetInterruptHandler@InterruptHandler+1,w
  3770     04D4  0140               	movlb	0	; select bank0
  3771     04D5  00D3               	movwf	_TMR0_InterruptHandler+1
  3772     04D6  0873               	movf	TMR0_SetInterruptHandler@InterruptHandler,w
  3773     04D7  00D2               	movwf	_TMR0_InterruptHandler
  3774     04D8                     l481:
  3775     04D8  0008               	return
  3776     04D9                     __end_of_TMR0_SetInterruptHandler:
  3777                           
  3778                           	psect	text14
  3779     0388                     __ptext14:	
  3780 ;; *************** function _PIN_MANAGER_Initialize *****************
  3781 ;; Defined at:
  3782 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  3783 ;; Parameters:    Size  Location     Type
  3784 ;;		None
  3785 ;; Auto vars:     Size  Location     Type
  3786 ;;		None
  3787 ;; Return value:  Size  Location     Type
  3788 ;;                  1    wreg      void 
  3789 ;; Registers used:
  3790 ;;		wreg, status,2
  3791 ;; Tracked objects:
  3792 ;;		On entry : 0/0
  3793 ;;		On exit  : 0/0
  3794 ;;		Unchanged: 0/0
  3795 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3796 ;;      Params:         0       0       0       0
  3797 ;;      Locals:         0       0       0       0
  3798 ;;      Temps:          0       0       0       0
  3799 ;;      Totals:         0       0       0       0
  3800 ;;Total ram usage:        0 bytes
  3801 ;; Hardware stack levels used: 1
  3802 ;; Hardware stack levels required when called: 5
  3803 ;; This function calls:
  3804 ;;		Nothing
  3805 ;; This function is called by:
  3806 ;;		_SYSTEM_Initialize
  3807 ;; This function uses a non-reentrant model
  3808 ;;
  3809                           
  3810     0388                     _PIN_MANAGER_Initialize:	
  3811                           ;psect for function _PIN_MANAGER_Initialize
  3812                           
  3813     0388                     l1844:	
  3814                           ;incstack = 0
  3815                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  3816                           
  3817                           
  3818                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
  3819     0388  0140               	movlb	0	; select bank0
  3820     0389  0198               	clrf	24	;volatile
  3821                           
  3822                           ;mcc_generated_files/pin_manager.c: 61:     LATC = 0x00;
  3823     038A  019A               	clrf	26	;volatile
  3824     038B                     l1846:
  3825                           
  3826                           ;mcc_generated_files/pin_manager.c: 66:     TRISA = 0x3B;
  3827     038B  303B               	movlw	59
  3828     038C  0092               	movwf	18	;volatile
  3829     038D                     l1848:
  3830                           
  3831                           ;mcc_generated_files/pin_manager.c: 67:     TRISC = 0x3F;
  3832     038D  303F               	movlw	63
  3833     038E  0094               	movwf	20	;volatile
  3834                           
  3835                           ;mcc_generated_files/pin_manager.c: 72:     ANSELC = 0x00;
  3836     038F  017E               	movlb	62	; select bank62
  3837     0390  01CE               	clrf	78	;volatile
  3838     0391                     l1850:
  3839                           
  3840                           ;mcc_generated_files/pin_manager.c: 73:     ANSELA = 0x07;
  3841     0391  3007               	movlw	7
  3842     0392  00B8               	movwf	56	;volatile
  3843     0393                     l1852:
  3844                           
  3845                           ;mcc_generated_files/pin_manager.c: 78:     WPUA = 0x00;
  3846     0393  01B9               	clrf	57	;volatile
  3847     0394                     l1854:
  3848                           
  3849                           ;mcc_generated_files/pin_manager.c: 79:     WPUC = 0x00;
  3850     0394  01CF               	clrf	79	;volatile
  3851     0395                     l1856:
  3852                           
  3853                           ;mcc_generated_files/pin_manager.c: 84:     ODCONA = 0x00;
  3854     0395  01BA               	clrf	58	;volatile
  3855     0396                     l1858:
  3856                           
  3857                           ;mcc_generated_files/pin_manager.c: 85:     ODCONC = 0x00;
  3858     0396  01D0               	clrf	80	;volatile
  3859     0397                     l1860:
  3860                           
  3861                           ;mcc_generated_files/pin_manager.c: 90:     SLRCONA = 0x37;
  3862     0397  3037               	movlw	55
  3863     0398  00BB               	movwf	59	;volatile
  3864     0399                     l1862:
  3865                           
  3866                           ;mcc_generated_files/pin_manager.c: 91:     SLRCONC = 0x3F;
  3867     0399  303F               	movlw	63
  3868     039A  00D1               	movwf	81	;volatile
  3869     039B                     l1864:
  3870                           
  3871                           ;mcc_generated_files/pin_manager.c: 96:     INLVLA = 0x3F;
  3872     039B  303F               	movlw	63
  3873     039C  00BC               	movwf	60	;volatile
  3874     039D                     l1866:
  3875                           
  3876                           ;mcc_generated_files/pin_manager.c: 97:     INLVLC = 0x3F;
  3877     039D  303F               	movlw	63
  3878     039E  00D2               	movwf	82	;volatile
  3879     039F                     l1868:
  3880                           
  3881                           ;mcc_generated_files/pin_manager.c: 106:     RC0PPS = 0x07;
  3882     039F  3007               	movlw	7
  3883     03A0  00A0               	movwf	32	;volatile
  3884     03A1                     l1870:
  3885                           
  3886                           ;mcc_generated_files/pin_manager.c: 107:     SSP1CLKPPS = 0x10;
  3887     03A1  3010               	movlw	16
  3888     03A2  017D               	movlb	61	; select bank61
  3889     03A3  00C5               	movwf	69	;volatile
  3890     03A4                     l1872:
  3891                           
  3892                           ;mcc_generated_files/pin_manager.c: 108:     RC1PPS = 0x08;
  3893     03A4  3008               	movlw	8
  3894     03A5  017E               	movlb	62	; select bank62
  3895     03A6  00A1               	movwf	33	;volatile
  3896     03A7                     l1874:
  3897                           
  3898                           ;mcc_generated_files/pin_manager.c: 109:     SSP1DATPPS = 0x11;
  3899     03A7  3011               	movlw	17
  3900     03A8  017D               	movlb	61	; select bank61
  3901     03A9  00C6               	movwf	70	;volatile
  3902     03AA                     l95:
  3903     03AA  0008               	return
  3904     03AB                     __end_of_PIN_MANAGER_Initialize:
  3905                           
  3906                           	psect	text15
  3907     04D9                     __ptext15:	
  3908 ;; *************** function _OSCILLATOR_Initialize *****************
  3909 ;; Defined at:
  3910 ;;		line 60 in file "mcc_generated_files/mcc.c"
  3911 ;; Parameters:    Size  Location     Type
  3912 ;;		None
  3913 ;; Auto vars:     Size  Location     Type
  3914 ;;		None
  3915 ;; Return value:  Size  Location     Type
  3916 ;;                  1    wreg      void 
  3917 ;; Registers used:
  3918 ;;		wreg, status,2
  3919 ;; Tracked objects:
  3920 ;;		On entry : 0/0
  3921 ;;		On exit  : 0/0
  3922 ;;		Unchanged: 0/0
  3923 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3924 ;;      Params:         0       0       0       0
  3925 ;;      Locals:         0       0       0       0
  3926 ;;      Temps:          0       0       0       0
  3927 ;;      Totals:         0       0       0       0
  3928 ;;Total ram usage:        0 bytes
  3929 ;; Hardware stack levels used: 1
  3930 ;; Hardware stack levels required when called: 5
  3931 ;; This function calls:
  3932 ;;		Nothing
  3933 ;; This function is called by:
  3934 ;;		_SYSTEM_Initialize
  3935 ;; This function uses a non-reentrant model
  3936 ;;
  3937                           
  3938     04D9                     _OSCILLATOR_Initialize:	
  3939                           ;psect for function _OSCILLATOR_Initialize
  3940                           
  3941     04D9                     l1978:	
  3942                           ;incstack = 0
  3943                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  3944                           
  3945                           
  3946                           ;mcc_generated_files/mcc.c: 63:     OSCEN = 0x00;
  3947     04D9  0151               	movlb	17	; select bank17
  3948     04DA  0191               	clrf	17	;volatile
  3949     04DB                     l1980:
  3950                           
  3951                           ;mcc_generated_files/mcc.c: 65:     OSCFRQ = 0x03;
  3952     04DB  3003               	movlw	3
  3953     04DC  0093               	movwf	19	;volatile
  3954     04DD                     l1982:
  3955                           
  3956                           ;mcc_generated_files/mcc.c: 67:     OSCTUNE = 0x00;
  3957     04DD  0192               	clrf	18	;volatile
  3958     04DE                     l591:
  3959     04DE  0008               	return
  3960     04DF                     __end_of_OSCILLATOR_Initialize:
  3961                           
  3962                           	psect	text16
  3963     04AE                     __ptext16:	
  3964 ;; *************** function _I2C1_Initialize *****************
  3965 ;; Defined at:
  3966 ;;		line 112 in file "mcc_generated_files/i2c1_slave.c"
  3967 ;; Parameters:    Size  Location     Type
  3968 ;;		None
  3969 ;; Auto vars:     Size  Location     Type
  3970 ;;		None
  3971 ;; Return value:  Size  Location     Type
  3972 ;;                  1    wreg      void 
  3973 ;; Registers used:
  3974 ;;		wreg, status,2, status,0
  3975 ;; Tracked objects:
  3976 ;;		On entry : 0/0
  3977 ;;		On exit  : 0/0
  3978 ;;		Unchanged: 0/0
  3979 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3980 ;;      Params:         0       0       0       0
  3981 ;;      Locals:         0       0       0       0
  3982 ;;      Temps:          1       0       0       0
  3983 ;;      Totals:         1       0       0       0
  3984 ;;Total ram usage:        1 bytes
  3985 ;; Hardware stack levels used: 1
  3986 ;; Hardware stack levels required when called: 5
  3987 ;; This function calls:
  3988 ;;		Nothing
  3989 ;; This function is called by:
  3990 ;;		_SYSTEM_Initialize
  3991 ;;		_I2C1_Enable
  3992 ;; This function uses a non-reentrant model
  3993 ;;
  3994                           
  3995     04AE                     _I2C1_Initialize:	
  3996                           ;psect for function _I2C1_Initialize
  3997                           
  3998     04AE                     l1876:	
  3999                           ;incstack = 0
  4000                           ; Regs used in _I2C1_Initialize: [wreg+status,2+status,0]
  4001                           
  4002                           
  4003                           ;mcc_generated_files/i2c1_slave.c: 114:     SSP1STAT = 0x40;
  4004     04AE  3040               	movlw	64
  4005     04AF  0143               	movlb	3	; select bank3
  4006     04B0  008F               	movwf	15	;volatile
  4007     04B1                     l1878:
  4008                           
  4009                           ;mcc_generated_files/i2c1_slave.c: 115:     SSP1CON1 |= 0x06;
  4010     04B1  3006               	movlw	6
  4011     04B2  00F3               	movwf	??_I2C1_Initialize
  4012     04B3  0873               	movf	??_I2C1_Initialize,w
  4013     04B4  0490               	iorwf	16,f	;volatile
  4014     04B5                     l1880:
  4015                           
  4016                           ;mcc_generated_files/i2c1_slave.c: 116:     SSP1CON2 = 0x00;
  4017     04B5  0191               	clrf	17	;volatile
  4018     04B6                     l1882:
  4019                           
  4020                           ;mcc_generated_files/i2c1_slave.c: 117:     SSP1CON1bits.SSPEN = 0;
  4021     04B6  1290               	bcf	16,5	;volatile
  4022     04B7                     l268:
  4023     04B7  0008               	return
  4024     04B8                     __end_of_I2C1_Initialize:
  4025                           
  4026                           	psect	text17
  4027     0301                     __ptext17:	
  4028 ;; *************** function _I2C1_Open *****************
  4029 ;; Defined at:
  4030 ;;		line 120 in file "mcc_generated_files/i2c1_slave.c"
  4031 ;; Parameters:    Size  Location     Type
  4032 ;;		None
  4033 ;; Auto vars:     Size  Location     Type
  4034 ;;		None
  4035 ;; Return value:  Size  Location     Type
  4036 ;;                  1    wreg      void 
  4037 ;; Registers used:
  4038 ;;		wreg, status,2, status,0, pclath, cstack
  4039 ;; Tracked objects:
  4040 ;;		On entry : 0/0
  4041 ;;		On exit  : 0/0
  4042 ;;		Unchanged: 0/0
  4043 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4044 ;;      Params:         0       0       0       0
  4045 ;;      Locals:         0       0       0       0
  4046 ;;      Temps:          0       0       0       0
  4047 ;;      Totals:         0       0       0       0
  4048 ;;Total ram usage:        0 bytes
  4049 ;; Hardware stack levels used: 1
  4050 ;; Hardware stack levels required when called: 6
  4051 ;; This function calls:
  4052 ;;		_I2C1_SlaveEnableIrq
  4053 ;;		_I2C1_SlaveOpen
  4054 ;;		_I2C1_SlaveSetAddrIntHandler
  4055 ;;		_I2C1_SlaveSetBusColIntHandler
  4056 ;;		_I2C1_SlaveSetIsrHandler
  4057 ;;		_I2C1_SlaveSetReadIntHandler
  4058 ;;		_I2C1_SlaveSetSlaveAddr
  4059 ;;		_I2C1_SlaveSetSlaveMask
  4060 ;;		_I2C1_SlaveSetWrColIntHandler
  4061 ;;		_I2C1_SlaveSetWriteIntHandler
  4062 ;; This function is called by:
  4063 ;;		_main
  4064 ;; This function uses a non-reentrant model
  4065 ;;
  4066                           
  4067     0301                     _I2C1_Open:	
  4068                           ;psect for function _I2C1_Open
  4069                           
  4070     0301                     l2040:	
  4071                           ;incstack = 0
  4072                           ; Regs used in _I2C1_Open: [wreg+status,2+status,0+pclath+cstack]
  4073                           
  4074                           
  4075                           ;mcc_generated_files/i2c1_slave.c: 122:     I2C1_SlaveOpen();
  4076     0301  3184  2486  3183   	fcall	_I2C1_SlaveOpen
  4077                           
  4078                           ;mcc_generated_files/i2c1_slave.c: 123:     I2C1_SlaveSetSlaveAddr(0x77);
  4079     0304  3077               	movlw	119
  4080     0305  3185  2508  3183   	fcall	_I2C1_SlaveSetSlaveAddr
  4081                           
  4082                           ;mcc_generated_files/i2c1_slave.c: 124:     I2C1_SlaveSetSlaveMask(0);
  4083     0308  3000               	movlw	0
  4084     0309  3185  2503  3183   	fcall	_I2C1_SlaveSetSlaveMask
  4085                           
  4086                           ;mcc_generated_files/i2c1_slave.c: 125:     I2C1_SlaveSetIsrHandler(I2C1_Isr);
  4087     030C  30EA               	movlw	low _I2C1_Isr
  4088     030D  00F3               	movwf	I2C1_SlaveSetIsrHandler@handler
  4089     030E  3001               	movlw	high _I2C1_Isr
  4090     030F  00F4               	movwf	I2C1_SlaveSetIsrHandler@handler+1
  4091     0310  3184  24F1  3183   	fcall	_I2C1_SlaveSetIsrHandler
  4092                           
  4093                           ;mcc_generated_files/i2c1_slave.c: 126:     I2C1_SlaveSetBusColIntHandler(I2C1_SlaveDefB
      +                          usColInterruptHandler);
  4094     0313  3000               	movlw	0
  4095     0314  00F3               	movwf	I2C1_SlaveSetBusColIntHandler@handler
  4096     0315  3000               	movlw	0
  4097     0316  00F4               	movwf	I2C1_SlaveSetBusColIntHandler@handler+1
  4098     0317  3184  24F7  3183   	fcall	_I2C1_SlaveSetBusColIntHandler
  4099                           
  4100                           ;mcc_generated_files/i2c1_slave.c: 127:     I2C1_SlaveSetWriteIntHandler(I2C1_SlaveDefWr
      +                          InterruptHandler);
  4101     031A  300D               	movlw	low _I2C1_SlaveDefWrInterruptHandler
  4102     031B  00F3               	movwf	I2C1_SlaveSetWriteIntHandler@handler
  4103     031C  3005               	movlw	high _I2C1_SlaveDefWrInterruptHandler
  4104     031D  00F4               	movwf	I2C1_SlaveSetWriteIntHandler@handler+1
  4105     031E  3184  24DF  3183   	fcall	_I2C1_SlaveSetWriteIntHandler
  4106                           
  4107                           ;mcc_generated_files/i2c1_slave.c: 128:     I2C1_SlaveSetReadIntHandler(I2C1_SlaveDefRdI
      +                          nterruptHandler);
  4108     0321  30E9               	movlw	low _I2C1_SlaveDefRdInterruptHandler
  4109     0322  00F3               	movwf	I2C1_SlaveSetReadIntHandler@handler
  4110     0323  3003               	movlw	high _I2C1_SlaveDefRdInterruptHandler
  4111     0324  00F4               	movwf	I2C1_SlaveSetReadIntHandler@handler+1
  4112     0325  3184  24EB  3183   	fcall	_I2C1_SlaveSetReadIntHandler
  4113                           
  4114                           ;mcc_generated_files/i2c1_slave.c: 129:     I2C1_SlaveSetAddrIntHandler(I2C1_SlaveDefAdd
      +                          rInterruptHandler);
  4115     0328  30C6               	movlw	low _I2C1_SlaveDefAddrInterruptHandler
  4116     0329  00F3               	movwf	I2C1_SlaveSetAddrIntHandler@handler
  4117     032A  3004               	movlw	high _I2C1_SlaveDefAddrInterruptHandler
  4118     032B  00F4               	movwf	I2C1_SlaveSetAddrIntHandler@handler+1
  4119     032C  3184  24FD  3183   	fcall	_I2C1_SlaveSetAddrIntHandler
  4120                           
  4121                           ;mcc_generated_files/i2c1_slave.c: 130:     I2C1_SlaveSetWrColIntHandler(I2C1_SlaveDefWr
      +                          ColInterruptHandler);
  4122     032F  3000               	movlw	0
  4123     0330  00F3               	movwf	I2C1_SlaveSetWrColIntHandler@handler
  4124     0331  3000               	movlw	0
  4125     0332  00F4               	movwf	I2C1_SlaveSetWrColIntHandler@handler+1
  4126     0333  3184  24E5  3183   	fcall	_I2C1_SlaveSetWrColIntHandler
  4127     0336                     l2042:
  4128                           
  4129                           ;mcc_generated_files/i2c1_slave.c: 131:     I2C1_SlaveEnableIrq();
  4130     0336  3185  2527  3183   	fcall	_I2C1_SlaveEnableIrq
  4131     0339                     l271:
  4132     0339  0008               	return
  4133     033A                     __end_of_I2C1_Open:
  4134                           
  4135                           	psect	text18
  4136     04DF                     __ptext18:	
  4137 ;; *************** function _I2C1_SlaveSetWriteIntHandler *****************
  4138 ;; Defined at:
  4139 ;;		line 277 in file "mcc_generated_files/i2c1_slave.c"
  4140 ;; Parameters:    Size  Location     Type
  4141 ;;  handler         2    3[COMMON] PTR FTN()void 
  4142 ;;		 -> I2C1_SlaveDefWrInterruptHandler(1), 
  4143 ;; Auto vars:     Size  Location     Type
  4144 ;;		None
  4145 ;; Return value:  Size  Location     Type
  4146 ;;                  1    wreg      void 
  4147 ;; Registers used:
  4148 ;;		wreg
  4149 ;; Tracked objects:
  4150 ;;		On entry : 0/0
  4151 ;;		On exit  : 0/0
  4152 ;;		Unchanged: 0/0
  4153 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4154 ;;      Params:         2       0       0       0
  4155 ;;      Locals:         0       0       0       0
  4156 ;;      Temps:          0       0       0       0
  4157 ;;      Totals:         2       0       0       0
  4158 ;;Total ram usage:        2 bytes
  4159 ;; Hardware stack levels used: 1
  4160 ;; Hardware stack levels required when called: 5
  4161 ;; This function calls:
  4162 ;;		Nothing
  4163 ;; This function is called by:
  4164 ;;		_I2C1_Open
  4165 ;; This function uses a non-reentrant model
  4166 ;;
  4167                           
  4168     04DF                     _I2C1_SlaveSetWriteIntHandler:	
  4169                           ;psect for function _I2C1_SlaveSetWriteIntHandler
  4170                           
  4171     04DF                     l1904:	
  4172                           ;incstack = 0
  4173                           ; Regs used in _I2C1_SlaveSetWriteIntHandler: [wreg]
  4174                           
  4175                           
  4176                           ;mcc_generated_files/i2c1_slave.c: 278:     I2C1_SlaveWrInterruptHandler = handler;
  4177     04DF  0874               	movf	I2C1_SlaveSetWriteIntHandler@handler+1,w
  4178     04E0  0140               	movlb	0	; select bank0
  4179     04E1  00AC               	movwf	_I2C1_SlaveWrInterruptHandler+1
  4180     04E2  0873               	movf	I2C1_SlaveSetWriteIntHandler@handler,w
  4181     04E3  00AB               	movwf	_I2C1_SlaveWrInterruptHandler
  4182     04E4                     l330:
  4183     04E4  0008               	return
  4184     04E5                     __end_of_I2C1_SlaveSetWriteIntHandler:
  4185                           
  4186                           	psect	text19
  4187     04E5                     __ptext19:	
  4188 ;; *************** function _I2C1_SlaveSetWrColIntHandler *****************
  4189 ;; Defined at:
  4190 ;;		line 313 in file "mcc_generated_files/i2c1_slave.c"
  4191 ;; Parameters:    Size  Location     Type
  4192 ;;  handler         2    3[COMMON] PTR FTN()void 
  4193 ;;		 -> I2C1_SlaveDefWrColInterruptHandler(1), 
  4194 ;; Auto vars:     Size  Location     Type
  4195 ;;		None
  4196 ;; Return value:  Size  Location     Type
  4197 ;;                  1    wreg      void 
  4198 ;; Registers used:
  4199 ;;		wreg
  4200 ;; Tracked objects:
  4201 ;;		On entry : 0/0
  4202 ;;		On exit  : 0/0
  4203 ;;		Unchanged: 0/0
  4204 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4205 ;;      Params:         2       0       0       0
  4206 ;;      Locals:         0       0       0       0
  4207 ;;      Temps:          0       0       0       0
  4208 ;;      Totals:         2       0       0       0
  4209 ;;Total ram usage:        2 bytes
  4210 ;; Hardware stack levels used: 1
  4211 ;; Hardware stack levels required when called: 5
  4212 ;; This function calls:
  4213 ;;		Nothing
  4214 ;; This function is called by:
  4215 ;;		_I2C1_Open
  4216 ;; This function uses a non-reentrant model
  4217 ;;
  4218                           
  4219     04E5                     _I2C1_SlaveSetWrColIntHandler:	
  4220                           ;psect for function _I2C1_SlaveSetWrColIntHandler
  4221                           
  4222     04E5                     l1910:	
  4223                           ;incstack = 0
  4224                           ; Regs used in _I2C1_SlaveSetWrColIntHandler: [wreg]
  4225                           
  4226                           
  4227                           ;mcc_generated_files/i2c1_slave.c: 314:     I2C1_SlaveWrColInterruptHandler = handler;
  4228     04E5  0874               	movf	I2C1_SlaveSetWrColIntHandler@handler+1,w
  4229     04E6  0140               	movlb	0	; select bank0
  4230     04E7  00A6               	movwf	_I2C1_SlaveWrColInterruptHandler+1
  4231     04E8  0873               	movf	I2C1_SlaveSetWrColIntHandler@handler,w
  4232     04E9  00A5               	movwf	_I2C1_SlaveWrColInterruptHandler
  4233     04EA                     l350:
  4234     04EA  0008               	return
  4235     04EB                     __end_of_I2C1_SlaveSetWrColIntHandler:
  4236                           
  4237                           	psect	text20
  4238     0503                     __ptext20:	
  4239 ;; *************** function _I2C1_SlaveSetSlaveMask *****************
  4240 ;; Defined at:
  4241 ;;		line 370 in file "mcc_generated_files/i2c1_slave.c"
  4242 ;; Parameters:    Size  Location     Type
  4243 ;;  maskAddr        1    wreg     unsigned char 
  4244 ;; Auto vars:     Size  Location     Type
  4245 ;;  maskAddr        1    3[COMMON] unsigned char 
  4246 ;; Return value:  Size  Location     Type
  4247 ;;                  1    wreg      void 
  4248 ;; Registers used:
  4249 ;;		wreg, status,2, status,0
  4250 ;; Tracked objects:
  4251 ;;		On entry : 0/0
  4252 ;;		On exit  : 0/0
  4253 ;;		Unchanged: 0/0
  4254 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4255 ;;      Params:         0       0       0       0
  4256 ;;      Locals:         1       0       0       0
  4257 ;;      Temps:          0       0       0       0
  4258 ;;      Totals:         1       0       0       0
  4259 ;;Total ram usage:        1 bytes
  4260 ;; Hardware stack levels used: 1
  4261 ;; Hardware stack levels required when called: 5
  4262 ;; This function calls:
  4263 ;;		Nothing
  4264 ;; This function is called by:
  4265 ;;		_I2C1_Open
  4266 ;; This function uses a non-reentrant model
  4267 ;;
  4268                           
  4269     0503                     _I2C1_SlaveSetSlaveMask:	
  4270                           ;psect for function _I2C1_SlaveSetSlaveMask
  4271                           
  4272                           
  4273                           ;incstack = 0
  4274                           ; Regs used in _I2C1_SlaveSetSlaveMask: [wreg+status,2+status,0]
  4275                           ;I2C1_SlaveSetSlaveMask@maskAddr stored from wreg
  4276     0503  00F3               	movwf	I2C1_SlaveSetSlaveMask@maskAddr
  4277     0504                     l1898:
  4278                           
  4279                           ;mcc_generated_files/i2c1_slave.c: 370: static __attribute__((inline)) void I2C1_SlaveSe
      +                          tSlaveMask(uint8_t maskAddr);mcc_generated_files/i2c1_slave.c: 371: {;mcc_generated_file
      +                          s/i2c1_slave.c: 372:     SSP1MSK = (uint8_t) (maskAddr << 1);
  4280     0504  3573               	lslf	I2C1_SlaveSetSlaveMask@maskAddr,w
  4281     0505  0143               	movlb	3	; select bank3
  4282     0506  008E               	movwf	14	;volatile
  4283     0507                     l380:
  4284     0507  0008               	return
  4285     0508                     __end_of_I2C1_SlaveSetSlaveMask:
  4286                           
  4287                           	psect	text21
  4288     0508                     __ptext21:	
  4289 ;; *************** function _I2C1_SlaveSetSlaveAddr *****************
  4290 ;; Defined at:
  4291 ;;		line 365 in file "mcc_generated_files/i2c1_slave.c"
  4292 ;; Parameters:    Size  Location     Type
  4293 ;;  slaveAddr       1    wreg     unsigned char 
  4294 ;; Auto vars:     Size  Location     Type
  4295 ;;  slaveAddr       1    3[COMMON] unsigned char 
  4296 ;; Return value:  Size  Location     Type
  4297 ;;                  1    wreg      void 
  4298 ;; Registers used:
  4299 ;;		wreg, status,2, status,0
  4300 ;; Tracked objects:
  4301 ;;		On entry : 0/0
  4302 ;;		On exit  : 0/0
  4303 ;;		Unchanged: 0/0
  4304 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4305 ;;      Params:         0       0       0       0
  4306 ;;      Locals:         1       0       0       0
  4307 ;;      Temps:          0       0       0       0
  4308 ;;      Totals:         1       0       0       0
  4309 ;;Total ram usage:        1 bytes
  4310 ;; Hardware stack levels used: 1
  4311 ;; Hardware stack levels required when called: 5
  4312 ;; This function calls:
  4313 ;;		Nothing
  4314 ;; This function is called by:
  4315 ;;		_I2C1_Open
  4316 ;; This function uses a non-reentrant model
  4317 ;;
  4318                           
  4319     0508                     _I2C1_SlaveSetSlaveAddr:	
  4320                           ;psect for function _I2C1_SlaveSetSlaveAddr
  4321                           
  4322                           
  4323                           ;incstack = 0
  4324                           ; Regs used in _I2C1_SlaveSetSlaveAddr: [wreg+status,2+status,0]
  4325                           ;I2C1_SlaveSetSlaveAddr@slaveAddr stored from wreg
  4326     0508  00F3               	movwf	I2C1_SlaveSetSlaveAddr@slaveAddr
  4327     0509                     l1896:
  4328                           
  4329                           ;mcc_generated_files/i2c1_slave.c: 365: static __attribute__((inline)) void I2C1_SlaveSe
      +                          tSlaveAddr(uint8_t slaveAddr);mcc_generated_files/i2c1_slave.c: 366: {;mcc_generated_fil
      +                          es/i2c1_slave.c: 367:     SSP1ADD = (uint8_t) (slaveAddr << 1);
  4330     0509  3573               	lslf	I2C1_SlaveSetSlaveAddr@slaveAddr,w
  4331     050A  0143               	movlb	3	; select bank3
  4332     050B  008D               	movwf	13	;volatile
  4333     050C                     l377:
  4334     050C  0008               	return
  4335     050D                     __end_of_I2C1_SlaveSetSlaveAddr:
  4336                           
  4337                           	psect	text22
  4338     04EB                     __ptext22:	
  4339 ;; *************** function _I2C1_SlaveSetReadIntHandler *****************
  4340 ;; Defined at:
  4341 ;;		line 240 in file "mcc_generated_files/i2c1_slave.c"
  4342 ;; Parameters:    Size  Location     Type
  4343 ;;  handler         2    3[COMMON] PTR FTN()void 
  4344 ;;		 -> I2C1_SlaveDefRdInterruptHandler(1), 
  4345 ;; Auto vars:     Size  Location     Type
  4346 ;;		None
  4347 ;; Return value:  Size  Location     Type
  4348 ;;                  1    wreg      void 
  4349 ;; Registers used:
  4350 ;;		wreg
  4351 ;; Tracked objects:
  4352 ;;		On entry : 0/0
  4353 ;;		On exit  : 0/0
  4354 ;;		Unchanged: 0/0
  4355 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4356 ;;      Params:         2       0       0       0
  4357 ;;      Locals:         0       0       0       0
  4358 ;;      Temps:          0       0       0       0
  4359 ;;      Totals:         2       0       0       0
  4360 ;;Total ram usage:        2 bytes
  4361 ;; Hardware stack levels used: 1
  4362 ;; Hardware stack levels required when called: 5
  4363 ;; This function calls:
  4364 ;;		Nothing
  4365 ;; This function is called by:
  4366 ;;		_I2C1_Open
  4367 ;; This function uses a non-reentrant model
  4368 ;;
  4369                           
  4370     04EB                     _I2C1_SlaveSetReadIntHandler:	
  4371                           ;psect for function _I2C1_SlaveSetReadIntHandler
  4372                           
  4373     04EB                     l1906:	
  4374                           ;incstack = 0
  4375                           ; Regs used in _I2C1_SlaveSetReadIntHandler: [wreg]
  4376                           
  4377                           
  4378                           ;mcc_generated_files/i2c1_slave.c: 241:     I2C1_SlaveRdInterruptHandler = handler;
  4379     04EB  0874               	movf	I2C1_SlaveSetReadIntHandler@handler+1,w
  4380     04EC  0140               	movlb	0	; select bank0
  4381     04ED  00AE               	movwf	_I2C1_SlaveRdInterruptHandler+1
  4382     04EE  0873               	movf	I2C1_SlaveSetReadIntHandler@handler,w
  4383     04EF  00AD               	movwf	_I2C1_SlaveRdInterruptHandler
  4384     04F0                     l317:
  4385     04F0  0008               	return
  4386     04F1                     __end_of_I2C1_SlaveSetReadIntHandler:
  4387                           
  4388                           	psect	text23
  4389     04F1                     __ptext23:	
  4390 ;; *************** function _I2C1_SlaveSetIsrHandler *****************
  4391 ;; Defined at:
  4392 ;;		line 234 in file "mcc_generated_files/i2c1_slave.c"
  4393 ;; Parameters:    Size  Location     Type
  4394 ;;  handler         2    3[COMMON] PTR FTN()void 
  4395 ;;		 -> I2C1_Isr(1), 
  4396 ;; Auto vars:     Size  Location     Type
  4397 ;;		None
  4398 ;; Return value:  Size  Location     Type
  4399 ;;                  1    wreg      void 
  4400 ;; Registers used:
  4401 ;;		wreg
  4402 ;; Tracked objects:
  4403 ;;		On entry : 0/0
  4404 ;;		On exit  : 0/0
  4405 ;;		Unchanged: 0/0
  4406 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4407 ;;      Params:         2       0       0       0
  4408 ;;      Locals:         0       0       0       0
  4409 ;;      Temps:          0       0       0       0
  4410 ;;      Totals:         2       0       0       0
  4411 ;;Total ram usage:        2 bytes
  4412 ;; Hardware stack levels used: 1
  4413 ;; Hardware stack levels required when called: 5
  4414 ;; This function calls:
  4415 ;;		Nothing
  4416 ;; This function is called by:
  4417 ;;		_I2C1_Open
  4418 ;; This function uses a non-reentrant model
  4419 ;;
  4420                           
  4421     04F1                     _I2C1_SlaveSetIsrHandler:	
  4422                           ;psect for function _I2C1_SlaveSetIsrHandler
  4423                           
  4424     04F1                     l1900:	
  4425                           ;incstack = 0
  4426                           ; Regs used in _I2C1_SlaveSetIsrHandler: [wreg]
  4427                           
  4428                           
  4429                           ;mcc_generated_files/i2c1_slave.c: 234: void I2C1_SlaveSetIsrHandler(i2c1InterruptHandle
      +                          r handler);mcc_generated_files/i2c1_slave.c: 235: {;mcc_generated_files/i2c1_slave.c: 23
      +                          6:     MSSP1_InterruptHandler = handler;
  4430     04F1  0874               	movf	I2C1_SlaveSetIsrHandler@handler+1,w
  4431     04F2  0140               	movlb	0	; select bank0
  4432     04F3  00B0               	movwf	_MSSP1_InterruptHandler+1
  4433     04F4  0873               	movf	I2C1_SlaveSetIsrHandler@handler,w
  4434     04F5  00AF               	movwf	_MSSP1_InterruptHandler
  4435     04F6                     l314:
  4436     04F6  0008               	return
  4437     04F7                     __end_of_I2C1_SlaveSetIsrHandler:
  4438                           
  4439                           	psect	text24
  4440     04F7                     __ptext24:	
  4441 ;; *************** function _I2C1_SlaveSetBusColIntHandler *****************
  4442 ;; Defined at:
  4443 ;;		line 329 in file "mcc_generated_files/i2c1_slave.c"
  4444 ;; Parameters:    Size  Location     Type
  4445 ;;  handler         2    3[COMMON] PTR FTN()void 
  4446 ;;		 -> I2C1_SlaveDefBusColInterruptHandler(1), 
  4447 ;; Auto vars:     Size  Location     Type
  4448 ;;		None
  4449 ;; Return value:  Size  Location     Type
  4450 ;;                  1    wreg      void 
  4451 ;; Registers used:
  4452 ;;		wreg
  4453 ;; Tracked objects:
  4454 ;;		On entry : 0/0
  4455 ;;		On exit  : 0/0
  4456 ;;		Unchanged: 0/0
  4457 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4458 ;;      Params:         2       0       0       0
  4459 ;;      Locals:         0       0       0       0
  4460 ;;      Temps:          0       0       0       0
  4461 ;;      Totals:         2       0       0       0
  4462 ;;Total ram usage:        2 bytes
  4463 ;; Hardware stack levels used: 1
  4464 ;; Hardware stack levels required when called: 5
  4465 ;; This function calls:
  4466 ;;		Nothing
  4467 ;; This function is called by:
  4468 ;;		_I2C1_Open
  4469 ;; This function uses a non-reentrant model
  4470 ;;
  4471                           
  4472     04F7                     _I2C1_SlaveSetBusColIntHandler:	
  4473                           ;psect for function _I2C1_SlaveSetBusColIntHandler
  4474                           
  4475     04F7                     l1902:	
  4476                           ;incstack = 0
  4477                           ; Regs used in _I2C1_SlaveSetBusColIntHandler: [wreg]
  4478                           
  4479                           
  4480                           ;mcc_generated_files/i2c1_slave.c: 330:     I2C1_SlaveBusColInterruptHandler = handler;
  4481     04F7  0874               	movf	I2C1_SlaveSetBusColIntHandler@handler+1,w
  4482     04F8  0140               	movlb	0	; select bank0
  4483     04F9  00A8               	movwf	_I2C1_SlaveBusColInterruptHandler+1
  4484     04FA  0873               	movf	I2C1_SlaveSetBusColIntHandler@handler,w
  4485     04FB  00A7               	movwf	_I2C1_SlaveBusColInterruptHandler
  4486     04FC                     l360:
  4487     04FC  0008               	return
  4488     04FD                     __end_of_I2C1_SlaveSetBusColIntHandler:
  4489                           
  4490                           	psect	text25
  4491     04FD                     __ptext25:	
  4492 ;; *************** function _I2C1_SlaveSetAddrIntHandler *****************
  4493 ;; Defined at:
  4494 ;;		line 294 in file "mcc_generated_files/i2c1_slave.c"
  4495 ;; Parameters:    Size  Location     Type
  4496 ;;  handler         2    3[COMMON] PTR FTN()void 
  4497 ;;		 -> I2C1_SlaveDefAddrInterruptHandler(1), 
  4498 ;; Auto vars:     Size  Location     Type
  4499 ;;		None
  4500 ;; Return value:  Size  Location     Type
  4501 ;;                  1    wreg      void 
  4502 ;; Registers used:
  4503 ;;		wreg
  4504 ;; Tracked objects:
  4505 ;;		On entry : 0/0
  4506 ;;		On exit  : 0/0
  4507 ;;		Unchanged: 0/0
  4508 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4509 ;;      Params:         2       0       0       0
  4510 ;;      Locals:         0       0       0       0
  4511 ;;      Temps:          0       0       0       0
  4512 ;;      Totals:         2       0       0       0
  4513 ;;Total ram usage:        2 bytes
  4514 ;; Hardware stack levels used: 1
  4515 ;; Hardware stack levels required when called: 5
  4516 ;; This function calls:
  4517 ;;		Nothing
  4518 ;; This function is called by:
  4519 ;;		_I2C1_Open
  4520 ;; This function uses a non-reentrant model
  4521 ;;
  4522                           
  4523     04FD                     _I2C1_SlaveSetAddrIntHandler:	
  4524                           ;psect for function _I2C1_SlaveSetAddrIntHandler
  4525                           
  4526     04FD                     l1908:	
  4527                           ;incstack = 0
  4528                           ; Regs used in _I2C1_SlaveSetAddrIntHandler: [wreg]
  4529                           
  4530                           
  4531                           ;mcc_generated_files/i2c1_slave.c: 295:     I2C1_SlaveAddrInterruptHandler = handler;
  4532     04FD  0874               	movf	I2C1_SlaveSetAddrIntHandler@handler+1,w
  4533     04FE  0140               	movlb	0	; select bank0
  4534     04FF  00AA               	movwf	_I2C1_SlaveAddrInterruptHandler+1
  4535     0500  0873               	movf	I2C1_SlaveSetAddrIntHandler@handler,w
  4536     0501  00A9               	movwf	_I2C1_SlaveAddrInterruptHandler
  4537     0502                     l340:
  4538     0502  0008               	return
  4539     0503                     __end_of_I2C1_SlaveSetAddrIntHandler:
  4540                           
  4541                           	psect	text26
  4542     0486                     __ptext26:	
  4543 ;; *************** function _I2C1_SlaveOpen *****************
  4544 ;; Defined at:
  4545 ;;		line 344 in file "mcc_generated_files/i2c1_slave.c"
  4546 ;; Parameters:    Size  Location     Type
  4547 ;;		None
  4548 ;; Auto vars:     Size  Location     Type
  4549 ;;		None
  4550 ;; Return value:  Size  Location     Type
  4551 ;;                  1    wreg      _Bool 
  4552 ;; Registers used:
  4553 ;;		wreg, status,2, status,0
  4554 ;; Tracked objects:
  4555 ;;		On entry : 0/0
  4556 ;;		On exit  : 0/0
  4557 ;;		Unchanged: 0/0
  4558 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4559 ;;      Params:         0       0       0       0
  4560 ;;      Locals:         0       0       0       0
  4561 ;;      Temps:          1       0       0       0
  4562 ;;      Totals:         1       0       0       0
  4563 ;;Total ram usage:        1 bytes
  4564 ;; Hardware stack levels used: 1
  4565 ;; Hardware stack levels required when called: 5
  4566 ;; This function calls:
  4567 ;;		Nothing
  4568 ;; This function is called by:
  4569 ;;		_I2C1_Open
  4570 ;; This function uses a non-reentrant model
  4571 ;;
  4572                           
  4573     0486                     _I2C1_SlaveOpen:	
  4574                           ;psect for function _I2C1_SlaveOpen
  4575                           
  4576     0486                     l1884:	
  4577                           ;incstack = 0
  4578                           ; Regs used in _I2C1_SlaveOpen: [wreg+status,2+status,0]
  4579                           
  4580                           
  4581                           ;mcc_generated_files/i2c1_slave.c: 346:     if(!SSP1CON1bits.SSPEN)
  4582     0486  0143               	movlb	3	; select bank3
  4583     0487  1A90               	btfsc	16,5	;volatile
  4584     0488  2C8A               	goto	u471
  4585     0489  2C8B               	goto	u470
  4586     048A                     u471:
  4587     048A  2C93               	goto	l371
  4588     048B                     u470:
  4589     048B                     l1886:
  4590                           
  4591                           ;mcc_generated_files/i2c1_slave.c: 347:     {;mcc_generated_files/i2c1_slave.c: 348:    
      +                               SSP1STAT = 0x40;
  4592     048B  3040               	movlw	64
  4593     048C  008F               	movwf	15	;volatile
  4594     048D                     l1888:
  4595                           
  4596                           ;mcc_generated_files/i2c1_slave.c: 349:         SSP1CON1 |= 0x06;
  4597     048D  3006               	movlw	6
  4598     048E  00F3               	movwf	??_I2C1_SlaveOpen
  4599     048F  0873               	movf	??_I2C1_SlaveOpen,w
  4600     0490  0490               	iorwf	16,f	;volatile
  4601     0491                     l1890:
  4602                           
  4603                           ;mcc_generated_files/i2c1_slave.c: 350:         SSP1CON2 = 0x00;
  4604     0491  0191               	clrf	17	;volatile
  4605     0492                     l1892:
  4606                           
  4607                           ;mcc_generated_files/i2c1_slave.c: 351:         SSP1CON1bits.SSPEN = 1;
  4608     0492  1690               	bsf	16,5	;volatile
  4609     0493                     l371:
  4610     0493  0008               	return
  4611     0494                     __end_of_I2C1_SlaveOpen:
  4612                           
  4613                           	psect	text27
  4614     0527                     __ptext27:	
  4615 ;; *************** function _I2C1_SlaveEnableIrq *****************
  4616 ;; Defined at:
  4617 ;;		line 375 in file "mcc_generated_files/i2c1_slave.c"
  4618 ;; Parameters:    Size  Location     Type
  4619 ;;		None
  4620 ;; Auto vars:     Size  Location     Type
  4621 ;;		None
  4622 ;; Return value:  Size  Location     Type
  4623 ;;                  1    wreg      void 
  4624 ;; Registers used:
  4625 ;;		None
  4626 ;; Tracked objects:
  4627 ;;		On entry : 0/0
  4628 ;;		On exit  : 0/0
  4629 ;;		Unchanged: 0/0
  4630 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4631 ;;      Params:         0       0       0       0
  4632 ;;      Locals:         0       0       0       0
  4633 ;;      Temps:          0       0       0       0
  4634 ;;      Totals:         0       0       0       0
  4635 ;;Total ram usage:        0 bytes
  4636 ;; Hardware stack levels used: 1
  4637 ;; Hardware stack levels required when called: 5
  4638 ;; This function calls:
  4639 ;;		Nothing
  4640 ;; This function is called by:
  4641 ;;		_I2C1_Open
  4642 ;; This function uses a non-reentrant model
  4643 ;;
  4644                           
  4645     0527                     _I2C1_SlaveEnableIrq:	
  4646                           ;psect for function _I2C1_SlaveEnableIrq
  4647                           
  4648     0527                     l1912:	
  4649                           ;incstack = 0
  4650                           ; Regs used in _I2C1_SlaveEnableIrq: []
  4651                           
  4652                           
  4653                           ;mcc_generated_files/i2c1_slave.c: 377:     PIE1bits.SSP1IE = 1;
  4654     0527  014E               	movlb	14	; select bank14
  4655     0528  1497               	bsf	23,1	;volatile
  4656     0529                     l383:
  4657     0529  0008               	return
  4658     052A                     __end_of_I2C1_SlaveEnableIrq:
  4659                           
  4660                           	psect	intentry
  4661     0004                     __pintentry:	
  4662 ;; *************** function _INTERRUPT_InterruptManager *****************
  4663 ;; Defined at:
  4664 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  4665 ;; Parameters:    Size  Location     Type
  4666 ;;		None
  4667 ;; Auto vars:     Size  Location     Type
  4668 ;;		None
  4669 ;; Return value:  Size  Location     Type
  4670 ;;                  1    wreg      void 
  4671 ;; Registers used:
  4672 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4673 ;; Tracked objects:
  4674 ;;		On entry : 0/0
  4675 ;;		On exit  : 0/0
  4676 ;;		Unchanged: 0/0
  4677 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4678 ;;      Params:         0       0       0       0
  4679 ;;      Locals:         0       0       0       0
  4680 ;;      Temps:          0       0       0       0
  4681 ;;      Totals:         0       0       0       0
  4682 ;;Total ram usage:        0 bytes
  4683 ;; Hardware stack levels used: 1
  4684 ;; Hardware stack levels required when called: 4
  4685 ;; This function calls:
  4686 ;;		NULL
  4687 ;;		_I2C1_Isr
  4688 ;;		_TMR0_ISR
  4689 ;; This function is called by:
  4690 ;;		Interrupt level 1
  4691 ;; This function uses a non-reentrant model
  4692 ;;
  4693                           
  4694     0004                     _INTERRUPT_InterruptManager:
  4695                           
  4696                           ;incstack = 0
  4697     0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
  4698                           
  4699                           ; Regs used in _INTERRUPT_InterruptManager: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4700     0005  3180               	pagesel	$
  4701     0006                     i1l2092:
  4702                           
  4703                           ;mcc_generated_files/interrupt_manager.c: 55:     if(PIE0bits.TMR0IE == 1 && PIR0bits.TM
      +                          R0IF == 1)
  4704     0006  014E               	movlb	14	; select bank14
  4705     0007  1E96               	btfss	22,5	;volatile
  4706     0008  280A               	goto	u72_21
  4707     0009  280B               	goto	u72_20
  4708     000A                     u72_21:
  4709     000A  2813               	goto	i1l137
  4710     000B                     u72_20:
  4711     000B                     i1l2094:
  4712     000B  1E8C               	btfss	12,5	;volatile
  4713     000C  280E               	goto	u73_21
  4714     000D  280F               	goto	u73_20
  4715     000E                     u73_21:
  4716     000E  2813               	goto	i1l137
  4717     000F                     u73_20:
  4718     000F                     i1l2096:
  4719                           
  4720                           ;mcc_generated_files/interrupt_manager.c: 56:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 57:         TMR0_ISR();
  4721     000F  3184  2469  3180   	fcall	_TMR0_ISR
  4722                           
  4723                           ;mcc_generated_files/interrupt_manager.c: 58:     }
  4724     0012  282F               	goto	i1l145
  4725     0013                     i1l137:	
  4726                           ;mcc_generated_files/interrupt_manager.c: 59:     else if(INTCONbits.PEIE == 1)
  4727                           
  4728     0013  1F0B               	btfss	11,6	;volatile
  4729     0014  2816               	goto	u74_21
  4730     0015  2817               	goto	u74_20
  4731     0016                     u74_21:
  4732     0016  282F               	goto	i1l145
  4733     0017                     u74_20:
  4734     0017                     i1l2098:
  4735                           
  4736                           ;mcc_generated_files/interrupt_manager.c: 60:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 61:         if(PIE1bits.BCL1IE == 1 && PIR1bits.BCL1IF == 1)
  4737     0017  1D17               	btfss	23,2	;volatile
  4738     0018  281A               	goto	u75_21
  4739     0019  281B               	goto	u75_20
  4740     001A                     u75_21:
  4741     001A  2826               	goto	i1l140
  4742     001B                     u75_20:
  4743     001B                     i1l2100:
  4744     001B  1D0D               	btfss	13,2	;volatile
  4745     001C  281E               	goto	u76_21
  4746     001D  281F               	goto	u76_20
  4747     001E                     u76_21:
  4748     001E  2826               	goto	i1l140
  4749     001F                     u76_20:
  4750     001F                     i1l2102:
  4751                           
  4752                           ;mcc_generated_files/interrupt_manager.c: 62:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 63:             MSSP1_InterruptHandler();
  4753     001F  0140               	movlb	0	; select bank0
  4754     0020  0830               	movf	_MSSP1_InterruptHandler+1,w
  4755     0021  008A               	movwf	10
  4756     0022  082F               	movf	_MSSP1_InterruptHandler,w
  4757     0023  000A               	callw
  4758     0024  3180               	pagesel	$
  4759                           
  4760                           ;mcc_generated_files/interrupt_manager.c: 64:         }
  4761     0025  282F               	goto	i1l145
  4762     0026                     i1l140:	
  4763                           ;mcc_generated_files/interrupt_manager.c: 65:         else if(PIE1bits.SSP1IE == 1 && PI
      +                          R1bits.SSP1IF == 1)
  4764                           
  4765     0026  1C97               	btfss	23,1	;volatile
  4766     0027  2829               	goto	u77_21
  4767     0028  282A               	goto	u77_20
  4768     0029                     u77_21:
  4769     0029  282F               	goto	i1l144
  4770     002A                     u77_20:
  4771     002A                     i1l2104:
  4772     002A  1C8D               	btfss	13,1	;volatile
  4773     002B  282D               	goto	u78_21
  4774     002C  282E               	goto	u78_20
  4775     002D                     u78_21:
  4776     002D  282F               	goto	i1l144
  4777     002E                     u78_20:
  4778     002E  281F               	goto	i1l2102
  4779     002F                     i1l144:	
  4780                           ;mcc_generated_files/interrupt_manager.c: 76:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 78:     }
  4781                           
  4782     002F                     i1l145:
  4783     002F  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  4784     0030  0009               	retfie
  4785     0031                     __end_of_INTERRUPT_InterruptManager:
  4786                           
  4787                           	psect	text29
  4788     0469                     __ptext29:	
  4789 ;; *************** function _TMR0_ISR *****************
  4790 ;; Defined at:
  4791 ;;		line 131 in file "mcc_generated_files/tmr0.c"
  4792 ;; Parameters:    Size  Location     Type
  4793 ;;		None
  4794 ;; Auto vars:     Size  Location     Type
  4795 ;;		None
  4796 ;; Return value:  Size  Location     Type
  4797 ;;                  1    wreg      void 
  4798 ;; Registers used:
  4799 ;;		wreg, status,2, status,0, pclath, cstack
  4800 ;; Tracked objects:
  4801 ;;		On entry : 0/0
  4802 ;;		On exit  : 0/0
  4803 ;;		Unchanged: 0/0
  4804 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4805 ;;      Params:         0       0       0       0
  4806 ;;      Locals:         0       0       0       0
  4807 ;;      Temps:          0       0       0       0
  4808 ;;      Totals:         0       0       0       0
  4809 ;;Total ram usage:        0 bytes
  4810 ;; Hardware stack levels used: 1
  4811 ;; Hardware stack levels required when called: 1
  4812 ;; This function calls:
  4813 ;;		NULL
  4814 ;;		_TMR0_DefaultInterruptHandler
  4815 ;; This function is called by:
  4816 ;;		_INTERRUPT_InterruptManager
  4817 ;; This function uses a non-reentrant model
  4818 ;;
  4819                           
  4820     0469                     _TMR0_ISR:	
  4821                           ;psect for function _TMR0_ISR
  4822                           
  4823     0469                     i1l2034:	
  4824                           ;incstack = 0
  4825                           ; Regs used in _TMR0_ISR: [wreg+status,2+status,0+pclath+cstack]
  4826                           
  4827                           
  4828                           ;mcc_generated_files/tmr0.c: 134:     PIR0bits.TMR0IF = 0;
  4829     0469  014E               	movlb	14	; select bank14
  4830     046A  128C               	bcf	12,5	;volatile
  4831     046B                     i1l2036:
  4832                           
  4833                           ;mcc_generated_files/tmr0.c: 136:     if(TMR0_InterruptHandler)
  4834     046B  0140               	movlb	0	; select bank0
  4835     046C  0852               	movf	_TMR0_InterruptHandler,w
  4836     046D  0453               	iorwf	_TMR0_InterruptHandler+1,w
  4837     046E  1903               	btfsc	3,2
  4838     046F  2C71               	goto	u65_21
  4839     0470  2C72               	goto	u65_20
  4840     0471                     u65_21:
  4841     0471  2C77               	goto	i1l478
  4842     0472                     u65_20:
  4843     0472                     i1l2038:
  4844                           
  4845                           ;mcc_generated_files/tmr0.c: 137:     {;mcc_generated_files/tmr0.c: 138:         TMR0_In
      +                          terruptHandler();
  4846     0472  0853               	movf	_TMR0_InterruptHandler+1,w
  4847     0473  008A               	movwf	10
  4848     0474  0852               	movf	_TMR0_InterruptHandler,w
  4849     0475  000A               	callw
  4850     0476  3184               	pagesel	$
  4851     0477                     i1l478:
  4852     0477  0008               	return
  4853     0478                     __end_of_TMR0_ISR:
  4854                           
  4855                           	psect	text30
  4856     033A                     __ptext30:	
  4857 ;; *************** function _TMR0_DefaultInterruptHandler *****************
  4858 ;; Defined at:
  4859 ;;		line 152 in file "mcc_generated_files/tmr0.c"
  4860 ;; Parameters:    Size  Location     Type
  4861 ;;		None
  4862 ;; Auto vars:     Size  Location     Type
  4863 ;;		None
  4864 ;; Return value:  Size  Location     Type
  4865 ;;                  1    wreg      void 
  4866 ;; Registers used:
  4867 ;;		wreg, status,2, status,0
  4868 ;; Tracked objects:
  4869 ;;		On entry : 0/0
  4870 ;;		On exit  : 0/0
  4871 ;;		Unchanged: 0/0
  4872 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4873 ;;      Params:         0       0       0       0
  4874 ;;      Locals:         0       0       0       0
  4875 ;;      Temps:          1       0       0       0
  4876 ;;      Totals:         1       0       0       0
  4877 ;;Total ram usage:        1 bytes
  4878 ;; Hardware stack levels used: 1
  4879 ;; This function calls:
  4880 ;;		Nothing
  4881 ;; This function is called by:
  4882 ;;		_TMR0_Initialize
  4883 ;;		_TMR0_ISR
  4884 ;; This function uses a non-reentrant model
  4885 ;;
  4886                           
  4887     033A                     _TMR0_DefaultInterruptHandler:	
  4888                           ;psect for function _TMR0_DefaultInterruptHandler
  4889                           
  4890     033A                     i1l1964:	
  4891                           ;incstack = 0
  4892                           ; Regs used in _TMR0_DefaultInterruptHandler: [wreg+status,2+status,0]
  4893                           
  4894                           
  4895                           ;mcc_generated_files/tmr0.c: 156:     LED_timer++;
  4896     033A  3001               	movlw	1
  4897     033B  00F0               	movwf	??_TMR0_DefaultInterruptHandler
  4898     033C  0870               	movf	??_TMR0_DefaultInterruptHandler,w
  4899     033D  07FA               	addwf	_LED_timer,f
  4900                           
  4901                           ;mcc_generated_files/tmr0.c: 159:     if(error_flag == 1)
  4902     033E  0140               	movlb	0	; select bank0
  4903     033F  0338               	decf	_error_flag,w
  4904     0340  1D03               	btfss	3,2
  4905     0341  2B43               	goto	u52_21
  4906     0342  2B44               	goto	u52_20
  4907     0343                     u52_21:
  4908     0343  2B54               	goto	i1l1972
  4909     0344                     u52_20:
  4910     0344                     i1l1966:
  4911                           
  4912                           ;mcc_generated_files/tmr0.c: 160:     {;mcc_generated_files/tmr0.c: 161:         if(LED_
      +                          timer == 5)
  4913     0344  3005               	movlw	5
  4914     0345  067A               	xorwf	_LED_timer,w
  4915     0346  1D03               	btfss	3,2
  4916     0347  2B49               	goto	u53_21
  4917     0348  2B4A               	goto	u53_20
  4918     0349                     u53_21:
  4919     0349  2B4B               	goto	i1l1968
  4920     034A                     u53_20:
  4921     034A                     i1l486:	
  4922                           ;mcc_generated_files/tmr0.c: 162:         {;mcc_generated_files/tmr0.c: 163:            
      +                           do { LATAbits.LATA2 = 1; } while(0);
  4923                           
  4924     034A  1518               	bsf	24,2	;volatile
  4925     034B                     i1l1968:
  4926                           
  4927                           ;mcc_generated_files/tmr0.c: 165:         if(LED_timer == 10)
  4928     034B  300A               	movlw	10
  4929     034C  067A               	xorwf	_LED_timer,w
  4930     034D  1D03               	btfss	3,2
  4931     034E  2B50               	goto	u54_21
  4932     034F  2B51               	goto	u54_20
  4933     0350                     u54_21:
  4934     0350  2B63               	goto	i1l498
  4935     0351                     u54_20:
  4936     0351                     i1l489:	
  4937                           ;mcc_generated_files/tmr0.c: 166:         {;mcc_generated_files/tmr0.c: 167:            
      +                           do { LATAbits.LATA2 = 0; } while(0);
  4938                           
  4939     0351  1118               	bcf	24,2	;volatile
  4940     0352                     i1l1970:
  4941                           
  4942                           ;mcc_generated_files/tmr0.c: 168:             LED_timer = 0;
  4943     0352  01FA               	clrf	_LED_timer
  4944     0353  2B63               	goto	i1l498
  4945     0354                     i1l1972:
  4946                           
  4947                           ;mcc_generated_files/tmr0.c: 171:         if(LED_timer == 50)
  4948     0354  3032               	movlw	50
  4949     0355  067A               	xorwf	_LED_timer,w
  4950     0356  1D03               	btfss	3,2
  4951     0357  2B59               	goto	u55_21
  4952     0358  2B5A               	goto	u55_20
  4953     0359                     u55_21:
  4954     0359  2B5B               	goto	i1l1974
  4955     035A                     u55_20:
  4956     035A                     i1l493:	
  4957                           ;mcc_generated_files/tmr0.c: 172:         {;mcc_generated_files/tmr0.c: 173:            
      +                           do { LATAbits.LATA2 = 1; } while(0);
  4958                           
  4959     035A  1518               	bsf	24,2	;volatile
  4960     035B                     i1l1974:
  4961                           
  4962                           ;mcc_generated_files/tmr0.c: 175:         if(LED_timer == 100)
  4963     035B  3064               	movlw	100
  4964     035C  067A               	xorwf	_LED_timer,w
  4965     035D  1D03               	btfss	3,2
  4966     035E  2B60               	goto	u56_21
  4967     035F  2B61               	goto	u56_20
  4968     0360                     u56_21:
  4969     0360  2B63               	goto	i1l498
  4970     0361                     u56_20:
  4971     0361                     i1l496:	
  4972                           ;mcc_generated_files/tmr0.c: 176:         {;mcc_generated_files/tmr0.c: 177:            
      +                           do { LATAbits.LATA2 = 0; } while(0);
  4973                           
  4974     0361  1118               	bcf	24,2	;volatile
  4975     0362  2B52               	goto	i1l1970
  4976     0363                     i1l498:
  4977     0363  0008               	return
  4978     0364                     __end_of_TMR0_DefaultInterruptHandler:
  4979                           
  4980                           	psect	text31
  4981     01EA                     __ptext31:	
  4982 ;; *************** function _I2C1_Isr *****************
  4983 ;; Defined at:
  4984 ;;		line 169 in file "mcc_generated_files/i2c1_slave.c"
  4985 ;; Parameters:    Size  Location     Type
  4986 ;;		None
  4987 ;; Auto vars:     Size  Location     Type
  4988 ;;		None
  4989 ;; Return value:  Size  Location     Type
  4990 ;;                  1    wreg      void 
  4991 ;; Registers used:
  4992 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4993 ;; Tracked objects:
  4994 ;;		On entry : 0/0
  4995 ;;		On exit  : 0/0
  4996 ;;		Unchanged: 0/0
  4997 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4998 ;;      Params:         0       0       0       0
  4999 ;;      Locals:         0       0       0       0
  5000 ;;      Temps:          2       0       0       0
  5001 ;;      Totals:         2       0       0       0
  5002 ;;Total ram usage:        2 bytes
  5003 ;; Hardware stack levels used: 1
  5004 ;; Hardware stack levels required when called: 3
  5005 ;; This function calls:
  5006 ;;		_I2C1_SlaveAddrCallBack
  5007 ;;		_I2C1_SlaveClearIrq
  5008 ;;		_I2C1_SlaveIsAddr
  5009 ;;		_I2C1_SlaveIsRead
  5010 ;;		_I2C1_SlaveIsRxBufFull
  5011 ;;		_I2C1_SlaveIsTxBufEmpty
  5012 ;;		_I2C1_SlaveRdCallBack
  5013 ;;		_I2C1_SlaveReleaseClock
  5014 ;;		_I2C1_SlaveWrCallBack
  5015 ;; This function is called by:
  5016 ;;		_I2C1_Open
  5017 ;;		_INTERRUPT_InterruptManager
  5018 ;; This function uses a non-reentrant model
  5019 ;;
  5020                           
  5021     01EA                     _I2C1_Isr:	
  5022                           ;psect for function _I2C1_Isr
  5023                           
  5024     01EA                     i1l2044:	
  5025                           ;incstack = 0
  5026                           ; Regs used in _I2C1_Isr: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5027                           
  5028                           
  5029                           ;mcc_generated_files/i2c1_slave.c: 171:     I2C1_SlaveClearIrq();
  5030     01EA  3185  252D  3181   	fcall	_I2C1_SlaveClearIrq
  5031     01ED                     i1l2046:
  5032                           
  5033                           ;mcc_generated_files/i2c1_slave.c: 174:     if(I2C1_SlaveIsAddr())
  5034     01ED  3184  24BF  3181   	fcall	_I2C1_SlaveIsAddr
  5035     01F0  3A00               	xorlw	0
  5036     01F1  1903               	skipnz
  5037     01F2  29F4               	goto	u66_21
  5038     01F3  29F5               	goto	u66_20
  5039     01F4                     u66_21:
  5040     01F4  2A05               	goto	i1l2054
  5041     01F5                     u66_20:
  5042     01F5                     i1l2048:
  5043                           
  5044                           ;mcc_generated_files/i2c1_slave.c: 175:     {;mcc_generated_files/i2c1_slave.c: 182:    
      +                               if(I2C1_SlaveIsRead())
  5045     01F5  3185  2517  3181   	fcall	_I2C1_SlaveIsRead
  5046     01F8  3A00               	xorlw	0
  5047     01F9  1903               	skipnz
  5048     01FA  29FC               	goto	u67_21
  5049     01FB  29FD               	goto	u67_20
  5050     01FC                     u67_21:
  5051     01FC  2A01               	goto	i1l2052
  5052     01FD                     u67_20:
  5053     01FD                     i1l2050:
  5054                           
  5055                           ;mcc_generated_files/i2c1_slave.c: 183:         {;mcc_generated_files/i2c1_slave.c: 184:
      +                                       i2c1SlaveState = I2C1_ADDR_TX;
  5056     01FD  3001               	movlw	1
  5057     01FE  0140               	movlb	0	; select bank0
  5058     01FF  00B4               	movwf	_i2c1SlaveState	;volatile
  5059                           
  5060                           ;mcc_generated_files/i2c1_slave.c: 185:         }
  5061     0200  2A3D               	goto	i1l2078
  5062     0201                     i1l2052:
  5063                           
  5064                           ;mcc_generated_files/i2c1_slave.c: 187:         {;mcc_generated_files/i2c1_slave.c: 188:
      +                                       i2c1SlaveState = I2C1_ADDR_RX;
  5065     0201  3002               	movlw	2
  5066     0202  0140               	movlb	0	; select bank0
  5067     0203  00B4               	movwf	_i2c1SlaveState	;volatile
  5068     0204  2A3D               	goto	i1l2078
  5069     0205                     i1l2054:
  5070                           
  5071                           ;mcc_generated_files/i2c1_slave.c: 192:     {;mcc_generated_files/i2c1_slave.c: 193:    
      +                               if(I2C1_SlaveIsRead())
  5072     0205  3185  2517  3181   	fcall	_I2C1_SlaveIsRead
  5073     0208  3A00               	xorlw	0
  5074     0209  1903               	skipnz
  5075     020A  2A0C               	goto	u68_21
  5076     020B  2A0D               	goto	u68_20
  5077     020C                     u68_21:
  5078     020C  2A11               	goto	i1l2058
  5079     020D                     u68_20:
  5080     020D                     i1l2056:
  5081                           
  5082                           ;mcc_generated_files/i2c1_slave.c: 194:         {;mcc_generated_files/i2c1_slave.c: 195:
      +                                       i2c1SlaveState = I2C1_DATA_TX;
  5083     020D  3003               	movlw	3
  5084     020E  0140               	movlb	0	; select bank0
  5085     020F  00B4               	movwf	_i2c1SlaveState	;volatile
  5086                           
  5087                           ;mcc_generated_files/i2c1_slave.c: 196:         }
  5088     0210  2A3D               	goto	i1l2078
  5089     0211                     i1l2058:
  5090                           
  5091                           ;mcc_generated_files/i2c1_slave.c: 198:         {;mcc_generated_files/i2c1_slave.c: 199:
      +                                       i2c1SlaveState = I2C1_DATA_RX;
  5092     0211  3004               	movlw	4
  5093     0212  0140               	movlb	0	; select bank0
  5094     0213  00B4               	movwf	_i2c1SlaveState	;volatile
  5095     0214  2A3D               	goto	i1l2078
  5096     0215                     i1l2060:
  5097                           
  5098                           ;mcc_generated_files/i2c1_slave.c: 206:             I2C1_SlaveAddrCallBack();
  5099     0215  3184  24A1  3181   	fcall	_I2C1_SlaveAddrCallBack
  5100     0218                     i1l2062:
  5101                           
  5102                           ;mcc_generated_files/i2c1_slave.c: 207:             if(I2C1_SlaveIsTxBufEmpty())
  5103     0218  3184  24B8  3181   	fcall	_I2C1_SlaveIsTxBufEmpty
  5104     021B  3A00               	xorlw	0
  5105     021C  1903               	skipnz
  5106     021D  2A1F               	goto	u69_21
  5107     021E  2A20               	goto	u69_20
  5108     021F                     u69_21:
  5109     021F  2A53               	goto	i1l2080
  5110     0220                     u69_20:
  5111     0220                     i1l2064:
  5112                           
  5113                           ;mcc_generated_files/i2c1_slave.c: 208:             {;mcc_generated_files/i2c1_slave.c: 
      +                          209:                 I2C1_SlaveWrCallBack();
  5114     0220  3184  2494  3181   	fcall	_I2C1_SlaveWrCallBack
  5115     0223  2A53               	goto	i1l2080
  5116     0224                     i1l2066:
  5117                           
  5118                           ;mcc_generated_files/i2c1_slave.c: 213:             I2C1_SlaveAddrCallBack();
  5119     0224  3184  24A1  3181   	fcall	_I2C1_SlaveAddrCallBack
  5120                           
  5121                           ;mcc_generated_files/i2c1_slave.c: 214:             break;
  5122     0227  2A53               	goto	i1l2080
  5123     0228                     i1l2068:
  5124                           
  5125                           ;mcc_generated_files/i2c1_slave.c: 216:             if(I2C1_SlaveIsTxBufEmpty())
  5126     0228  3184  24B8  3181   	fcall	_I2C1_SlaveIsTxBufEmpty
  5127     022B  3A00               	xorlw	0
  5128     022C  1903               	skipnz
  5129     022D  2A2F               	goto	u70_21
  5130     022E  2A30               	goto	u70_20
  5131     022F                     u70_21:
  5132     022F  2A53               	goto	i1l2080
  5133     0230                     u70_20:
  5134     0230  2A20               	goto	i1l2064
  5135     0231                     i1l2072:
  5136                           
  5137                           ;mcc_generated_files/i2c1_slave.c: 222:             if(I2C1_SlaveIsRxBufFull())
  5138     0231  3185  2520  3181   	fcall	_I2C1_SlaveIsRxBufFull
  5139     0234  3A00               	xorlw	0
  5140     0235  1903               	skipnz
  5141     0236  2A38               	goto	u71_21
  5142     0237  2A39               	goto	u71_20
  5143     0238                     u71_21:
  5144     0238  2A53               	goto	i1l2080
  5145     0239                     u71_20:
  5146     0239                     i1l2074:
  5147                           
  5148                           ;mcc_generated_files/i2c1_slave.c: 223:             {;mcc_generated_files/i2c1_slave.c: 
      +                          224:                 I2C1_SlaveRdCallBack();
  5149     0239  3184  241C  3181   	fcall	_I2C1_SlaveRdCallBack
  5150     023C  2A53               	goto	i1l2080
  5151     023D                     i1l2078:
  5152     023D  0834               	movf	_i2c1SlaveState,w	;volatile
  5153     023E  00F1               	movwf	??_I2C1_Isr
  5154     023F  01F2               	clrf	??_I2C1_Isr+1
  5155                           
  5156                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5157                           ; Switch size 1, requested type "simple"
  5158                           ; Number of cases is 1, Range of values is 0 to 0
  5159                           ; switch strategies available:
  5160                           ; Name         Instructions Cycles
  5161                           ; simple_byte            4     3 (average)
  5162                           ; direct_byte            8     6 (fixed)
  5163                           ; jumptable            260     6 (fixed)
  5164                           ;	Chosen strategy is simple_byte
  5165     0240  0872               	movf	??_I2C1_Isr+1,w
  5166     0241  3A00               	xorlw	0	; case 0
  5167     0242  1903               	skipnz
  5168     0243  2A45               	goto	i1l2336
  5169     0244  2A53               	goto	i1l2080
  5170     0245                     i1l2336:
  5171                           
  5172                           ; Switch size 1, requested type "simple"
  5173                           ; Number of cases is 4, Range of values is 1 to 4
  5174                           ; switch strategies available:
  5175                           ; Name         Instructions Cycles
  5176                           ; simple_byte           13     7 (average)
  5177                           ; direct_byte           17     9 (fixed)
  5178                           ; jumptable            263     9 (fixed)
  5179                           ;	Chosen strategy is simple_byte
  5180     0245  0871               	movf	??_I2C1_Isr,w
  5181     0246  3A01               	xorlw	1	; case 1
  5182     0247  1903               	skipnz
  5183     0248  2A15               	goto	i1l2060
  5184     0249  3A03               	xorlw	3	; case 2
  5185     024A  1903               	skipnz
  5186     024B  2A24               	goto	i1l2066
  5187     024C  3A01               	xorlw	1	; case 3
  5188     024D  1903               	skipnz
  5189     024E  2A28               	goto	i1l2068
  5190     024F  3A07               	xorlw	7	; case 4
  5191     0250  1903               	skipnz
  5192     0251  2A31               	goto	i1l2072
  5193     0252  2A53               	goto	i1l2080
  5194     0253                     i1l2080:
  5195                           
  5196                           ;mcc_generated_files/i2c1_slave.c: 230:     I2C1_SlaveReleaseClock();
  5197     0253  3185  252A  3181   	fcall	_I2C1_SlaveReleaseClock
  5198     0256                     i1l311:
  5199     0256  0008               	return
  5200     0257                     __end_of_I2C1_Isr:
  5201                           
  5202                           	psect	text32
  5203     0494                     __ptext32:	
  5204 ;; *************** function _I2C1_SlaveWrCallBack *****************
  5205 ;; Defined at:
  5206 ;;		line 281 in file "mcc_generated_files/i2c1_slave.c"
  5207 ;; Parameters:    Size  Location     Type
  5208 ;;		None
  5209 ;; Auto vars:     Size  Location     Type
  5210 ;;		None
  5211 ;; Return value:  Size  Location     Type
  5212 ;;                  1    wreg      void 
  5213 ;; Registers used:
  5214 ;;		wreg, status,2, status,0, pclath, cstack
  5215 ;; Tracked objects:
  5216 ;;		On entry : 0/0
  5217 ;;		On exit  : 0/0
  5218 ;;		Unchanged: 0/0
  5219 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5220 ;;      Params:         0       0       0       0
  5221 ;;      Locals:         0       0       0       0
  5222 ;;      Temps:          0       0       0       0
  5223 ;;      Totals:         0       0       0       0
  5224 ;;Total ram usage:        0 bytes
  5225 ;; Hardware stack levels used: 1
  5226 ;; Hardware stack levels required when called: 2
  5227 ;; This function calls:
  5228 ;;		NULL
  5229 ;;		_I2C1_SlaveDefWrInterruptHandler
  5230 ;; This function is called by:
  5231 ;;		_I2C1_Isr
  5232 ;; This function uses a non-reentrant model
  5233 ;;
  5234                           
  5235     0494                     _I2C1_SlaveWrCallBack:	
  5236                           ;psect for function _I2C1_SlaveWrCallBack
  5237                           
  5238     0494                     i1l1932:	
  5239                           ;incstack = 0
  5240                           ; Regs used in _I2C1_SlaveWrCallBack: [wreg+status,2+status,0+pclath+cstack]
  5241                           
  5242                           
  5243                           ;mcc_generated_files/i2c1_slave.c: 283:     if (I2C1_SlaveWrInterruptHandler)
  5244     0494  0140               	movlb	0	; select bank0
  5245     0495  082B               	movf	_I2C1_SlaveWrInterruptHandler,w
  5246     0496  042C               	iorwf	_I2C1_SlaveWrInterruptHandler+1,w
  5247     0497  1903               	btfsc	3,2
  5248     0498  2C9A               	goto	u49_21
  5249     0499  2C9B               	goto	u49_20
  5250     049A                     u49_21:
  5251     049A  2CA0               	goto	i1l334
  5252     049B                     u49_20:
  5253     049B                     i1l1934:
  5254                           
  5255                           ;mcc_generated_files/i2c1_slave.c: 284:     {;mcc_generated_files/i2c1_slave.c: 285:    
      +                               I2C1_SlaveWrInterruptHandler();
  5256     049B  082C               	movf	_I2C1_SlaveWrInterruptHandler+1,w
  5257     049C  008A               	movwf	10
  5258     049D  082B               	movf	_I2C1_SlaveWrInterruptHandler,w
  5259     049E  000A               	callw
  5260     049F  3184               	pagesel	$
  5261     04A0                     i1l334:
  5262     04A0  0008               	return
  5263     04A1                     __end_of_I2C1_SlaveWrCallBack:
  5264                           
  5265                           	psect	text33
  5266     050D                     __ptext33:	
  5267 ;; *************** function _I2C1_SlaveDefWrInterruptHandler *****************
  5268 ;; Defined at:
  5269 ;;		line 289 in file "mcc_generated_files/i2c1_slave.c"
  5270 ;; Parameters:    Size  Location     Type
  5271 ;;		None
  5272 ;; Auto vars:     Size  Location     Type
  5273 ;;		None
  5274 ;; Return value:  Size  Location     Type
  5275 ;;                  1    wreg      void 
  5276 ;; Registers used:
  5277 ;;		wreg, status,2, status,0, pclath, cstack
  5278 ;; Tracked objects:
  5279 ;;		On entry : 0/0
  5280 ;;		On exit  : 0/0
  5281 ;;		Unchanged: 0/0
  5282 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5283 ;;      Params:         0       0       0       0
  5284 ;;      Locals:         0       0       0       0
  5285 ;;      Temps:          0       0       0       0
  5286 ;;      Totals:         0       0       0       0
  5287 ;;Total ram usage:        0 bytes
  5288 ;; Hardware stack levels used: 1
  5289 ;; Hardware stack levels required when called: 1
  5290 ;; This function calls:
  5291 ;;		_I2C1_SlaveSendTxData
  5292 ;; This function is called by:
  5293 ;;		_I2C1_Open
  5294 ;;		_I2C1_SlaveWrCallBack
  5295 ;; This function uses a non-reentrant model
  5296 ;;
  5297                           
  5298     050D                     _I2C1_SlaveDefWrInterruptHandler:	
  5299                           ;psect for function _I2C1_SlaveDefWrInterruptHandler
  5300                           
  5301     050D                     i1l1768:	
  5302                           ;incstack = 0
  5303                           ; Regs used in _I2C1_SlaveDefWrInterruptHandler: [wreg+status,2+status,0+pclath+cstack]
  5304                           
  5305                           
  5306                           ;mcc_generated_files/i2c1_slave.c: 290:     I2C1_SlaveSendTxData(i2c1WrData);
  5307     050D  0878               	movf	_i2c1WrData,w	;volatile
  5308     050E  3185  2512  3185   	fcall	_I2C1_SlaveSendTxData
  5309     0511                     i1l337:
  5310     0511  0008               	return
  5311     0512                     __end_of_I2C1_SlaveDefWrInterruptHandler:
  5312                           
  5313                           	psect	text34
  5314     0512                     __ptext34:	
  5315 ;; *************** function _I2C1_SlaveSendTxData *****************
  5316 ;; Defined at:
  5317 ;;		line 425 in file "mcc_generated_files/i2c1_slave.c"
  5318 ;; Parameters:    Size  Location     Type
  5319 ;;  data            1    wreg     unsigned char 
  5320 ;; Auto vars:     Size  Location     Type
  5321 ;;  data            1    0[COMMON] unsigned char 
  5322 ;; Return value:  Size  Location     Type
  5323 ;;                  1    wreg      void 
  5324 ;; Registers used:
  5325 ;;		wreg
  5326 ;; Tracked objects:
  5327 ;;		On entry : 0/0
  5328 ;;		On exit  : 0/0
  5329 ;;		Unchanged: 0/0
  5330 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5331 ;;      Params:         0       0       0       0
  5332 ;;      Locals:         1       0       0       0
  5333 ;;      Temps:          0       0       0       0
  5334 ;;      Totals:         1       0       0       0
  5335 ;;Total ram usage:        1 bytes
  5336 ;; Hardware stack levels used: 1
  5337 ;; This function calls:
  5338 ;;		Nothing
  5339 ;; This function is called by:
  5340 ;;		_I2C1_SlaveDefWrInterruptHandler
  5341 ;;		_I2C1_Write
  5342 ;; This function uses a non-reentrant model
  5343 ;;
  5344                           
  5345     0512                     _I2C1_SlaveSendTxData:	
  5346                           ;psect for function _I2C1_SlaveSendTxData
  5347                           
  5348                           
  5349                           ;incstack = 0
  5350                           ; Regs used in _I2C1_SlaveSendTxData: [wreg]
  5351                           ;I2C1_SlaveSendTxData@data stored from wreg
  5352     0512  00F0               	movwf	I2C1_SlaveSendTxData@data
  5353     0513                     i1l1710:
  5354                           
  5355                           ;mcc_generated_files/i2c1_slave.c: 425: static __attribute__((inline)) void I2C1_SlaveSe
      +                          ndTxData(uint8_t data);mcc_generated_files/i2c1_slave.c: 426: {;mcc_generated_files/i2c1
      +                          _slave.c: 427:     SSP1BUF = data;
  5356     0513  0870               	movf	I2C1_SlaveSendTxData@data,w
  5357     0514  0143               	movlb	3	; select bank3
  5358     0515  008C               	movwf	12	;volatile
  5359     0516                     i1l413:
  5360     0516  0008               	return
  5361     0517                     __end_of_I2C1_SlaveSendTxData:
  5362                           
  5363                           	psect	text35
  5364     052A                     __ptext35:	
  5365 ;; *************** function _I2C1_SlaveReleaseClock *****************
  5366 ;; Defined at:
  5367 ;;		line 395 in file "mcc_generated_files/i2c1_slave.c"
  5368 ;; Parameters:    Size  Location     Type
  5369 ;;		None
  5370 ;; Auto vars:     Size  Location     Type
  5371 ;;		None
  5372 ;; Return value:  Size  Location     Type
  5373 ;;                  1    wreg      void 
  5374 ;; Registers used:
  5375 ;;		None
  5376 ;; Tracked objects:
  5377 ;;		On entry : 0/0
  5378 ;;		On exit  : 0/0
  5379 ;;		Unchanged: 0/0
  5380 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5381 ;;      Params:         0       0       0       0
  5382 ;;      Locals:         0       0       0       0
  5383 ;;      Temps:          0       0       0       0
  5384 ;;      Totals:         0       0       0       0
  5385 ;;Total ram usage:        0 bytes
  5386 ;; Hardware stack levels used: 1
  5387 ;; This function calls:
  5388 ;;		Nothing
  5389 ;; This function is called by:
  5390 ;;		_I2C1_Isr
  5391 ;; This function uses a non-reentrant model
  5392 ;;
  5393                           
  5394     052A                     _I2C1_SlaveReleaseClock:	
  5395                           ;psect for function _I2C1_SlaveReleaseClock
  5396                           
  5397     052A                     i1l1950:	
  5398                           ;incstack = 0
  5399                           ; Regs used in _I2C1_SlaveReleaseClock: []
  5400                           
  5401                           
  5402                           ;mcc_generated_files/i2c1_slave.c: 397:     SSP1CON1bits.CKP = 1;
  5403     052A  0143               	movlb	3	; select bank3
  5404     052B  1610               	bsf	16,4	;volatile
  5405     052C                     i1l395:
  5406     052C  0008               	return
  5407     052D                     __end_of_I2C1_SlaveReleaseClock:
  5408                           
  5409                           	psect	text36
  5410     041C                     __ptext36:	
  5411 ;; *************** function _I2C1_SlaveRdCallBack *****************
  5412 ;; Defined at:
  5413 ;;		line 244 in file "mcc_generated_files/i2c1_slave.c"
  5414 ;; Parameters:    Size  Location     Type
  5415 ;;		None
  5416 ;; Auto vars:     Size  Location     Type
  5417 ;;		None
  5418 ;; Return value:  Size  Location     Type
  5419 ;;                  1    wreg      void 
  5420 ;; Registers used:
  5421 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5422 ;; Tracked objects:
  5423 ;;		On entry : 0/0
  5424 ;;		On exit  : 0/0
  5425 ;;		Unchanged: 0/0
  5426 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5427 ;;      Params:         0       0       0       0
  5428 ;;      Locals:         0       0       0       0
  5429 ;;      Temps:          0       0       0       0
  5430 ;;      Totals:         0       0       0       0
  5431 ;;Total ram usage:        0 bytes
  5432 ;; Hardware stack levels used: 1
  5433 ;; Hardware stack levels required when called: 2
  5434 ;; This function calls:
  5435 ;;		NULL
  5436 ;;		_I2C1_SlaveDefRdInterruptHandler
  5437 ;;		_data_recv_handler
  5438 ;; This function is called by:
  5439 ;;		_I2C1_Isr
  5440 ;; This function uses a non-reentrant model
  5441 ;;
  5442                           
  5443     041C                     _I2C1_SlaveRdCallBack:	
  5444                           ;psect for function _I2C1_SlaveRdCallBack
  5445                           
  5446     041C                     i1l1940:	
  5447                           ;incstack = 0
  5448                           ; Regs used in _I2C1_SlaveRdCallBack: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5449                           
  5450                           
  5451                           ;mcc_generated_files/i2c1_slave.c: 246:     if (I2C1_SlaveRdInterruptHandler)
  5452     041C  0140               	movlb	0	; select bank0
  5453     041D  082D               	movf	_I2C1_SlaveRdInterruptHandler,w
  5454     041E  042E               	iorwf	_I2C1_SlaveRdInterruptHandler+1,w
  5455     041F  1903               	btfsc	3,2
  5456     0420  2C22               	goto	u50_21
  5457     0421  2C23               	goto	u50_20
  5458     0422                     u50_21:
  5459     0422  2C34               	goto	i1l322
  5460     0423                     u50_20:
  5461     0423                     i1l1942:
  5462                           
  5463                           ;mcc_generated_files/i2c1_slave.c: 247:     {;mcc_generated_files/i2c1_slave.c: 249:    
      +                               I2C1_SlaveRdInterruptHandler();
  5464     0423  082E               	movf	_I2C1_SlaveRdInterruptHandler+1,w
  5465     0424  008A               	movwf	10
  5466     0425  082D               	movf	_I2C1_SlaveRdInterruptHandler,w
  5467     0426  000A               	callw
  5468     0427  3184               	pagesel	$
  5469     0428                     i1l1944:
  5470                           
  5471                           ;mcc_generated_files/i2c1_slave.c: 251:         if(i2cReadCnt == 3)
  5472     0428  3003               	movlw	3
  5473     0429  0679               	xorwf	_i2cReadCnt@i2c1_slave$F749,w	;volatile
  5474     042A  1D03               	btfss	3,2
  5475     042B  2C2D               	goto	u51_21
  5476     042C  2C2E               	goto	u51_20
  5477     042D                     u51_21:
  5478     042D  2C34               	goto	i1l322
  5479     042E                     u51_20:
  5480     042E                     i1l1946:
  5481                           
  5482                           ;mcc_generated_files/i2c1_slave.c: 252:         {;mcc_generated_files/i2c1_slave.c: 253:
      +                                       data_recv_handler();
  5483     042E  3185  2533  3184   	fcall	_data_recv_handler
  5484     0431                     i1l1948:
  5485                           
  5486                           ;mcc_generated_files/i2c1_slave.c: 254:             debug = 1;
  5487     0431  0140               	movlb	0	; select bank0
  5488     0432  01B3               	clrf	_debug
  5489     0433  0AB3               	incf	_debug,f
  5490     0434                     i1l322:
  5491     0434  0008               	return
  5492     0435                     __end_of_I2C1_SlaveRdCallBack:
  5493                           
  5494                           	psect	text37
  5495     0533                     __ptext37:	
  5496 ;; *************** function _data_recv_handler *****************
  5497 ;; Defined at:
  5498 ;;		line 24 in file "flash_memory_filling.c"
  5499 ;; Parameters:    Size  Location     Type
  5500 ;;		None
  5501 ;; Auto vars:     Size  Location     Type
  5502 ;;		None
  5503 ;; Return value:  Size  Location     Type
  5504 ;;                  1    wreg      void 
  5505 ;; Registers used:
  5506 ;;		None
  5507 ;; Tracked objects:
  5508 ;;		On entry : 0/0
  5509 ;;		On exit  : 0/0
  5510 ;;		Unchanged: 0/0
  5511 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5512 ;;      Params:         0       0       0       0
  5513 ;;      Locals:         0       0       0       0
  5514 ;;      Temps:          0       0       0       0
  5515 ;;      Totals:         0       0       0       0
  5516 ;;Total ram usage:        0 bytes
  5517 ;; Hardware stack levels used: 1
  5518 ;; This function calls:
  5519 ;;		Nothing
  5520 ;; This function is called by:
  5521 ;;		_I2C1_SlaveRdCallBack
  5522 ;; This function uses a non-reentrant model
  5523 ;;
  5524                           
  5525     0533                     _data_recv_handler:	
  5526                           ;psect for function _data_recv_handler
  5527                           
  5528     0533                     i1l37:	
  5529                           ;incstack = 0
  5530                           ; Regs used in _data_recv_handler: []
  5531                           
  5532     0533  0008               	return
  5533     0534                     __end_of_data_recv_handler:
  5534                           
  5535                           	psect	text38
  5536     03E9                     __ptext38:	
  5537 ;; *************** function _I2C1_SlaveDefRdInterruptHandler *****************
  5538 ;; Defined at:
  5539 ;;		line 260 in file "mcc_generated_files/i2c1_slave.c"
  5540 ;; Parameters:    Size  Location     Type
  5541 ;;		None
  5542 ;; Auto vars:     Size  Location     Type
  5543 ;;		None
  5544 ;; Return value:  Size  Location     Type
  5545 ;;                  1    wreg      void 
  5546 ;; Registers used:
  5547 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5548 ;; Tracked objects:
  5549 ;;		On entry : 0/0
  5550 ;;		On exit  : 0/0
  5551 ;;		Unchanged: 0/0
  5552 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5553 ;;      Params:         0       0       0       0
  5554 ;;      Locals:         0       0       0       0
  5555 ;;      Temps:          1       0       0       0
  5556 ;;      Totals:         1       0       0       0
  5557 ;;Total ram usage:        1 bytes
  5558 ;; Hardware stack levels used: 1
  5559 ;; Hardware stack levels required when called: 1
  5560 ;; This function calls:
  5561 ;;		_I2C1_SlaveGetRxData
  5562 ;; This function is called by:
  5563 ;;		_I2C1_Open
  5564 ;;		_I2C1_SlaveRdCallBack
  5565 ;; This function uses a non-reentrant model
  5566 ;;
  5567                           
  5568     03E9                     _I2C1_SlaveDefRdInterruptHandler:	
  5569                           ;psect for function _I2C1_SlaveDefRdInterruptHandler
  5570                           
  5571     03E9                     i1l1758:	
  5572                           ;incstack = 0
  5573                           ; Regs used in _I2C1_SlaveDefRdInterruptHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pcl
      +                          ath+cstack]
  5574                           
  5575                           
  5576                           ;mcc_generated_files/i2c1_slave.c: 262:     i2c1RdData = I2C1_SlaveGetRxData();
  5577     03E9  3185  2530  3183   	fcall	_I2C1_SlaveGetRxData
  5578     03EC  0140               	movlb	0	; select bank0
  5579     03ED  00B6               	movwf	_i2c1RdData	;volatile
  5580     03EE                     i1l1760:
  5581                           
  5582                           ;mcc_generated_files/i2c1_slave.c: 264:     if(i2cReadCnt < 3)
  5583     03EE  3003               	movlw	3
  5584     03EF  0279               	subwf	_i2cReadCnt@i2c1_slave$F749,w	;volatile
  5585     03F0  1803               	skipnc
  5586     03F1  2BF3               	goto	u42_21
  5587     03F2  2BF4               	goto	u42_20
  5588     03F3                     u42_21:
  5589     03F3  2BFB               	goto	i1l1764
  5590     03F4                     u42_20:
  5591     03F4                     i1l1762:
  5592                           
  5593                           ;mcc_generated_files/i2c1_slave.c: 265:     {;mcc_generated_files/i2c1_slave.c: 266:    
      +                               i2cDataRead[i2cReadCnt] = i2c1RdData;
  5594     03F4  0879               	movf	_i2cReadCnt@i2c1_slave$F749,w
  5595     03F5  3E20               	addlw	(low (_i2cDataRead| 0))& (0+255)
  5596     03F6  0086               	movwf	6
  5597     03F7  0187               	clrf	7
  5598     03F8  0836               	movf	_i2c1RdData,w	;volatile
  5599     03F9  0081               	movwf	1
  5600                           
  5601                           ;mcc_generated_files/i2c1_slave.c: 267:     }
  5602     03FA  2BFE               	goto	i1l1766
  5603     03FB                     i1l1764:
  5604                           
  5605                           ;mcc_generated_files/i2c1_slave.c: 269:     {;mcc_generated_files/i2c1_slave.c: 270:    
      +                               I2C1_SlaveGetRxData();
  5606     03FB  3185  2530  3183   	fcall	_I2C1_SlaveGetRxData
  5607     03FE                     i1l1766:
  5608                           
  5609                           ;mcc_generated_files/i2c1_slave.c: 273:     i2cReadCnt++;
  5610     03FE  3001               	movlw	1
  5611     03FF  00F0               	movwf	??_I2C1_SlaveDefRdInterruptHandler
  5612     0400  0870               	movf	??_I2C1_SlaveDefRdInterruptHandler,w
  5613     0401  07F9               	addwf	_i2cReadCnt@i2c1_slave$F749,f	;volatile
  5614     0402                     i1l327:
  5615     0402  0008               	return
  5616     0403                     __end_of_I2C1_SlaveDefRdInterruptHandler:
  5617                           
  5618                           	psect	text39
  5619     04B8                     __ptext39:	
  5620 ;; *************** function _I2C1_SlaveIsTxBufEmpty *****************
  5621 ;; Defined at:
  5622 ;;		line 415 in file "mcc_generated_files/i2c1_slave.c"
  5623 ;; Parameters:    Size  Location     Type
  5624 ;;		None
  5625 ;; Auto vars:     Size  Location     Type
  5626 ;;		None
  5627 ;; Return value:  Size  Location     Type
  5628 ;;                  1    wreg      _Bool 
  5629 ;; Registers used:
  5630 ;;		wreg, status,0
  5631 ;; Tracked objects:
  5632 ;;		On entry : 0/0
  5633 ;;		On exit  : 0/0
  5634 ;;		Unchanged: 0/0
  5635 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5636 ;;      Params:         0       0       0       0
  5637 ;;      Locals:         0       0       0       0
  5638 ;;      Temps:          0       0       0       0
  5639 ;;      Totals:         0       0       0       0
  5640 ;;Total ram usage:        0 bytes
  5641 ;; Hardware stack levels used: 1
  5642 ;; This function calls:
  5643 ;;		Nothing
  5644 ;; This function is called by:
  5645 ;;		_I2C1_Isr
  5646 ;; This function uses a non-reentrant model
  5647 ;;
  5648                           
  5649     04B8                     _I2C1_SlaveIsTxBufEmpty:	
  5650                           ;psect for function _I2C1_SlaveIsTxBufEmpty
  5651                           
  5652     04B8                     i1l1928:	
  5653                           ;incstack = 0
  5654                           ; Regs used in _I2C1_SlaveIsTxBufEmpty: [wreg+status,0]
  5655                           
  5656                           
  5657                           ;mcc_generated_files/i2c1_slave.c: 417:     return !SSP1STATbits.BF;
  5658     04B8  1003               	clrc
  5659     04B9  0143               	movlb	3	; select bank3
  5660     04BA  1C0F               	btfss	15,0	;volatile
  5661     04BB  1403               	setc
  5662     04BC  3000               	movlw	0
  5663     04BD  3D09               	addwfc	9,w
  5664     04BE                     i1l407:
  5665     04BE  0008               	return
  5666     04BF                     __end_of_I2C1_SlaveIsTxBufEmpty:
  5667                           
  5668                           	psect	text40
  5669     0520                     __ptext40:	
  5670 ;; *************** function _I2C1_SlaveIsRxBufFull *****************
  5671 ;; Defined at:
  5672 ;;		line 420 in file "mcc_generated_files/i2c1_slave.c"
  5673 ;; Parameters:    Size  Location     Type
  5674 ;;		None
  5675 ;; Auto vars:     Size  Location     Type
  5676 ;;		None
  5677 ;; Return value:  Size  Location     Type
  5678 ;;                  1    wreg      _Bool 
  5679 ;; Registers used:
  5680 ;;		wreg, status,2, status,0
  5681 ;; Tracked objects:
  5682 ;;		On entry : 0/0
  5683 ;;		On exit  : 0/0
  5684 ;;		Unchanged: 0/0
  5685 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5686 ;;      Params:         0       0       0       0
  5687 ;;      Locals:         0       0       0       0
  5688 ;;      Temps:          0       0       0       0
  5689 ;;      Totals:         0       0       0       0
  5690 ;;Total ram usage:        0 bytes
  5691 ;; Hardware stack levels used: 1
  5692 ;; This function calls:
  5693 ;;		Nothing
  5694 ;; This function is called by:
  5695 ;;		_I2C1_Isr
  5696 ;; This function uses a non-reentrant model
  5697 ;;
  5698                           
  5699     0520                     _I2C1_SlaveIsRxBufFull:	
  5700                           ;psect for function _I2C1_SlaveIsRxBufFull
  5701                           
  5702     0520                     i1l1936:	
  5703                           ;incstack = 0
  5704                           ; Regs used in _I2C1_SlaveIsRxBufFull: [wreg+status,2+status,0]
  5705                           
  5706                           
  5707                           ;mcc_generated_files/i2c1_slave.c: 422:     return SSP1STATbits.BF;
  5708     0520  0143               	movlb	3	; select bank3
  5709     0521  080F               	movf	15,w	;volatile
  5710     0522  3901               	andlw	1
  5711     0523                     i1l410:
  5712     0523  0008               	return
  5713     0524                     __end_of_I2C1_SlaveIsRxBufFull:
  5714                           
  5715                           	psect	text41
  5716     0517                     __ptext41:	
  5717 ;; *************** function _I2C1_SlaveIsRead *****************
  5718 ;; Defined at:
  5719 ;;		line 385 in file "mcc_generated_files/i2c1_slave.c"
  5720 ;; Parameters:    Size  Location     Type
  5721 ;;		None
  5722 ;; Auto vars:     Size  Location     Type
  5723 ;;		None
  5724 ;; Return value:  Size  Location     Type
  5725 ;;                  1    wreg      _Bool 
  5726 ;; Registers used:
  5727 ;;		wreg, status,2, status,0
  5728 ;; Tracked objects:
  5729 ;;		On entry : 0/0
  5730 ;;		On exit  : 0/0
  5731 ;;		Unchanged: 0/0
  5732 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5733 ;;      Params:         0       0       0       0
  5734 ;;      Locals:         0       0       0       0
  5735 ;;      Temps:          0       0       0       0
  5736 ;;      Totals:         0       0       0       0
  5737 ;;Total ram usage:        0 bytes
  5738 ;; Hardware stack levels used: 1
  5739 ;; This function calls:
  5740 ;;		Nothing
  5741 ;; This function is called by:
  5742 ;;		_I2C1_Isr
  5743 ;;		_I2C1_IsRead
  5744 ;; This function uses a non-reentrant model
  5745 ;;
  5746                           
  5747     0517                     _I2C1_SlaveIsRead:	
  5748                           ;psect for function _I2C1_SlaveIsRead
  5749                           
  5750     0517                     i1l1914:	
  5751                           ;incstack = 0
  5752                           ; Regs used in _I2C1_SlaveIsRead: [wreg+status,2+status,0]
  5753                           
  5754                           
  5755                           ;mcc_generated_files/i2c1_slave.c: 387:     return (SSP1STATbits.R_nW);
  5756     0517  0143               	movlb	3	; select bank3
  5757     0518  0C0F               	rrf	15,w	;volatile
  5758     0519  0C89               	rrf	9,f
  5759     051A  3901               	andlw	1
  5760     051B                     i1l389:
  5761     051B  0008               	return
  5762     051C                     __end_of_I2C1_SlaveIsRead:
  5763                           
  5764                           	psect	text42
  5765     04BF                     __ptext42:	
  5766 ;; *************** function _I2C1_SlaveIsAddr *****************
  5767 ;; Defined at:
  5768 ;;		line 380 in file "mcc_generated_files/i2c1_slave.c"
  5769 ;; Parameters:    Size  Location     Type
  5770 ;;		None
  5771 ;; Auto vars:     Size  Location     Type
  5772 ;;		None
  5773 ;; Return value:  Size  Location     Type
  5774 ;;                  1    wreg      _Bool 
  5775 ;; Registers used:
  5776 ;;		wreg, status,0
  5777 ;; Tracked objects:
  5778 ;;		On entry : 0/0
  5779 ;;		On exit  : 0/0
  5780 ;;		Unchanged: 0/0
  5781 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5782 ;;      Params:         0       0       0       0
  5783 ;;      Locals:         0       0       0       0
  5784 ;;      Temps:          0       0       0       0
  5785 ;;      Totals:         0       0       0       0
  5786 ;;Total ram usage:        0 bytes
  5787 ;; Hardware stack levels used: 1
  5788 ;; This function calls:
  5789 ;;		Nothing
  5790 ;; This function is called by:
  5791 ;;		_I2C1_Isr
  5792 ;; This function uses a non-reentrant model
  5793 ;;
  5794                           
  5795     04BF                     _I2C1_SlaveIsAddr:	
  5796                           ;psect for function _I2C1_SlaveIsAddr
  5797                           
  5798     04BF                     i1l1920:	
  5799                           ;incstack = 0
  5800                           ; Regs used in _I2C1_SlaveIsAddr: [wreg+status,0]
  5801                           
  5802                           
  5803                           ;mcc_generated_files/i2c1_slave.c: 382:     return !(SSP1STATbits.D_nA);
  5804     04BF  1003               	clrc
  5805     04C0  0143               	movlb	3	; select bank3
  5806     04C1  1E8F               	btfss	15,5	;volatile
  5807     04C2  1403               	setc
  5808     04C3  3000               	movlw	0
  5809     04C4  3D09               	addwfc	9,w
  5810     04C5                     i1l386:
  5811     04C5  0008               	return
  5812     04C6                     __end_of_I2C1_SlaveIsAddr:
  5813                           
  5814                           	psect	text43
  5815     052D                     __ptext43:	
  5816 ;; *************** function _I2C1_SlaveClearIrq *****************
  5817 ;; Defined at:
  5818 ;;		line 390 in file "mcc_generated_files/i2c1_slave.c"
  5819 ;; Parameters:    Size  Location     Type
  5820 ;;		None
  5821 ;; Auto vars:     Size  Location     Type
  5822 ;;		None
  5823 ;; Return value:  Size  Location     Type
  5824 ;;                  1    wreg      void 
  5825 ;; Registers used:
  5826 ;;		None
  5827 ;; Tracked objects:
  5828 ;;		On entry : 0/0
  5829 ;;		On exit  : 0/0
  5830 ;;		Unchanged: 0/0
  5831 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5832 ;;      Params:         0       0       0       0
  5833 ;;      Locals:         0       0       0       0
  5834 ;;      Temps:          0       0       0       0
  5835 ;;      Totals:         0       0       0       0
  5836 ;;Total ram usage:        0 bytes
  5837 ;; Hardware stack levels used: 1
  5838 ;; This function calls:
  5839 ;;		Nothing
  5840 ;; This function is called by:
  5841 ;;		_I2C1_Isr
  5842 ;; This function uses a non-reentrant model
  5843 ;;
  5844                           
  5845     052D                     _I2C1_SlaveClearIrq:	
  5846                           ;psect for function _I2C1_SlaveClearIrq
  5847                           
  5848     052D                     i1l1918:	
  5849                           ;incstack = 0
  5850                           ; Regs used in _I2C1_SlaveClearIrq: []
  5851                           
  5852                           
  5853                           ;mcc_generated_files/i2c1_slave.c: 392:     PIR1bits.SSP1IF = 0;
  5854     052D  014E               	movlb	14	; select bank14
  5855     052E  108D               	bcf	13,1	;volatile
  5856     052F                     i1l392:
  5857     052F  0008               	return
  5858     0530                     __end_of_I2C1_SlaveClearIrq:
  5859                           
  5860                           	psect	text44
  5861     04A1                     __ptext44:	
  5862 ;; *************** function _I2C1_SlaveAddrCallBack *****************
  5863 ;; Defined at:
  5864 ;;		line 298 in file "mcc_generated_files/i2c1_slave.c"
  5865 ;; Parameters:    Size  Location     Type
  5866 ;;		None
  5867 ;; Auto vars:     Size  Location     Type
  5868 ;;		None
  5869 ;; Return value:  Size  Location     Type
  5870 ;;                  1    wreg      void 
  5871 ;; Registers used:
  5872 ;;		wreg, status,2, status,0, pclath, cstack
  5873 ;; Tracked objects:
  5874 ;;		On entry : 0/0
  5875 ;;		On exit  : 0/0
  5876 ;;		Unchanged: 0/0
  5877 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5878 ;;      Params:         0       0       0       0
  5879 ;;      Locals:         0       0       0       0
  5880 ;;      Temps:          0       0       0       0
  5881 ;;      Totals:         0       0       0       0
  5882 ;;Total ram usage:        0 bytes
  5883 ;; Hardware stack levels used: 1
  5884 ;; Hardware stack levels required when called: 2
  5885 ;; This function calls:
  5886 ;;		NULL
  5887 ;;		_I2C1_SlaveDefAddrInterruptHandler
  5888 ;; This function is called by:
  5889 ;;		_I2C1_Isr
  5890 ;; This function uses a non-reentrant model
  5891 ;;
  5892                           
  5893     04A1                     _I2C1_SlaveAddrCallBack:	
  5894                           ;psect for function _I2C1_SlaveAddrCallBack
  5895                           
  5896     04A1                     i1l1924:	
  5897                           ;incstack = 0
  5898                           ; Regs used in _I2C1_SlaveAddrCallBack: [wreg+status,2+status,0+pclath+cstack]
  5899                           
  5900                           
  5901                           ;mcc_generated_files/i2c1_slave.c: 300:     if (I2C1_SlaveAddrInterruptHandler) {
  5902     04A1  0140               	movlb	0	; select bank0
  5903     04A2  0829               	movf	_I2C1_SlaveAddrInterruptHandler,w
  5904     04A3  042A               	iorwf	_I2C1_SlaveAddrInterruptHandler+1,w
  5905     04A4  1903               	btfsc	3,2
  5906     04A5  2CA7               	goto	u48_21
  5907     04A6  2CA8               	goto	u48_20
  5908     04A7                     u48_21:
  5909     04A7  2CAD               	goto	i1l344
  5910     04A8                     u48_20:
  5911     04A8                     i1l1926:
  5912                           
  5913                           ;mcc_generated_files/i2c1_slave.c: 301:         I2C1_SlaveAddrInterruptHandler();
  5914     04A8  082A               	movf	_I2C1_SlaveAddrInterruptHandler+1,w
  5915     04A9  008A               	movwf	10
  5916     04AA  0829               	movf	_I2C1_SlaveAddrInterruptHandler,w
  5917     04AB  000A               	callw
  5918     04AC  3184               	pagesel	$
  5919     04AD                     i1l344:
  5920     04AD  0008               	return
  5921     04AE                     __end_of_I2C1_SlaveAddrCallBack:
  5922                           
  5923                           	psect	text45
  5924     04C6                     __ptext45:	
  5925 ;; *************** function _I2C1_SlaveDefAddrInterruptHandler *****************
  5926 ;; Defined at:
  5927 ;;		line 306 in file "mcc_generated_files/i2c1_slave.c"
  5928 ;; Parameters:    Size  Location     Type
  5929 ;;		None
  5930 ;; Auto vars:     Size  Location     Type
  5931 ;;		None
  5932 ;; Return value:  Size  Location     Type
  5933 ;;                  1    wreg      void 
  5934 ;; Registers used:
  5935 ;;		wreg, status,2, pclath, cstack
  5936 ;; Tracked objects:
  5937 ;;		On entry : 0/0
  5938 ;;		On exit  : 0/0
  5939 ;;		Unchanged: 0/0
  5940 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5941 ;;      Params:         0       0       0       0
  5942 ;;      Locals:         0       0       0       0
  5943 ;;      Temps:          0       0       0       0
  5944 ;;      Totals:         0       0       0       0
  5945 ;;Total ram usage:        0 bytes
  5946 ;; Hardware stack levels used: 1
  5947 ;; Hardware stack levels required when called: 1
  5948 ;; This function calls:
  5949 ;;		_I2C1_SlaveGetRxData
  5950 ;; This function is called by:
  5951 ;;		_I2C1_Open
  5952 ;;		_I2C1_SlaveAddrCallBack
  5953 ;; This function uses a non-reentrant model
  5954 ;;
  5955                           
  5956     04C6                     _I2C1_SlaveDefAddrInterruptHandler:	
  5957                           ;psect for function _I2C1_SlaveDefAddrInterruptHandler
  5958                           
  5959     04C6                     i1l1770:	
  5960                           ;incstack = 0
  5961                           ; Regs used in _I2C1_SlaveDefAddrInterruptHandler: [wreg+status,2+pclath+cstack]
  5962                           
  5963                           
  5964                           ;mcc_generated_files/i2c1_slave.c: 307:     i2c1SlaveAddr = I2C1_SlaveGetRxData();
  5965     04C6  3185  2530  3184   	fcall	_I2C1_SlaveGetRxData
  5966     04C9  0140               	movlb	0	; select bank0
  5967     04CA  00B5               	movwf	_i2c1SlaveAddr	;volatile
  5968     04CB                     i1l1772:
  5969                           
  5970                           ;mcc_generated_files/i2c1_slave.c: 309:     i2cReadCnt = 0;
  5971     04CB  01F9               	clrf	_i2cReadCnt@i2c1_slave$F749	;volatile
  5972     04CC                     i1l347:
  5973     04CC  0008               	return
  5974     04CD                     __end_of_I2C1_SlaveDefAddrInterruptHandler:
  5975                           
  5976                           	psect	text46
  5977     0530                     __ptext46:	
  5978 ;; *************** function _I2C1_SlaveGetRxData *****************
  5979 ;; Defined at:
  5980 ;;		line 430 in file "mcc_generated_files/i2c1_slave.c"
  5981 ;; Parameters:    Size  Location     Type
  5982 ;;		None
  5983 ;; Auto vars:     Size  Location     Type
  5984 ;;		None
  5985 ;; Return value:  Size  Location     Type
  5986 ;;                  1    wreg      unsigned char 
  5987 ;; Registers used:
  5988 ;;		wreg
  5989 ;; Tracked objects:
  5990 ;;		On entry : 0/0
  5991 ;;		On exit  : 0/0
  5992 ;;		Unchanged: 0/0
  5993 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5994 ;;      Params:         0       0       0       0
  5995 ;;      Locals:         0       0       0       0
  5996 ;;      Temps:          0       0       0       0
  5997 ;;      Totals:         0       0       0       0
  5998 ;;Total ram usage:        0 bytes
  5999 ;; Hardware stack levels used: 1
  6000 ;; This function calls:
  6001 ;;		Nothing
  6002 ;; This function is called by:
  6003 ;;		_I2C1_SlaveDefRdInterruptHandler
  6004 ;;		_I2C1_SlaveDefAddrInterruptHandler
  6005 ;;		_I2C1_Read
  6006 ;; This function uses a non-reentrant model
  6007 ;;
  6008                           
  6009     0530                     _I2C1_SlaveGetRxData:	
  6010                           ;psect for function _I2C1_SlaveGetRxData
  6011                           
  6012     0530                     i1l1706:	
  6013                           ;incstack = 0
  6014                           ; Regs used in _I2C1_SlaveGetRxData: [wreg]
  6015                           
  6016                           
  6017                           ;mcc_generated_files/i2c1_slave.c: 432:     return SSP1BUF;
  6018     0530  0143               	movlb	3	; select bank3
  6019     0531  080C               	movf	12,w	;volatile
  6020     0532                     i1l416:
  6021     0532  0008               	return
  6022     0533                     __end_of_I2C1_SlaveGetRxData:
  6023     007E                     btemp	set	126	;btemp
  6024     007E                     int$flags	set	126
  6025     007E                     wtemp0	set	126
  6026                           
  6027                           	psect	idloc
  6028                           
  6029                           ;Config register IDLOC0 @ 0x8000
  6030                           ;	unspecified, using default values
  6031     8000                     	org	32768
  6032     8000  3FFF               	dw	16383
  6033                           
  6034                           ;Config register IDLOC1 @ 0x8001
  6035                           ;	unspecified, using default values
  6036     8001                     	org	32769
  6037     8001  3FFF               	dw	16383
  6038                           
  6039                           ;Config register IDLOC2 @ 0x8002
  6040                           ;	unspecified, using default values
  6041     8002                     	org	32770
  6042     8002  3FFF               	dw	16383
  6043                           
  6044                           ;Config register IDLOC3 @ 0x8003
  6045                           ;	unspecified, using default values
  6046     8003                     	org	32771
  6047     8003  3FFF               	dw	16383
  6048                           
  6049                           	psect	config
  6050                           
  6051                           ;Config register CONFIG1 @ 0x8007
  6052                           ;	External Oscillator Mode Selection bits
  6053                           ;	FEXTOSC = OFF, Oscillator not enabled
  6054                           ;	Power-up Default Value for COSC bits
  6055                           ;	RSTOSC = HFINTOSC_32MHZ, HFINTOSC (32 MHz)
  6056                           ;	Clock Out Enable bit
  6057                           ;	CLKOUTEN = OFF, CLKOUT function is disabled; I/O function on RA4
  6058                           ;	VDD Range Analog Calibration Selection bit
  6059                           ;	VDDAR = HI, Internal analog systems are calibrated for operation between VDD = 2.3V - 
      +                          5.5V
  6060     8007                     	org	32775
  6061     8007  3FCD               	dw	16333
  6062                           
  6063                           ;Config register CONFIG2 @ 0x8008
  6064                           ;	Master Clear Enable bit
  6065                           ;	MCLRE = EXTMCLR, If LVP = 0, MCLR pin is MCLR; If LVP = 1, RA3 pin function is MCLR
  6066                           ;	Power-up Timer Selection bits
  6067                           ;	PWRTS = PWRT_OFF, PWRT is disabled
  6068                           ;	WDT Operating Mode bits
  6069                           ;	WDTE = OFF, WDT disabled; SEN is ignored
  6070                           ;	Brown-out Reset Enable bits
  6071                           ;	BOREN = ON, Brown-out Reset Enabled, SBOREN bit is ignored
  6072                           ;	Brown-out Reset Voltage Selection bit
  6073                           ;	BORV = LO, Brown-out Reset Voltage (VBOR) set to 1.9V
  6074                           ;	PPSLOCKED One-Way Set Enable bit
  6075                           ;	PPS1WAY = ON, The PPSLOCKED bit can be set once after an unlocking sequence is execute
      +                          d; once PPSLOCKED is set, all future changes to PPS registers are prevented
  6076                           ;	Stack Overflow/Underflow Reset Enable bit
  6077                           ;	STVREN = ON, Stack Overflow or Underflow will cause a reset
  6078     8008                     	org	32776
  6079     8008  3FE7               	dw	16359
  6080                           
  6081                           ;Config register CONFIG3 @ 0x8009
  6082                           ;	unspecified, using default values
  6083     8009                     	org	32777
  6084     8009  3FFF               	dw	16383
  6085                           
  6086                           ;Config register CONFIG4 @ 0x800A
  6087                           ;	Boot Block Size Selection bits
  6088                           ;	BBSIZE = BB512, 512 words boot block size
  6089                           ;	Boot Block Enable bit
  6090                           ;	BBEN = OFF, Boot Block is disabled
  6091                           ;	SAF Enable bit
  6092                           ;	SAFEN = ON, SAF is enabled
  6093                           ;	Application Block Write Protection bit
  6094                           ;	WRTAPP = OFF, Application Block is not write-protected
  6095                           ;	Boot Block Write Protection bit
  6096                           ;	WRTB = OFF, Boot Block is not write-protected
  6097                           ;	Configuration Registers Write Protection bit
  6098                           ;	WRTC = OFF, Configuration Registers are not write-protected
  6099                           ;	Storage Area Flash (SAF) Write Protection bit
  6100                           ;	WRTSAF = OFF, SAF is not write-protected
  6101                           ;	Low Voltage Programming Enable bit
  6102                           ;	LVP = ON, Low Voltage programming enabled. MCLR/Vpp pin function is MCLR. MCLRE Config
      +                          uration bit is ignored.
  6103     800A                     	org	32778
  6104     800A  3FEF               	dw	16367
  6105                           
  6106                           ;Config register CONFIG5 @ 0x800B
  6107                           ;	User Program Flash Memory Code Protection bit
  6108                           ;	CP = OFF, User Program Flash Memory code protection is disabled
  6109     800B                     	org	32779
  6110     800B  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         93
    Persistent  34
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      11
    BANK0            80     24      52
    BANK1            80      0      64
    BANK2            80      0       0

Pointer List with Targets:

    data_recv_handler@ramBuff	PTR volatile unsigned short  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    FLASH_WriteBlock@flashWordArray	PTR unsigned short  size(1) Largest target is 64
		 -> memory_initialize@ramBuff(BANK1[64]), 

    FLASH_WriteWord@ramBuf	PTR unsigned short  size(1) Largest target is 64
		 -> memory_initialize@ramBuff(BANK1[64]), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_DefaultInterruptHandler(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_DefaultInterruptHandler(), NULL(), 

    I2C1_SlaveSetBusColIntHandler@handler	PTR FTN()void  size(2) Largest target is 1
		 -> I2C1_SlaveDefBusColInterruptHandler(), 

    I2C1_SlaveBusColInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), I2C1_SlaveDefBusColInterruptHandler(), 

    I2C1_SlaveSetWrColIntHandler@handler	PTR FTN()void  size(2) Largest target is 1
		 -> I2C1_SlaveDefWrColInterruptHandler(), 

    I2C1_SlaveWrColInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), I2C1_SlaveDefWrColInterruptHandler(), 

    I2C1_SlaveSetAddrIntHandler@handler	PTR FTN()void  size(2) Largest target is 1
		 -> I2C1_SlaveDefAddrInterruptHandler(), 

    I2C1_SlaveAddrInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), I2C1_SlaveDefAddrInterruptHandler(), 

    I2C1_SlaveSetWriteIntHandler@handler	PTR FTN()void  size(2) Largest target is 1
		 -> I2C1_SlaveDefWrInterruptHandler(), 

    I2C1_SlaveWrInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), I2C1_SlaveDefWrInterruptHandler(), 

    I2C1_SlaveSetReadIntHandler@handler	PTR FTN()void  size(2) Largest target is 1
		 -> I2C1_SlaveDefRdInterruptHandler(), 

    I2C1_SlaveRdInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), I2C1_SlaveDefRdInterruptHandler(), 

    I2C1_SlaveSetIsrHandler@handler	PTR FTN()void  size(2) Largest target is 1
		 -> I2C1_Isr(), 

    MSSP1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), I2C1_Isr(), 


Critical Paths under _main in COMMON

    _memory_initialize->_FLASH_WriteWord
    _FLASH_WriteWord->___wmul
    _FLASH_WriteBlock->_FLASH_EraseBlock
    _TMR0_Initialize->_TMR0_SetInterruptHandler
    _I2C1_Open->_I2C1_SlaveSetAddrIntHandler
    _I2C1_Open->_I2C1_SlaveSetBusColIntHandler
    _I2C1_Open->_I2C1_SlaveSetIsrHandler
    _I2C1_Open->_I2C1_SlaveSetReadIntHandler
    _I2C1_Open->_I2C1_SlaveSetWrColIntHandler
    _I2C1_Open->_I2C1_SlaveSetWriteIntHandler

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _INTERRUPT_InterruptManager->_I2C1_Isr
    _TMR0_ISR->_TMR0_DefaultInterruptHandler
    _I2C1_SlaveDefWrInterruptHandler->_I2C1_SlaveSendTxData
    _I2C1_SlaveRdCallBack->_I2C1_SlaveDefRdInterruptHandler

Critical Paths under _main in BANK0

    _main->_memory_initialize
    _memory_initialize->_FLASH_WriteWord
    _FLASH_WriteWord->_FLASH_WriteBlock

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    6186
                                             22 BANK0      2     2      0
                          _I2C1_Open
                  _SYSTEM_Initialize
         _SensorBoardType_validation
                       _error_signal
                 _getSensorBoardType
                  _memory_initialize
 ---------------------------------------------------------------------------------
 (1) _memory_initialize                                    3     3      0    5344
                                             19 BANK0      3     3      0
                     _FLASH_ReadWord
                    _FLASH_WriteWord
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4    1216
                                              3 COMMON     4     0      4
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _FLASH_WriteWord                                     10     5      5    3666
                                              7 COMMON     1     1      0
                                             10 BANK0      9     4      5
                     _FLASH_ReadWord
                   _FLASH_WriteBlock
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (3) _FLASH_WriteBlock                                    10     7      3     815
                                              0 BANK0     10     7      3
                   _FLASH_EraseBlock
 ---------------------------------------------------------------------------------
 (4) _FLASH_EraseBlock                                     3     1      2     186
                                              3 COMMON     3     1      2
 ---------------------------------------------------------------------------------
 (3) _FLASH_ReadWord                                       3     1      2     276
                                              3 COMMON     3     1      2
 ---------------------------------------------------------------------------------
 (1) _getSensorBoardType                                   2     2      0       0
                                              3 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _error_signal                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SensorBoardType_validation                           1     1      0      44
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0      98
                    _I2C1_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR0_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      0     0      0      98
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR0_SetInterruptHandler                             2     0      2      98
                                              3 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C1_Initialize                                      1     1      0       0
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _I2C1_Open                                            0     0      0     632
                _I2C1_SlaveEnableIrq
                     _I2C1_SlaveOpen
        _I2C1_SlaveSetAddrIntHandler
      _I2C1_SlaveSetBusColIntHandler
            _I2C1_SlaveSetIsrHandler
        _I2C1_SlaveSetReadIntHandler
             _I2C1_SlaveSetSlaveAddr
             _I2C1_SlaveSetSlaveMask
       _I2C1_SlaveSetWrColIntHandler
       _I2C1_SlaveSetWriteIntHandler
 ---------------------------------------------------------------------------------
 (2) _I2C1_SlaveSetWriteIntHandler                         2     0      2      98
                                              3 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _I2C1_SlaveSetWrColIntHandler                         2     0      2      98
                                              3 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _I2C1_SlaveSetSlaveMask                               1     1      0      22
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _I2C1_SlaveSetSlaveAddr                               1     1      0      22
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _I2C1_SlaveSetReadIntHandler                          2     0      2      98
                                              3 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _I2C1_SlaveSetIsrHandler                              2     0      2      98
                                              3 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _I2C1_SlaveSetBusColIntHandler                        2     0      2      98
                                              3 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _I2C1_SlaveSetAddrIntHandler                          2     0      2      98
                                              3 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _I2C1_SlaveOpen                                       1     1      0       0
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _I2C1_SlaveEnableIrq                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _INTERRUPT_InterruptManager                           0     0      0      22
                                NULL *
                           _I2C1_Isr *
                           _TMR0_ISR
 ---------------------------------------------------------------------------------
 (6) _TMR0_ISR                                             0     0      0       0
                                NULL *
       _TMR0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (7) _TMR0_DefaultInterruptHandler                         1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (6) _I2C1_Isr                                             2     2      0      22
                                              1 COMMON     2     2      0
             _I2C1_SlaveAddrCallBack
                 _I2C1_SlaveClearIrq
                   _I2C1_SlaveIsAddr
                   _I2C1_SlaveIsRead
              _I2C1_SlaveIsRxBufFull
             _I2C1_SlaveIsTxBufEmpty
               _I2C1_SlaveRdCallBack
             _I2C1_SlaveReleaseClock
               _I2C1_SlaveWrCallBack
 ---------------------------------------------------------------------------------
 (7) _I2C1_SlaveWrCallBack                                 0     0      0      22
                                NULL *
    _I2C1_SlaveDefWrInterruptHandler *
 ---------------------------------------------------------------------------------
 (8) _I2C1_SlaveDefWrInterruptHandler                      0     0      0      22
               _I2C1_SlaveSendTxData
 ---------------------------------------------------------------------------------
 (9) _I2C1_SlaveSendTxData                                 1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (7) _I2C1_SlaveReleaseClock                               0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C1_SlaveRdCallBack                                 0     0      0       0
                                NULL *
    _I2C1_SlaveDefRdInterruptHandler *
                  _data_recv_handler
 ---------------------------------------------------------------------------------
 (8) _data_recv_handler                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _I2C1_SlaveDefRdInterruptHandler                      1     1      0       0
                                              0 COMMON     1     1      0
                _I2C1_SlaveGetRxData
 ---------------------------------------------------------------------------------
 (7) _I2C1_SlaveIsTxBufEmpty                               0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C1_SlaveIsRxBufFull                                0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C1_SlaveIsRead                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C1_SlaveIsAddr                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C1_SlaveClearIrq                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C1_SlaveAddrCallBack                               0     0      0       0
                                NULL *
  _I2C1_SlaveDefAddrInterruptHandler *
 ---------------------------------------------------------------------------------
 (8) _I2C1_SlaveDefAddrInterruptHandler                    0     0      0       0
                _I2C1_SlaveGetRxData
 ---------------------------------------------------------------------------------
 (9) _I2C1_SlaveGetRxData                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (7) NULL(Fake)                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C1_Open
     _I2C1_SlaveEnableIrq
     _I2C1_SlaveOpen
     _I2C1_SlaveSetAddrIntHandler
     _I2C1_SlaveSetBusColIntHandler
     _I2C1_SlaveSetIsrHandler
     _I2C1_SlaveSetReadIntHandler
     _I2C1_SlaveSetSlaveAddr
     _I2C1_SlaveSetSlaveMask
     _I2C1_SlaveSetWrColIntHandler
     _I2C1_SlaveSetWriteIntHandler
   _SYSTEM_Initialize
     _I2C1_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
     _WDT_Initialize
   _SensorBoardType_validation
   _error_signal
   _getSensorBoardType
   _memory_initialize
     _FLASH_ReadWord
     _FLASH_WriteWord
       _FLASH_ReadWord
       _FLASH_WriteBlock
         _FLASH_EraseBlock
       ___wmul (ARG)
     ___wmul

 _INTERRUPT_InterruptManager (ROOT)
   NULL(Fake) *
   _I2C1_Isr *
     _I2C1_SlaveAddrCallBack
       NULL(Fake) *
       _I2C1_SlaveDefAddrInterruptHandler *
         _I2C1_SlaveGetRxData
     _I2C1_SlaveClearIrq
     _I2C1_SlaveIsAddr
     _I2C1_SlaveIsRead
     _I2C1_SlaveIsRxBufFull
     _I2C1_SlaveIsTxBufEmpty
     _I2C1_SlaveRdCallBack
       NULL(Fake) *
       _I2C1_SlaveDefRdInterruptHandler *
         _I2C1_SlaveGetRxData
       _data_recv_handler *
     _I2C1_SlaveReleaseClock
     _I2C1_SlaveWrCallBack
       NULL(Fake) *
       _I2C1_SlaveDefWrInterruptHandler *
         _I2C1_SlaveSendTxData
   _TMR0_ISR *
     NULL(Fake) *
     _TMR0_DefaultInterruptHandler *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM              F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      8       B       2       78.6%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     18      34       5       65.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0      40       7       80.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
ABS                  0      0      7F      10        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
DATA                 0      0      7F      11        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%
BITSFR32             0      0       0      33        0.0%
SFR32                0      0       0      33        0.0%
BITSFR33             0      0       0      34        0.0%
SFR33                0      0       0      34        0.0%
BITSFR34             0      0       0      35        0.0%
SFR34                0      0       0      35        0.0%
BITSFR35             0      0       0      36        0.0%
SFR35                0      0       0      36        0.0%
BITSFR36             0      0       0      37        0.0%
SFR36                0      0       0      37        0.0%
BITSFR37             0      0       0      38        0.0%
SFR37                0      0       0      38        0.0%
BITSFR38             0      0       0      39        0.0%
SFR38                0      0       0      39        0.0%
BITSFR39             0      0       0      40        0.0%
SFR39                0      0       0      40        0.0%
BITSFR40             0      0       0      41        0.0%
SFR40                0      0       0      41        0.0%
BITSFR41             0      0       0      42        0.0%
SFR41                0      0       0      42        0.0%
BITSFR42             0      0       0      43        0.0%
SFR42                0      0       0      43        0.0%
BITSFR43             0      0       0      44        0.0%
SFR43                0      0       0      44        0.0%
BITSFR44             0      0       0      45        0.0%
SFR44                0      0       0      45        0.0%
BITSFR45             0      0       0      46        0.0%
SFR45                0      0       0      46        0.0%
BITSFR46             0      0       0      47        0.0%
SFR46                0      0       0      47        0.0%
BITSFR47             0      0       0      48        0.0%
SFR47                0      0       0      48        0.0%
BITSFR48             0      0       0      49        0.0%
SFR48                0      0       0      49        0.0%
BITSFR49             0      0       0      50        0.0%
SFR49                0      0       0      50        0.0%
BITSFR50             0      0       0      51        0.0%
SFR50                0      0       0      51        0.0%
BITSFR51             0      0       0      52        0.0%
SFR51                0      0       0      52        0.0%
BITSFR52             0      0       0      53        0.0%
SFR52                0      0       0      53        0.0%
BITSFR53             0      0       0      54        0.0%
SFR53                0      0       0      54        0.0%
BITSFR54             0      0       0      55        0.0%
SFR54                0      0       0      55        0.0%
BITSFR55             0      0       0      56        0.0%
SFR55                0      0       0      56        0.0%
BITSFR56             0      0       0      57        0.0%
SFR56                0      0       0      57        0.0%
BITSFR57             0      0       0      58        0.0%
SFR57                0      0       0      58        0.0%
BITSFR58             0      0       0      59        0.0%
SFR58                0      0       0      59        0.0%
BITSFR59             0      0       0      60        0.0%
SFR59                0      0       0      60        0.0%
BITSFR60             0      0       0      61        0.0%
SFR60                0      0       0      61        0.0%
BITSFR61             0      0       0      62        0.0%
SFR61                0      0       0      62        0.0%
BITSFR62             0      0       0      63        0.0%
SFR62                0      0       0      63        0.0%
BITSFR63             0      0       0      64        0.0%
SFR63                0      0       0      64        0.0%


Microchip Technology PIC Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Mon Apr 24 09:00:41 2023

                 ??_I2C1_SlaveAddrCallBack 0070                                         l32 01E9  
                                       l53 0458                                         l56 051F  
                                       l48 0485                                         l95 03AA  
                      ___wmul@multiplicand 0075                                        l314 04F6  
                                      l330 04E4                                        l340 0502  
                                      l317 04F0                                        l350 04EA  
                                      l271 0339                                        l360 04FC  
                                      l521 041B                                        l530 02C2  
                                      l371 0493                                        l380 0507  
                                      l268 04B7                                        l532 02BA  
                                      l526 0300                                        l710 03B7  
                                      l383 0529                                        l536 03E8  
                                      l712 03CC                                        l377 050C  
                                      l481 04D8                                        l529 026D  
                                      l459 0448                                        l591 04DE  
                                      l639 0383                                        l594 0526  
                                      l588 0468                   __end_of_I2C1_SlaveIsAddr 04C6  
                                      u470 048B                                        u630 044F  
                                      u471 048A                                        u631 044E  
                                      u640 0455                                        u641 0454  
                                      u625 047F                                        u820 026C  
                                      u900 00F6                                        u821 026B  
                                      u901 00F5                                        u830 02A1  
                                      u910 0375                                        u831 02A0  
                                      u911 0374                                        u840 02BA  
                                      u841 02B9                                        u825 0268  
                                      u850 02ED                                        u851 02EC  
                                      u860 03B2                                        u861 03B1  
                                      u890 03C7                                        u891 03C6  
                                      u875 03B8                                        u885 03BD  
                 __end_of_I2C1_SlaveIsRead 051C                                        wreg 0009  
                        _data_recv_handler 0533                           ?_FLASH_WriteWord 0044  
           FLASH_WriteBlock@flashWordArray 003C                         ?_data_recv_handler 0070  
                                     l2020 044A                                       l2022 044F  
                                     l2040 0301                                       l2024 0455  
                                     l2032 051C                                       l2016 0478  
                                     l2200 0411                                       l2042 0336  
                                     l2202 0416                                       l2210 0262  
                                     l2028 0457                                       l2220 0278  
                                     l2300 01A1                                       l2230 027E  
                                     l2222 0279                                       l2214 026E  
                                     l2206 0257                                       l2302 01C5  
                                     l2310 037E                                       l2160 03CD  
                                     l2240 02A3                                       l2232 0282  
                                     l2216 0275                                       l2208 025E  
                                     l2312 0381                                       l2304 0364  
                                     l2090 0465                                       l2170 03D8  
                                     l2162 03D1                                       l2250 02B4  
                                     l2242 02A8                                       l2234 028C  
                                     l2218 0277                                       l2314 0382  
                                     l2306 0375                                       l2180 03E1  
                                     l2172 03D9                                       l2164 03D2  
                                     l2252 02BC                                       l2244 02A9  
                                     l2236 029A                                       l2228 027B  
                                     l2308 037B                                       l2086 0459  
                                     l2190 040B                                       l2182 03E3  
                                     l2174 03DE                                       l2166 03D5  
                                     l2246 02AA                                       l2238 02A1  
                                     l2270 02ED                                       l2088 0462  
                                     l2192 040D                                       l2184 0403  
                                     l2176 03DF                                       l2168 03D7  
                                     l2248 02B0                                       l2272 02F7  
                                     l2264 02CE                                       l2256 02C3  
                                     l2280 03BC                           __end_of_I2C1_Isr 0257  
                                     l2194 040E                                       l2186 0407  
                                     l2178 03E0                                       l2266 02E3  
                                     l2258 02CA                                       l2282 03C1  
                                     l2274 03AB                                       l2290 00F6  
                                     l1900 04F1                                       l2196 040F  
                                     l2188 0408                                       l2268 02E7  
                                     l2284 03C7                                       l2276 03AE  
                                     l2292 0111                                       l1902 04F7  
                                     l1910 04E5                                       l2198 0410  
                                     l2278 03B2                                       l2294 0135  
                                     l1912 0527                                       l1904 04DF  
                                     l2296 0159                                       l2288 00E8  
                                     l1906 04EB                                       l1850 0391  
                                     l2298 017D                                       l1908 04FD  
                                     l1860 0397                                       l1852 0393  
                                     l1844 0388                                       l1870 03A1  
                                     l1862 0399                                       l1854 0394  
                                     l1846 038B                                       l1774 04D3  
                                     l1880 04B5                                       l1872 03A4  
                                     l1864 039B                                       l1856 0395  
                                     l1848 038D                                       l1960 043E  
                                     l1952 0435                                       l1890 0491  
                                     l1882 04B6                                       l1874 03A7  
                                     l1866 039D                                       l1858 0396  
                                     l1962 0445                                       l1954 043A  
                                     l1892 0492                                       l1884 0486  
                                     l1876 04AE                                       l1980 04DB  
                                     l1868 039F                                       l1956 043B  
                                     l1886 048B                                       l1878 04B1  
                                     l1982 04DD                                       l1958 043D  
                                     l1888 048D                                       l1896 0509  
                                     l1984 0524                                       l1898 0504  
                                     l1978 04D9                                       _LATA 0018  
                                     _LATC 001A                                       i1l37 0533  
                                     _WPUA 1F39                                       _WPUC 1F4F  
                                     _main 0364                        ??_data_recv_handler 0070  
       I2C1_SlaveSetAddrIntHandler@handler 0073                                       fsr0h 0005  
                                     fsr1h 0007                                       indf0 0000  
                                     fsr0l 0004                                       indf1 0001  
                                     fsr1l 0006                                       btemp 007E  
                        ?_FLASH_WriteBlock 003A                                       start 0031  
                               _i2c1RdData 0036                         ??_FLASH_WriteBlock 003D  
                               _i2c1WrData 0078         I2C1_SlaveSetReadIntHandler@handler 0073  
             _I2C1_SlaveRdInterruptHandler 002D               _I2C1_SlaveWrInterruptHandler 002B  
                 memory_initialize@ramBuff 00A0                           ??_I2C1_SlaveOpen 0073  
                  __end_of_TMR0_Initialize 0449             ??_TMR0_DefaultInterruptHandler 0070  
            __end_of_OSCILLATOR_Initialize 04DF                          __end_of_I2C1_Open 033A  
                                    ?_main 0070                  __end_of_data_recv_handler 0534  
                                    i1l140 0026                                      i1l311 0256  
                                    i1l144 002F                                      i1l145 002F  
                                    i1l137 0013                                      i1l410 0523  
                                    i1l322 0434                                      i1l413 0516  
                                    i1l334 04A0                                      i1l407 04BE  
                                    i1l327 0402                                      i1l416 0532  
                                    i1l344 04AD                                      i1l337 0511  
                                    i1l347 04CC                                      i1l392 052F  
                                    i1l386 04C5                                      i1l395 052C  
                                    i1l389 051B                                      i1l493 035A  
                                    i1l486 034A                                      i1l478 0477  
                                    i1l496 0361                                      i1l489 0351  
                                    i1l498 0363         __end_of_SensorBoardType_validation 0459  
               _SensorBoardType_validation 0449                                      _OSCEN 0891  
                                    _TMR0H 059D                                      _TMR0L 059C  
                                    u42_20 03F4                                      u50_20 0423  
                                    u42_21 03F3                                      u50_21 0422  
                                    u51_20 042E                                      u51_21 042D  
                                    _PORTA 000C                                      _PORTC 000E  
                                    u52_20 0344                                      u52_21 0343  
                                    u53_20 034A                                      u53_21 0349  
                                    u70_20 0230                                      u54_20 0351  
                                    u70_21 022F                                      u54_21 0350  
                                    u71_20 0239                                      u55_20 035A  
                                    u71_21 0238                                      u55_21 0359  
                                    u48_20 04A8                                      u56_20 0361  
                                    u72_20 000B                                      u48_21 04A7  
                                    u56_21 0360                                      u72_21 000A  
                                    u49_20 049B                                      u65_20 0472  
                                    u73_20 000F                                      u49_21 049A  
                                    u65_21 0471                                      u73_21 000E  
                                    _TRISA 0012                                      _TRISC 0014  
                                    u66_20 01F5                                      u74_20 0017  
                                    u66_21 01F4                                      u74_21 0016  
                                    u67_20 01FD                                      u75_20 001B  
                                    u67_21 01FC                                      u75_21 001A  
                                    u68_20 020D                                      u76_20 001F  
                                    u68_21 020C                                      u76_21 001E  
                                    u69_20 0220                                      u77_20 002A  
                                    u69_21 021F                                      u77_21 0029  
                                    u78_20 002E                                      u78_21 002D  
                ?_TMR0_SetInterruptHandler 0073                          ??_I2C1_Initialize 0073  
                         __end_of_TMR0_ISR 0478             I2C1_SlaveSetSlaveMask@maskAddr 0073  
                                    _debug 0033                             _WDT_Initialize 0524  
                               _i2cReadCnt 0039                             _i2c1SlaveState 0034  
                                    pclath 000A                                      status 0003  
                                    wtemp0 007E                            __initialization 00D0  
                             __end_of_main 0388                ?_INTERRUPT_InterruptManager 0070  
                                   ??_main 0078                         _I2C1_SlaveClearIrq 052D  
               _i2cReadCnt@i2c1_slave$F179 0037                 _i2cReadCnt@i2c1_slave$F749 0079  
                   __end_of_WDT_Initialize 0527                        ?_I2C1_SlaveClearIrq 0070  
                FLASH_WriteBlock@writeAddr 003A                    ?_I2C1_SlaveReleaseClock 0070  
                                   _ANSELA 1F38                                     _ANSELC 1F4E  
                                   _T0CON0 059E                                     _T0CON1 059F  
                                   _RC0PPS 1F20                                     _RC1PPS 1F21  
                       _getSensorBoardType 0478                                     i1l2100 001B  
                                   i1l2102 001F                                     i1l2104 002A  
                                   i1l2050 01FD                                     i1l2034 0469  
                                   i1l2060 0215                                     i1l2052 0201  
                                   i1l2044 01EA                                     i1l2036 046B  
                                   i1l2062 0218                                     i1l2054 0205  
                                   i1l2046 01ED                                     i1l2038 0472  
                                   i1l2072 0231                                     i1l2064 0220  
                                   i1l2080 0253                                     i1l2056 020D  
                                   i1l2048 01F5                                     _ODCONA 1F3A  
                                   i1l2074 0239                                     i1l2066 0224  
                                   i1l2058 0211                                     _ODCONC 1F50  
                                   i1l2068 0228                                     i1l2092 0006  
                                   i1l1710 0513                                     i1l2078 023D  
                                   i1l2094 000B                                     i1l2336 0245  
                                   i1l2096 000F                                     i1l1706 0530  
                                   i1l2098 0017                                     i1l1920 04BF  
                                   i1l1760 03EE                                     i1l1770 04C6  
                                   i1l1914 0517                                     i1l1762 03F4  
                                   i1l1772 04CB                                     i1l1924 04A1  
                                   i1l1764 03FB                                     i1l1940 041C  
                                   i1l1932 0494                                     i1l1926 04A8  
                                   i1l1918 052D                                     i1l1766 03FE  
                                   i1l1758 03E9                                     i1l1942 0423  
                                   i1l1950 052A                                     i1l1934 049B  
                                   i1l1936 0520                                     i1l1928 04B8  
                                   i1l1944 0428                                     i1l1768 050D  
                                   i1l1946 042E                                     i1l1970 0352  
                                   i1l1948 0431                                     i1l1972 0354  
                                   i1l1964 033A                                     i1l1974 035B  
                                   i1l1966 0344                                     i1l1968 034B  
                                   _INLVLA 1F3C                                     _INLVLC 1F52  
                                   _OSCFRQ 0893                                     _WDTCON 080C  
                              _i2cDataRead 0020                        ?_getSensorBoardType 0070  
                     ??_I2C1_SlaveClearIrq 0070                              ?_error_signal 0070  
                                   ___wmul 03AB              FLASH_WriteWord@blockStartAddr 004A  
                      FLASH_WriteWord@word 0047                           ?_TMR0_Initialize 0070  
                                ?_I2C1_Isr 0070                    ?_I2C1_SlaveSetSlaveAddr 0070  
                  ?_I2C1_SlaveSetSlaveMask 0070       __end_of_I2C1_SlaveSetWrColIntHandler 04EB  
             _I2C1_SlaveSetWrColIntHandler 04E5                    FLASH_ReadWord@flashAddr 0073  
                     ??_getSensorBoardType 0073       I2C1_SlaveSetBusColIntHandler@handler 0073  
                          ?_WDT_Initialize 0070             __end_of_I2C1_SlaveReleaseClock 052D  
 TMR0_SetInterruptHandler@InterruptHandler 0073                     _I2C1_SlaveAddrCallBack 04A1  
                        _SYSTEM_Initialize 0459                    __end_of__initialization 00E3  
      I2C1_SlaveSetWrColIntHandler@handler 0073                         ?_SYSTEM_Initialize 0070  
                           ??_error_signal 0073                             __pcstackCOMMON 0070  
                      ??_SYSTEM_Initialize 0075                                  ?_TMR0_ISR 0070  
           __end_of_I2C1_SlaveSetSlaveAddr 050D                           FLASH_WriteWord@i 004C  
           __end_of_I2C1_SlaveSetSlaveMask 0508                                 ??_I2C1_Isr 0071  
                        ?_I2C1_SlaveIsAddr 0070                          ?_I2C1_SlaveIsRead 0070  
              FLASH_WriteBlock@GIEBitValue 0042                         ??_I2C1_SlaveIsAddr 0070  
                       ??_I2C1_SlaveIsRead 0070                  __end_of_SYSTEM_Initialize 0469  
                               __pbssBANK0 0020                                 __pbssBANK1 00A0  
                     memory_initialize@TAG 004F                        _I2C1_SlaveEnableIrq 0527  
                      _I2C1_SlaveGetRxData 0530                      _I2C1_SlaveIsRxBufFull 0520  
                               __pmaintext 0364              ?_I2C1_SlaveSetWriteIntHandler 0073  
         __end_of_TMR0_SetInterruptHandler 04D9                                    ?___wmul 0073  
                               ??_TMR0_ISR 0071                                 __pintentry 0004  
                          _I2C1_Initialize 04AE                       ?_I2C1_SlaveEnableIrq 0070  
                     ?_I2C1_SlaveGetRxData 0070                             _FLASH_ReadWord 0403  
              ?_SensorBoardType_validation 0070                                  _I2C1_Open 0301  
                                  _NVMADRH 081B                                    _NVMADRL 081A  
                                  _NVMDATH 081D                                    _OSCTUNE 0892  
                                  _NVMDATL 081C                                    _NVMCON2 081F  
                                  _SSP1ADD 018D                                    _SLRCONA 1F3B  
                                  _SLRCONC 1F51                                    _SSP1BUF 018C  
                                  _SSP1MSK 018E                   ?_I2C1_SlaveSetIsrHandler 0073  
                         _FLASH_EraseBlock 03CD             ?_I2C1_SlaveSetBusColIntHandler 0073  
SensorBoardType_validation@SensorBoardType 0073                      ??_I2C1_SlaveEnableIrq 0073  
                    ??_I2C1_SlaveGetRxData 0070                     __end_of_FLASH_ReadWord 041C  
                               _error_flag 0038                                    __ptext1 00E6  
                                  __ptext2 03AB                                    __ptext3 02C3  
                                  __ptext4 0257                                    __ptext5 03CD  
                                  __ptext6 0403                                    __ptext7 0478  
                                  __ptext8 051C                                    __ptext9 0449  
                        _memory_initialize 00E6             _I2C1_SlaveAddrInterruptHandler 0029  
                    _OSCILLATOR_Initialize 04D9                         ?_memory_initialize 0070  
          I2C1_SlaveSetSlaveAddr@slaveAddr 0073                   ??_PIN_MANAGER_Initialize 0073  
                               ?_I2C1_Open 0070                   ??_I2C1_SlaveIsTxBufEmpty 0070  
                                  main@TAG 0051                       __end_of_error_signal 0520  
                         _default_in_flash 0040                                    clrloop0 04CE  
                     end_of_initialization 00E3                        ??_memory_initialize 004D  
                                _LED_timer 007A                     ?_I2C1_SlaveIsRxBufFull 0070  
          _I2C1_SlaveWrColInterruptHandler 0025                    __end_of_I2C1_Initialize 04B8  
             __end_of_I2C1_SlaveRdCallBack 0435                  FLASH_ReadWord@GIEBitValue 0075  
                __end_of_memory_initialize 01EA             ??_I2C1_SlaveSetWriteIntHandler 0075  
                          ?_FLASH_ReadWord 0073                           ??_WDT_Initialize 0073  
                 _TMR0_SetInterruptHandler 04D3            __end_of_I2C1_SlaveSetIsrHandler 04F7  
                  ?_I2C1_SlaveAddrCallBack 0070             I2C1_SlaveSetIsrHandler@handler 0073  
                        FLASH_WriteBlock@i 0043                          ??_FLASH_WriteWord 0077  
                           __end_of___wmul 03CD                              _i2c1SlaveAddr 0035  
                         _FLASH_WriteBlock 0257                     ?_OSCILLATOR_Initialize 0070  
           __end_of_I2C1_SlaveAddrCallBack 04AE               __end_of_I2C1_SlaveSendTxData 0517  
                      start_initialization 00D0                                ??_I2C1_Open 0075  
             __end_of_I2C1_SlaveWrCallBack 04A1                   I2C1_SlaveSendTxData@data 0070  
                         ?_I2C1_Initialize 0070                                   ??___wmul 0077  
              FLASH_EraseBlock@GIEBitValue 0075                   __end_of_FLASH_EraseBlock 03E9  
  __end_of_I2C1_SlaveDefRdInterruptHandler 0403          ??_I2C1_SlaveDefRdInterruptHandler 0070  
         ?_I2C1_SlaveDefRdInterruptHandler 0070            _I2C1_SlaveDefRdInterruptHandler 03E9  
  __end_of_I2C1_SlaveDefWrInterruptHandler 0512          ??_I2C1_SlaveDefWrInterruptHandler 0071  
         ?_I2C1_SlaveDefWrInterruptHandler 0070            _I2C1_SlaveDefWrInterruptHandler 050D  
                              __pbssCOMMON 0078                                  ___latbits 0000  
                            __pcstackBANK0 003A                       _I2C1_SlaveRdCallBack 041C  
             ?_I2C1_SlaveSetAddrIntHandler 0073                      _TMR0_InterruptHandler 0052  
                                __pnvBANK0 0052                     _PIN_MANAGER_Initialize 0388  
                   _MSSP1_InterruptHandler 002F                     _I2C1_SlaveIsTxBufEmpty 04B8  
                             _error_signal 051C               ?_I2C1_SlaveSetReadIntHandler 0073  
                 __end_of_default_in_flash 00D0            ??_I2C1_SlaveSetBusColIntHandler 0075  
                                 _I2C1_Isr 01EA               ??_INTERRUPT_InterruptManager 0073  
                 ??_I2C1_SlaveReleaseClock 0070        __end_of_I2C1_SlaveSetAddrIntHandler 0503  
              _I2C1_SlaveSetAddrIntHandler 04FD                             _I2C1_SlaveOpen 0486  
                    ?_I2C1_SlaveRdCallBack 0070                    ??_I2C1_SlaveIsRxBufFull 0070  
            ?_I2C1_SlaveSetWrColIntHandler 0073                   FLASH_WriteWord@flashAddr 0044  
           FLASH_WriteBlock@blockStartAddr 0040              ??_I2C1_SlaveSetAddrIntHandler 0075  
                        ??_TMR0_Initialize 0075                             ___wmul@product 003A  
                                 _LATAbits 0018                                  clear_ram0 04CD  
                                 _PIE0bits 0716                                   _PIE1bits 0717  
                 ??_I2C1_SlaveSetSlaveAddr 0073        __end_of_I2C1_SlaveSetReadIntHandler 04F1  
              _I2C1_SlaveSetReadIntHandler 04EB                   ??_I2C1_SlaveSetSlaveMask 0073  
              __end_of_I2C1_SlaveEnableIrq 052A                 ??_TMR0_SetInterruptHandler 0075  
                                 _PIR0bits 070C                __end_of_I2C1_SlaveGetRxData 0533  
                                 _PIR1bits 070D                  FLASH_EraseBlock@startAddr 0073  
                     _I2C1_SlaveSendTxData 0512                           ??_FLASH_ReadWord 0075  
                 _default_in_flash_absaddr 0040                       _I2C1_SlaveWrCallBack 0494  
                                 _SSP1CON1 0190                                   _SSP1CON2 0191  
                                 _TMR0_ISR 0469                                   _SSP1STAT 018F  
            ??_I2C1_SlaveSetReadIntHandler 0075                          ___wmul@multiplier 0073  
                   __end_of_I2C1_SlaveOpen 0494                   data_recv_handler@ramBuff 0023  
                                main@atlas 0050           _I2C1_SlaveBusColInterruptHandler 0027  
                          _FLASH_WriteWord 02C3         _I2C1_SlaveDefWrColInterruptHandler 0000  
                 __end_of_FLASH_WriteBlock 02C3  __end_of_I2C1_SlaveDefAddrInterruptHandler 04CD  
      ??_I2C1_SlaveDefAddrInterruptHandler 0070         ?_I2C1_SlaveDefAddrInterruptHandler 0070  
        _I2C1_SlaveDefAddrInterruptHandler 04C6                           _I2C1_SlaveIsAddr 04BF  
                         _I2C1_SlaveIsRead 0517                      ?_I2C1_SlaveSendTxData 0070  
                    ?_I2C1_SlaveWrCallBack 0070                    ??_OSCILLATOR_Initialize 0073  
                 __p_default_in_flash_text 0040        _I2C1_SlaveDefBusColInterruptHandler 0000  
                          ?_I2C1_SlaveOpen 0070                     ??_I2C1_SlaveRdCallBack 0071  
    __end_of_I2C1_SlaveSetBusColIntHandler 04FD              _I2C1_SlaveSetBusColIntHandler 04F7  
                               _T0CON0bits 059E                                   __ptext10 0459  
                                 __ptext11 0524                                   __ptext20 0503  
                                 __ptext12 0435                                   __ptext21 0508  
                                 __ptext13 04D3                                   __ptext30 033A  
                                 __ptext22 04EB                                   __ptext14 0388  
                                 __ptext31 01EA                                   __ptext23 04F1  
                                 __ptext15 04D9                                   __ptext40 0520  
                                 __ptext32 0494                                   __ptext24 04F7  
                                 __ptext16 04AE                                   __ptext41 0517  
                                 __ptext33 050D                                   __ptext25 04FD  
                                 __ptext17 0301                                   __ptext42 04BF  
                                 __ptext34 0512                                   __ptext26 0486  
                                 __ptext18 04DF                                   __ptext43 052D  
                                 __ptext35 052A                                   __ptext27 0527  
                                 __ptext19 04E5                                   __ptext44 04A1  
                                 __ptext36 041C                                   __ptext45 04C6  
                                 __ptext37 0533                                   __ptext29 0469  
                                 __ptext46 0530                                   __ptext38 03E9  
                                 __ptext39 04B8                               _SSP1CON1bits 0190  
                             _SSP1CON2bits 0191                      FLASH_WriteWord@ramBuf 0046  
                    FLASH_WriteWord@offset 0049       __end_of_I2C1_SlaveSetWriteIntHandler 04E5  
             _I2C1_SlaveSetWriteIntHandler 04DF             ??_I2C1_SlaveSetWrColIntHandler 0075  
     __end_of_TMR0_DefaultInterruptHandler 0364               _TMR0_DefaultInterruptHandler 033A  
               __end_of_I2C1_SlaveClearIrq 0530                    _I2C1_SlaveSetIsrHandler 04F1  
                                 int$flags 007E         __end_of_INTERRUPT_InterruptManager 0031  
               _INTERRUPT_InterruptManager 0004                               _SSP1STATbits 018F  
                        ?_FLASH_EraseBlock 0073                 __end_of_getSensorBoardType 0486  
                       ??_FLASH_EraseBlock 0075                                 _INTCONbits 000B  
                  __end_of_FLASH_WriteWord 0301               ??_SensorBoardType_validation 0073  
                              _NVMCON1bits 081E                _i2cReadCnt@i2c1_slave$F1134 0031  
              _i2cReadCnt@i2c1_slave$F1096 0032                                   intlevel1 0000  
                   _I2C1_SlaveReleaseClock 052A                    ?_PIN_MANAGER_Initialize 0070  
                  ?_I2C1_SlaveIsTxBufEmpty 0070                     ??_I2C1_SlaveSendTxData 0070  
                   ??_I2C1_SlaveWrCallBack 0071              ?_TMR0_DefaultInterruptHandler 0070  
      I2C1_SlaveSetWriteIntHandler@handler 0073                                 _SSP1DATPPS 1EC6  
                               _SSP1CLKPPS 1EC5                     _I2C1_SlaveSetSlaveAddr 0508  
                          _TMR0_Initialize 0435                     _I2C1_SlaveSetSlaveMask 0503  
           __end_of_PIN_MANAGER_Initialize 03AB             __end_of_I2C1_SlaveIsTxBufEmpty 04BF  
            __end_of_I2C1_SlaveIsRxBufFull 0524                  ??_I2C1_SlaveSetIsrHandler 0075  
