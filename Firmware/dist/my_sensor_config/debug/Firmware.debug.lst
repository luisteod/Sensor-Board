

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Tue Apr 25 11:45:59 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	16F15223
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	_default_in_flash_text,global,class=STRCODE,delta=2,noexec
     5                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
     9                           	psect	clrtext,global,class=CODE,delta=2
    10                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    14                           	psect	text1,local,class=CODE,merge=1,delta=2
    15                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    16                           	psect	text3,local,class=CODE,merge=1,delta=2
    17                           	psect	text4,local,class=CODE,merge=1,delta=2
    18                           	psect	text5,local,class=CODE,merge=1,delta=2
    19                           	psect	text6,local,class=CODE,merge=1,delta=2
    20                           	psect	text7,local,class=CODE,merge=1,delta=2
    21                           	psect	text8,local,class=CODE,merge=1,delta=2
    22                           	psect	text9,local,class=CODE,merge=1,delta=2
    23                           	psect	text10,local,class=CODE,merge=1,delta=2
    24                           	psect	text11,local,class=CODE,merge=1,delta=2
    25                           	psect	text12,local,class=CODE,merge=1,delta=2
    26                           	psect	text13,local,class=CODE,merge=1,delta=2
    27                           	psect	text14,local,class=CODE,merge=1,delta=2
    28                           	psect	text15,local,class=CODE,merge=1,delta=2
    29                           	psect	text16,local,class=CODE,merge=1,delta=2
    30                           	psect	text17,local,class=CODE,merge=1,delta=2
    31                           	psect	text18,local,class=CODE,merge=1,delta=2
    32                           	psect	text19,local,class=CODE,merge=1,delta=2
    33                           	psect	text20,local,class=CODE,merge=1,inline,delta=2
    34                           	psect	text21,local,class=CODE,merge=1,inline,delta=2
    35                           	psect	text22,local,class=CODE,merge=1,delta=2
    36                           	psect	text23,local,class=CODE,merge=1,delta=2
    37                           	psect	text24,local,class=CODE,merge=1,delta=2
    38                           	psect	text25,local,class=CODE,merge=1,delta=2
    39                           	psect	text26,local,class=CODE,merge=1,inline,delta=2
    40                           	psect	text27,local,class=CODE,merge=1,inline,delta=2
    41                           	psect	intentry,global,class=CODE,delta=2
    42                           	psect	text29,local,class=CODE,merge=1,delta=2
    43                           	psect	text30,local,class=CODE,merge=1,delta=2
    44                           	psect	text31,local,class=CODE,merge=1,delta=2
    45                           	psect	text32,local,class=CODE,merge=1,delta=2
    46                           	psect	text33,local,class=CODE,merge=1,delta=2
    47                           	psect	text34,local,class=CODE,merge=1,inline,delta=2
    48                           	psect	text35,local,class=CODE,merge=1,inline,delta=2
    49                           	psect	text36,local,class=CODE,merge=1,delta=2
    50                           	psect	text37,local,class=CODE,merge=1,delta=2
    51                           	psect	text38,local,class=CODE,merge=1,delta=2
    52                           	psect	text39,local,class=CODE,merge=1,delta=2
    53                           	psect	text40,local,class=CODE,merge=1,delta=2
    54                           	psect	text41,local,class=CODE,merge=1,delta=2
    55                           	psect	text42,local,class=CODE,merge=1,delta=2
    56                           	psect	text43,local,class=CODE,merge=1,inline,delta=2
    57                           	psect	text44,local,class=CODE,merge=1,inline,delta=2
    58                           	psect	text45,local,class=CODE,merge=1,inline,delta=2
    59                           	psect	text46,local,class=CODE,merge=1,inline,delta=2
    60                           	psect	text47,local,class=CODE,merge=1,inline,delta=2
    61                           	psect	text48,local,class=CODE,merge=1,delta=2
    62                           	psect	text49,local,class=CODE,merge=1,delta=2
    63                           	psect	text50,local,class=CODE,merge=1,inline,delta=2
    64                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    65                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    66                           	dabs	1,0x7E,2
    67     0000                     
    68                           ; Generated 19/07/2022 GMT
    69                           ; 
    70                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
    71                           ; All rights reserved.
    72                           ; 
    73                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    74                           ; 
    75                           ; Redistribution and use in source and binary forms, with or without modification, are
    76                           ; permitted provided that the following conditions are met:
    77                           ; 
    78                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    79                           ;        conditions and the following disclaimer.
    80                           ; 
    81                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    82                           ;        of conditions and the following disclaimer in the documentation and/or other
    83                           ;        materials provided with the distribution. Publication is not required when
    84                           ;        this file is used in an embedded application.
    85                           ; 
    86                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    87                           ;        software without specific prior written permission.
    88                           ; 
    89                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    90                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    91                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    92                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    93                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    94                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    95                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    96                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    97                           ; 
    98                           ; 
    99                           ; Code-generator required, PIC16F15223 Definitions
   100                           ; 
   101                           ; SFR Addresses
   102     0000                     	;# 
   103     0001                     	;# 
   104     0002                     	;# 
   105     0003                     	;# 
   106     0004                     	;# 
   107     0005                     	;# 
   108     0006                     	;# 
   109     0007                     	;# 
   110     0008                     	;# 
   111     0009                     	;# 
   112     000A                     	;# 
   113     000B                     	;# 
   114     000C                     	;# 
   115     000E                     	;# 
   116     0012                     	;# 
   117     0014                     	;# 
   118     0018                     	;# 
   119     001A                     	;# 
   120     009A                     	;# 
   121     009B                     	;# 
   122     009B                     	;# 
   123     009C                     	;# 
   124     009D                     	;# 
   125     009E                     	;# 
   126     009F                     	;# 
   127     010E                     	;# 
   128     010F                     	;# 
   129     0119                     	;# 
   130     011A                     	;# 
   131     011B                     	;# 
   132     011B                     	;# 
   133     011C                     	;# 
   134     011D                     	;# 
   135     011E                     	;# 
   136     011F                     	;# 
   137     018C                     	;# 
   138     018D                     	;# 
   139     018E                     	;# 
   140     018F                     	;# 
   141     0190                     	;# 
   142     0191                     	;# 
   143     0192                     	;# 
   144     020C                     	;# 
   145     020D                     	;# 
   146     020E                     	;# 
   147     020E                     	;# 
   148     020F                     	;# 
   149     020F                     	;# 
   150     0210                     	;# 
   151     0210                     	;# 
   152     0211                     	;# 
   153     0211                     	;# 
   154     028C                     	;# 
   155     028C                     	;# 
   156     028D                     	;# 
   157     028D                     	;# 
   158     028E                     	;# 
   159     028F                     	;# 
   160     0290                     	;# 
   161     0291                     	;# 
   162     030C                     	;# 
   163     030C                     	;# 
   164     030D                     	;# 
   165     030E                     	;# 
   166     030F                     	;# 
   167     0310                     	;# 
   168     0310                     	;# 
   169     0311                     	;# 
   170     0312                     	;# 
   171     0313                     	;# 
   172     0314                     	;# 
   173     0314                     	;# 
   174     0315                     	;# 
   175     0316                     	;# 
   176     0318                     	;# 
   177     0318                     	;# 
   178     0319                     	;# 
   179     031A                     	;# 
   180     059C                     	;# 
   181     059C                     	;# 
   182     059D                     	;# 
   183     059D                     	;# 
   184     059E                     	;# 
   185     059F                     	;# 
   186     070C                     	;# 
   187     070D                     	;# 
   188     070E                     	;# 
   189     0716                     	;# 
   190     0717                     	;# 
   191     0718                     	;# 
   192     080C                     	;# 
   193     0811                     	;# 
   194     0813                     	;# 
   195     0814                     	;# 
   196     081A                     	;# 
   197     081A                     	;# 
   198     081B                     	;# 
   199     081C                     	;# 
   200     081C                     	;# 
   201     081D                     	;# 
   202     081E                     	;# 
   203     081F                     	;# 
   204     088E                     	;# 
   205     0890                     	;# 
   206     0891                     	;# 
   207     0892                     	;# 
   208     0893                     	;# 
   209     090C                     	;# 
   210     1E8F                     	;# 
   211     1E90                     	;# 
   212     1E91                     	;# 
   213     1E92                     	;# 
   214     1E93                     	;# 
   215     1E9C                     	;# 
   216     1EA1                     	;# 
   217     1EA2                     	;# 
   218     1EC3                     	;# 
   219     1EC5                     	;# 
   220     1EC6                     	;# 
   221     1EC7                     	;# 
   222     1ECB                     	;# 
   223     1ECB                     	;# 
   224     1ECB                     	;# 
   225     1ECC                     	;# 
   226     1ECC                     	;# 
   227     1ECC                     	;# 
   228     1F10                     	;# 
   229     1F11                     	;# 
   230     1F12                     	;# 
   231     1F14                     	;# 
   232     1F15                     	;# 
   233     1F20                     	;# 
   234     1F21                     	;# 
   235     1F22                     	;# 
   236     1F23                     	;# 
   237     1F24                     	;# 
   238     1F25                     	;# 
   239     1F38                     	;# 
   240     1F39                     	;# 
   241     1F3A                     	;# 
   242     1F3B                     	;# 
   243     1F3C                     	;# 
   244     1F3D                     	;# 
   245     1F3E                     	;# 
   246     1F3F                     	;# 
   247     1F4E                     	;# 
   248     1F4F                     	;# 
   249     1F50                     	;# 
   250     1F51                     	;# 
   251     1F52                     	;# 
   252     1F53                     	;# 
   253     1F54                     	;# 
   254     1F55                     	;# 
   255     1FE4                     	;# 
   256     1FE5                     	;# 
   257     1FE6                     	;# 
   258     1FE7                     	;# 
   259     1FE8                     	;# 
   260     1FE8                     	;# 
   261     1FE9                     	;# 
   262     1FEA                     	;# 
   263     1FEB                     	;# 
   264     1FED                     	;# 
   265     1FEE                     	;# 
   266     1FEF                     	;# 
   267     0000                     	;# 
   268     0001                     	;# 
   269     0002                     	;# 
   270     0003                     	;# 
   271     0004                     	;# 
   272     0005                     	;# 
   273     0006                     	;# 
   274     0007                     	;# 
   275     0008                     	;# 
   276     0009                     	;# 
   277     000A                     	;# 
   278     000B                     	;# 
   279     000C                     	;# 
   280     000E                     	;# 
   281     0012                     	;# 
   282     0014                     	;# 
   283     0018                     	;# 
   284     001A                     	;# 
   285     009A                     	;# 
   286     009B                     	;# 
   287     009B                     	;# 
   288     009C                     	;# 
   289     009D                     	;# 
   290     009E                     	;# 
   291     009F                     	;# 
   292     010E                     	;# 
   293     010F                     	;# 
   294     0119                     	;# 
   295     011A                     	;# 
   296     011B                     	;# 
   297     011B                     	;# 
   298     011C                     	;# 
   299     011D                     	;# 
   300     011E                     	;# 
   301     011F                     	;# 
   302     018C                     	;# 
   303     018D                     	;# 
   304     018E                     	;# 
   305     018F                     	;# 
   306     0190                     	;# 
   307     0191                     	;# 
   308     0192                     	;# 
   309     020C                     	;# 
   310     020D                     	;# 
   311     020E                     	;# 
   312     020E                     	;# 
   313     020F                     	;# 
   314     020F                     	;# 
   315     0210                     	;# 
   316     0210                     	;# 
   317     0211                     	;# 
   318     0211                     	;# 
   319     028C                     	;# 
   320     028C                     	;# 
   321     028D                     	;# 
   322     028D                     	;# 
   323     028E                     	;# 
   324     028F                     	;# 
   325     0290                     	;# 
   326     0291                     	;# 
   327     030C                     	;# 
   328     030C                     	;# 
   329     030D                     	;# 
   330     030E                     	;# 
   331     030F                     	;# 
   332     0310                     	;# 
   333     0310                     	;# 
   334     0311                     	;# 
   335     0312                     	;# 
   336     0313                     	;# 
   337     0314                     	;# 
   338     0314                     	;# 
   339     0315                     	;# 
   340     0316                     	;# 
   341     0318                     	;# 
   342     0318                     	;# 
   343     0319                     	;# 
   344     031A                     	;# 
   345     059C                     	;# 
   346     059C                     	;# 
   347     059D                     	;# 
   348     059D                     	;# 
   349     059E                     	;# 
   350     059F                     	;# 
   351     070C                     	;# 
   352     070D                     	;# 
   353     070E                     	;# 
   354     0716                     	;# 
   355     0717                     	;# 
   356     0718                     	;# 
   357     080C                     	;# 
   358     0811                     	;# 
   359     0813                     	;# 
   360     0814                     	;# 
   361     081A                     	;# 
   362     081A                     	;# 
   363     081B                     	;# 
   364     081C                     	;# 
   365     081C                     	;# 
   366     081D                     	;# 
   367     081E                     	;# 
   368     081F                     	;# 
   369     088E                     	;# 
   370     0890                     	;# 
   371     0891                     	;# 
   372     0892                     	;# 
   373     0893                     	;# 
   374     090C                     	;# 
   375     1E8F                     	;# 
   376     1E90                     	;# 
   377     1E91                     	;# 
   378     1E92                     	;# 
   379     1E93                     	;# 
   380     1E9C                     	;# 
   381     1EA1                     	;# 
   382     1EA2                     	;# 
   383     1EC3                     	;# 
   384     1EC5                     	;# 
   385     1EC6                     	;# 
   386     1EC7                     	;# 
   387     1ECB                     	;# 
   388     1ECB                     	;# 
   389     1ECB                     	;# 
   390     1ECC                     	;# 
   391     1ECC                     	;# 
   392     1ECC                     	;# 
   393     1F10                     	;# 
   394     1F11                     	;# 
   395     1F12                     	;# 
   396     1F14                     	;# 
   397     1F15                     	;# 
   398     1F20                     	;# 
   399     1F21                     	;# 
   400     1F22                     	;# 
   401     1F23                     	;# 
   402     1F24                     	;# 
   403     1F25                     	;# 
   404     1F38                     	;# 
   405     1F39                     	;# 
   406     1F3A                     	;# 
   407     1F3B                     	;# 
   408     1F3C                     	;# 
   409     1F3D                     	;# 
   410     1F3E                     	;# 
   411     1F3F                     	;# 
   412     1F4E                     	;# 
   413     1F4F                     	;# 
   414     1F50                     	;# 
   415     1F51                     	;# 
   416     1F52                     	;# 
   417     1F53                     	;# 
   418     1F54                     	;# 
   419     1F55                     	;# 
   420     1FE4                     	;# 
   421     1FE5                     	;# 
   422     1FE6                     	;# 
   423     1FE7                     	;# 
   424     1FE8                     	;# 
   425     1FE8                     	;# 
   426     1FE9                     	;# 
   427     1FEA                     	;# 
   428     1FEB                     	;# 
   429     1FED                     	;# 
   430     1FEE                     	;# 
   431     1FEF                     	;# 
   432     0000                     	;# 
   433     0001                     	;# 
   434     0002                     	;# 
   435     0003                     	;# 
   436     0004                     	;# 
   437     0005                     	;# 
   438     0006                     	;# 
   439     0007                     	;# 
   440     0008                     	;# 
   441     0009                     	;# 
   442     000A                     	;# 
   443     000B                     	;# 
   444     000C                     	;# 
   445     000E                     	;# 
   446     0012                     	;# 
   447     0014                     	;# 
   448     0018                     	;# 
   449     001A                     	;# 
   450     009A                     	;# 
   451     009B                     	;# 
   452     009B                     	;# 
   453     009C                     	;# 
   454     009D                     	;# 
   455     009E                     	;# 
   456     009F                     	;# 
   457     010E                     	;# 
   458     010F                     	;# 
   459     0119                     	;# 
   460     011A                     	;# 
   461     011B                     	;# 
   462     011B                     	;# 
   463     011C                     	;# 
   464     011D                     	;# 
   465     011E                     	;# 
   466     011F                     	;# 
   467     018C                     	;# 
   468     018D                     	;# 
   469     018E                     	;# 
   470     018F                     	;# 
   471     0190                     	;# 
   472     0191                     	;# 
   473     0192                     	;# 
   474     020C                     	;# 
   475     020D                     	;# 
   476     020E                     	;# 
   477     020E                     	;# 
   478     020F                     	;# 
   479     020F                     	;# 
   480     0210                     	;# 
   481     0210                     	;# 
   482     0211                     	;# 
   483     0211                     	;# 
   484     028C                     	;# 
   485     028C                     	;# 
   486     028D                     	;# 
   487     028D                     	;# 
   488     028E                     	;# 
   489     028F                     	;# 
   490     0290                     	;# 
   491     0291                     	;# 
   492     030C                     	;# 
   493     030C                     	;# 
   494     030D                     	;# 
   495     030E                     	;# 
   496     030F                     	;# 
   497     0310                     	;# 
   498     0310                     	;# 
   499     0311                     	;# 
   500     0312                     	;# 
   501     0313                     	;# 
   502     0314                     	;# 
   503     0314                     	;# 
   504     0315                     	;# 
   505     0316                     	;# 
   506     0318                     	;# 
   507     0318                     	;# 
   508     0319                     	;# 
   509     031A                     	;# 
   510     059C                     	;# 
   511     059C                     	;# 
   512     059D                     	;# 
   513     059D                     	;# 
   514     059E                     	;# 
   515     059F                     	;# 
   516     070C                     	;# 
   517     070D                     	;# 
   518     070E                     	;# 
   519     0716                     	;# 
   520     0717                     	;# 
   521     0718                     	;# 
   522     080C                     	;# 
   523     0811                     	;# 
   524     0813                     	;# 
   525     0814                     	;# 
   526     081A                     	;# 
   527     081A                     	;# 
   528     081B                     	;# 
   529     081C                     	;# 
   530     081C                     	;# 
   531     081D                     	;# 
   532     081E                     	;# 
   533     081F                     	;# 
   534     088E                     	;# 
   535     0890                     	;# 
   536     0891                     	;# 
   537     0892                     	;# 
   538     0893                     	;# 
   539     090C                     	;# 
   540     1E8F                     	;# 
   541     1E90                     	;# 
   542     1E91                     	;# 
   543     1E92                     	;# 
   544     1E93                     	;# 
   545     1E9C                     	;# 
   546     1EA1                     	;# 
   547     1EA2                     	;# 
   548     1EC3                     	;# 
   549     1EC5                     	;# 
   550     1EC6                     	;# 
   551     1EC7                     	;# 
   552     1ECB                     	;# 
   553     1ECB                     	;# 
   554     1ECB                     	;# 
   555     1ECC                     	;# 
   556     1ECC                     	;# 
   557     1ECC                     	;# 
   558     1F10                     	;# 
   559     1F11                     	;# 
   560     1F12                     	;# 
   561     1F14                     	;# 
   562     1F15                     	;# 
   563     1F20                     	;# 
   564     1F21                     	;# 
   565     1F22                     	;# 
   566     1F23                     	;# 
   567     1F24                     	;# 
   568     1F25                     	;# 
   569     1F38                     	;# 
   570     1F39                     	;# 
   571     1F3A                     	;# 
   572     1F3B                     	;# 
   573     1F3C                     	;# 
   574     1F3D                     	;# 
   575     1F3E                     	;# 
   576     1F3F                     	;# 
   577     1F4E                     	;# 
   578     1F4F                     	;# 
   579     1F50                     	;# 
   580     1F51                     	;# 
   581     1F52                     	;# 
   582     1F53                     	;# 
   583     1F54                     	;# 
   584     1F55                     	;# 
   585     1FE4                     	;# 
   586     1FE5                     	;# 
   587     1FE6                     	;# 
   588     1FE7                     	;# 
   589     1FE8                     	;# 
   590     1FE8                     	;# 
   591     1FE9                     	;# 
   592     1FEA                     	;# 
   593     1FEB                     	;# 
   594     1FED                     	;# 
   595     1FEE                     	;# 
   596     1FEF                     	;# 
   597     0000                     	;# 
   598     0001                     	;# 
   599     0002                     	;# 
   600     0003                     	;# 
   601     0004                     	;# 
   602     0005                     	;# 
   603     0006                     	;# 
   604     0007                     	;# 
   605     0008                     	;# 
   606     0009                     	;# 
   607     000A                     	;# 
   608     000B                     	;# 
   609     000C                     	;# 
   610     000E                     	;# 
   611     0012                     	;# 
   612     0014                     	;# 
   613     0018                     	;# 
   614     001A                     	;# 
   615     009A                     	;# 
   616     009B                     	;# 
   617     009B                     	;# 
   618     009C                     	;# 
   619     009D                     	;# 
   620     009E                     	;# 
   621     009F                     	;# 
   622     010E                     	;# 
   623     010F                     	;# 
   624     0119                     	;# 
   625     011A                     	;# 
   626     011B                     	;# 
   627     011B                     	;# 
   628     011C                     	;# 
   629     011D                     	;# 
   630     011E                     	;# 
   631     011F                     	;# 
   632     018C                     	;# 
   633     018D                     	;# 
   634     018E                     	;# 
   635     018F                     	;# 
   636     0190                     	;# 
   637     0191                     	;# 
   638     0192                     	;# 
   639     020C                     	;# 
   640     020D                     	;# 
   641     020E                     	;# 
   642     020E                     	;# 
   643     020F                     	;# 
   644     020F                     	;# 
   645     0210                     	;# 
   646     0210                     	;# 
   647     0211                     	;# 
   648     0211                     	;# 
   649     028C                     	;# 
   650     028C                     	;# 
   651     028D                     	;# 
   652     028D                     	;# 
   653     028E                     	;# 
   654     028F                     	;# 
   655     0290                     	;# 
   656     0291                     	;# 
   657     030C                     	;# 
   658     030C                     	;# 
   659     030D                     	;# 
   660     030E                     	;# 
   661     030F                     	;# 
   662     0310                     	;# 
   663     0310                     	;# 
   664     0311                     	;# 
   665     0312                     	;# 
   666     0313                     	;# 
   667     0314                     	;# 
   668     0314                     	;# 
   669     0315                     	;# 
   670     0316                     	;# 
   671     0318                     	;# 
   672     0318                     	;# 
   673     0319                     	;# 
   674     031A                     	;# 
   675     059C                     	;# 
   676     059C                     	;# 
   677     059D                     	;# 
   678     059D                     	;# 
   679     059E                     	;# 
   680     059F                     	;# 
   681     070C                     	;# 
   682     070D                     	;# 
   683     070E                     	;# 
   684     0716                     	;# 
   685     0717                     	;# 
   686     0718                     	;# 
   687     080C                     	;# 
   688     0811                     	;# 
   689     0813                     	;# 
   690     0814                     	;# 
   691     081A                     	;# 
   692     081A                     	;# 
   693     081B                     	;# 
   694     081C                     	;# 
   695     081C                     	;# 
   696     081D                     	;# 
   697     081E                     	;# 
   698     081F                     	;# 
   699     088E                     	;# 
   700     0890                     	;# 
   701     0891                     	;# 
   702     0892                     	;# 
   703     0893                     	;# 
   704     090C                     	;# 
   705     1E8F                     	;# 
   706     1E90                     	;# 
   707     1E91                     	;# 
   708     1E92                     	;# 
   709     1E93                     	;# 
   710     1E9C                     	;# 
   711     1EA1                     	;# 
   712     1EA2                     	;# 
   713     1EC3                     	;# 
   714     1EC5                     	;# 
   715     1EC6                     	;# 
   716     1EC7                     	;# 
   717     1ECB                     	;# 
   718     1ECB                     	;# 
   719     1ECB                     	;# 
   720     1ECC                     	;# 
   721     1ECC                     	;# 
   722     1ECC                     	;# 
   723     1F10                     	;# 
   724     1F11                     	;# 
   725     1F12                     	;# 
   726     1F14                     	;# 
   727     1F15                     	;# 
   728     1F20                     	;# 
   729     1F21                     	;# 
   730     1F22                     	;# 
   731     1F23                     	;# 
   732     1F24                     	;# 
   733     1F25                     	;# 
   734     1F38                     	;# 
   735     1F39                     	;# 
   736     1F3A                     	;# 
   737     1F3B                     	;# 
   738     1F3C                     	;# 
   739     1F3D                     	;# 
   740     1F3E                     	;# 
   741     1F3F                     	;# 
   742     1F4E                     	;# 
   743     1F4F                     	;# 
   744     1F50                     	;# 
   745     1F51                     	;# 
   746     1F52                     	;# 
   747     1F53                     	;# 
   748     1F54                     	;# 
   749     1F55                     	;# 
   750     1FE4                     	;# 
   751     1FE5                     	;# 
   752     1FE6                     	;# 
   753     1FE7                     	;# 
   754     1FE8                     	;# 
   755     1FE8                     	;# 
   756     1FE9                     	;# 
   757     1FEA                     	;# 
   758     1FEB                     	;# 
   759     1FED                     	;# 
   760     1FEE                     	;# 
   761     1FEF                     	;# 
   762     0000                     	;# 
   763     0001                     	;# 
   764     0002                     	;# 
   765     0003                     	;# 
   766     0004                     	;# 
   767     0005                     	;# 
   768     0006                     	;# 
   769     0007                     	;# 
   770     0008                     	;# 
   771     0009                     	;# 
   772     000A                     	;# 
   773     000B                     	;# 
   774     000C                     	;# 
   775     000E                     	;# 
   776     0012                     	;# 
   777     0014                     	;# 
   778     0018                     	;# 
   779     001A                     	;# 
   780     009A                     	;# 
   781     009B                     	;# 
   782     009B                     	;# 
   783     009C                     	;# 
   784     009D                     	;# 
   785     009E                     	;# 
   786     009F                     	;# 
   787     010E                     	;# 
   788     010F                     	;# 
   789     0119                     	;# 
   790     011A                     	;# 
   791     011B                     	;# 
   792     011B                     	;# 
   793     011C                     	;# 
   794     011D                     	;# 
   795     011E                     	;# 
   796     011F                     	;# 
   797     018C                     	;# 
   798     018D                     	;# 
   799     018E                     	;# 
   800     018F                     	;# 
   801     0190                     	;# 
   802     0191                     	;# 
   803     0192                     	;# 
   804     020C                     	;# 
   805     020D                     	;# 
   806     020E                     	;# 
   807     020E                     	;# 
   808     020F                     	;# 
   809     020F                     	;# 
   810     0210                     	;# 
   811     0210                     	;# 
   812     0211                     	;# 
   813     0211                     	;# 
   814     028C                     	;# 
   815     028C                     	;# 
   816     028D                     	;# 
   817     028D                     	;# 
   818     028E                     	;# 
   819     028F                     	;# 
   820     0290                     	;# 
   821     0291                     	;# 
   822     030C                     	;# 
   823     030C                     	;# 
   824     030D                     	;# 
   825     030E                     	;# 
   826     030F                     	;# 
   827     0310                     	;# 
   828     0310                     	;# 
   829     0311                     	;# 
   830     0312                     	;# 
   831     0313                     	;# 
   832     0314                     	;# 
   833     0314                     	;# 
   834     0315                     	;# 
   835     0316                     	;# 
   836     0318                     	;# 
   837     0318                     	;# 
   838     0319                     	;# 
   839     031A                     	;# 
   840     059C                     	;# 
   841     059C                     	;# 
   842     059D                     	;# 
   843     059D                     	;# 
   844     059E                     	;# 
   845     059F                     	;# 
   846     070C                     	;# 
   847     070D                     	;# 
   848     070E                     	;# 
   849     0716                     	;# 
   850     0717                     	;# 
   851     0718                     	;# 
   852     080C                     	;# 
   853     0811                     	;# 
   854     0813                     	;# 
   855     0814                     	;# 
   856     081A                     	;# 
   857     081A                     	;# 
   858     081B                     	;# 
   859     081C                     	;# 
   860     081C                     	;# 
   861     081D                     	;# 
   862     081E                     	;# 
   863     081F                     	;# 
   864     088E                     	;# 
   865     0890                     	;# 
   866     0891                     	;# 
   867     0892                     	;# 
   868     0893                     	;# 
   869     090C                     	;# 
   870     1E8F                     	;# 
   871     1E90                     	;# 
   872     1E91                     	;# 
   873     1E92                     	;# 
   874     1E93                     	;# 
   875     1E9C                     	;# 
   876     1EA1                     	;# 
   877     1EA2                     	;# 
   878     1EC3                     	;# 
   879     1EC5                     	;# 
   880     1EC6                     	;# 
   881     1EC7                     	;# 
   882     1ECB                     	;# 
   883     1ECB                     	;# 
   884     1ECB                     	;# 
   885     1ECC                     	;# 
   886     1ECC                     	;# 
   887     1ECC                     	;# 
   888     1F10                     	;# 
   889     1F11                     	;# 
   890     1F12                     	;# 
   891     1F14                     	;# 
   892     1F15                     	;# 
   893     1F20                     	;# 
   894     1F21                     	;# 
   895     1F22                     	;# 
   896     1F23                     	;# 
   897     1F24                     	;# 
   898     1F25                     	;# 
   899     1F38                     	;# 
   900     1F39                     	;# 
   901     1F3A                     	;# 
   902     1F3B                     	;# 
   903     1F3C                     	;# 
   904     1F3D                     	;# 
   905     1F3E                     	;# 
   906     1F3F                     	;# 
   907     1F4E                     	;# 
   908     1F4F                     	;# 
   909     1F50                     	;# 
   910     1F51                     	;# 
   911     1F52                     	;# 
   912     1F53                     	;# 
   913     1F54                     	;# 
   914     1F55                     	;# 
   915     1FE4                     	;# 
   916     1FE5                     	;# 
   917     1FE6                     	;# 
   918     1FE7                     	;# 
   919     1FE8                     	;# 
   920     1FE8                     	;# 
   921     1FE9                     	;# 
   922     1FEA                     	;# 
   923     1FEB                     	;# 
   924     1FED                     	;# 
   925     1FEE                     	;# 
   926     1FEF                     	;# 
   927     0000                     	;# 
   928     0001                     	;# 
   929     0002                     	;# 
   930     0003                     	;# 
   931     0004                     	;# 
   932     0005                     	;# 
   933     0006                     	;# 
   934     0007                     	;# 
   935     0008                     	;# 
   936     0009                     	;# 
   937     000A                     	;# 
   938     000B                     	;# 
   939     000C                     	;# 
   940     000E                     	;# 
   941     0012                     	;# 
   942     0014                     	;# 
   943     0018                     	;# 
   944     001A                     	;# 
   945     009A                     	;# 
   946     009B                     	;# 
   947     009B                     	;# 
   948     009C                     	;# 
   949     009D                     	;# 
   950     009E                     	;# 
   951     009F                     	;# 
   952     010E                     	;# 
   953     010F                     	;# 
   954     0119                     	;# 
   955     011A                     	;# 
   956     011B                     	;# 
   957     011B                     	;# 
   958     011C                     	;# 
   959     011D                     	;# 
   960     011E                     	;# 
   961     011F                     	;# 
   962     018C                     	;# 
   963     018D                     	;# 
   964     018E                     	;# 
   965     018F                     	;# 
   966     0190                     	;# 
   967     0191                     	;# 
   968     0192                     	;# 
   969     020C                     	;# 
   970     020D                     	;# 
   971     020E                     	;# 
   972     020E                     	;# 
   973     020F                     	;# 
   974     020F                     	;# 
   975     0210                     	;# 
   976     0210                     	;# 
   977     0211                     	;# 
   978     0211                     	;# 
   979     028C                     	;# 
   980     028C                     	;# 
   981     028D                     	;# 
   982     028D                     	;# 
   983     028E                     	;# 
   984     028F                     	;# 
   985     0290                     	;# 
   986     0291                     	;# 
   987     030C                     	;# 
   988     030C                     	;# 
   989     030D                     	;# 
   990     030E                     	;# 
   991     030F                     	;# 
   992     0310                     	;# 
   993     0310                     	;# 
   994     0311                     	;# 
   995     0312                     	;# 
   996     0313                     	;# 
   997     0314                     	;# 
   998     0314                     	;# 
   999     0315                     	;# 
  1000     0316                     	;# 
  1001     0318                     	;# 
  1002     0318                     	;# 
  1003     0319                     	;# 
  1004     031A                     	;# 
  1005     059C                     	;# 
  1006     059C                     	;# 
  1007     059D                     	;# 
  1008     059D                     	;# 
  1009     059E                     	;# 
  1010     059F                     	;# 
  1011     070C                     	;# 
  1012     070D                     	;# 
  1013     070E                     	;# 
  1014     0716                     	;# 
  1015     0717                     	;# 
  1016     0718                     	;# 
  1017     080C                     	;# 
  1018     0811                     	;# 
  1019     0813                     	;# 
  1020     0814                     	;# 
  1021     081A                     	;# 
  1022     081A                     	;# 
  1023     081B                     	;# 
  1024     081C                     	;# 
  1025     081C                     	;# 
  1026     081D                     	;# 
  1027     081E                     	;# 
  1028     081F                     	;# 
  1029     088E                     	;# 
  1030     0890                     	;# 
  1031     0891                     	;# 
  1032     0892                     	;# 
  1033     0893                     	;# 
  1034     090C                     	;# 
  1035     1E8F                     	;# 
  1036     1E90                     	;# 
  1037     1E91                     	;# 
  1038     1E92                     	;# 
  1039     1E93                     	;# 
  1040     1E9C                     	;# 
  1041     1EA1                     	;# 
  1042     1EA2                     	;# 
  1043     1EC3                     	;# 
  1044     1EC5                     	;# 
  1045     1EC6                     	;# 
  1046     1EC7                     	;# 
  1047     1ECB                     	;# 
  1048     1ECB                     	;# 
  1049     1ECB                     	;# 
  1050     1ECC                     	;# 
  1051     1ECC                     	;# 
  1052     1ECC                     	;# 
  1053     1F10                     	;# 
  1054     1F11                     	;# 
  1055     1F12                     	;# 
  1056     1F14                     	;# 
  1057     1F15                     	;# 
  1058     1F20                     	;# 
  1059     1F21                     	;# 
  1060     1F22                     	;# 
  1061     1F23                     	;# 
  1062     1F24                     	;# 
  1063     1F25                     	;# 
  1064     1F38                     	;# 
  1065     1F39                     	;# 
  1066     1F3A                     	;# 
  1067     1F3B                     	;# 
  1068     1F3C                     	;# 
  1069     1F3D                     	;# 
  1070     1F3E                     	;# 
  1071     1F3F                     	;# 
  1072     1F4E                     	;# 
  1073     1F4F                     	;# 
  1074     1F50                     	;# 
  1075     1F51                     	;# 
  1076     1F52                     	;# 
  1077     1F53                     	;# 
  1078     1F54                     	;# 
  1079     1F55                     	;# 
  1080     1FE4                     	;# 
  1081     1FE5                     	;# 
  1082     1FE6                     	;# 
  1083     1FE7                     	;# 
  1084     1FE8                     	;# 
  1085     1FE8                     	;# 
  1086     1FE9                     	;# 
  1087     1FEA                     	;# 
  1088     1FEB                     	;# 
  1089     1FED                     	;# 
  1090     1FEE                     	;# 
  1091     1FEF                     	;# 
  1092     0000                     	;# 
  1093     0001                     	;# 
  1094     0002                     	;# 
  1095     0003                     	;# 
  1096     0004                     	;# 
  1097     0005                     	;# 
  1098     0006                     	;# 
  1099     0007                     	;# 
  1100     0008                     	;# 
  1101     0009                     	;# 
  1102     000A                     	;# 
  1103     000B                     	;# 
  1104     000C                     	;# 
  1105     000E                     	;# 
  1106     0012                     	;# 
  1107     0014                     	;# 
  1108     0018                     	;# 
  1109     001A                     	;# 
  1110     009A                     	;# 
  1111     009B                     	;# 
  1112     009B                     	;# 
  1113     009C                     	;# 
  1114     009D                     	;# 
  1115     009E                     	;# 
  1116     009F                     	;# 
  1117     010E                     	;# 
  1118     010F                     	;# 
  1119     0119                     	;# 
  1120     011A                     	;# 
  1121     011B                     	;# 
  1122     011B                     	;# 
  1123     011C                     	;# 
  1124     011D                     	;# 
  1125     011E                     	;# 
  1126     011F                     	;# 
  1127     018C                     	;# 
  1128     018D                     	;# 
  1129     018E                     	;# 
  1130     018F                     	;# 
  1131     0190                     	;# 
  1132     0191                     	;# 
  1133     0192                     	;# 
  1134     020C                     	;# 
  1135     020D                     	;# 
  1136     020E                     	;# 
  1137     020E                     	;# 
  1138     020F                     	;# 
  1139     020F                     	;# 
  1140     0210                     	;# 
  1141     0210                     	;# 
  1142     0211                     	;# 
  1143     0211                     	;# 
  1144     028C                     	;# 
  1145     028C                     	;# 
  1146     028D                     	;# 
  1147     028D                     	;# 
  1148     028E                     	;# 
  1149     028F                     	;# 
  1150     0290                     	;# 
  1151     0291                     	;# 
  1152     030C                     	;# 
  1153     030C                     	;# 
  1154     030D                     	;# 
  1155     030E                     	;# 
  1156     030F                     	;# 
  1157     0310                     	;# 
  1158     0310                     	;# 
  1159     0311                     	;# 
  1160     0312                     	;# 
  1161     0313                     	;# 
  1162     0314                     	;# 
  1163     0314                     	;# 
  1164     0315                     	;# 
  1165     0316                     	;# 
  1166     0318                     	;# 
  1167     0318                     	;# 
  1168     0319                     	;# 
  1169     031A                     	;# 
  1170     059C                     	;# 
  1171     059C                     	;# 
  1172     059D                     	;# 
  1173     059D                     	;# 
  1174     059E                     	;# 
  1175     059F                     	;# 
  1176     070C                     	;# 
  1177     070D                     	;# 
  1178     070E                     	;# 
  1179     0716                     	;# 
  1180     0717                     	;# 
  1181     0718                     	;# 
  1182     080C                     	;# 
  1183     0811                     	;# 
  1184     0813                     	;# 
  1185     0814                     	;# 
  1186     081A                     	;# 
  1187     081A                     	;# 
  1188     081B                     	;# 
  1189     081C                     	;# 
  1190     081C                     	;# 
  1191     081D                     	;# 
  1192     081E                     	;# 
  1193     081F                     	;# 
  1194     088E                     	;# 
  1195     0890                     	;# 
  1196     0891                     	;# 
  1197     0892                     	;# 
  1198     0893                     	;# 
  1199     090C                     	;# 
  1200     1E8F                     	;# 
  1201     1E90                     	;# 
  1202     1E91                     	;# 
  1203     1E92                     	;# 
  1204     1E93                     	;# 
  1205     1E9C                     	;# 
  1206     1EA1                     	;# 
  1207     1EA2                     	;# 
  1208     1EC3                     	;# 
  1209     1EC5                     	;# 
  1210     1EC6                     	;# 
  1211     1EC7                     	;# 
  1212     1ECB                     	;# 
  1213     1ECB                     	;# 
  1214     1ECB                     	;# 
  1215     1ECC                     	;# 
  1216     1ECC                     	;# 
  1217     1ECC                     	;# 
  1218     1F10                     	;# 
  1219     1F11                     	;# 
  1220     1F12                     	;# 
  1221     1F14                     	;# 
  1222     1F15                     	;# 
  1223     1F20                     	;# 
  1224     1F21                     	;# 
  1225     1F22                     	;# 
  1226     1F23                     	;# 
  1227     1F24                     	;# 
  1228     1F25                     	;# 
  1229     1F38                     	;# 
  1230     1F39                     	;# 
  1231     1F3A                     	;# 
  1232     1F3B                     	;# 
  1233     1F3C                     	;# 
  1234     1F3D                     	;# 
  1235     1F3E                     	;# 
  1236     1F3F                     	;# 
  1237     1F4E                     	;# 
  1238     1F4F                     	;# 
  1239     1F50                     	;# 
  1240     1F51                     	;# 
  1241     1F52                     	;# 
  1242     1F53                     	;# 
  1243     1F54                     	;# 
  1244     1F55                     	;# 
  1245     1FE4                     	;# 
  1246     1FE5                     	;# 
  1247     1FE6                     	;# 
  1248     1FE7                     	;# 
  1249     1FE8                     	;# 
  1250     1FE8                     	;# 
  1251     1FE9                     	;# 
  1252     1FEA                     	;# 
  1253     1FEB                     	;# 
  1254     1FED                     	;# 
  1255     1FEE                     	;# 
  1256     1FEF                     	;# 
  1257     0000                     	;# 
  1258     0001                     	;# 
  1259     0002                     	;# 
  1260     0003                     	;# 
  1261     0004                     	;# 
  1262     0005                     	;# 
  1263     0006                     	;# 
  1264     0007                     	;# 
  1265     0008                     	;# 
  1266     0009                     	;# 
  1267     000A                     	;# 
  1268     000B                     	;# 
  1269     000C                     	;# 
  1270     000E                     	;# 
  1271     0012                     	;# 
  1272     0014                     	;# 
  1273     0018                     	;# 
  1274     001A                     	;# 
  1275     009A                     	;# 
  1276     009B                     	;# 
  1277     009B                     	;# 
  1278     009C                     	;# 
  1279     009D                     	;# 
  1280     009E                     	;# 
  1281     009F                     	;# 
  1282     010E                     	;# 
  1283     010F                     	;# 
  1284     0119                     	;# 
  1285     011A                     	;# 
  1286     011B                     	;# 
  1287     011B                     	;# 
  1288     011C                     	;# 
  1289     011D                     	;# 
  1290     011E                     	;# 
  1291     011F                     	;# 
  1292     018C                     	;# 
  1293     018D                     	;# 
  1294     018E                     	;# 
  1295     018F                     	;# 
  1296     0190                     	;# 
  1297     0191                     	;# 
  1298     0192                     	;# 
  1299     020C                     	;# 
  1300     020D                     	;# 
  1301     020E                     	;# 
  1302     020E                     	;# 
  1303     020F                     	;# 
  1304     020F                     	;# 
  1305     0210                     	;# 
  1306     0210                     	;# 
  1307     0211                     	;# 
  1308     0211                     	;# 
  1309     028C                     	;# 
  1310     028C                     	;# 
  1311     028D                     	;# 
  1312     028D                     	;# 
  1313     028E                     	;# 
  1314     028F                     	;# 
  1315     0290                     	;# 
  1316     0291                     	;# 
  1317     030C                     	;# 
  1318     030C                     	;# 
  1319     030D                     	;# 
  1320     030E                     	;# 
  1321     030F                     	;# 
  1322     0310                     	;# 
  1323     0310                     	;# 
  1324     0311                     	;# 
  1325     0312                     	;# 
  1326     0313                     	;# 
  1327     0314                     	;# 
  1328     0314                     	;# 
  1329     0315                     	;# 
  1330     0316                     	;# 
  1331     0318                     	;# 
  1332     0318                     	;# 
  1333     0319                     	;# 
  1334     031A                     	;# 
  1335     059C                     	;# 
  1336     059C                     	;# 
  1337     059D                     	;# 
  1338     059D                     	;# 
  1339     059E                     	;# 
  1340     059F                     	;# 
  1341     070C                     	;# 
  1342     070D                     	;# 
  1343     070E                     	;# 
  1344     0716                     	;# 
  1345     0717                     	;# 
  1346     0718                     	;# 
  1347     080C                     	;# 
  1348     0811                     	;# 
  1349     0813                     	;# 
  1350     0814                     	;# 
  1351     081A                     	;# 
  1352     081A                     	;# 
  1353     081B                     	;# 
  1354     081C                     	;# 
  1355     081C                     	;# 
  1356     081D                     	;# 
  1357     081E                     	;# 
  1358     081F                     	;# 
  1359     088E                     	;# 
  1360     0890                     	;# 
  1361     0891                     	;# 
  1362     0892                     	;# 
  1363     0893                     	;# 
  1364     090C                     	;# 
  1365     1E8F                     	;# 
  1366     1E90                     	;# 
  1367     1E91                     	;# 
  1368     1E92                     	;# 
  1369     1E93                     	;# 
  1370     1E9C                     	;# 
  1371     1EA1                     	;# 
  1372     1EA2                     	;# 
  1373     1EC3                     	;# 
  1374     1EC5                     	;# 
  1375     1EC6                     	;# 
  1376     1EC7                     	;# 
  1377     1ECB                     	;# 
  1378     1ECB                     	;# 
  1379     1ECB                     	;# 
  1380     1ECC                     	;# 
  1381     1ECC                     	;# 
  1382     1ECC                     	;# 
  1383     1F10                     	;# 
  1384     1F11                     	;# 
  1385     1F12                     	;# 
  1386     1F14                     	;# 
  1387     1F15                     	;# 
  1388     1F20                     	;# 
  1389     1F21                     	;# 
  1390     1F22                     	;# 
  1391     1F23                     	;# 
  1392     1F24                     	;# 
  1393     1F25                     	;# 
  1394     1F38                     	;# 
  1395     1F39                     	;# 
  1396     1F3A                     	;# 
  1397     1F3B                     	;# 
  1398     1F3C                     	;# 
  1399     1F3D                     	;# 
  1400     1F3E                     	;# 
  1401     1F3F                     	;# 
  1402     1F4E                     	;# 
  1403     1F4F                     	;# 
  1404     1F50                     	;# 
  1405     1F51                     	;# 
  1406     1F52                     	;# 
  1407     1F53                     	;# 
  1408     1F54                     	;# 
  1409     1F55                     	;# 
  1410     1FE4                     	;# 
  1411     1FE5                     	;# 
  1412     1FE6                     	;# 
  1413     1FE7                     	;# 
  1414     1FE8                     	;# 
  1415     1FE8                     	;# 
  1416     1FE9                     	;# 
  1417     1FEA                     	;# 
  1418     1FEB                     	;# 
  1419     1FED                     	;# 
  1420     1FEE                     	;# 
  1421     1FEF                     	;# 
  1422     0000                     	;# 
  1423     0001                     	;# 
  1424     0002                     	;# 
  1425     0003                     	;# 
  1426     0004                     	;# 
  1427     0005                     	;# 
  1428     0006                     	;# 
  1429     0007                     	;# 
  1430     0008                     	;# 
  1431     0009                     	;# 
  1432     000A                     	;# 
  1433     000B                     	;# 
  1434     000C                     	;# 
  1435     000E                     	;# 
  1436     0012                     	;# 
  1437     0014                     	;# 
  1438     0018                     	;# 
  1439     001A                     	;# 
  1440     009A                     	;# 
  1441     009B                     	;# 
  1442     009B                     	;# 
  1443     009C                     	;# 
  1444     009D                     	;# 
  1445     009E                     	;# 
  1446     009F                     	;# 
  1447     010E                     	;# 
  1448     010F                     	;# 
  1449     0119                     	;# 
  1450     011A                     	;# 
  1451     011B                     	;# 
  1452     011B                     	;# 
  1453     011C                     	;# 
  1454     011D                     	;# 
  1455     011E                     	;# 
  1456     011F                     	;# 
  1457     018C                     	;# 
  1458     018D                     	;# 
  1459     018E                     	;# 
  1460     018F                     	;# 
  1461     0190                     	;# 
  1462     0191                     	;# 
  1463     0192                     	;# 
  1464     020C                     	;# 
  1465     020D                     	;# 
  1466     020E                     	;# 
  1467     020E                     	;# 
  1468     020F                     	;# 
  1469     020F                     	;# 
  1470     0210                     	;# 
  1471     0210                     	;# 
  1472     0211                     	;# 
  1473     0211                     	;# 
  1474     028C                     	;# 
  1475     028C                     	;# 
  1476     028D                     	;# 
  1477     028D                     	;# 
  1478     028E                     	;# 
  1479     028F                     	;# 
  1480     0290                     	;# 
  1481     0291                     	;# 
  1482     030C                     	;# 
  1483     030C                     	;# 
  1484     030D                     	;# 
  1485     030E                     	;# 
  1486     030F                     	;# 
  1487     0310                     	;# 
  1488     0310                     	;# 
  1489     0311                     	;# 
  1490     0312                     	;# 
  1491     0313                     	;# 
  1492     0314                     	;# 
  1493     0314                     	;# 
  1494     0315                     	;# 
  1495     0316                     	;# 
  1496     0318                     	;# 
  1497     0318                     	;# 
  1498     0319                     	;# 
  1499     031A                     	;# 
  1500     059C                     	;# 
  1501     059C                     	;# 
  1502     059D                     	;# 
  1503     059D                     	;# 
  1504     059E                     	;# 
  1505     059F                     	;# 
  1506     070C                     	;# 
  1507     070D                     	;# 
  1508     070E                     	;# 
  1509     0716                     	;# 
  1510     0717                     	;# 
  1511     0718                     	;# 
  1512     080C                     	;# 
  1513     0811                     	;# 
  1514     0813                     	;# 
  1515     0814                     	;# 
  1516     081A                     	;# 
  1517     081A                     	;# 
  1518     081B                     	;# 
  1519     081C                     	;# 
  1520     081C                     	;# 
  1521     081D                     	;# 
  1522     081E                     	;# 
  1523     081F                     	;# 
  1524     088E                     	;# 
  1525     0890                     	;# 
  1526     0891                     	;# 
  1527     0892                     	;# 
  1528     0893                     	;# 
  1529     090C                     	;# 
  1530     1E8F                     	;# 
  1531     1E90                     	;# 
  1532     1E91                     	;# 
  1533     1E92                     	;# 
  1534     1E93                     	;# 
  1535     1E9C                     	;# 
  1536     1EA1                     	;# 
  1537     1EA2                     	;# 
  1538     1EC3                     	;# 
  1539     1EC5                     	;# 
  1540     1EC6                     	;# 
  1541     1EC7                     	;# 
  1542     1ECB                     	;# 
  1543     1ECB                     	;# 
  1544     1ECB                     	;# 
  1545     1ECC                     	;# 
  1546     1ECC                     	;# 
  1547     1ECC                     	;# 
  1548     1F10                     	;# 
  1549     1F11                     	;# 
  1550     1F12                     	;# 
  1551     1F14                     	;# 
  1552     1F15                     	;# 
  1553     1F20                     	;# 
  1554     1F21                     	;# 
  1555     1F22                     	;# 
  1556     1F23                     	;# 
  1557     1F24                     	;# 
  1558     1F25                     	;# 
  1559     1F38                     	;# 
  1560     1F39                     	;# 
  1561     1F3A                     	;# 
  1562     1F3B                     	;# 
  1563     1F3C                     	;# 
  1564     1F3D                     	;# 
  1565     1F3E                     	;# 
  1566     1F3F                     	;# 
  1567     1F4E                     	;# 
  1568     1F4F                     	;# 
  1569     1F50                     	;# 
  1570     1F51                     	;# 
  1571     1F52                     	;# 
  1572     1F53                     	;# 
  1573     1F54                     	;# 
  1574     1F55                     	;# 
  1575     1FE4                     	;# 
  1576     1FE5                     	;# 
  1577     1FE6                     	;# 
  1578     1FE7                     	;# 
  1579     1FE8                     	;# 
  1580     1FE8                     	;# 
  1581     1FE9                     	;# 
  1582     1FEA                     	;# 
  1583     1FEB                     	;# 
  1584     1FED                     	;# 
  1585     1FEE                     	;# 
  1586     1FEF                     	;# 
  1587                           
  1588 ;; Function _I2C1_SlaveDefWrColInterruptHandler is unused but had its address taken
  1589     0000                     
  1590 ;; Function _I2C1_SlaveDefBusColInterruptHandler is unused but had its address taken
  1591     0040                     _default_in_flash_absaddr	set	64
  1592     0040                     _default_in_flash_absaddr	set	64
  1593                           
  1594                           	psect	_default_in_flash_text
  1595     0040                     __p_default_in_flash_text:
  1596     0040                     _default_in_flash:
  1597     0040  3401               	retlw	1
  1598     0041  3400               	retlw	0
  1599     0042  3401               	retlw	1
  1600     0043  3400               	retlw	0
  1601     0044  3401               	retlw	1
  1602     0045  3400               	retlw	0
  1603     0046  3401               	retlw	1
  1604     0047  3400               	retlw	0
  1605     0048  3401               	retlw	1
  1606     0049  3400               	retlw	0
  1607     004A  3401               	retlw	1
  1608     004B  3400               	retlw	0
  1609     004C  3402               	retlw	2
  1610     004D  3400               	retlw	0
  1611     004E  3402               	retlw	2
  1612     004F  3400               	retlw	0
  1613     0050  3402               	retlw	2
  1614     0051  3400               	retlw	0
  1615     0052  3402               	retlw	2
  1616     0053  3400               	retlw	0
  1617     0054  3402               	retlw	2
  1618     0055  3400               	retlw	0
  1619     0056  3402               	retlw	2
  1620     0057  3400               	retlw	0
  1621     0058  3403               	retlw	3
  1622     0059  3400               	retlw	0
  1623     005A  3403               	retlw	3
  1624     005B  3400               	retlw	0
  1625     005C  3403               	retlw	3
  1626     005D  3400               	retlw	0
  1627     005E  3403               	retlw	3
  1628     005F  3400               	retlw	0
  1629     0060  3403               	retlw	3
  1630     0061  3400               	retlw	0
  1631     0062  3403               	retlw	3
  1632     0063  3400               	retlw	0
  1633     0064  3404               	retlw	4
  1634     0065  3400               	retlw	0
  1635     0066  3404               	retlw	4
  1636     0067  3400               	retlw	0
  1637     0068  3404               	retlw	4
  1638     0069  3400               	retlw	0
  1639     006A  3404               	retlw	4
  1640     006B  3400               	retlw	0
  1641     006C  3404               	retlw	4
  1642     006D  3400               	retlw	0
  1643     006E  3404               	retlw	4
  1644     006F  3400               	retlw	0
  1645     0070  3405               	retlw	5
  1646     0071  3400               	retlw	0
  1647     0072  3405               	retlw	5
  1648     0073  3400               	retlw	0
  1649     0074  3405               	retlw	5
  1650     0075  3400               	retlw	0
  1651     0076  3405               	retlw	5
  1652     0077  3400               	retlw	0
  1653     0078  3405               	retlw	5
  1654     0079  3400               	retlw	0
  1655     007A  3405               	retlw	5
  1656     007B  3400               	retlw	0
  1657     007C  3406               	retlw	6
  1658     007D  3400               	retlw	0
  1659     007E  3406               	retlw	6
  1660     007F  3400               	retlw	0
  1661     0080  3406               	retlw	6
  1662     0081  3400               	retlw	0
  1663     0082  3406               	retlw	6
  1664     0083  3400               	retlw	0
  1665     0084  3406               	retlw	6
  1666     0085  3400               	retlw	0
  1667     0086  3406               	retlw	6
  1668     0087  3400               	retlw	0
  1669     0088  3407               	retlw	7
  1670     0089  3400               	retlw	0
  1671     008A  3407               	retlw	7
  1672     008B  3400               	retlw	0
  1673     008C  3407               	retlw	7
  1674     008D  3400               	retlw	0
  1675     008E  3407               	retlw	7
  1676     008F  3400               	retlw	0
  1677     0090  3407               	retlw	7
  1678     0091  3400               	retlw	0
  1679     0092  3407               	retlw	7
  1680     0093  3400               	retlw	0
  1681     0094  3408               	retlw	8
  1682     0095  3400               	retlw	0
  1683     0096  3408               	retlw	8
  1684     0097  3400               	retlw	0
  1685     0098  3408               	retlw	8
  1686     0099  3400               	retlw	0
  1687     009A  3408               	retlw	8
  1688     009B  3400               	retlw	0
  1689     009C  3408               	retlw	8
  1690     009D  3400               	retlw	0
  1691     009E  3408               	retlw	8
  1692     009F  3400               	retlw	0
  1693     00A0  3409               	retlw	9
  1694     00A1  3400               	retlw	0
  1695     00A2  3409               	retlw	9
  1696     00A3  3400               	retlw	0
  1697     00A4  3409               	retlw	9
  1698     00A5  3400               	retlw	0
  1699     00A6  3409               	retlw	9
  1700     00A7  3400               	retlw	0
  1701     00A8  3409               	retlw	9
  1702     00A9  3400               	retlw	0
  1703     00AA  3409               	retlw	9
  1704     00AB  3400               	retlw	0
  1705     00AC  340A               	retlw	10
  1706     00AD  3400               	retlw	0
  1707     00AE  340A               	retlw	10
  1708     00AF  3400               	retlw	0
  1709     00B0  340A               	retlw	10
  1710     00B1  3400               	retlw	0
  1711     00B2  340A               	retlw	10
  1712     00B3  3400               	retlw	0
  1713     00B4  340A               	retlw	10
  1714     00B5  3400               	retlw	0
  1715     00B6  340A               	retlw	10
  1716     00B7  3400               	retlw	0
  1717     00B8  340B               	retlw	11
  1718     00B9  3400               	retlw	0
  1719     00BA  340B               	retlw	11
  1720     00BB  3400               	retlw	0
  1721     00BC  340B               	retlw	11
  1722     00BD  3400               	retlw	0
  1723     00BE  340B               	retlw	11
  1724     00BF  3400               	retlw	0
  1725     00C0  340B               	retlw	11
  1726     00C1  3400               	retlw	0
  1727     00C2  340B               	retlw	11
  1728     00C3  3400               	retlw	0
  1729     00C4  340C               	retlw	12
  1730     00C5  3400               	retlw	0
  1731     00C6  340C               	retlw	12
  1732     00C7  3400               	retlw	0
  1733     00C8  340C               	retlw	12
  1734     00C9  3400               	retlw	0
  1735     00CA  340C               	retlw	12
  1736     00CB  3400               	retlw	0
  1737     00CC  340C               	retlw	12
  1738     00CD  3400               	retlw	0
  1739     00CE  340C               	retlw	12
  1740     00CF  3400               	retlw	0
  1741     00D0                     __end_of_default_in_flash:
  1742                           
  1743                           	psect	nvBANK0
  1744     005F                     __pnvBANK0:
  1745     005F                     _TMR0_InterruptHandler:
  1746     005F                     	ds	2
  1747     0018                     _LATAbits	set	24
  1748     000B                     _INTCONbits	set	11
  1749     0014                     _TRISC	set	20
  1750     0012                     _TRISA	set	18
  1751     001A                     _LATC	set	26
  1752     0018                     _LATA	set	24
  1753     000C                     _PORTA	set	12
  1754     000E                     _PORTC	set	14
  1755     018C                     _SSP1BUF	set	396
  1756     0191                     _SSP1CON2bits	set	401
  1757     018F                     _SSP1STATbits	set	399
  1758     018E                     _SSP1MSK	set	398
  1759     018D                     _SSP1ADD	set	397
  1760     0190                     _SSP1CON1bits	set	400
  1761     0191                     _SSP1CON2	set	401
  1762     0190                     _SSP1CON1	set	400
  1763     018F                     _SSP1STAT	set	399
  1764     059E                     _T0CON0bits	set	1438
  1765     059E                     _T0CON0	set	1438
  1766     059C                     _TMR0L	set	1436
  1767     059D                     _TMR0H	set	1437
  1768     059F                     _T0CON1	set	1439
  1769     070D                     _PIR1bits	set	1805
  1770     0717                     _PIE1bits	set	1815
  1771     070C                     _PIR0bits	set	1804
  1772     0716                     _PIE0bits	set	1814
  1773     080C                     _WDTCON	set	2060
  1774     081F                     _NVMCON2	set	2079
  1775     081C                     _NVMDATL	set	2076
  1776     081D                     _NVMDATH	set	2077
  1777     081E                     _NVMCON1bits	set	2078
  1778     081B                     _NVMADRH	set	2075
  1779     081A                     _NVMADRL	set	2074
  1780     0892                     _OSCTUNE	set	2194
  1781     0893                     _OSCFRQ	set	2195
  1782     0891                     _OSCEN	set	2193
  1783     1EC6                     _SSP1DATPPS	set	7878
  1784     1EC5                     _SSP1CLKPPS	set	7877
  1785     1F21                     _RC1PPS	set	7969
  1786     1F20                     _RC0PPS	set	7968
  1787     1F52                     _INLVLC	set	8018
  1788     1F3C                     _INLVLA	set	7996
  1789     1F51                     _SLRCONC	set	8017
  1790     1F3B                     _SLRCONA	set	7995
  1791     1F50                     _ODCONC	set	8016
  1792     1F3A                     _ODCONA	set	7994
  1793     1F4F                     _WPUC	set	8015
  1794     1F39                     _WPUA	set	7993
  1795     1F38                     _ANSELA	set	7992
  1796     1F4E                     _ANSELC	set	8014
  1797                           
  1798                           	psect	cinit
  1799     00D0                     start_initialization:	
  1800                           ; #config settings
  1801                           
  1802     00D0                     __initialization:
  1803                           
  1804                           ; Clear objects allocated to BANK0
  1805     00D0  3020               	movlw	low __pbssBANK0
  1806     00D1  0084               	movwf	4
  1807     00D2  3000               	movlw	high __pbssBANK0
  1808     00D3  0085               	movwf	5
  1809     00D4  3020               	movlw	32
  1810     00D5  3185  25FF  3180   	fcall	clear_ram0
  1811                           
  1812                           ; Clear objects allocated to BANK1
  1813     00D8  30A0               	movlw	low __pbssBANK1
  1814     00D9  0084               	movwf	4
  1815     00DA  3000               	movlw	high __pbssBANK1
  1816     00DB  0085               	movwf	5
  1817     00DC  3040               	movlw	64
  1818     00DD  3185  25FF  3180   	fcall	clear_ram0
  1819     00E0                     end_of_initialization:	
  1820                           ;End of C runtime variable initialization code
  1821                           
  1822     00E0                     __end_of__initialization:
  1823     00E0  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  1824     00E1  0140               	movlb	0
  1825     00E2  2C79               	ljmp	_main	;jump to C main() function
  1826                           
  1827                           	psect	bssBANK0
  1828     0020                     __pbssBANK0:
  1829     0020                     _I2C1_SlaveWrColInterruptHandler:
  1830     0020                     	ds	2
  1831     0022                     _I2C1_SlaveBusColInterruptHandler:
  1832     0022                     	ds	2
  1833     0024                     _I2C1_SlaveAddrInterruptHandler:
  1834     0024                     	ds	2
  1835     0026                     _I2C1_SlaveWrInterruptHandler:
  1836     0026                     	ds	2
  1837     0028                     _I2C1_SlaveRdInterruptHandler:
  1838     0028                     	ds	2
  1839     002A                     _MSSP1_InterruptHandler:
  1840     002A                     	ds	2
  1841     002C                     _i2cReadCnt@i2c1_slave$F1138:
  1842     002C                     	ds	1
  1843     002D                     _i2cReadCnt@i2c1_slave$F1101:
  1844     002D                     	ds	1
  1845     002E                     _i2c1SlaveState:
  1846     002E                     	ds	1
  1847     002F                     _i2c1SlaveAddr:
  1848     002F                     	ds	1
  1849     0030                     _i2c1RdData:
  1850     0030                     	ds	1
  1851     0031                     _i2c1WrData:
  1852     0031                     	ds	1
  1853     0032                     _i2cReadCnt@i2c1_slave$F755:
  1854     0032                     	ds	1
  1855     0033                     _i2cReadCnt@i2c1_slave$F185:
  1856     0033                     	ds	1
  1857     0034                     _debug:
  1858     0034                     	ds	1
  1859     0035                     _high_cal:
  1860     0035                     	ds	1
  1861     0036                     _low_cal:
  1862     0036                     	ds	1
  1863     0037                     _command:
  1864     0037                     	ds	1
  1865     0038                     _LED_timer:
  1866     0038                     	ds	1
  1867     0039                     _i2cReadCnt:
  1868     0039                     	ds	1
  1869     003A                     _error_flag:
  1870     003A                     	ds	1
  1871     003B                     _i2cDataRead:
  1872     003B                     	ds	5
  1873                           
  1874                           	psect	bssBANK1
  1875     00A0                     __pbssBANK1:
  1876     00A0                     _ramBuff:
  1877     00A0                     	ds	64
  1878                           
  1879                           	psect	clrtext
  1880     05FF                     clear_ram0:	
  1881                           ;	Called with FSR0 containing the base address, and
  1882                           ;	WREG with the size to clear
  1883                           
  1884     05FF  0064               	clrwdt	;clear the watchdog before getting into this loop
  1885     0600                     clrloop0:
  1886     0600  0180               	clrf	0	;clear RAM location pointed to by FSR
  1887     0601  3101               	addfsr 0,1
  1888     0602  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  1889     0603  2E00               	goto	clrloop0	;have we reached the end yet?
  1890     0604  3400               	retlw	0	;all done for this memory range, return
  1891                           
  1892                           	psect	cstackBANK1
  1893     00E0                     __pcstackBANK1:
  1894     00E0                     ?_FLASH_WriteWord:
  1895     00E0                     FLASH_WriteWord@flashAddr:	
  1896                           ; 1 bytes @ 0x0
  1897                           
  1898                           
  1899                           ; 2 bytes @ 0x0
  1900     00E0                     	ds	2
  1901     00E2                     FLASH_WriteWord@ramBuf:
  1902                           
  1903                           ; 1 bytes @ 0x2
  1904     00E2                     	ds	1
  1905     00E3                     FLASH_WriteWord@word:
  1906                           
  1907                           ; 2 bytes @ 0x3
  1908     00E3                     	ds	2
  1909     00E5                     FLASH_WriteWord@offset:
  1910                           
  1911                           ; 1 bytes @ 0x5
  1912     00E5                     	ds	1
  1913     00E6                     FLASH_WriteWord@blockStartAddr:
  1914                           
  1915                           ; 2 bytes @ 0x6
  1916     00E6                     	ds	2
  1917     00E8                     FLASH_WriteWord@i:
  1918                           
  1919                           ; 1 bytes @ 0x8
  1920     00E8                     	ds	1
  1921     00E9                     memory_initialize@TAG:
  1922                           
  1923                           ; 1 bytes @ 0x9
  1924     00E9                     	ds	1
  1925     00EA                     main@TAG:
  1926                           
  1927                           ; 1 bytes @ 0xA
  1928     00EA                     	ds	1
  1929                           
  1930                           	psect	cstackCOMMON
  1931     0070                     __pcstackCOMMON:
  1932     0070                     ?_TMR0_ISR:
  1933     0070                     ?_I2C1_SlaveOpen:	
  1934                           ; 1 bytes @ 0x0
  1935                           
  1936     0070                     ?_I2C1_SlaveSetSlaveAddr:	
  1937                           ; 1 bytes @ 0x0
  1938                           
  1939     0070                     ?_I2C1_SlaveSetSlaveMask:	
  1940                           ; 1 bytes @ 0x0
  1941                           
  1942     0070                     ?_I2C1_Isr:	
  1943                           ; 1 bytes @ 0x0
  1944                           
  1945     0070                     ?_I2C1_SlaveDefWrInterruptHandler:	
  1946                           ; 1 bytes @ 0x0
  1947                           
  1948     0070                     ?_I2C1_SlaveDefRdInterruptHandler:	
  1949                           ; 1 bytes @ 0x0
  1950                           
  1951     0070                     ??_I2C1_SlaveDefRdInterruptHandler:	
  1952                           ; 1 bytes @ 0x0
  1953                           
  1954     0070                     ?_I2C1_SlaveDefAddrInterruptHandler:	
  1955                           ; 1 bytes @ 0x0
  1956                           
  1957     0070                     ??_I2C1_SlaveDefAddrInterruptHandler:	
  1958                           ; 1 bytes @ 0x0
  1959                           
  1960     0070                     ?_I2C1_SlaveEnableIrq:	
  1961                           ; 1 bytes @ 0x0
  1962                           
  1963     0070                     ?_I2C1_SlaveGetRxData:	
  1964                           ; 1 bytes @ 0x0
  1965                           
  1966     0070                     ??_I2C1_SlaveGetRxData:	
  1967                           ; 1 bytes @ 0x0
  1968                           
  1969     0070                     ?_I2C1_SlaveSendTxData:	
  1970                           ; 1 bytes @ 0x0
  1971                           
  1972     0070                     ??_I2C1_SlaveSendTxData:	
  1973                           ; 1 bytes @ 0x0
  1974                           
  1975     0070                     ?_I2C1_SlaveIsRead:	
  1976                           ; 1 bytes @ 0x0
  1977                           
  1978     0070                     ??_I2C1_SlaveIsRead:	
  1979                           ; 1 bytes @ 0x0
  1980                           
  1981     0070                     ?_I2C1_SlaveClearIrq:	
  1982                           ; 1 bytes @ 0x0
  1983                           
  1984     0070                     ??_I2C1_SlaveClearIrq:	
  1985                           ; 1 bytes @ 0x0
  1986                           
  1987     0070                     ?_I2C1_SlaveIsAddr:	
  1988                           ; 1 bytes @ 0x0
  1989                           
  1990     0070                     ??_I2C1_SlaveIsAddr:	
  1991                           ; 1 bytes @ 0x0
  1992                           
  1993     0070                     ?_I2C1_SlaveAddrCallBack:	
  1994                           ; 1 bytes @ 0x0
  1995                           
  1996     0070                     ??_I2C1_SlaveAddrCallBack:	
  1997                           ; 1 bytes @ 0x0
  1998                           
  1999     0070                     ?_I2C1_SlaveIsTxBufEmpty:	
  2000                           ; 1 bytes @ 0x0
  2001                           
  2002     0070                     ??_I2C1_SlaveIsTxBufEmpty:	
  2003                           ; 1 bytes @ 0x0
  2004                           
  2005     0070                     ?_I2C1_SlaveWrCallBack:	
  2006                           ; 1 bytes @ 0x0
  2007                           
  2008     0070                     ?_I2C1_SlaveIsRxBufFull:	
  2009                           ; 1 bytes @ 0x0
  2010                           
  2011     0070                     ??_I2C1_SlaveIsRxBufFull:	
  2012                           ; 1 bytes @ 0x0
  2013                           
  2014     0070                     ?_I2C1_SlaveRdCallBack:	
  2015                           ; 1 bytes @ 0x0
  2016                           
  2017     0070                     ?_I2C1_SlaveReleaseClock:	
  2018                           ; 1 bytes @ 0x0
  2019                           
  2020     0070                     ??_I2C1_SlaveReleaseClock:	
  2021                           ; 1 bytes @ 0x0
  2022                           
  2023     0070                     ?_TMR0_DefaultInterruptHandler:	
  2024                           ; 1 bytes @ 0x0
  2025                           
  2026     0070                     ??_TMR0_DefaultInterruptHandler:	
  2027                           ; 1 bytes @ 0x0
  2028                           
  2029     0070                     ?_OSCILLATOR_Initialize:	
  2030                           ; 1 bytes @ 0x0
  2031                           
  2032     0070                     ?_WDT_Initialize:	
  2033                           ; 1 bytes @ 0x0
  2034                           
  2035     0070                     ?_memory_initialize:	
  2036                           ; 1 bytes @ 0x0
  2037                           
  2038     0070                     ?_data_recv_handler:	
  2039                           ; 1 bytes @ 0x0
  2040                           
  2041     0070                     ?_getSensorBoardType:	
  2042                           ; 1 bytes @ 0x0
  2043                           
  2044     0070                     ?_SensorBoardType_validation:	
  2045                           ; 1 bytes @ 0x0
  2046                           
  2047     0070                     ?_error_signal:	
  2048                           ; 1 bytes @ 0x0
  2049                           
  2050     0070                     ?_PIN_MANAGER_Initialize:	
  2051                           ; 1 bytes @ 0x0
  2052                           
  2053     0070                     ?_INTERRUPT_InterruptManager:	
  2054                           ; 1 bytes @ 0x0
  2055                           
  2056     0070                     ?_I2C1_Initialize:	
  2057                           ; 1 bytes @ 0x0
  2058                           
  2059     0070                     ?_I2C1_Open:	
  2060                           ; 1 bytes @ 0x0
  2061                           
  2062     0070                     ?_TMR0_Initialize:	
  2063                           ; 1 bytes @ 0x0
  2064                           
  2065     0070                     ?_SYSTEM_Initialize:	
  2066                           ; 1 bytes @ 0x0
  2067                           
  2068     0070                     ?_main:	
  2069                           ; 1 bytes @ 0x0
  2070                           
  2071     0070                     ?i1_FLASH_EraseBlock:	
  2072                           ; 1 bytes @ 0x0
  2073                           
  2074     0070                     ?i1_FLASH_ReadWord:	
  2075                           ; 1 bytes @ 0x0
  2076                           
  2077     0070                     I2C1_SlaveSendTxData@data:	
  2078                           ; 2 bytes @ 0x0
  2079                           
  2080     0070                     i1FLASH_ReadWord@flashAddr:	
  2081                           ; 1 bytes @ 0x0
  2082                           
  2083     0070                     i1FLASH_EraseBlock@startAddr:	
  2084                           ; 2 bytes @ 0x0
  2085                           
  2086                           
  2087                           ; 2 bytes @ 0x0
  2088     0070                     	ds	1
  2089     0071                     ??_TMR0_ISR:
  2090     0071                     ??_I2C1_SlaveDefWrInterruptHandler:	
  2091                           ; 1 bytes @ 0x1
  2092                           
  2093     0071                     ??_I2C1_SlaveWrCallBack:	
  2094                           ; 1 bytes @ 0x1
  2095                           
  2096                           
  2097                           ; 1 bytes @ 0x1
  2098     0071                     	ds	1
  2099     0072                     ??i1_FLASH_ReadWord:
  2100     0072                     ??i1_FLASH_EraseBlock:	
  2101                           ; 1 bytes @ 0x2
  2102                           
  2103     0072                     i1FLASH_ReadWord@GIEBitValue:	
  2104                           ; 1 bytes @ 0x2
  2105                           
  2106     0072                     i1FLASH_EraseBlock@GIEBitValue:	
  2107                           ; 1 bytes @ 0x2
  2108                           
  2109                           
  2110                           ; 1 bytes @ 0x2
  2111     0072                     	ds	1
  2112     0073                     ?i1_FLASH_WriteBlock:
  2113     0073                     i1FLASH_WriteBlock@writeAddr:	
  2114                           ; 1 bytes @ 0x3
  2115                           
  2116                           
  2117                           ; 2 bytes @ 0x3
  2118     0073                     	ds	2
  2119     0075                     i1FLASH_WriteBlock@flashWordArray:
  2120                           
  2121                           ; 1 bytes @ 0x5
  2122     0075                     	ds	1
  2123     0076                     ??i1_FLASH_WriteBlock:
  2124                           
  2125                           ; 1 bytes @ 0x6
  2126     0076                     	ds	3
  2127     0079                     i1FLASH_WriteBlock@blockStartAddr:
  2128                           
  2129                           ; 2 bytes @ 0x9
  2130     0079                     	ds	2
  2131     007B                     i1FLASH_WriteBlock@GIEBitValue:
  2132                           
  2133                           ; 1 bytes @ 0xB
  2134     007B                     	ds	1
  2135     007C                     i1FLASH_WriteBlock@i:
  2136                           
  2137                           ; 1 bytes @ 0xC
  2138     007C                     	ds	1
  2139     007D                     ??i1_FLASH_WriteWord:
  2140                           
  2141                           ; 1 bytes @ 0xD
  2142     007D                     	ds	1
  2143     007E                     ??_I2C1_SlaveRdCallBack:
  2144     007E                     ??_INTERRUPT_InterruptManager:	
  2145                           ; 1 bytes @ 0xE
  2146                           
  2147                           
  2148                           	psect	cstackBANK0
  2149     0040                     __pcstackBANK0:	
  2150                           ; 1 bytes @ 0xE
  2151                           
  2152     0040                     ?i1_FLASH_WriteWord:
  2153     0040                     i1FLASH_WriteWord@flashAddr:	
  2154                           ; 1 bytes @ 0x0
  2155                           
  2156                           
  2157                           ; 2 bytes @ 0x0
  2158     0040                     	ds	2
  2159     0042                     i1FLASH_WriteWord@ramBuf:
  2160                           
  2161                           ; 1 bytes @ 0x2
  2162     0042                     	ds	1
  2163     0043                     i1FLASH_WriteWord@word:
  2164                           
  2165                           ; 2 bytes @ 0x3
  2166     0043                     	ds	2
  2167     0045                     i1FLASH_WriteWord@offset:
  2168                           
  2169                           ; 1 bytes @ 0x5
  2170     0045                     	ds	1
  2171     0046                     i1FLASH_WriteWord@blockStartAddr:
  2172                           
  2173                           ; 2 bytes @ 0x6
  2174     0046                     	ds	2
  2175     0048                     i1FLASH_WriteWord@i:
  2176                           
  2177                           ; 1 bytes @ 0x8
  2178     0048                     	ds	1
  2179     0049                     ??_data_recv_handler:
  2180                           
  2181                           ; 1 bytes @ 0x9
  2182     0049                     	ds	2
  2183     004B                     data_recv_handler@i:
  2184                           
  2185                           ; 2 bytes @ 0xB
  2186     004B                     	ds	2
  2187     004D                     ??_I2C1_Isr:
  2188                           
  2189                           ; 1 bytes @ 0xD
  2190     004D                     	ds	2
  2191     004F                     ??_I2C1_SlaveOpen:
  2192     004F                     ??_I2C1_SlaveSetSlaveAddr:	
  2193                           ; 1 bytes @ 0xF
  2194                           
  2195     004F                     ??_I2C1_SlaveSetSlaveMask:	
  2196                           ; 1 bytes @ 0xF
  2197                           
  2198     004F                     ?_I2C1_SlaveSetIsrHandler:	
  2199                           ; 1 bytes @ 0xF
  2200                           
  2201     004F                     ?_I2C1_SlaveSetBusColIntHandler:	
  2202                           ; 1 bytes @ 0xF
  2203                           
  2204     004F                     ?_I2C1_SlaveSetWriteIntHandler:	
  2205                           ; 1 bytes @ 0xF
  2206                           
  2207     004F                     ?_I2C1_SlaveSetReadIntHandler:	
  2208                           ; 1 bytes @ 0xF
  2209                           
  2210     004F                     ?_I2C1_SlaveSetAddrIntHandler:	
  2211                           ; 1 bytes @ 0xF
  2212                           
  2213     004F                     ?_I2C1_SlaveSetWrColIntHandler:	
  2214                           ; 1 bytes @ 0xF
  2215                           
  2216     004F                     ??_I2C1_SlaveEnableIrq:	
  2217                           ; 1 bytes @ 0xF
  2218                           
  2219     004F                     ?_TMR0_SetInterruptHandler:	
  2220                           ; 1 bytes @ 0xF
  2221                           
  2222     004F                     ?_FLASH_EraseBlock:	
  2223                           ; 1 bytes @ 0xF
  2224                           
  2225     004F                     ??_OSCILLATOR_Initialize:	
  2226                           ; 1 bytes @ 0xF
  2227                           
  2228     004F                     ??_WDT_Initialize:	
  2229                           ; 1 bytes @ 0xF
  2230                           
  2231     004F                     ??_getSensorBoardType:	
  2232                           ; 1 bytes @ 0xF
  2233                           
  2234     004F                     ??_SensorBoardType_validation:	
  2235                           ; 1 bytes @ 0xF
  2236                           
  2237     004F                     ??_error_signal:	
  2238                           ; 1 bytes @ 0xF
  2239                           
  2240     004F                     ??_PIN_MANAGER_Initialize:	
  2241                           ; 1 bytes @ 0xF
  2242                           
  2243     004F                     ??_I2C1_Initialize:	
  2244                           ; 1 bytes @ 0xF
  2245                           
  2246     004F                     ?_FLASH_ReadWord:	
  2247                           ; 1 bytes @ 0xF
  2248                           
  2249     004F                     ?___wmul:	
  2250                           ; 2 bytes @ 0xF
  2251                           
  2252     004F                     SensorBoardType_validation@SensorBoardType:	
  2253                           ; 2 bytes @ 0xF
  2254                           
  2255     004F                     I2C1_SlaveSetSlaveAddr@slaveAddr:	
  2256                           ; 1 bytes @ 0xF
  2257                           
  2258     004F                     I2C1_SlaveSetSlaveMask@maskAddr:	
  2259                           ; 1 bytes @ 0xF
  2260                           
  2261     004F                     I2C1_SlaveSetIsrHandler@handler:	
  2262                           ; 1 bytes @ 0xF
  2263                           
  2264     004F                     I2C1_SlaveSetReadIntHandler@handler:	
  2265                           ; 2 bytes @ 0xF
  2266                           
  2267     004F                     I2C1_SlaveSetWriteIntHandler@handler:	
  2268                           ; 2 bytes @ 0xF
  2269                           
  2270     004F                     I2C1_SlaveSetAddrIntHandler@handler:	
  2271                           ; 2 bytes @ 0xF
  2272                           
  2273     004F                     I2C1_SlaveSetWrColIntHandler@handler:	
  2274                           ; 2 bytes @ 0xF
  2275                           
  2276     004F                     I2C1_SlaveSetBusColIntHandler@handler:	
  2277                           ; 2 bytes @ 0xF
  2278                           
  2279     004F                     TMR0_SetInterruptHandler@InterruptHandler:	
  2280                           ; 2 bytes @ 0xF
  2281                           
  2282     004F                     FLASH_ReadWord@flashAddr:	
  2283                           ; 2 bytes @ 0xF
  2284                           
  2285     004F                     FLASH_EraseBlock@startAddr:	
  2286                           ; 2 bytes @ 0xF
  2287                           
  2288     004F                     ___wmul@multiplier:	
  2289                           ; 2 bytes @ 0xF
  2290                           
  2291                           
  2292                           ; 2 bytes @ 0xF
  2293     004F                     	ds	2
  2294     0051                     ??_FLASH_ReadWord:
  2295     0051                     ??_I2C1_SlaveSetIsrHandler:	
  2296                           ; 1 bytes @ 0x11
  2297                           
  2298     0051                     ??_I2C1_SlaveSetBusColIntHandler:	
  2299                           ; 1 bytes @ 0x11
  2300                           
  2301     0051                     ??_I2C1_SlaveSetWriteIntHandler:	
  2302                           ; 1 bytes @ 0x11
  2303                           
  2304     0051                     ??_I2C1_SlaveSetReadIntHandler:	
  2305                           ; 1 bytes @ 0x11
  2306                           
  2307     0051                     ??_I2C1_SlaveSetAddrIntHandler:	
  2308                           ; 1 bytes @ 0x11
  2309                           
  2310     0051                     ??_I2C1_SlaveSetWrColIntHandler:	
  2311                           ; 1 bytes @ 0x11
  2312                           
  2313     0051                     ??_TMR0_SetInterruptHandler:	
  2314                           ; 1 bytes @ 0x11
  2315                           
  2316     0051                     ??_FLASH_EraseBlock:	
  2317                           ; 1 bytes @ 0x11
  2318                           
  2319     0051                     ??_I2C1_Open:	
  2320                           ; 1 bytes @ 0x11
  2321                           
  2322     0051                     ??_TMR0_Initialize:	
  2323                           ; 1 bytes @ 0x11
  2324                           
  2325     0051                     ??_SYSTEM_Initialize:	
  2326                           ; 1 bytes @ 0x11
  2327                           
  2328     0051                     FLASH_ReadWord@GIEBitValue:	
  2329                           ; 1 bytes @ 0x11
  2330                           
  2331     0051                     FLASH_EraseBlock@GIEBitValue:	
  2332                           ; 1 bytes @ 0x11
  2333                           
  2334     0051                     ___wmul@multiplicand:	
  2335                           ; 1 bytes @ 0x11
  2336                           
  2337                           
  2338                           ; 2 bytes @ 0x11
  2339     0051                     	ds	1
  2340     0052                     ?_FLASH_WriteBlock:
  2341     0052                     FLASH_WriteBlock@writeAddr:	
  2342                           ; 1 bytes @ 0x12
  2343                           
  2344                           
  2345                           ; 2 bytes @ 0x12
  2346     0052                     	ds	1
  2347     0053                     ??___wmul:
  2348     0053                     ___wmul@product:	
  2349                           ; 1 bytes @ 0x13
  2350                           
  2351                           
  2352                           ; 2 bytes @ 0x13
  2353     0053                     	ds	1
  2354     0054                     FLASH_WriteBlock@flashWordArray:
  2355                           
  2356                           ; 1 bytes @ 0x14
  2357     0054                     	ds	1
  2358     0055                     ??_FLASH_WriteBlock:
  2359                           
  2360                           ; 1 bytes @ 0x15
  2361     0055                     	ds	3
  2362     0058                     FLASH_WriteBlock@blockStartAddr:
  2363                           
  2364                           ; 2 bytes @ 0x18
  2365     0058                     	ds	2
  2366     005A                     FLASH_WriteBlock@GIEBitValue:
  2367                           
  2368                           ; 1 bytes @ 0x1A
  2369     005A                     	ds	1
  2370     005B                     FLASH_WriteBlock@i:
  2371                           
  2372                           ; 1 bytes @ 0x1B
  2373     005B                     	ds	1
  2374     005C                     ??_FLASH_WriteWord:
  2375                           
  2376                           ; 1 bytes @ 0x1C
  2377     005C                     	ds	1
  2378     005D                     ??_memory_initialize:
  2379                           
  2380                           ; 1 bytes @ 0x1D
  2381     005D                     	ds	2
  2382     005F                     ??_main:
  2383                           
  2384                           	psect	maintext
  2385     0479                     __pmaintext:	
  2386                           ; 1 bytes @ 0x1F
  2387 ;;
  2388 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  2389 ;;
  2390 ;; *************** function _main *****************
  2391 ;; Defined at:
  2392 ;;		line 50 in file "main.c"
  2393 ;; Parameters:    Size  Location     Type
  2394 ;;		None
  2395 ;; Auto vars:     Size  Location     Type
  2396 ;;  TAG             1   10[BANK1 ] unsigned char 
  2397 ;; Return value:  Size  Location     Type
  2398 ;;                  1    wreg      void 
  2399 ;; Registers used:
  2400 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2401 ;; Tracked objects:
  2402 ;;		On entry : B3F/0
  2403 ;;		On exit  : 0/0
  2404 ;;		Unchanged: 0/0
  2405 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2406 ;;      Params:         0       0       0       0
  2407 ;;      Locals:         0       0       1       0
  2408 ;;      Temps:          0       0       0       0
  2409 ;;      Totals:         0       0       1       0
  2410 ;;Total ram usage:        1 bytes
  2411 ;; Hardware stack levels required when called: 11
  2412 ;; This function calls:
  2413 ;;		_I2C1_Open
  2414 ;;		_SYSTEM_Initialize
  2415 ;;		_SensorBoardType_validation
  2416 ;;		_error_signal
  2417 ;;		_getSensorBoardType
  2418 ;;		_memory_initialize
  2419 ;; This function is called by:
  2420 ;;		Startup code after reset
  2421 ;; This function uses a non-reentrant model
  2422 ;;
  2423                           
  2424     0479                     _main:	
  2425                           ;psect for function _main
  2426                           
  2427     0479                     l2694:	
  2428                           ;incstack = 0
  2429                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2430                           
  2431                           
  2432                           ;main.c: 53:     SYSTEM_Initialize();
  2433     0479  3185  2587  3184   	fcall	_SYSTEM_Initialize
  2434                           
  2435                           ;main.c: 55:     uint8_t TAG = getSensorBoardType();
  2436     047C  3185  25B6  3184   	fcall	_getSensorBoardType
  2437     047F  0141               	movlb	1	; select bank1
  2438     0480  00EA               	movwf	main@TAG^(0+128)
  2439                           
  2440                           ;main.c: 57:     if(SensorBoardType_validation(TAG)){
  2441     0481  086A               	movf	main@TAG^(0+128),w
  2442     0482  3185  2576  3184   	fcall	_SensorBoardType_validation
  2443     0485  3A00               	xorlw	0
  2444     0486  1903               	skipnz
  2445     0487  2C89               	goto	u1071
  2446     0488  2C8A               	goto	u1070
  2447     0489                     u1071:
  2448     0489  2C90               	goto	l2698
  2449     048A                     u1070:
  2450     048A                     l2696:
  2451                           
  2452                           ;main.c: 59:         memory_initialize(TAG);
  2453     048A  0141               	movlb	1	; select bank1
  2454     048B  086A               	movf	main@TAG^(0+128),w
  2455     048C  3180  20E3  3184   	fcall	_memory_initialize
  2456                           
  2457                           ;main.c: 60:     }
  2458     048F  2C93               	goto	l2700
  2459     0490                     l2698:
  2460                           
  2461                           ;main.c: 62:         error_signal();
  2462     0490  3186  2651  3184   	fcall	_error_signal
  2463     0493                     l2700:
  2464                           
  2465                           ;main.c: 65:     I2C1_Open();
  2466     0493  3183  2377  3184   	fcall	_I2C1_Open
  2467     0496                     l2702:
  2468                           
  2469                           ;main.c: 72:     (INTCONbits.GIE = 1);
  2470     0496  178B               	bsf	11,7	;volatile
  2471     0497                     l2704:
  2472                           
  2473                           ;main.c: 75:     (INTCONbits.PEIE = 1);
  2474     0497  170B               	bsf	11,6	;volatile
  2475     0498                     l651:	
  2476                           ;main.c: 83:     while (1)
  2477                           
  2478     0498                     l652:	
  2479                           ;main.c: 84:     {;main.c: 87:     }
  2480                           
  2481     0498  2C98               	goto	l651
  2482     0499  2831               	ljmp	start
  2483     049A                     __end_of_main:
  2484                           
  2485                           	psect	text1
  2486     00E3                     __ptext1:	
  2487 ;; *************** function _memory_initialize *****************
  2488 ;; Defined at:
  2489 ;;		line 12 in file "flash_memory_filling.c"
  2490 ;; Parameters:    Size  Location     Type
  2491 ;;  TAG             1    wreg     unsigned char 
  2492 ;; Auto vars:     Size  Location     Type
  2493 ;;  TAG             1    9[BANK1 ] unsigned char 
  2494 ;; Return value:  Size  Location     Type
  2495 ;;                  1    wreg      void 
  2496 ;; Registers used:
  2497 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2498 ;; Tracked objects:
  2499 ;;		On entry : 0/0
  2500 ;;		On exit  : 0/0
  2501 ;;		Unchanged: 0/0
  2502 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2503 ;;      Params:         0       0       0       0
  2504 ;;      Locals:         0       0       1       0
  2505 ;;      Temps:          0       2       0       0
  2506 ;;      Totals:         0       2       1       0
  2507 ;;Total ram usage:        3 bytes
  2508 ;; Hardware stack levels used: 1
  2509 ;; Hardware stack levels required when called: 10
  2510 ;; This function calls:
  2511 ;;		_FLASH_ReadWord
  2512 ;;		_FLASH_WriteWord
  2513 ;;		___wmul
  2514 ;; This function is called by:
  2515 ;;		_main
  2516 ;; This function uses a non-reentrant model
  2517 ;;
  2518                           
  2519     00E3                     _memory_initialize:	
  2520                           ;psect for function _memory_initialize
  2521                           
  2522                           
  2523                           ;incstack = 0
  2524                           ; Regs used in _memory_initialize: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2525                           ;memory_initialize@TAG stored from wreg
  2526     00E3  0141               	movlb	1	; select bank1
  2527     00E4  00E9               	movwf	memory_initialize@TAG^(0+128)
  2528     00E5                     l2648:
  2529                           
  2530                           ;flash_memory_filling.c: 12: void memory_initialize(uint8_t TAG);flash_memory_filling.c:
      +                           13: {;flash_memory_filling.c: 15:     if(FLASH_ReadWord(0x780) != 0x55)
  2531     00E5  3080               	movlw	128
  2532     00E6  0140               	movlb	0	; select bank0
  2533     00E7  00CF               	movwf	FLASH_ReadWord@flashAddr
  2534     00E8  3007               	movlw	7
  2535     00E9  00D0               	movwf	FLASH_ReadWord@flashAddr+1
  2536     00EA  3184  24DA  3180   	fcall	_FLASH_ReadWord
  2537     00ED  3055               	movlw	85
  2538     00EE  0140               	movlb	0	; select bank0
  2539     00EF  064F               	xorwf	?_FLASH_ReadWord,w
  2540     00F0  0450               	iorwf	?_FLASH_ReadWord+1,w
  2541     00F1  1903               	btfsc	3,2
  2542     00F2  28F4               	goto	u1031
  2543     00F3  28F5               	goto	u1030
  2544     00F4                     u1031:
  2545     00F4  29F4               	goto	l42
  2546     00F5                     u1030:
  2547     00F5                     l2650:
  2548                           
  2549                           ;flash_memory_filling.c: 16:     {;flash_memory_filling.c: 17:         FLASH_WriteWord(0
      +                          x780, ramBuff, 0x55);
  2550     00F5  3080               	movlw	128
  2551     00F6  0141               	movlb	1	; select bank1
  2552     00F7  00E0               	movwf	FLASH_WriteWord@flashAddr^(0+128)
  2553     00F8  3007               	movlw	7
  2554     00F9  00E1               	movwf	(FLASH_WriteWord@flashAddr^(0+128)+1)
  2555     00FA  30A0               	movlw	(low (_ramBuff| 0))& (0+255)
  2556     00FB  00E2               	movwf	FLASH_WriteWord@ramBuf^(0+128)
  2557     00FC  3055               	movlw	85
  2558     00FD  00E3               	movwf	FLASH_WriteWord@word^(0+128)
  2559     00FE  3000               	movlw	0
  2560     00FF  00E4               	movwf	(FLASH_WriteWord@word^(0+128)+1)
  2561     0100  3183  232D  3180   	fcall	_FLASH_WriteWord
  2562                           
  2563                           ;flash_memory_filling.c: 18:         FLASH_WriteWord(0x780 + 1, ramBuff, 0x00 );
  2564     0103  3081               	movlw	129
  2565     0104  0141               	movlb	1	; select bank1
  2566     0105  00E0               	movwf	FLASH_WriteWord@flashAddr^(0+128)
  2567     0106  3007               	movlw	7
  2568     0107  00E1               	movwf	(FLASH_WriteWord@flashAddr^(0+128)+1)
  2569     0108  30A0               	movlw	(low (_ramBuff| 0))& (0+255)
  2570     0109  00E2               	movwf	FLASH_WriteWord@ramBuf^(0+128)
  2571     010A  3000               	movlw	0
  2572     010B  00E3               	movwf	FLASH_WriteWord@word^(0+128)
  2573     010C  00E4               	movwf	(FLASH_WriteWord@word+1)^(0+128)
  2574     010D  3183  232D  3180   	fcall	_FLASH_WriteWord
  2575     0110                     l2652:
  2576                           
  2577                           ;flash_memory_filling.c: 19:         FLASH_WriteWord(0x780 + 2, ramBuff, (uint16_t)defau
      +                          lt_in_flash[TAG - 1][0]);
  2578     0110  3082               	movlw	130
  2579     0111  0141               	movlb	1	; select bank1
  2580     0112  00E0               	movwf	FLASH_WriteWord@flashAddr^(0+128)
  2581     0113  3007               	movlw	7
  2582     0114  00E1               	movwf	(FLASH_WriteWord@flashAddr^(0+128)+1)
  2583     0115  30A0               	movlw	(low (_ramBuff| 0))& (0+255)
  2584     0116  00E2               	movwf	FLASH_WriteWord@ramBuf^(0+128)
  2585     0117  0869               	movf	memory_initialize@TAG^(0+128),w
  2586     0118  0140               	movlb	0	; select bank0
  2587     0119  00DD               	movwf	??_memory_initialize
  2588     011A  01DE               	clrf	??_memory_initialize+1
  2589     011B  085D               	movf	??_memory_initialize,w
  2590     011C  00CF               	movwf	___wmul@multiplier
  2591     011D  085E               	movf	??_memory_initialize+1,w
  2592     011E  00D0               	movwf	___wmul@multiplier+1
  2593     011F  300C               	movlw	12
  2594     0120  00D1               	movwf	___wmul@multiplicand
  2595     0121  3000               	movlw	0
  2596     0122  00D2               	movwf	___wmul@multiplicand+1
  2597     0123  3184  249A  3180   	fcall	___wmul
  2598     0126  3034               	movlw	52
  2599     0127  0140               	movlb	0	; select bank0
  2600     0128  074F               	addwf	?___wmul,w
  2601     0129  0084               	movwf	4
  2602     012A  3000               	movlw	0
  2603     012B  3D50               	addwfc	?___wmul+1,w
  2604     012C  3880               	iorlw	128
  2605     012D  0085               	movwf	5
  2606     012E  3F00               	moviw [0]fsr0
  2607     012F  0141               	movlb	1	; select bank1
  2608     0130  00E3               	movwf	FLASH_WriteWord@word^(0+128)
  2609     0131  3F01               	moviw [1]fsr0
  2610     0132  00E4               	movwf	(FLASH_WriteWord@word+1)^(0+128)
  2611     0133  3183  232D  3180   	fcall	_FLASH_WriteWord
  2612     0136                     l2654:
  2613                           
  2614                           ;flash_memory_filling.c: 20:         FLASH_WriteWord(0x780 + 3, ramBuff, (uint16_t)defau
      +                          lt_in_flash[TAG - 1][1]);
  2615     0136  3083               	movlw	131
  2616     0137  0141               	movlb	1	; select bank1
  2617     0138  00E0               	movwf	FLASH_WriteWord@flashAddr^(0+128)
  2618     0139  3007               	movlw	7
  2619     013A  00E1               	movwf	(FLASH_WriteWord@flashAddr^(0+128)+1)
  2620     013B  30A0               	movlw	(low (_ramBuff| 0))& (0+255)
  2621     013C  00E2               	movwf	FLASH_WriteWord@ramBuf^(0+128)
  2622     013D  0869               	movf	memory_initialize@TAG^(0+128),w
  2623     013E  0140               	movlb	0	; select bank0
  2624     013F  00DD               	movwf	??_memory_initialize
  2625     0140  01DE               	clrf	??_memory_initialize+1
  2626     0141  085D               	movf	??_memory_initialize,w
  2627     0142  00CF               	movwf	___wmul@multiplier
  2628     0143  085E               	movf	??_memory_initialize+1,w
  2629     0144  00D0               	movwf	___wmul@multiplier+1
  2630     0145  300C               	movlw	12
  2631     0146  00D1               	movwf	___wmul@multiplicand
  2632     0147  3000               	movlw	0
  2633     0148  00D2               	movwf	___wmul@multiplicand+1
  2634     0149  3184  249A  3180   	fcall	___wmul
  2635     014C  3036               	movlw	54
  2636     014D  0140               	movlb	0	; select bank0
  2637     014E  074F               	addwf	?___wmul,w
  2638     014F  0084               	movwf	4
  2639     0150  3000               	movlw	0
  2640     0151  3D50               	addwfc	?___wmul+1,w
  2641     0152  3880               	iorlw	128
  2642     0153  0085               	movwf	5
  2643     0154  3F00               	moviw [0]fsr0
  2644     0155  0141               	movlb	1	; select bank1
  2645     0156  00E3               	movwf	FLASH_WriteWord@word^(0+128)
  2646     0157  3F01               	moviw [1]fsr0
  2647     0158  00E4               	movwf	(FLASH_WriteWord@word+1)^(0+128)
  2648     0159  3183  232D  3180   	fcall	_FLASH_WriteWord
  2649     015C                     l2656:
  2650                           
  2651                           ;flash_memory_filling.c: 21:         FLASH_WriteWord(0x780 + 4, ramBuff, (uint16_t)defau
      +                          lt_in_flash[TAG - 1][2]);
  2652     015C  3084               	movlw	132
  2653     015D  0141               	movlb	1	; select bank1
  2654     015E  00E0               	movwf	FLASH_WriteWord@flashAddr^(0+128)
  2655     015F  3007               	movlw	7
  2656     0160  00E1               	movwf	(FLASH_WriteWord@flashAddr^(0+128)+1)
  2657     0161  30A0               	movlw	(low (_ramBuff| 0))& (0+255)
  2658     0162  00E2               	movwf	FLASH_WriteWord@ramBuf^(0+128)
  2659     0163  0869               	movf	memory_initialize@TAG^(0+128),w
  2660     0164  0140               	movlb	0	; select bank0
  2661     0165  00DD               	movwf	??_memory_initialize
  2662     0166  01DE               	clrf	??_memory_initialize+1
  2663     0167  085D               	movf	??_memory_initialize,w
  2664     0168  00CF               	movwf	___wmul@multiplier
  2665     0169  085E               	movf	??_memory_initialize+1,w
  2666     016A  00D0               	movwf	___wmul@multiplier+1
  2667     016B  300C               	movlw	12
  2668     016C  00D1               	movwf	___wmul@multiplicand
  2669     016D  3000               	movlw	0
  2670     016E  00D2               	movwf	___wmul@multiplicand+1
  2671     016F  3184  249A  3180   	fcall	___wmul
  2672     0172  3038               	movlw	56
  2673     0173  0140               	movlb	0	; select bank0
  2674     0174  074F               	addwf	?___wmul,w
  2675     0175  0084               	movwf	4
  2676     0176  3000               	movlw	0
  2677     0177  3D50               	addwfc	?___wmul+1,w
  2678     0178  3880               	iorlw	128
  2679     0179  0085               	movwf	5
  2680     017A  3F00               	moviw [0]fsr0
  2681     017B  0141               	movlb	1	; select bank1
  2682     017C  00E3               	movwf	FLASH_WriteWord@word^(0+128)
  2683     017D  3F01               	moviw [1]fsr0
  2684     017E  00E4               	movwf	(FLASH_WriteWord@word+1)^(0+128)
  2685     017F  3183  232D  3180   	fcall	_FLASH_WriteWord
  2686     0182                     l2658:
  2687                           
  2688                           ;flash_memory_filling.c: 22:         FLASH_WriteWord(0x780 + 5, ramBuff, (uint16_t)defau
      +                          lt_in_flash[TAG - 1][3]);
  2689     0182  3085               	movlw	133
  2690     0183  0141               	movlb	1	; select bank1
  2691     0184  00E0               	movwf	FLASH_WriteWord@flashAddr^(0+128)
  2692     0185  3007               	movlw	7
  2693     0186  00E1               	movwf	(FLASH_WriteWord@flashAddr^(0+128)+1)
  2694     0187  30A0               	movlw	(low (_ramBuff| 0))& (0+255)
  2695     0188  00E2               	movwf	FLASH_WriteWord@ramBuf^(0+128)
  2696     0189  0869               	movf	memory_initialize@TAG^(0+128),w
  2697     018A  0140               	movlb	0	; select bank0
  2698     018B  00DD               	movwf	??_memory_initialize
  2699     018C  01DE               	clrf	??_memory_initialize+1
  2700     018D  085D               	movf	??_memory_initialize,w
  2701     018E  00CF               	movwf	___wmul@multiplier
  2702     018F  085E               	movf	??_memory_initialize+1,w
  2703     0190  00D0               	movwf	___wmul@multiplier+1
  2704     0191  300C               	movlw	12
  2705     0192  00D1               	movwf	___wmul@multiplicand
  2706     0193  3000               	movlw	0
  2707     0194  00D2               	movwf	___wmul@multiplicand+1
  2708     0195  3184  249A  3180   	fcall	___wmul
  2709     0198  303A               	movlw	58
  2710     0199  0140               	movlb	0	; select bank0
  2711     019A  074F               	addwf	?___wmul,w
  2712     019B  0084               	movwf	4
  2713     019C  3000               	movlw	0
  2714     019D  3D50               	addwfc	?___wmul+1,w
  2715     019E  3880               	iorlw	128
  2716     019F  0085               	movwf	5
  2717     01A0  3F00               	moviw [0]fsr0
  2718     01A1  0141               	movlb	1	; select bank1
  2719     01A2  00E3               	movwf	FLASH_WriteWord@word^(0+128)
  2720     01A3  3F01               	moviw [1]fsr0
  2721     01A4  00E4               	movwf	(FLASH_WriteWord@word+1)^(0+128)
  2722     01A5  3183  232D  3180   	fcall	_FLASH_WriteWord
  2723     01A8                     l2660:
  2724                           
  2725                           ;flash_memory_filling.c: 23:         FLASH_WriteWord(0x780 + 6, ramBuff, (uint16_t)defau
      +                          lt_in_flash[TAG - 1][4]);
  2726     01A8  3086               	movlw	134
  2727     01A9  0141               	movlb	1	; select bank1
  2728     01AA  00E0               	movwf	FLASH_WriteWord@flashAddr^(0+128)
  2729     01AB  3007               	movlw	7
  2730     01AC  00E1               	movwf	(FLASH_WriteWord@flashAddr^(0+128)+1)
  2731     01AD  30A0               	movlw	(low (_ramBuff| 0))& (0+255)
  2732     01AE  00E2               	movwf	FLASH_WriteWord@ramBuf^(0+128)
  2733     01AF  0869               	movf	memory_initialize@TAG^(0+128),w
  2734     01B0  0140               	movlb	0	; select bank0
  2735     01B1  00DD               	movwf	??_memory_initialize
  2736     01B2  01DE               	clrf	??_memory_initialize+1
  2737     01B3  085D               	movf	??_memory_initialize,w
  2738     01B4  00CF               	movwf	___wmul@multiplier
  2739     01B5  085E               	movf	??_memory_initialize+1,w
  2740     01B6  00D0               	movwf	___wmul@multiplier+1
  2741     01B7  300C               	movlw	12
  2742     01B8  00D1               	movwf	___wmul@multiplicand
  2743     01B9  3000               	movlw	0
  2744     01BA  00D2               	movwf	___wmul@multiplicand+1
  2745     01BB  3184  249A  3180   	fcall	___wmul
  2746     01BE  303C               	movlw	60
  2747     01BF  0140               	movlb	0	; select bank0
  2748     01C0  074F               	addwf	?___wmul,w
  2749     01C1  0084               	movwf	4
  2750     01C2  3000               	movlw	0
  2751     01C3  3D50               	addwfc	?___wmul+1,w
  2752     01C4  3880               	iorlw	128
  2753     01C5  0085               	movwf	5
  2754     01C6  3F00               	moviw [0]fsr0
  2755     01C7  0141               	movlb	1	; select bank1
  2756     01C8  00E3               	movwf	FLASH_WriteWord@word^(0+128)
  2757     01C9  3F01               	moviw [1]fsr0
  2758     01CA  00E4               	movwf	(FLASH_WriteWord@word+1)^(0+128)
  2759     01CB  3183  232D  3180   	fcall	_FLASH_WriteWord
  2760     01CE                     l2662:
  2761                           
  2762                           ;flash_memory_filling.c: 24:         FLASH_WriteWord(0x780 + 7, ramBuff, (uint16_t)defau
      +                          lt_in_flash[TAG - 1][5]);
  2763     01CE  3087               	movlw	135
  2764     01CF  0141               	movlb	1	; select bank1
  2765     01D0  00E0               	movwf	FLASH_WriteWord@flashAddr^(0+128)
  2766     01D1  3007               	movlw	7
  2767     01D2  00E1               	movwf	(FLASH_WriteWord@flashAddr^(0+128)+1)
  2768     01D3  30A0               	movlw	(low (_ramBuff| 0))& (0+255)
  2769     01D4  00E2               	movwf	FLASH_WriteWord@ramBuf^(0+128)
  2770     01D5  0869               	movf	memory_initialize@TAG^(0+128),w
  2771     01D6  0140               	movlb	0	; select bank0
  2772     01D7  00DD               	movwf	??_memory_initialize
  2773     01D8  01DE               	clrf	??_memory_initialize+1
  2774     01D9  085D               	movf	??_memory_initialize,w
  2775     01DA  00CF               	movwf	___wmul@multiplier
  2776     01DB  085E               	movf	??_memory_initialize+1,w
  2777     01DC  00D0               	movwf	___wmul@multiplier+1
  2778     01DD  300C               	movlw	12
  2779     01DE  00D1               	movwf	___wmul@multiplicand
  2780     01DF  3000               	movlw	0
  2781     01E0  00D2               	movwf	___wmul@multiplicand+1
  2782     01E1  3184  249A  3180   	fcall	___wmul
  2783     01E4  303E               	movlw	62
  2784     01E5  0140               	movlb	0	; select bank0
  2785     01E6  074F               	addwf	?___wmul,w
  2786     01E7  0084               	movwf	4
  2787     01E8  3000               	movlw	0
  2788     01E9  3D50               	addwfc	?___wmul+1,w
  2789     01EA  3880               	iorlw	128
  2790     01EB  0085               	movwf	5
  2791     01EC  3F00               	moviw [0]fsr0
  2792     01ED  0141               	movlb	1	; select bank1
  2793     01EE  00E3               	movwf	FLASH_WriteWord@word^(0+128)
  2794     01EF  3F01               	moviw [1]fsr0
  2795     01F0  00E4               	movwf	(FLASH_WriteWord@word+1)^(0+128)
  2796     01F1  3183  232D  3180   	fcall	_FLASH_WriteWord
  2797     01F4                     l42:
  2798     01F4  0008               	return
  2799     01F5                     __end_of_memory_initialize:
  2800                           
  2801                           	psect	text2
  2802     049A                     __ptext2:	
  2803 ;; *************** function ___wmul *****************
  2804 ;; Defined at:
  2805 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\Umul16.c"
  2806 ;; Parameters:    Size  Location     Type
  2807 ;;  multiplier      2   15[BANK0 ] unsigned int 
  2808 ;;  multiplicand    2   17[BANK0 ] unsigned int 
  2809 ;; Auto vars:     Size  Location     Type
  2810 ;;  product         2   19[BANK0 ] unsigned int 
  2811 ;; Return value:  Size  Location     Type
  2812 ;;                  2   15[BANK0 ] unsigned int 
  2813 ;; Registers used:
  2814 ;;		wreg, status,2, status,0
  2815 ;; Tracked objects:
  2816 ;;		On entry : 0/0
  2817 ;;		On exit  : 0/0
  2818 ;;		Unchanged: 0/0
  2819 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2820 ;;      Params:         0       4       0       0
  2821 ;;      Locals:         0       2       0       0
  2822 ;;      Temps:          0       0       0       0
  2823 ;;      Totals:         0       6       0       0
  2824 ;;Total ram usage:        6 bytes
  2825 ;; Hardware stack levels used: 1
  2826 ;; Hardware stack levels required when called: 7
  2827 ;; This function calls:
  2828 ;;		Nothing
  2829 ;; This function is called by:
  2830 ;;		_memory_initialize
  2831 ;; This function uses a non-reentrant model
  2832 ;;
  2833                           
  2834     049A                     ___wmul:	
  2835                           ;psect for function ___wmul
  2836                           
  2837     049A                     l2634:	
  2838                           ;incstack = 0
  2839                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  2840                           
  2841     049A  0140               	movlb	0	; select bank0
  2842     049B  01D3               	clrf	___wmul@product
  2843     049C  01D4               	clrf	___wmul@product+1
  2844     049D                     l2636:
  2845     049D  1C4F               	btfss	___wmul@multiplier,0
  2846     049E  2CA0               	goto	u991
  2847     049F  2CA1               	goto	u990
  2848     04A0                     u991:
  2849     04A0  2CA5               	goto	l722
  2850     04A1                     u990:
  2851     04A1                     l2638:
  2852     04A1  0851               	movf	___wmul@multiplicand,w
  2853     04A2  07D3               	addwf	___wmul@product,f
  2854     04A3  0852               	movf	___wmul@multiplicand+1,w
  2855     04A4  3DD4               	addwfc	___wmul@product+1,f
  2856     04A5                     l722:
  2857     04A5  3001               	movlw	1
  2858     04A6                     u1005:
  2859     04A6  35D1               	lslf	___wmul@multiplicand,f
  2860     04A7  0DD2               	rlf	___wmul@multiplicand+1,f
  2861     04A8  0B89               	decfsz	9,f
  2862     04A9  2CA6               	goto	u1005
  2863     04AA                     l2640:
  2864     04AA  3001               	movlw	1
  2865     04AB                     u1015:
  2866     04AB  36D0               	lsrf	___wmul@multiplier+1,f
  2867     04AC  0CCF               	rrf	___wmul@multiplier,f
  2868     04AD  0B89               	decfsz	9,f
  2869     04AE  2CAB               	goto	u1015
  2870     04AF                     l2642:
  2871     04AF  084F               	movf	___wmul@multiplier,w
  2872     04B0  0450               	iorwf	___wmul@multiplier+1,w
  2873     04B1  1D03               	btfss	3,2
  2874     04B2  2CB4               	goto	u1021
  2875     04B3  2CB5               	goto	u1020
  2876     04B4                     u1021:
  2877     04B4  2C9D               	goto	l2636
  2878     04B5                     u1020:
  2879     04B5                     l2644:
  2880     04B5  0854               	movf	___wmul@product+1,w
  2881     04B6  00D0               	movwf	?___wmul+1
  2882     04B7  0853               	movf	___wmul@product,w
  2883     04B8  00CF               	movwf	?___wmul
  2884     04B9                     l724:
  2885     04B9  0008               	return
  2886     04BA                     __end_of___wmul:
  2887                           
  2888                           	psect	text3
  2889     032D                     __ptext3:	
  2890 ;; *************** function _FLASH_WriteWord *****************
  2891 ;; Defined at:
  2892 ;;		line 75 in file "mcc_generated_files/memory.c"
  2893 ;; Parameters:    Size  Location     Type
  2894 ;;  flashAddr       2    0[BANK1 ] unsigned short 
  2895 ;;  ramBuf          1    2[BANK1 ] PTR unsigned short 
  2896 ;;		 -> ramBuff(64), 
  2897 ;;  word            2    3[BANK1 ] unsigned short 
  2898 ;; Auto vars:     Size  Location     Type
  2899 ;;  blockStartAd    2    6[BANK1 ] unsigned short 
  2900 ;;  i               1    8[BANK1 ] unsigned char 
  2901 ;;  offset          1    5[BANK1 ] unsigned char 
  2902 ;; Return value:  Size  Location     Type
  2903 ;;                  1    wreg      void 
  2904 ;; Registers used:
  2905 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2906 ;; Tracked objects:
  2907 ;;		On entry : 0/0
  2908 ;;		On exit  : 0/0
  2909 ;;		Unchanged: 0/0
  2910 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2911 ;;      Params:         0       0       5       0
  2912 ;;      Locals:         0       0       4       0
  2913 ;;      Temps:          0       1       0       0
  2914 ;;      Totals:         0       1       9       0
  2915 ;;Total ram usage:       10 bytes
  2916 ;; Hardware stack levels used: 1
  2917 ;; Hardware stack levels required when called: 9
  2918 ;; This function calls:
  2919 ;;		_FLASH_ReadWord
  2920 ;;		_FLASH_WriteBlock
  2921 ;; This function is called by:
  2922 ;;		_memory_initialize
  2923 ;; This function uses a non-reentrant model
  2924 ;;
  2925                           
  2926     032D                     _FLASH_WriteWord:	
  2927                           ;psect for function _FLASH_WriteWord
  2928                           
  2929     032D                     l2526:	
  2930                           ;incstack = 0
  2931                           ; Regs used in _FLASH_WriteWord: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2932                           
  2933                           
  2934                           ;mcc_generated_files/memory.c: 75: void FLASH_WriteWord(uint16_t flashAddr, uint16_t *ra
      +                          mBuf, uint16_t word);mcc_generated_files/memory.c: 76: {;mcc_generated_files/memory.c: 7
      +                          7:     uint16_t blockStartAddr = (uint16_t)(flashAddr & ((0x800 -1) ^ (32 -1)));
  2935     032D  30E0               	movlw	224
  2936     032E  0141               	movlb	1	; select bank1
  2937     032F  0560               	andwf	FLASH_WriteWord@flashAddr^(0+128),w
  2938     0330  00E6               	movwf	FLASH_WriteWord@blockStartAddr^(0+128)
  2939     0331  3007               	movlw	7
  2940     0332  0561               	andwf	(FLASH_WriteWord@flashAddr+1)^(0+128),w
  2941     0333  00E7               	movwf	(FLASH_WriteWord@blockStartAddr+1)^(0+128)
  2942     0334                     l2528:
  2943                           
  2944                           ;mcc_generated_files/memory.c: 78:     uint8_t offset = (uint8_t)(flashAddr & (32 -1));
  2945     0334  0860               	movf	FLASH_WriteWord@flashAddr^(0+128),w
  2946     0335  391F               	andlw	31
  2947     0336  00E5               	movwf	FLASH_WriteWord@offset^(0+128)
  2948                           
  2949                           ;mcc_generated_files/memory.c: 79:     uint8_t i;;mcc_generated_files/memory.c: 82:     
      +                          for (i=0; i<32; i++)
  2950     0337  01E8               	clrf	FLASH_WriteWord@i^(0+128)
  2951     0338                     l2534:
  2952                           
  2953                           ;mcc_generated_files/memory.c: 83:     {;mcc_generated_files/memory.c: 84:         ramBu
      +                          f[i] = FLASH_ReadWord((blockStartAddr+i));
  2954     0338  0868               	movf	FLASH_WriteWord@i^(0+128),w
  2955     0339  0766               	addwf	FLASH_WriteWord@blockStartAddr^(0+128),w
  2956     033A  0140               	movlb	0	; select bank0
  2957     033B  00CF               	movwf	FLASH_ReadWord@flashAddr
  2958     033C  0141               	movlb	1	; select bank1
  2959     033D  0867               	movf	(FLASH_WriteWord@blockStartAddr+1)^(0+128),w
  2960     033E  1803               	skipnc
  2961     033F  0A67               	incf	(FLASH_WriteWord@blockStartAddr+1)^(0+128),w
  2962     0340  0140               	movlb	0	; select bank0
  2963     0341  00D0               	movwf	FLASH_ReadWord@flashAddr+1
  2964     0342  3184  24DA  3183   	fcall	_FLASH_ReadWord
  2965     0345  0141               	movlb	1	; select bank1
  2966     0346  3568               	lslf	FLASH_WriteWord@i^(0+128),w
  2967     0347  0762               	addwf	FLASH_WriteWord@ramBuf^(0+128),w
  2968     0348  0140               	movlb	0	; select bank0
  2969     0349  00DC               	movwf	??_FLASH_WriteWord
  2970     034A  085C               	movf	??_FLASH_WriteWord,w
  2971     034B  0086               	movwf	6
  2972     034C  0187               	clrf	7
  2973     034D  084F               	movf	?_FLASH_ReadWord,w
  2974     034E  3FC0               	movwi [0]fsr1
  2975     034F  0850               	movf	?_FLASH_ReadWord+1,w
  2976     0350  3FC1               	movwi [1]fsr1
  2977     0351                     l2536:
  2978                           
  2979                           ;mcc_generated_files/memory.c: 85:     }
  2980     0351  3001               	movlw	1
  2981     0352  00DC               	movwf	??_FLASH_WriteWord
  2982     0353  085C               	movf	??_FLASH_WriteWord,w
  2983     0354  0141               	movlb	1	; select bank1
  2984     0355  07E8               	addwf	FLASH_WriteWord@i^(0+128),f
  2985     0356                     l2538:
  2986     0356  3020               	movlw	32
  2987     0357  0268               	subwf	FLASH_WriteWord@i^(0+128),w
  2988     0358  1C03               	skipc
  2989     0359  2B5B               	goto	u971
  2990     035A  2B5C               	goto	u970
  2991     035B                     u971:
  2992     035B  2B38               	goto	l2534
  2993     035C                     u970:
  2994     035C                     l2540:
  2995                           
  2996                           ;mcc_generated_files/memory.c: 88:     ramBuf[offset] = word;
  2997     035C  3565               	lslf	FLASH_WriteWord@offset^(0+128),w
  2998     035D  0762               	addwf	FLASH_WriteWord@ramBuf^(0+128),w
  2999     035E  0140               	movlb	0	; select bank0
  3000     035F  00DC               	movwf	??_FLASH_WriteWord
  3001     0360  085C               	movf	??_FLASH_WriteWord,w
  3002     0361  0086               	movwf	6
  3003     0362  0187               	clrf	7
  3004     0363  0141               	movlb	1	; select bank1
  3005     0364  0863               	movf	FLASH_WriteWord@word^(0+128),w
  3006     0365  3FC0               	movwi [0]fsr1
  3007     0366  0864               	movf	(FLASH_WriteWord@word+1)^(0+128),w
  3008     0367  3FC1               	movwi [1]fsr1
  3009     0368                     l2542:
  3010                           
  3011                           ;mcc_generated_files/memory.c: 91:     FLASH_WriteBlock(blockStartAddr, ramBuf);
  3012     0368  0867               	movf	(FLASH_WriteWord@blockStartAddr+1)^(0+128),w
  3013     0369  0140               	movlb	0	; select bank0
  3014     036A  00D3               	movwf	FLASH_WriteBlock@writeAddr+1
  3015     036B  0141               	movlb	1	; select bank1
  3016     036C  0866               	movf	FLASH_WriteWord@blockStartAddr^(0+128),w
  3017     036D  0140               	movlb	0	; select bank0
  3018     036E  00D2               	movwf	FLASH_WriteBlock@writeAddr
  3019     036F  0141               	movlb	1	; select bank1
  3020     0370  0862               	movf	FLASH_WriteWord@ramBuf^(0+128),w
  3021     0371  0140               	movlb	0	; select bank0
  3022     0372  00D4               	movwf	FLASH_WriteBlock@flashWordArray
  3023     0373  3182  2262  3183   	fcall	_FLASH_WriteBlock
  3024     0376                     l540:
  3025     0376  0008               	return
  3026     0377                     __end_of_FLASH_WriteWord:
  3027                           
  3028                           	psect	text4
  3029     0262                     __ptext4:	
  3030 ;; *************** function _FLASH_WriteBlock *****************
  3031 ;; Defined at:
  3032 ;;		line 94 in file "mcc_generated_files/memory.c"
  3033 ;; Parameters:    Size  Location     Type
  3034 ;;  writeAddr       2   18[BANK0 ] unsigned short 
  3035 ;;  flashWordArr    1   20[BANK0 ] PTR unsigned short 
  3036 ;;		 -> ramBuff(64), 
  3037 ;; Auto vars:     Size  Location     Type
  3038 ;;  blockStartAd    2   24[BANK0 ] unsigned short 
  3039 ;;  i               1   27[BANK0 ] unsigned char 
  3040 ;;  GIEBitValue     1   26[BANK0 ] unsigned char 
  3041 ;; Return value:  Size  Location     Type
  3042 ;;                  1    wreg      char 
  3043 ;; Registers used:
  3044 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3045 ;; Tracked objects:
  3046 ;;		On entry : 0/0
  3047 ;;		On exit  : 0/0
  3048 ;;		Unchanged: 0/0
  3049 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3050 ;;      Params:         0       3       0       0
  3051 ;;      Locals:         0       4       0       0
  3052 ;;      Temps:          0       3       0       0
  3053 ;;      Totals:         0      10       0       0
  3054 ;;Total ram usage:       10 bytes
  3055 ;; Hardware stack levels used: 1
  3056 ;; Hardware stack levels required when called: 8
  3057 ;; This function calls:
  3058 ;;		_FLASH_EraseBlock
  3059 ;; This function is called by:
  3060 ;;		_FLASH_WriteWord
  3061 ;; This function uses a non-reentrant model
  3062 ;;
  3063                           
  3064     0262                     _FLASH_WriteBlock:	
  3065                           ;psect for function _FLASH_WriteBlock
  3066                           
  3067     0262                     l2476:	
  3068                           ;incstack = 0
  3069                           ; Regs used in _FLASH_WriteBlock: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3070                           
  3071                           
  3072                           ;mcc_generated_files/memory.c: 94: int8_t FLASH_WriteBlock(uint16_t writeAddr, uint16_t 
      +                          *flashWordArray);mcc_generated_files/memory.c: 95: {;mcc_generated_files/memory.c: 96:  
      +                             uint16_t blockStartAddr = (uint16_t )(writeAddr & ((0x800 -1) ^ (32 -1)));
  3073     0262  30E0               	movlw	224
  3074     0263  0140               	movlb	0	; select bank0
  3075     0264  0552               	andwf	FLASH_WriteBlock@writeAddr,w
  3076     0265  00D8               	movwf	FLASH_WriteBlock@blockStartAddr
  3077     0266  3007               	movlw	7
  3078     0267  0553               	andwf	FLASH_WriteBlock@writeAddr+1,w
  3079     0268  00D9               	movwf	FLASH_WriteBlock@blockStartAddr+1
  3080     0269                     l2478:
  3081                           
  3082                           ;mcc_generated_files/memory.c: 97:     uint8_t GIEBitValue = INTCONbits.GIE;
  3083     0269  3000               	movlw	0
  3084     026A  1B8B               	btfsc	11,7	;volatile
  3085     026B  3001               	movlw	1
  3086     026C  00DA               	movwf	FLASH_WriteBlock@GIEBitValue
  3087     026D                     l2480:
  3088                           
  3089                           ;mcc_generated_files/memory.c: 98:     uint8_t i;;mcc_generated_files/memory.c: 102:    
      +                           if( writeAddr != blockStartAddr )
  3090     026D  0859               	movf	FLASH_WriteBlock@blockStartAddr+1,w
  3091     026E  0653               	xorwf	FLASH_WriteBlock@writeAddr+1,w
  3092     026F  1D03               	skipz
  3093     0270  2A73               	goto	u945
  3094     0271  0858               	movf	FLASH_WriteBlock@blockStartAddr,w
  3095     0272  0652               	xorwf	FLASH_WriteBlock@writeAddr,w
  3096     0273                     u945:
  3097     0273  1903               	skipnz
  3098     0274  2A76               	goto	u941
  3099     0275  2A77               	goto	u940
  3100     0276                     u941:
  3101     0276  2A78               	goto	l543
  3102     0277                     u940:
  3103     0277  2ACD               	goto	l544
  3104     0278                     l543:	
  3105                           ;mcc_generated_files/memory.c: 105:     }
  3106                           
  3107                           
  3108                           ;mcc_generated_files/memory.c: 107:     INTCONbits.GIE = 0;
  3109     0278  138B               	bcf	11,7	;volatile
  3110     0279                     l2484:
  3111                           
  3112                           ;mcc_generated_files/memory.c: 110:     FLASH_EraseBlock(writeAddr);
  3113     0279  0853               	movf	FLASH_WriteBlock@writeAddr+1,w
  3114     027A  00D0               	movwf	FLASH_EraseBlock@startAddr+1
  3115     027B  0852               	movf	FLASH_WriteBlock@writeAddr,w
  3116     027C  00CF               	movwf	FLASH_EraseBlock@startAddr
  3117     027D  3184  24BA  3182   	fcall	_FLASH_EraseBlock
  3118     0280                     l2486:
  3119                           
  3120                           ;mcc_generated_files/memory.c: 113:     NVMCON1bits.NVMREGS = 0;
  3121     0280  0150               	movlb	16	; select bank16
  3122     0281  131E               	bcf	30,6	;volsfr
  3123     0282                     l2488:
  3124                           
  3125                           ;mcc_generated_files/memory.c: 114:     NVMCON1bits.WREN = 1;
  3126     0282  151E               	bsf	30,2	;volsfr
  3127     0283                     l2490:
  3128                           
  3129                           ;mcc_generated_files/memory.c: 115:     NVMCON1bits.LWLO = 1;
  3130     0283  169E               	bsf	30,5	;volsfr
  3131     0284                     l2492:
  3132                           
  3133                           ;mcc_generated_files/memory.c: 117:     for (i=0; i<32; i++)
  3134     0284  0140               	movlb	0	; select bank0
  3135     0285  01DB               	clrf	FLASH_WriteBlock@i
  3136     0286                     l2498:
  3137                           
  3138                           ;mcc_generated_files/memory.c: 118:     {;mcc_generated_files/memory.c: 120:         NVM
      +                          ADRL = (writeAddr & 0xFF);
  3139     0286  0852               	movf	FLASH_WriteBlock@writeAddr,w
  3140     0287  0150               	movlb	16	; select bank16
  3141     0288  009A               	movwf	26	;volatile
  3142     0289                     l2500:
  3143                           
  3144                           ;mcc_generated_files/memory.c: 122:         NVMADRH = ((writeAddr & 0xFF00) >> 8);
  3145     0289  0140               	movlb	0	; select bank0
  3146     028A  0853               	movf	FLASH_WriteBlock@writeAddr+1,w
  3147     028B  0150               	movlb	16	; select bank16
  3148     028C  009B               	movwf	27	;volatile
  3149     028D                     l2502:
  3150                           
  3151                           ;mcc_generated_files/memory.c: 125:         NVMDATL = flashWordArray[i];
  3152     028D  0140               	movlb	0	; select bank0
  3153     028E  355B               	lslf	FLASH_WriteBlock@i,w
  3154     028F  0754               	addwf	FLASH_WriteBlock@flashWordArray,w
  3155     0290  00D5               	movwf	??_FLASH_WriteBlock
  3156     0291  0855               	movf	??_FLASH_WriteBlock,w
  3157     0292  0086               	movwf	6
  3158     0293  0187               	clrf	7
  3159     0294  0801               	movf	1,w
  3160     0295  0150               	movlb	16	; select bank16
  3161     0296  009C               	movwf	28	;volatile
  3162     0297                     l2504:
  3163                           
  3164                           ;mcc_generated_files/memory.c: 126:         NVMDATH = ((flashWordArray[i] & 0xFF00) >> 8
      +                          );
  3165     0297  0140               	movlb	0	; select bank0
  3166     0298  355B               	lslf	FLASH_WriteBlock@i,w
  3167     0299  0754               	addwf	FLASH_WriteBlock@flashWordArray,w
  3168     029A  00D5               	movwf	??_FLASH_WriteBlock
  3169     029B  0855               	movf	??_FLASH_WriteBlock,w
  3170     029C  0086               	movwf	6
  3171     029D  0187               	clrf	7
  3172     029E  3F40               	moviw [0]fsr1
  3173     029F  00D6               	movwf	??_FLASH_WriteBlock+1
  3174     02A0  3F41               	moviw [1]fsr1
  3175     02A1  00D7               	movwf	??_FLASH_WriteBlock+2
  3176     02A2  0857               	movf	??_FLASH_WriteBlock+2,w
  3177     02A3  0150               	movlb	16	; select bank16
  3178     02A4  009D               	movwf	29	;volatile
  3179     02A5                     l2506:
  3180                           
  3181                           ;mcc_generated_files/memory.c: 128:         if(i == (32 -1))
  3182     02A5  301F               	movlw	31
  3183     02A6  0140               	movlb	0	; select bank0
  3184     02A7  065B               	xorwf	FLASH_WriteBlock@i,w
  3185     02A8  1D03               	btfss	3,2
  3186     02A9  2AAB               	goto	u951
  3187     02AA  2AAC               	goto	u950
  3188     02AB                     u951:
  3189     02AB  2AAE               	goto	l2510
  3190     02AC                     u950:
  3191     02AC                     l2508:
  3192                           
  3193                           ;mcc_generated_files/memory.c: 129:         {;mcc_generated_files/memory.c: 131:        
      +                               NVMCON1bits.LWLO = 0;
  3194     02AC  0150               	movlb	16	; select bank16
  3195     02AD  129E               	bcf	30,5	;volsfr
  3196     02AE                     l2510:
  3197                           
  3198                           ;mcc_generated_files/memory.c: 134:         NVMCON2 = 0x55;
  3199     02AE  3055               	movlw	85
  3200     02AF  0150               	movlb	16	; select bank16
  3201     02B0  009F               	movwf	31	;volsfr
  3202                           
  3203                           ;mcc_generated_files/memory.c: 135:         NVMCON2 = 0xAA;
  3204     02B1  30AA               	movlw	170
  3205     02B2  009F               	movwf	31	;volsfr
  3206     02B3                     l2512:
  3207                           
  3208                           ;mcc_generated_files/memory.c: 136:         NVMCON1bits.WR = 1;
  3209     02B3  149E               	bsf	30,1	;volsfr
  3210     02B4                     l2514:
  3211                           
  3212                           ;mcc_generated_files/memory.c: 137:         __nop();
  3213     02B4  0000               	nop
  3214     02B5                     l2516:
  3215                           
  3216                           ;mcc_generated_files/memory.c: 138:         __nop();
  3217     02B5  0000               	nop
  3218                           
  3219                           ;mcc_generated_files/memory.c: 140:      writeAddr++;
  3220     02B6  3001               	movlw	1
  3221     02B7  0140               	movlb	0	; select bank0
  3222     02B8  07D2               	addwf	FLASH_WriteBlock@writeAddr,f
  3223     02B9  3000               	movlw	0
  3224     02BA  3DD3               	addwfc	FLASH_WriteBlock@writeAddr+1,f
  3225     02BB                     l2518:
  3226                           
  3227                           ;mcc_generated_files/memory.c: 141:     }
  3228     02BB  3001               	movlw	1
  3229     02BC  00D5               	movwf	??_FLASH_WriteBlock
  3230     02BD  0855               	movf	??_FLASH_WriteBlock,w
  3231     02BE  07DB               	addwf	FLASH_WriteBlock@i,f
  3232     02BF                     l2520:
  3233     02BF  3020               	movlw	32
  3234     02C0  025B               	subwf	FLASH_WriteBlock@i,w
  3235     02C1  1C03               	skipc
  3236     02C2  2AC4               	goto	u961
  3237     02C3  2AC5               	goto	u960
  3238     02C4                     u961:
  3239     02C4  2A86               	goto	l2498
  3240     02C5                     u960:
  3241     02C5                     l546:
  3242                           
  3243                           ;mcc_generated_files/memory.c: 143:     NVMCON1bits.WREN = 0;
  3244     02C5  0150               	movlb	16	; select bank16
  3245     02C6  111E               	bcf	30,2	;volsfr
  3246     02C7                     l2522:
  3247                           
  3248                           ;mcc_generated_files/memory.c: 144:     INTCONbits.GIE = GIEBitValue;
  3249     02C7  0140               	movlb	0	; select bank0
  3250     02C8  0C5A               	rrf	FLASH_WriteBlock@GIEBitValue,w
  3251     02C9  1C03               	skipc
  3252     02CA  138B               	bcf	11,7	;volatile
  3253     02CB  1803               	skipnc
  3254     02CC  178B               	bsf	11,7	;volatile
  3255     02CD                     l544:
  3256     02CD  0008               	return
  3257     02CE                     __end_of_FLASH_WriteBlock:
  3258                           
  3259                           	psect	text5
  3260     04BA                     __ptext5:	
  3261 ;; *************** function _FLASH_EraseBlock *****************
  3262 ;; Defined at:
  3263 ;;		line 149 in file "mcc_generated_files/memory.c"
  3264 ;; Parameters:    Size  Location     Type
  3265 ;;  startAddr       2   15[BANK0 ] unsigned short 
  3266 ;; Auto vars:     Size  Location     Type
  3267 ;;  GIEBitValue     1   17[BANK0 ] unsigned char 
  3268 ;; Return value:  Size  Location     Type
  3269 ;;                  1    wreg      void 
  3270 ;; Registers used:
  3271 ;;		wreg, status,2, status,0
  3272 ;; Tracked objects:
  3273 ;;		On entry : 0/0
  3274 ;;		On exit  : 0/0
  3275 ;;		Unchanged: 0/0
  3276 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3277 ;;      Params:         0       2       0       0
  3278 ;;      Locals:         0       1       0       0
  3279 ;;      Temps:          0       0       0       0
  3280 ;;      Totals:         0       3       0       0
  3281 ;;Total ram usage:        3 bytes
  3282 ;; Hardware stack levels used: 1
  3283 ;; Hardware stack levels required when called: 7
  3284 ;; This function calls:
  3285 ;;		Nothing
  3286 ;; This function is called by:
  3287 ;;		_FLASH_WriteBlock
  3288 ;; This function uses a non-reentrant model
  3289 ;;
  3290                           
  3291     04BA                     _FLASH_EraseBlock:	
  3292                           ;psect for function _FLASH_EraseBlock
  3293                           
  3294     04BA                     l2428:	
  3295                           ;incstack = 0
  3296                           ; Regs used in _FLASH_EraseBlock: [wreg+status,2+status,0]
  3297                           
  3298                           
  3299                           ;mcc_generated_files/memory.c: 149: void FLASH_EraseBlock(uint16_t startAddr);mcc_genera
      +                          ted_files/memory.c: 150: {;mcc_generated_files/memory.c: 151:     uint8_t GIEBitValue = 
      +                          INTCONbits.GIE;
  3300     04BA  3000               	movlw	0
  3301     04BB  1B8B               	btfsc	11,7	;volatile
  3302     04BC  3001               	movlw	1
  3303     04BD  0140               	movlb	0	; select bank0
  3304     04BE  00D1               	movwf	FLASH_EraseBlock@GIEBitValue
  3305     04BF                     l2430:
  3306                           
  3307                           ;mcc_generated_files/memory.c: 154:     INTCONbits.GIE = 0;
  3308     04BF  138B               	bcf	11,7	;volatile
  3309     04C0                     l2432:
  3310                           
  3311                           ;mcc_generated_files/memory.c: 156:     NVMADRL = (startAddr & 0xFF);
  3312     04C0  084F               	movf	FLASH_EraseBlock@startAddr,w
  3313     04C1  0150               	movlb	16	; select bank16
  3314     04C2  009A               	movwf	26	;volatile
  3315     04C3                     l2434:
  3316                           
  3317                           ;mcc_generated_files/memory.c: 158:     NVMADRH = ((startAddr & 0xFF00) >> 8);
  3318     04C3  0140               	movlb	0	; select bank0
  3319     04C4  0850               	movf	FLASH_EraseBlock@startAddr+1,w
  3320     04C5  0150               	movlb	16	; select bank16
  3321     04C6  009B               	movwf	27	;volatile
  3322     04C7                     l2436:
  3323                           
  3324                           ;mcc_generated_files/memory.c: 161:     NVMCON1bits.NVMREGS = 0;
  3325     04C7  131E               	bcf	30,6	;volsfr
  3326     04C8                     l2438:
  3327                           
  3328                           ;mcc_generated_files/memory.c: 162:     NVMCON1bits.FREE = 1;
  3329     04C8  161E               	bsf	30,4	;volsfr
  3330     04C9                     l2440:
  3331                           
  3332                           ;mcc_generated_files/memory.c: 163:     NVMCON1bits.WREN = 1;
  3333     04C9  151E               	bsf	30,2	;volsfr
  3334                           
  3335                           ;mcc_generated_files/memory.c: 166:     NVMCON2 = 0x55;
  3336     04CA  3055               	movlw	85
  3337     04CB  009F               	movwf	31	;volsfr
  3338                           
  3339                           ;mcc_generated_files/memory.c: 167:     NVMCON2 = 0xAA;
  3340     04CC  30AA               	movlw	170
  3341     04CD  009F               	movwf	31	;volsfr
  3342     04CE                     l2442:
  3343                           
  3344                           ;mcc_generated_files/memory.c: 168:     NVMCON1bits.WR = 1;
  3345     04CE  149E               	bsf	30,1	;volsfr
  3346     04CF                     l2444:
  3347                           
  3348                           ;mcc_generated_files/memory.c: 169:     __nop();
  3349     04CF  0000               	nop
  3350     04D0                     l2446:
  3351                           
  3352                           ;mcc_generated_files/memory.c: 170:     __nop();
  3353     04D0  0000               	nop
  3354     04D1                     l2448:
  3355                           
  3356                           ;mcc_generated_files/memory.c: 172:     NVMCON1bits.WREN = 0;
  3357     04D1  0150               	movlb	16	; select bank16
  3358     04D2  111E               	bcf	30,2	;volsfr
  3359     04D3                     l2450:
  3360                           
  3361                           ;mcc_generated_files/memory.c: 173:     INTCONbits.GIE = GIEBitValue;
  3362     04D3  0140               	movlb	0	; select bank0
  3363     04D4  0C51               	rrf	FLASH_EraseBlock@GIEBitValue,w
  3364     04D5  1C03               	skipc
  3365     04D6  138B               	bcf	11,7	;volatile
  3366     04D7  1803               	skipnc
  3367     04D8  178B               	bsf	11,7	;volatile
  3368     04D9                     l550:
  3369     04D9  0008               	return
  3370     04DA                     __end_of_FLASH_EraseBlock:
  3371                           
  3372                           	psect	text6
  3373     04DA                     __ptext6:	
  3374 ;; *************** function _FLASH_ReadWord *****************
  3375 ;; Defined at:
  3376 ;;		line 58 in file "mcc_generated_files/memory.c"
  3377 ;; Parameters:    Size  Location     Type
  3378 ;;  flashAddr       2   15[BANK0 ] unsigned short 
  3379 ;; Auto vars:     Size  Location     Type
  3380 ;;  GIEBitValue     1   17[BANK0 ] unsigned char 
  3381 ;; Return value:  Size  Location     Type
  3382 ;;                  2   15[BANK0 ] unsigned short 
  3383 ;; Registers used:
  3384 ;;		wreg, status,2, status,0
  3385 ;; Tracked objects:
  3386 ;;		On entry : 0/0
  3387 ;;		On exit  : 0/0
  3388 ;;		Unchanged: 0/0
  3389 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3390 ;;      Params:         0       2       0       0
  3391 ;;      Locals:         0       1       0       0
  3392 ;;      Temps:          0       0       0       0
  3393 ;;      Totals:         0       3       0       0
  3394 ;;Total ram usage:        3 bytes
  3395 ;; Hardware stack levels used: 1
  3396 ;; Hardware stack levels required when called: 7
  3397 ;; This function calls:
  3398 ;;		Nothing
  3399 ;; This function is called by:
  3400 ;;		_memory_initialize
  3401 ;;		_FLASH_WriteWord
  3402 ;; This function uses a non-reentrant model
  3403 ;;
  3404                           
  3405     04DA                     _FLASH_ReadWord:	
  3406                           ;psect for function _FLASH_ReadWord
  3407                           
  3408     04DA                     l2452:	
  3409                           ;incstack = 0
  3410                           ; Regs used in _FLASH_ReadWord: [wreg+status,2+status,0]
  3411                           
  3412                           
  3413                           ;mcc_generated_files/memory.c: 58: uint16_t FLASH_ReadWord(uint16_t flashAddr);mcc_gener
      +                          ated_files/memory.c: 59: {;mcc_generated_files/memory.c: 60:     uint8_t GIEBitValue = I
      +                          NTCONbits.GIE;
  3414     04DA  3000               	movlw	0
  3415     04DB  1B8B               	btfsc	11,7	;volatile
  3416     04DC  3001               	movlw	1
  3417     04DD  0140               	movlb	0	; select bank0
  3418     04DE  00D1               	movwf	FLASH_ReadWord@GIEBitValue
  3419     04DF                     l2454:
  3420                           
  3421                           ;mcc_generated_files/memory.c: 62:     INTCONbits.GIE = 0;
  3422     04DF  138B               	bcf	11,7	;volatile
  3423     04E0                     l2456:
  3424                           
  3425                           ;mcc_generated_files/memory.c: 63:     NVMADRL = (flashAddr & 0x00FF);
  3426     04E0  084F               	movf	FLASH_ReadWord@flashAddr,w
  3427     04E1  0150               	movlb	16	; select bank16
  3428     04E2  009A               	movwf	26	;volatile
  3429     04E3                     l2458:
  3430                           
  3431                           ;mcc_generated_files/memory.c: 64:     NVMADRH = ((flashAddr & 0xFF00) >> 8);
  3432     04E3  0140               	movlb	0	; select bank0
  3433     04E4  0850               	movf	FLASH_ReadWord@flashAddr+1,w
  3434     04E5  0150               	movlb	16	; select bank16
  3435     04E6  009B               	movwf	27	;volatile
  3436     04E7                     l2460:
  3437                           
  3438                           ;mcc_generated_files/memory.c: 66:     NVMCON1bits.NVMREGS = 0;
  3439     04E7  131E               	bcf	30,6	;volsfr
  3440     04E8                     l2462:
  3441                           
  3442                           ;mcc_generated_files/memory.c: 67:     NVMCON1bits.RD = 1;
  3443     04E8  141E               	bsf	30,0	;volsfr
  3444     04E9                     l2464:
  3445                           
  3446                           ;mcc_generated_files/memory.c: 68:     __nop();
  3447     04E9  0000               	nop
  3448     04EA                     l2466:
  3449                           
  3450                           ;mcc_generated_files/memory.c: 69:     __nop();
  3451     04EA  0000               	nop
  3452     04EB                     l2468:
  3453                           
  3454                           ;mcc_generated_files/memory.c: 70:     INTCONbits.GIE = GIEBitValue;
  3455     04EB  0140               	movlb	0	; select bank0
  3456     04EC  0C51               	rrf	FLASH_ReadWord@GIEBitValue,w
  3457     04ED  1C03               	skipc
  3458     04EE  138B               	bcf	11,7	;volatile
  3459     04EF  1803               	skipnc
  3460     04F0  178B               	bsf	11,7	;volatile
  3461     04F1                     l2470:
  3462                           
  3463                           ;mcc_generated_files/memory.c: 72:     return ((uint16_t)((NVMDATH << 8) | NVMDATL));
  3464     04F1  0150               	movlb	16	; select bank16
  3465     04F2  081D               	movf	29,w	;volatile
  3466     04F3  0140               	movlb	0	; select bank0
  3467     04F4  00D0               	movwf	?_FLASH_ReadWord+1
  3468     04F5  0150               	movlb	16	; select bank16
  3469     04F6  081C               	movf	28,w	;volatile
  3470     04F7  0140               	movlb	0	; select bank0
  3471     04F8  00CF               	movwf	?_FLASH_ReadWord
  3472     04F9                     l535:
  3473     04F9  0008               	return
  3474     04FA                     __end_of_FLASH_ReadWord:
  3475                           
  3476                           	psect	text7
  3477     05B6                     __ptext7:	
  3478 ;; *************** function _getSensorBoardType *****************
  3479 ;; Defined at:
  3480 ;;		line 35 in file "sensor.c"
  3481 ;; Parameters:    Size  Location     Type
  3482 ;;		None
  3483 ;; Auto vars:     Size  Location     Type
  3484 ;;		None
  3485 ;; Return value:  Size  Location     Type
  3486 ;;                  1    wreg      unsigned char 
  3487 ;; Registers used:
  3488 ;;		wreg, status,2, status,0
  3489 ;; Tracked objects:
  3490 ;;		On entry : 0/0
  3491 ;;		On exit  : 0/0
  3492 ;;		Unchanged: 0/0
  3493 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3494 ;;      Params:         0       0       0       0
  3495 ;;      Locals:         0       0       0       0
  3496 ;;      Temps:          0       2       0       0
  3497 ;;      Totals:         0       2       0       0
  3498 ;;Total ram usage:        2 bytes
  3499 ;; Hardware stack levels used: 1
  3500 ;; Hardware stack levels required when called: 7
  3501 ;; This function calls:
  3502 ;;		Nothing
  3503 ;; This function is called by:
  3504 ;;		_main
  3505 ;; This function uses a non-reentrant model
  3506 ;;
  3507                           
  3508     05B6                     _getSensorBoardType:	
  3509                           ;psect for function _getSensorBoardType
  3510                           
  3511     05B6                     l2664:	
  3512                           ;incstack = 0
  3513                           ; Regs used in _getSensorBoardType: [wreg+status,2+status,0]
  3514                           
  3515                           
  3516                           ;sensor.c: 37:     return (((PORTC & 0x3C)) >>2 | (PORTA & 0x30));
  3517     05B6  3030               	movlw	48
  3518     05B7  0140               	movlb	0	; select bank0
  3519     05B8  050C               	andwf	12,w	;volatile
  3520     05B9  00CF               	movwf	??_getSensorBoardType
  3521     05BA  080E               	movf	14,w	;volatile
  3522     05BB  00D0               	movwf	??_getSensorBoardType+1
  3523     05BC  3002               	movlw	2
  3524     05BD                     u1045:
  3525     05BD  36D0               	lsrf	??_getSensorBoardType+1,f
  3526     05BE  0B89               	decfsz	9,f
  3527     05BF  2DBD               	goto	u1045
  3528     05C0  0850               	movf	??_getSensorBoardType+1,w
  3529     05C1  390F               	andlw	15
  3530     05C2  044F               	iorwf	??_getSensorBoardType,w
  3531     05C3                     l64:
  3532     05C3  0008               	return
  3533     05C4                     __end_of_getSensorBoardType:
  3534                           
  3535                           	psect	text8
  3536     0651                     __ptext8:	
  3537 ;; *************** function _error_signal *****************
  3538 ;; Defined at:
  3539 ;;		line 53 in file "sensor.c"
  3540 ;; Parameters:    Size  Location     Type
  3541 ;;		None
  3542 ;; Auto vars:     Size  Location     Type
  3543 ;;		None
  3544 ;; Return value:  Size  Location     Type
  3545 ;;                  1    wreg      void 
  3546 ;; Registers used:
  3547 ;;		None
  3548 ;; Tracked objects:
  3549 ;;		On entry : 0/0
  3550 ;;		On exit  : 0/0
  3551 ;;		Unchanged: 0/0
  3552 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3553 ;;      Params:         0       0       0       0
  3554 ;;      Locals:         0       0       0       0
  3555 ;;      Temps:          0       0       0       0
  3556 ;;      Totals:         0       0       0       0
  3557 ;;Total ram usage:        0 bytes
  3558 ;; Hardware stack levels used: 1
  3559 ;; Hardware stack levels required when called: 7
  3560 ;; This function calls:
  3561 ;;		Nothing
  3562 ;; This function is called by:
  3563 ;;		_main
  3564 ;; This function uses a non-reentrant model
  3565 ;;
  3566                           
  3567     0651                     _error_signal:	
  3568                           ;psect for function _error_signal
  3569                           
  3570     0651                     l2680:	
  3571                           ;incstack = 0
  3572                           ; Regs used in _error_signal: []
  3573                           
  3574                           
  3575                           ;sensor.c: 55:     error_flag = 1;
  3576     0651  0140               	movlb	0	; select bank0
  3577     0652  01BA               	clrf	_error_flag
  3578     0653  0ABA               	incf	_error_flag,f
  3579     0654                     l72:
  3580     0654  0008               	return
  3581     0655                     __end_of_error_signal:
  3582                           
  3583                           	psect	text9
  3584     0576                     __ptext9:	
  3585 ;; *************** function _SensorBoardType_validation *****************
  3586 ;; Defined at:
  3587 ;;		line 40 in file "sensor.c"
  3588 ;; Parameters:    Size  Location     Type
  3589 ;;  SensorBoardT    1    wreg     unsigned char 
  3590 ;; Auto vars:     Size  Location     Type
  3591 ;;  SensorBoardT    1   15[BANK0 ] unsigned char 
  3592 ;; Return value:  Size  Location     Type
  3593 ;;                  1    wreg      unsigned char 
  3594 ;; Registers used:
  3595 ;;		wreg, status,2, status,0
  3596 ;; Tracked objects:
  3597 ;;		On entry : 0/0
  3598 ;;		On exit  : 0/0
  3599 ;;		Unchanged: 0/0
  3600 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3601 ;;      Params:         0       0       0       0
  3602 ;;      Locals:         0       1       0       0
  3603 ;;      Temps:          0       0       0       0
  3604 ;;      Totals:         0       1       0       0
  3605 ;;Total ram usage:        1 bytes
  3606 ;; Hardware stack levels used: 1
  3607 ;; Hardware stack levels required when called: 7
  3608 ;; This function calls:
  3609 ;;		Nothing
  3610 ;; This function is called by:
  3611 ;;		_main
  3612 ;; This function uses a non-reentrant model
  3613 ;;
  3614                           
  3615     0576                     _SensorBoardType_validation:	
  3616                           ;psect for function _SensorBoardType_validation
  3617                           
  3618                           
  3619                           ;incstack = 0
  3620                           ; Regs used in _SensorBoardType_validation: [wreg+status,2+status,0]
  3621                           ;SensorBoardType_validation@SensorBoardType stored from wreg
  3622     0576  0140               	movlb	0	; select bank0
  3623     0577  00CF               	movwf	SensorBoardType_validation@SensorBoardType
  3624     0578                     l2668:
  3625                           
  3626                           ;sensor.c: 40: uint8_t SensorBoardType_validation (uint8_t SensorBoardType);sensor.c: 41
      +                          : {;sensor.c: 42:     if(SensorBoardType>=1)
  3627     0578  084F               	movf	SensorBoardType_validation@SensorBoardType,w
  3628     0579  1903               	btfsc	3,2
  3629     057A  2D7C               	goto	u1051
  3630     057B  2D7D               	goto	u1050
  3631     057C                     u1051:
  3632     057C  2D85               	goto	l2676
  3633     057D                     u1050:
  3634     057D                     l2670:
  3635                           
  3636                           ;sensor.c: 43:     {;sensor.c: 44:         if(SensorBoardType<=12)
  3637     057D  300D               	movlw	13
  3638     057E  024F               	subwf	SensorBoardType_validation@SensorBoardType,w
  3639     057F  1803               	skipnc
  3640     0580  2D82               	goto	u1061
  3641     0581  2D83               	goto	u1060
  3642     0582                     u1061:
  3643     0582  2D85               	goto	l2676
  3644     0583                     u1060:
  3645     0583                     l2672:
  3646                           
  3647                           ;sensor.c: 45:         {;sensor.c: 46:             return(1);
  3648     0583  3001               	movlw	1
  3649     0584  2D86               	goto	l69
  3650     0585                     l2676:
  3651                           
  3652                           ;sensor.c: 50:     return(0);
  3653     0585  3000               	movlw	0
  3654     0586                     l69:
  3655     0586  0008               	return
  3656     0587                     __end_of_SensorBoardType_validation:
  3657                           
  3658                           	psect	text10
  3659     0587                     __ptext10:	
  3660 ;; *************** function _SYSTEM_Initialize *****************
  3661 ;; Defined at:
  3662 ;;		line 50 in file "mcc_generated_files/mcc.c"
  3663 ;; Parameters:    Size  Location     Type
  3664 ;;		None
  3665 ;; Auto vars:     Size  Location     Type
  3666 ;;		None
  3667 ;; Return value:  Size  Location     Type
  3668 ;;                  1    wreg      void 
  3669 ;; Registers used:
  3670 ;;		wreg, status,2, status,0, pclath, cstack
  3671 ;; Tracked objects:
  3672 ;;		On entry : 0/0
  3673 ;;		On exit  : 0/0
  3674 ;;		Unchanged: 0/0
  3675 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3676 ;;      Params:         0       0       0       0
  3677 ;;      Locals:         0       0       0       0
  3678 ;;      Temps:          0       0       0       0
  3679 ;;      Totals:         0       0       0       0
  3680 ;;Total ram usage:        0 bytes
  3681 ;; Hardware stack levels used: 1
  3682 ;; Hardware stack levels required when called: 9
  3683 ;; This function calls:
  3684 ;;		_I2C1_Initialize
  3685 ;;		_OSCILLATOR_Initialize
  3686 ;;		_PIN_MANAGER_Initialize
  3687 ;;		_TMR0_Initialize
  3688 ;;		_WDT_Initialize
  3689 ;; This function is called by:
  3690 ;;		_main
  3691 ;; This function uses a non-reentrant model
  3692 ;;
  3693                           
  3694     0587                     _SYSTEM_Initialize:	
  3695                           ;psect for function _SYSTEM_Initialize
  3696                           
  3697     0587                     l2686:	
  3698                           ;incstack = 0
  3699                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  3700                           
  3701                           
  3702                           ;mcc_generated_files/mcc.c: 53:     I2C1_Initialize();
  3703     0587  3185  25DE  3185   	fcall	_I2C1_Initialize
  3704                           
  3705                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
  3706     058A  3184  2456  3185   	fcall	_PIN_MANAGER_Initialize
  3707                           
  3708                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
  3709     058D  3186  260B  3185   	fcall	_OSCILLATOR_Initialize
  3710     0590                     l2688:
  3711                           
  3712                           ;mcc_generated_files/mcc.c: 56:     WDT_Initialize();
  3713     0590  3186  2659  3185   	fcall	_WDT_Initialize
  3714     0593                     l2690:
  3715                           
  3716                           ;mcc_generated_files/mcc.c: 57:     TMR0_Initialize();
  3717     0593  3185  2561  3185   	fcall	_TMR0_Initialize
  3718     0596                     l602:
  3719     0596  0008               	return
  3720     0597                     __end_of_SYSTEM_Initialize:
  3721                           
  3722                           	psect	text11
  3723     0659                     __ptext11:	
  3724 ;; *************** function _WDT_Initialize *****************
  3725 ;; Defined at:
  3726 ;;		line 70 in file "mcc_generated_files/mcc.c"
  3727 ;; Parameters:    Size  Location     Type
  3728 ;;		None
  3729 ;; Auto vars:     Size  Location     Type
  3730 ;;		None
  3731 ;; Return value:  Size  Location     Type
  3732 ;;                  1    wreg      void 
  3733 ;; Registers used:
  3734 ;;		status,2
  3735 ;; Tracked objects:
  3736 ;;		On entry : 0/0
  3737 ;;		On exit  : 0/0
  3738 ;;		Unchanged: 0/0
  3739 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3740 ;;      Params:         0       0       0       0
  3741 ;;      Locals:         0       0       0       0
  3742 ;;      Temps:          0       0       0       0
  3743 ;;      Totals:         0       0       0       0
  3744 ;;Total ram usage:        0 bytes
  3745 ;; Hardware stack levels used: 1
  3746 ;; Hardware stack levels required when called: 7
  3747 ;; This function calls:
  3748 ;;		Nothing
  3749 ;; This function is called by:
  3750 ;;		_SYSTEM_Initialize
  3751 ;; This function uses a non-reentrant model
  3752 ;;
  3753                           
  3754     0659                     _WDT_Initialize:	
  3755                           ;psect for function _WDT_Initialize
  3756                           
  3757     0659                     l2632:	
  3758                           ;incstack = 0
  3759                           ; Regs used in _WDT_Initialize: [status,2]
  3760                           
  3761                           
  3762                           ;mcc_generated_files/mcc.c: 73:     WDTCON = 0x00;
  3763     0659  0150               	movlb	16	; select bank16
  3764     065A  018C               	clrf	12	;volatile
  3765     065B                     l608:
  3766     065B  0008               	return
  3767     065C                     __end_of_WDT_Initialize:
  3768                           
  3769                           	psect	text12
  3770     0561                     __ptext12:	
  3771 ;; *************** function _TMR0_Initialize *****************
  3772 ;; Defined at:
  3773 ;;		line 71 in file "mcc_generated_files/tmr0.c"
  3774 ;; Parameters:    Size  Location     Type
  3775 ;;		None
  3776 ;; Auto vars:     Size  Location     Type
  3777 ;;		None
  3778 ;; Return value:  Size  Location     Type
  3779 ;;                  1    wreg      void 
  3780 ;; Registers used:
  3781 ;;		wreg, status,2, status,0, pclath, cstack
  3782 ;; Tracked objects:
  3783 ;;		On entry : 0/0
  3784 ;;		On exit  : 0/0
  3785 ;;		Unchanged: 0/0
  3786 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3787 ;;      Params:         0       0       0       0
  3788 ;;      Locals:         0       0       0       0
  3789 ;;      Temps:          0       0       0       0
  3790 ;;      Totals:         0       0       0       0
  3791 ;;Total ram usage:        0 bytes
  3792 ;; Hardware stack levels used: 1
  3793 ;; Hardware stack levels required when called: 8
  3794 ;; This function calls:
  3795 ;;		_TMR0_SetInterruptHandler
  3796 ;; This function is called by:
  3797 ;;		_SYSTEM_Initialize
  3798 ;; This function uses a non-reentrant model
  3799 ;;
  3800                           
  3801     0561                     _TMR0_Initialize:	
  3802                           ;psect for function _TMR0_Initialize
  3803                           
  3804     0561                     l2614:	
  3805                           ;incstack = 0
  3806                           ; Regs used in _TMR0_Initialize: [wreg+status,2+status,0+pclath+cstack]
  3807                           
  3808                           
  3809                           ;mcc_generated_files/tmr0.c: 76:     T0CON1 = 0x69;
  3810     0561  3069               	movlw	105
  3811     0562  014B               	movlb	11	; select bank11
  3812     0563  009F               	movwf	31	;volatile
  3813                           
  3814                           ;mcc_generated_files/tmr0.c: 79:     TMR0H = 0x9B;
  3815     0564  309B               	movlw	155
  3816     0565  009D               	movwf	29	;volatile
  3817     0566                     l2616:
  3818                           
  3819                           ;mcc_generated_files/tmr0.c: 82:     TMR0L = 0x00;
  3820     0566  019C               	clrf	28	;volatile
  3821     0567                     l2618:
  3822                           
  3823                           ;mcc_generated_files/tmr0.c: 85:     PIR0bits.TMR0IF = 0;
  3824     0567  014E               	movlb	14	; select bank14
  3825     0568  128C               	bcf	12,5	;volatile
  3826     0569                     l2620:
  3827                           
  3828                           ;mcc_generated_files/tmr0.c: 88:     PIE0bits.TMR0IE = 1;
  3829     0569  1696               	bsf	22,5	;volatile
  3830     056A                     l2622:
  3831                           
  3832                           ;mcc_generated_files/tmr0.c: 91:     TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandl
      +                          er);
  3833     056A  302C               	movlw	low _TMR0_DefaultInterruptHandler
  3834     056B  0140               	movlb	0	; select bank0
  3835     056C  00CF               	movwf	TMR0_SetInterruptHandler@InterruptHandler
  3836     056D  3004               	movlw	high _TMR0_DefaultInterruptHandler
  3837     056E  00D0               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1
  3838     056F  3186  2605  3185   	fcall	_TMR0_SetInterruptHandler
  3839     0572                     l2624:
  3840                           
  3841                           ;mcc_generated_files/tmr0.c: 94:     T0CON0 = 0x80;
  3842     0572  3080               	movlw	128
  3843     0573  014B               	movlb	11	; select bank11
  3844     0574  009E               	movwf	30	;volatile
  3845     0575                     l473:
  3846     0575  0008               	return
  3847     0576                     __end_of_TMR0_Initialize:
  3848                           
  3849                           	psect	text13
  3850     0605                     __ptext13:	
  3851 ;; *************** function _TMR0_SetInterruptHandler *****************
  3852 ;; Defined at:
  3853 ;;		line 146 in file "mcc_generated_files/tmr0.c"
  3854 ;; Parameters:    Size  Location     Type
  3855 ;;  InterruptHan    2   15[BANK0 ] PTR FTN()void 
  3856 ;;		 -> TMR0_DefaultInterruptHandler(1), 
  3857 ;; Auto vars:     Size  Location     Type
  3858 ;;		None
  3859 ;; Return value:  Size  Location     Type
  3860 ;;                  1    wreg      void 
  3861 ;; Registers used:
  3862 ;;		wreg
  3863 ;; Tracked objects:
  3864 ;;		On entry : 0/0
  3865 ;;		On exit  : 0/0
  3866 ;;		Unchanged: 0/0
  3867 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3868 ;;      Params:         0       2       0       0
  3869 ;;      Locals:         0       0       0       0
  3870 ;;      Temps:          0       0       0       0
  3871 ;;      Totals:         0       2       0       0
  3872 ;;Total ram usage:        2 bytes
  3873 ;; Hardware stack levels used: 1
  3874 ;; Hardware stack levels required when called: 7
  3875 ;; This function calls:
  3876 ;;		Nothing
  3877 ;; This function is called by:
  3878 ;;		_TMR0_Initialize
  3879 ;; This function uses a non-reentrant model
  3880 ;;
  3881                           
  3882     0605                     _TMR0_SetInterruptHandler:	
  3883                           ;psect for function _TMR0_SetInterruptHandler
  3884                           
  3885     0605                     l2474:	
  3886                           ;incstack = 0
  3887                           ; Regs used in _TMR0_SetInterruptHandler: [wreg]
  3888                           
  3889                           
  3890                           ;mcc_generated_files/tmr0.c: 147:     TMR0_InterruptHandler = InterruptHandler;
  3891     0605  0140               	movlb	0	; select bank0
  3892     0606  0850               	movf	TMR0_SetInterruptHandler@InterruptHandler+1,w
  3893     0607  00E0               	movwf	_TMR0_InterruptHandler+1
  3894     0608  084F               	movf	TMR0_SetInterruptHandler@InterruptHandler,w
  3895     0609  00DF               	movwf	_TMR0_InterruptHandler
  3896     060A                     l495:
  3897     060A  0008               	return
  3898     060B                     __end_of_TMR0_SetInterruptHandler:
  3899                           
  3900                           	psect	text14
  3901     0456                     __ptext14:	
  3902 ;; *************** function _PIN_MANAGER_Initialize *****************
  3903 ;; Defined at:
  3904 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  3905 ;; Parameters:    Size  Location     Type
  3906 ;;		None
  3907 ;; Auto vars:     Size  Location     Type
  3908 ;;		None
  3909 ;; Return value:  Size  Location     Type
  3910 ;;                  1    wreg      void 
  3911 ;; Registers used:
  3912 ;;		wreg, status,2
  3913 ;; Tracked objects:
  3914 ;;		On entry : 0/0
  3915 ;;		On exit  : 0/0
  3916 ;;		Unchanged: 0/0
  3917 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3918 ;;      Params:         0       0       0       0
  3919 ;;      Locals:         0       0       0       0
  3920 ;;      Temps:          0       0       0       0
  3921 ;;      Totals:         0       0       0       0
  3922 ;;Total ram usage:        0 bytes
  3923 ;; Hardware stack levels used: 1
  3924 ;; Hardware stack levels required when called: 7
  3925 ;; This function calls:
  3926 ;;		Nothing
  3927 ;; This function is called by:
  3928 ;;		_SYSTEM_Initialize
  3929 ;; This function uses a non-reentrant model
  3930 ;;
  3931                           
  3932     0456                     _PIN_MANAGER_Initialize:	
  3933                           ;psect for function _PIN_MANAGER_Initialize
  3934                           
  3935     0456                     l2544:	
  3936                           ;incstack = 0
  3937                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  3938                           
  3939                           
  3940                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
  3941     0456  0140               	movlb	0	; select bank0
  3942     0457  0198               	clrf	24	;volatile
  3943                           
  3944                           ;mcc_generated_files/pin_manager.c: 61:     LATC = 0x00;
  3945     0458  019A               	clrf	26	;volatile
  3946     0459                     l2546:
  3947                           
  3948                           ;mcc_generated_files/pin_manager.c: 66:     TRISA = 0x3B;
  3949     0459  303B               	movlw	59
  3950     045A  0092               	movwf	18	;volatile
  3951     045B                     l2548:
  3952                           
  3953                           ;mcc_generated_files/pin_manager.c: 67:     TRISC = 0x3F;
  3954     045B  303F               	movlw	63
  3955     045C  0094               	movwf	20	;volatile
  3956                           
  3957                           ;mcc_generated_files/pin_manager.c: 72:     ANSELC = 0x00;
  3958     045D  017E               	movlb	62	; select bank62
  3959     045E  01CE               	clrf	78	;volatile
  3960     045F                     l2550:
  3961                           
  3962                           ;mcc_generated_files/pin_manager.c: 73:     ANSELA = 0x07;
  3963     045F  3007               	movlw	7
  3964     0460  00B8               	movwf	56	;volatile
  3965     0461                     l2552:
  3966                           
  3967                           ;mcc_generated_files/pin_manager.c: 78:     WPUA = 0x00;
  3968     0461  01B9               	clrf	57	;volatile
  3969     0462                     l2554:
  3970                           
  3971                           ;mcc_generated_files/pin_manager.c: 79:     WPUC = 0x00;
  3972     0462  01CF               	clrf	79	;volatile
  3973     0463                     l2556:
  3974                           
  3975                           ;mcc_generated_files/pin_manager.c: 84:     ODCONA = 0x00;
  3976     0463  01BA               	clrf	58	;volatile
  3977     0464                     l2558:
  3978                           
  3979                           ;mcc_generated_files/pin_manager.c: 85:     ODCONC = 0x00;
  3980     0464  01D0               	clrf	80	;volatile
  3981     0465                     l2560:
  3982                           
  3983                           ;mcc_generated_files/pin_manager.c: 90:     SLRCONA = 0x37;
  3984     0465  3037               	movlw	55
  3985     0466  00BB               	movwf	59	;volatile
  3986     0467                     l2562:
  3987                           
  3988                           ;mcc_generated_files/pin_manager.c: 91:     SLRCONC = 0x3F;
  3989     0467  303F               	movlw	63
  3990     0468  00D1               	movwf	81	;volatile
  3991     0469                     l2564:
  3992                           
  3993                           ;mcc_generated_files/pin_manager.c: 96:     INLVLA = 0x3F;
  3994     0469  303F               	movlw	63
  3995     046A  00BC               	movwf	60	;volatile
  3996     046B                     l2566:
  3997                           
  3998                           ;mcc_generated_files/pin_manager.c: 97:     INLVLC = 0x3F;
  3999     046B  303F               	movlw	63
  4000     046C  00D2               	movwf	82	;volatile
  4001     046D                     l2568:
  4002                           
  4003                           ;mcc_generated_files/pin_manager.c: 106:     RC0PPS = 0x07;
  4004     046D  3007               	movlw	7
  4005     046E  00A0               	movwf	32	;volatile
  4006     046F                     l2570:
  4007                           
  4008                           ;mcc_generated_files/pin_manager.c: 107:     SSP1CLKPPS = 0x10;
  4009     046F  3010               	movlw	16
  4010     0470  017D               	movlb	61	; select bank61
  4011     0471  00C5               	movwf	69	;volatile
  4012     0472                     l2572:
  4013                           
  4014                           ;mcc_generated_files/pin_manager.c: 108:     RC1PPS = 0x08;
  4015     0472  3008               	movlw	8
  4016     0473  017E               	movlb	62	; select bank62
  4017     0474  00A1               	movwf	33	;volatile
  4018     0475                     l2574:
  4019                           
  4020                           ;mcc_generated_files/pin_manager.c: 109:     SSP1DATPPS = 0x11;
  4021     0475  3011               	movlw	17
  4022     0476  017D               	movlb	61	; select bank61
  4023     0477  00C6               	movwf	70	;volatile
  4024     0478                     l111:
  4025     0478  0008               	return
  4026     0479                     __end_of_PIN_MANAGER_Initialize:
  4027                           
  4028                           	psect	text15
  4029     060B                     __ptext15:	
  4030 ;; *************** function _OSCILLATOR_Initialize *****************
  4031 ;; Defined at:
  4032 ;;		line 60 in file "mcc_generated_files/mcc.c"
  4033 ;; Parameters:    Size  Location     Type
  4034 ;;		None
  4035 ;; Auto vars:     Size  Location     Type
  4036 ;;		None
  4037 ;; Return value:  Size  Location     Type
  4038 ;;                  1    wreg      void 
  4039 ;; Registers used:
  4040 ;;		wreg, status,2
  4041 ;; Tracked objects:
  4042 ;;		On entry : 0/0
  4043 ;;		On exit  : 0/0
  4044 ;;		Unchanged: 0/0
  4045 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4046 ;;      Params:         0       0       0       0
  4047 ;;      Locals:         0       0       0       0
  4048 ;;      Temps:          0       0       0       0
  4049 ;;      Totals:         0       0       0       0
  4050 ;;Total ram usage:        0 bytes
  4051 ;; Hardware stack levels used: 1
  4052 ;; Hardware stack levels required when called: 7
  4053 ;; This function calls:
  4054 ;;		Nothing
  4055 ;; This function is called by:
  4056 ;;		_SYSTEM_Initialize
  4057 ;; This function uses a non-reentrant model
  4058 ;;
  4059                           
  4060     060B                     _OSCILLATOR_Initialize:	
  4061                           ;psect for function _OSCILLATOR_Initialize
  4062                           
  4063     060B                     l2626:	
  4064                           ;incstack = 0
  4065                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  4066                           
  4067                           
  4068                           ;mcc_generated_files/mcc.c: 63:     OSCEN = 0x00;
  4069     060B  0151               	movlb	17	; select bank17
  4070     060C  0191               	clrf	17	;volatile
  4071     060D                     l2628:
  4072                           
  4073                           ;mcc_generated_files/mcc.c: 65:     OSCFRQ = 0x03;
  4074     060D  3003               	movlw	3
  4075     060E  0093               	movwf	19	;volatile
  4076     060F                     l2630:
  4077                           
  4078                           ;mcc_generated_files/mcc.c: 67:     OSCTUNE = 0x00;
  4079     060F  0192               	clrf	18	;volatile
  4080     0610                     l605:
  4081     0610  0008               	return
  4082     0611                     __end_of_OSCILLATOR_Initialize:
  4083                           
  4084                           	psect	text16
  4085     05DE                     __ptext16:	
  4086 ;; *************** function _I2C1_Initialize *****************
  4087 ;; Defined at:
  4088 ;;		line 112 in file "mcc_generated_files/i2c1_slave.c"
  4089 ;; Parameters:    Size  Location     Type
  4090 ;;		None
  4091 ;; Auto vars:     Size  Location     Type
  4092 ;;		None
  4093 ;; Return value:  Size  Location     Type
  4094 ;;                  1    wreg      void 
  4095 ;; Registers used:
  4096 ;;		wreg, status,2, status,0
  4097 ;; Tracked objects:
  4098 ;;		On entry : 0/0
  4099 ;;		On exit  : 0/0
  4100 ;;		Unchanged: 0/0
  4101 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4102 ;;      Params:         0       0       0       0
  4103 ;;      Locals:         0       0       0       0
  4104 ;;      Temps:          0       1       0       0
  4105 ;;      Totals:         0       1       0       0
  4106 ;;Total ram usage:        1 bytes
  4107 ;; Hardware stack levels used: 1
  4108 ;; Hardware stack levels required when called: 7
  4109 ;; This function calls:
  4110 ;;		Nothing
  4111 ;; This function is called by:
  4112 ;;		_SYSTEM_Initialize
  4113 ;;		_I2C1_Enable
  4114 ;; This function uses a non-reentrant model
  4115 ;;
  4116                           
  4117     05DE                     _I2C1_Initialize:	
  4118                           ;psect for function _I2C1_Initialize
  4119                           
  4120     05DE                     l2576:	
  4121                           ;incstack = 0
  4122                           ; Regs used in _I2C1_Initialize: [wreg+status,2+status,0]
  4123                           
  4124                           
  4125                           ;mcc_generated_files/i2c1_slave.c: 114:     SSP1STAT = 0x40;
  4126     05DE  3040               	movlw	64
  4127     05DF  0143               	movlb	3	; select bank3
  4128     05E0  008F               	movwf	15	;volatile
  4129     05E1                     l2578:
  4130                           
  4131                           ;mcc_generated_files/i2c1_slave.c: 115:     SSP1CON1 |= 0x06;
  4132     05E1  3006               	movlw	6
  4133     05E2  0140               	movlb	0	; select bank0
  4134     05E3  00CF               	movwf	??_I2C1_Initialize
  4135     05E4  084F               	movf	??_I2C1_Initialize,w
  4136     05E5  0143               	movlb	3	; select bank3
  4137     05E6  0490               	iorwf	16,f	;volatile
  4138     05E7                     l2580:
  4139                           
  4140                           ;mcc_generated_files/i2c1_slave.c: 116:     SSP1CON2 = 0x00;
  4141     05E7  0191               	clrf	17	;volatile
  4142     05E8                     l2582:
  4143                           
  4144                           ;mcc_generated_files/i2c1_slave.c: 117:     SSP1CON1bits.SSPEN = 0;
  4145     05E8  1290               	bcf	16,5	;volatile
  4146     05E9                     l282:
  4147     05E9  0008               	return
  4148     05EA                     __end_of_I2C1_Initialize:
  4149                           
  4150                           	psect	text17
  4151     0377                     __ptext17:	
  4152 ;; *************** function _I2C1_Open *****************
  4153 ;; Defined at:
  4154 ;;		line 120 in file "mcc_generated_files/i2c1_slave.c"
  4155 ;; Parameters:    Size  Location     Type
  4156 ;;		None
  4157 ;; Auto vars:     Size  Location     Type
  4158 ;;		None
  4159 ;; Return value:  Size  Location     Type
  4160 ;;                  1    wreg      void 
  4161 ;; Registers used:
  4162 ;;		wreg, status,2, status,0, pclath, cstack
  4163 ;; Tracked objects:
  4164 ;;		On entry : 0/0
  4165 ;;		On exit  : 0/0
  4166 ;;		Unchanged: 0/0
  4167 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4168 ;;      Params:         0       0       0       0
  4169 ;;      Locals:         0       0       0       0
  4170 ;;      Temps:          0       0       0       0
  4171 ;;      Totals:         0       0       0       0
  4172 ;;Total ram usage:        0 bytes
  4173 ;; Hardware stack levels used: 1
  4174 ;; Hardware stack levels required when called: 8
  4175 ;; This function calls:
  4176 ;;		_I2C1_SlaveEnableIrq
  4177 ;;		_I2C1_SlaveOpen
  4178 ;;		_I2C1_SlaveSetAddrIntHandler
  4179 ;;		_I2C1_SlaveSetBusColIntHandler
  4180 ;;		_I2C1_SlaveSetIsrHandler
  4181 ;;		_I2C1_SlaveSetReadIntHandler
  4182 ;;		_I2C1_SlaveSetSlaveAddr
  4183 ;;		_I2C1_SlaveSetSlaveMask
  4184 ;;		_I2C1_SlaveSetWrColIntHandler
  4185 ;;		_I2C1_SlaveSetWriteIntHandler
  4186 ;; This function is called by:
  4187 ;;		_main
  4188 ;; This function uses a non-reentrant model
  4189 ;;
  4190                           
  4191     0377                     _I2C1_Open:	
  4192                           ;psect for function _I2C1_Open
  4193                           
  4194     0377                     l2682:	
  4195                           ;incstack = 0
  4196                           ; Regs used in _I2C1_Open: [wreg+status,2+status,0+pclath+cstack]
  4197                           
  4198                           
  4199                           ;mcc_generated_files/i2c1_slave.c: 122:     I2C1_SlaveOpen();
  4200     0377  3185  2597  3183   	fcall	_I2C1_SlaveOpen
  4201                           
  4202                           ;mcc_generated_files/i2c1_slave.c: 123:     I2C1_SlaveSetSlaveAddr(0x77);
  4203     037A  3077               	movlw	119
  4204     037B  3186  2623  3183   	fcall	_I2C1_SlaveSetSlaveAddr
  4205                           
  4206                           ;mcc_generated_files/i2c1_slave.c: 124:     I2C1_SlaveSetSlaveMask(0);
  4207     037E  3000               	movlw	0
  4208     037F  3186  261D  3183   	fcall	_I2C1_SlaveSetSlaveMask
  4209                           
  4210                           ;mcc_generated_files/i2c1_slave.c: 125:     I2C1_SlaveSetIsrHandler(I2C1_Isr);
  4211     0382  30F5               	movlw	low _I2C1_Isr
  4212     0383  0140               	movlb	0	; select bank0
  4213     0384  00CF               	movwf	I2C1_SlaveSetIsrHandler@handler
  4214     0385  3001               	movlw	high _I2C1_Isr
  4215     0386  00D0               	movwf	I2C1_SlaveSetIsrHandler@handler+1
  4216     0387  3186  262F  3183   	fcall	_I2C1_SlaveSetIsrHandler
  4217                           
  4218                           ;mcc_generated_files/i2c1_slave.c: 126:     I2C1_SlaveSetBusColIntHandler(I2C1_SlaveDefB
      +                          usColInterruptHandler);
  4219     038A  3000               	movlw	0
  4220     038B  0140               	movlb	0	; select bank0
  4221     038C  00CF               	movwf	I2C1_SlaveSetBusColIntHandler@handler
  4222     038D  3000               	movlw	0
  4223     038E  00D0               	movwf	I2C1_SlaveSetBusColIntHandler@handler+1
  4224     038F  3186  2635  3183   	fcall	_I2C1_SlaveSetBusColIntHandler
  4225                           
  4226                           ;mcc_generated_files/i2c1_slave.c: 127:     I2C1_SlaveSetWriteIntHandler(I2C1_SlaveDefWr
      +                          InterruptHandler);
  4227     0392  3041               	movlw	low _I2C1_SlaveDefWrInterruptHandler
  4228     0393  0140               	movlb	0	; select bank0
  4229     0394  00CF               	movwf	I2C1_SlaveSetWriteIntHandler@handler
  4230     0395  3006               	movlw	high _I2C1_SlaveDefWrInterruptHandler
  4231     0396  00D0               	movwf	I2C1_SlaveSetWriteIntHandler@handler+1
  4232     0397  3186  2611  3183   	fcall	_I2C1_SlaveSetWriteIntHandler
  4233                           
  4234                           ;mcc_generated_files/i2c1_slave.c: 128:     I2C1_SlaveSetReadIntHandler(I2C1_SlaveDefRdI
      +                          nterruptHandler);
  4235     039A  3016               	movlw	low _I2C1_SlaveDefRdInterruptHandler
  4236     039B  0140               	movlb	0	; select bank0
  4237     039C  00CF               	movwf	I2C1_SlaveSetReadIntHandler@handler
  4238     039D  3005               	movlw	high _I2C1_SlaveDefRdInterruptHandler
  4239     039E  00D0               	movwf	I2C1_SlaveSetReadIntHandler@handler+1
  4240     039F  3186  2629  3183   	fcall	_I2C1_SlaveSetReadIntHandler
  4241                           
  4242                           ;mcc_generated_files/i2c1_slave.c: 129:     I2C1_SlaveSetAddrIntHandler(I2C1_SlaveDefAdd
      +                          rInterruptHandler);
  4243     03A2  30F8               	movlw	low _I2C1_SlaveDefAddrInterruptHandler
  4244     03A3  0140               	movlb	0	; select bank0
  4245     03A4  00CF               	movwf	I2C1_SlaveSetAddrIntHandler@handler
  4246     03A5  3005               	movlw	high _I2C1_SlaveDefAddrInterruptHandler
  4247     03A6  00D0               	movwf	I2C1_SlaveSetAddrIntHandler@handler+1
  4248     03A7  3186  263B  3183   	fcall	_I2C1_SlaveSetAddrIntHandler
  4249                           
  4250                           ;mcc_generated_files/i2c1_slave.c: 130:     I2C1_SlaveSetWrColIntHandler(I2C1_SlaveDefWr
      +                          ColInterruptHandler);
  4251     03AA  3000               	movlw	0
  4252     03AB  0140               	movlb	0	; select bank0
  4253     03AC  00CF               	movwf	I2C1_SlaveSetWrColIntHandler@handler
  4254     03AD  3000               	movlw	0
  4255     03AE  00D0               	movwf	I2C1_SlaveSetWrColIntHandler@handler+1
  4256     03AF  3186  2617  3183   	fcall	_I2C1_SlaveSetWrColIntHandler
  4257     03B2                     l2684:
  4258                           
  4259                           ;mcc_generated_files/i2c1_slave.c: 131:     I2C1_SlaveEnableIrq();
  4260     03B2  3186  265C  3183   	fcall	_I2C1_SlaveEnableIrq
  4261     03B5                     l285:
  4262     03B5  0008               	return
  4263     03B6                     __end_of_I2C1_Open:
  4264                           
  4265                           	psect	text18
  4266     0611                     __ptext18:	
  4267 ;; *************** function _I2C1_SlaveSetWriteIntHandler *****************
  4268 ;; Defined at:
  4269 ;;		line 277 in file "mcc_generated_files/i2c1_slave.c"
  4270 ;; Parameters:    Size  Location     Type
  4271 ;;  handler         2   15[BANK0 ] PTR FTN()void 
  4272 ;;		 -> I2C1_SlaveDefWrInterruptHandler(1), 
  4273 ;; Auto vars:     Size  Location     Type
  4274 ;;		None
  4275 ;; Return value:  Size  Location     Type
  4276 ;;                  1    wreg      void 
  4277 ;; Registers used:
  4278 ;;		wreg
  4279 ;; Tracked objects:
  4280 ;;		On entry : 0/0
  4281 ;;		On exit  : 0/0
  4282 ;;		Unchanged: 0/0
  4283 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4284 ;;      Params:         0       2       0       0
  4285 ;;      Locals:         0       0       0       0
  4286 ;;      Temps:          0       0       0       0
  4287 ;;      Totals:         0       2       0       0
  4288 ;;Total ram usage:        2 bytes
  4289 ;; Hardware stack levels used: 1
  4290 ;; Hardware stack levels required when called: 7
  4291 ;; This function calls:
  4292 ;;		Nothing
  4293 ;; This function is called by:
  4294 ;;		_I2C1_Open
  4295 ;; This function uses a non-reentrant model
  4296 ;;
  4297                           
  4298     0611                     _I2C1_SlaveSetWriteIntHandler:	
  4299                           ;psect for function _I2C1_SlaveSetWriteIntHandler
  4300                           
  4301     0611                     l2604:	
  4302                           ;incstack = 0
  4303                           ; Regs used in _I2C1_SlaveSetWriteIntHandler: [wreg]
  4304                           
  4305                           
  4306                           ;mcc_generated_files/i2c1_slave.c: 278:     I2C1_SlaveWrInterruptHandler = handler;
  4307     0611  0140               	movlb	0	; select bank0
  4308     0612  0850               	movf	I2C1_SlaveSetWriteIntHandler@handler+1,w
  4309     0613  00A7               	movwf	_I2C1_SlaveWrInterruptHandler+1
  4310     0614  084F               	movf	I2C1_SlaveSetWriteIntHandler@handler,w
  4311     0615  00A6               	movwf	_I2C1_SlaveWrInterruptHandler
  4312     0616                     l344:
  4313     0616  0008               	return
  4314     0617                     __end_of_I2C1_SlaveSetWriteIntHandler:
  4315                           
  4316                           	psect	text19
  4317     0617                     __ptext19:	
  4318 ;; *************** function _I2C1_SlaveSetWrColIntHandler *****************
  4319 ;; Defined at:
  4320 ;;		line 312 in file "mcc_generated_files/i2c1_slave.c"
  4321 ;; Parameters:    Size  Location     Type
  4322 ;;  handler         2   15[BANK0 ] PTR FTN()void 
  4323 ;;		 -> I2C1_SlaveDefWrColInterruptHandler(1), 
  4324 ;; Auto vars:     Size  Location     Type
  4325 ;;		None
  4326 ;; Return value:  Size  Location     Type
  4327 ;;                  1    wreg      void 
  4328 ;; Registers used:
  4329 ;;		wreg
  4330 ;; Tracked objects:
  4331 ;;		On entry : 0/0
  4332 ;;		On exit  : 0/0
  4333 ;;		Unchanged: 0/0
  4334 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4335 ;;      Params:         0       2       0       0
  4336 ;;      Locals:         0       0       0       0
  4337 ;;      Temps:          0       0       0       0
  4338 ;;      Totals:         0       2       0       0
  4339 ;;Total ram usage:        2 bytes
  4340 ;; Hardware stack levels used: 1
  4341 ;; Hardware stack levels required when called: 7
  4342 ;; This function calls:
  4343 ;;		Nothing
  4344 ;; This function is called by:
  4345 ;;		_I2C1_Open
  4346 ;; This function uses a non-reentrant model
  4347 ;;
  4348                           
  4349     0617                     _I2C1_SlaveSetWrColIntHandler:	
  4350                           ;psect for function _I2C1_SlaveSetWrColIntHandler
  4351                           
  4352     0617                     l2610:	
  4353                           ;incstack = 0
  4354                           ; Regs used in _I2C1_SlaveSetWrColIntHandler: [wreg]
  4355                           
  4356                           
  4357                           ;mcc_generated_files/i2c1_slave.c: 313:     I2C1_SlaveWrColInterruptHandler = handler;
  4358     0617  0140               	movlb	0	; select bank0
  4359     0618  0850               	movf	I2C1_SlaveSetWrColIntHandler@handler+1,w
  4360     0619  00A1               	movwf	_I2C1_SlaveWrColInterruptHandler+1
  4361     061A  084F               	movf	I2C1_SlaveSetWrColIntHandler@handler,w
  4362     061B  00A0               	movwf	_I2C1_SlaveWrColInterruptHandler
  4363     061C                     l364:
  4364     061C  0008               	return
  4365     061D                     __end_of_I2C1_SlaveSetWrColIntHandler:
  4366                           
  4367                           	psect	text20
  4368     061D                     __ptext20:	
  4369 ;; *************** function _I2C1_SlaveSetSlaveMask *****************
  4370 ;; Defined at:
  4371 ;;		line 369 in file "mcc_generated_files/i2c1_slave.c"
  4372 ;; Parameters:    Size  Location     Type
  4373 ;;  maskAddr        1    wreg     unsigned char 
  4374 ;; Auto vars:     Size  Location     Type
  4375 ;;  maskAddr        1   15[BANK0 ] unsigned char 
  4376 ;; Return value:  Size  Location     Type
  4377 ;;                  1    wreg      void 
  4378 ;; Registers used:
  4379 ;;		wreg, status,2, status,0
  4380 ;; Tracked objects:
  4381 ;;		On entry : 0/0
  4382 ;;		On exit  : 0/0
  4383 ;;		Unchanged: 0/0
  4384 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4385 ;;      Params:         0       0       0       0
  4386 ;;      Locals:         0       1       0       0
  4387 ;;      Temps:          0       0       0       0
  4388 ;;      Totals:         0       1       0       0
  4389 ;;Total ram usage:        1 bytes
  4390 ;; Hardware stack levels used: 1
  4391 ;; Hardware stack levels required when called: 7
  4392 ;; This function calls:
  4393 ;;		Nothing
  4394 ;; This function is called by:
  4395 ;;		_I2C1_Open
  4396 ;; This function uses a non-reentrant model
  4397 ;;
  4398                           
  4399     061D                     _I2C1_SlaveSetSlaveMask:	
  4400                           ;psect for function _I2C1_SlaveSetSlaveMask
  4401                           
  4402                           
  4403                           ;incstack = 0
  4404                           ; Regs used in _I2C1_SlaveSetSlaveMask: [wreg+status,2+status,0]
  4405                           ;I2C1_SlaveSetSlaveMask@maskAddr stored from wreg
  4406     061D  0140               	movlb	0	; select bank0
  4407     061E  00CF               	movwf	I2C1_SlaveSetSlaveMask@maskAddr
  4408     061F                     l2598:
  4409                           
  4410                           ;mcc_generated_files/i2c1_slave.c: 369: static __attribute__((inline)) void I2C1_SlaveSe
      +                          tSlaveMask(uint8_t maskAddr);mcc_generated_files/i2c1_slave.c: 370: {;mcc_generated_file
      +                          s/i2c1_slave.c: 371:     SSP1MSK = (uint8_t) (maskAddr << 1);
  4411     061F  354F               	lslf	I2C1_SlaveSetSlaveMask@maskAddr,w
  4412     0620  0143               	movlb	3	; select bank3
  4413     0621  008E               	movwf	14	;volatile
  4414     0622                     l394:
  4415     0622  0008               	return
  4416     0623                     __end_of_I2C1_SlaveSetSlaveMask:
  4417                           
  4418                           	psect	text21
  4419     0623                     __ptext21:	
  4420 ;; *************** function _I2C1_SlaveSetSlaveAddr *****************
  4421 ;; Defined at:
  4422 ;;		line 364 in file "mcc_generated_files/i2c1_slave.c"
  4423 ;; Parameters:    Size  Location     Type
  4424 ;;  slaveAddr       1    wreg     unsigned char 
  4425 ;; Auto vars:     Size  Location     Type
  4426 ;;  slaveAddr       1   15[BANK0 ] unsigned char 
  4427 ;; Return value:  Size  Location     Type
  4428 ;;                  1    wreg      void 
  4429 ;; Registers used:
  4430 ;;		wreg, status,2, status,0
  4431 ;; Tracked objects:
  4432 ;;		On entry : 0/0
  4433 ;;		On exit  : 0/0
  4434 ;;		Unchanged: 0/0
  4435 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4436 ;;      Params:         0       0       0       0
  4437 ;;      Locals:         0       1       0       0
  4438 ;;      Temps:          0       0       0       0
  4439 ;;      Totals:         0       1       0       0
  4440 ;;Total ram usage:        1 bytes
  4441 ;; Hardware stack levels used: 1
  4442 ;; Hardware stack levels required when called: 7
  4443 ;; This function calls:
  4444 ;;		Nothing
  4445 ;; This function is called by:
  4446 ;;		_I2C1_Open
  4447 ;; This function uses a non-reentrant model
  4448 ;;
  4449                           
  4450     0623                     _I2C1_SlaveSetSlaveAddr:	
  4451                           ;psect for function _I2C1_SlaveSetSlaveAddr
  4452                           
  4453                           
  4454                           ;incstack = 0
  4455                           ; Regs used in _I2C1_SlaveSetSlaveAddr: [wreg+status,2+status,0]
  4456                           ;I2C1_SlaveSetSlaveAddr@slaveAddr stored from wreg
  4457     0623  0140               	movlb	0	; select bank0
  4458     0624  00CF               	movwf	I2C1_SlaveSetSlaveAddr@slaveAddr
  4459     0625                     l2596:
  4460                           
  4461                           ;mcc_generated_files/i2c1_slave.c: 364: static __attribute__((inline)) void I2C1_SlaveSe
      +                          tSlaveAddr(uint8_t slaveAddr);mcc_generated_files/i2c1_slave.c: 365: {;mcc_generated_fil
      +                          es/i2c1_slave.c: 366:     SSP1ADD = (uint8_t) (slaveAddr << 1);
  4462     0625  354F               	lslf	I2C1_SlaveSetSlaveAddr@slaveAddr,w
  4463     0626  0143               	movlb	3	; select bank3
  4464     0627  008D               	movwf	13	;volatile
  4465     0628                     l391:
  4466     0628  0008               	return
  4467     0629                     __end_of_I2C1_SlaveSetSlaveAddr:
  4468                           
  4469                           	psect	text22
  4470     0629                     __ptext22:	
  4471 ;; *************** function _I2C1_SlaveSetReadIntHandler *****************
  4472 ;; Defined at:
  4473 ;;		line 240 in file "mcc_generated_files/i2c1_slave.c"
  4474 ;; Parameters:    Size  Location     Type
  4475 ;;  handler         2   15[BANK0 ] PTR FTN()void 
  4476 ;;		 -> I2C1_SlaveDefRdInterruptHandler(1), 
  4477 ;; Auto vars:     Size  Location     Type
  4478 ;;		None
  4479 ;; Return value:  Size  Location     Type
  4480 ;;                  1    wreg      void 
  4481 ;; Registers used:
  4482 ;;		wreg
  4483 ;; Tracked objects:
  4484 ;;		On entry : 0/0
  4485 ;;		On exit  : 0/0
  4486 ;;		Unchanged: 0/0
  4487 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4488 ;;      Params:         0       2       0       0
  4489 ;;      Locals:         0       0       0       0
  4490 ;;      Temps:          0       0       0       0
  4491 ;;      Totals:         0       2       0       0
  4492 ;;Total ram usage:        2 bytes
  4493 ;; Hardware stack levels used: 1
  4494 ;; Hardware stack levels required when called: 7
  4495 ;; This function calls:
  4496 ;;		Nothing
  4497 ;; This function is called by:
  4498 ;;		_I2C1_Open
  4499 ;; This function uses a non-reentrant model
  4500 ;;
  4501                           
  4502     0629                     _I2C1_SlaveSetReadIntHandler:	
  4503                           ;psect for function _I2C1_SlaveSetReadIntHandler
  4504                           
  4505     0629                     l2606:	
  4506                           ;incstack = 0
  4507                           ; Regs used in _I2C1_SlaveSetReadIntHandler: [wreg]
  4508                           
  4509                           
  4510                           ;mcc_generated_files/i2c1_slave.c: 241:     I2C1_SlaveRdInterruptHandler = handler;
  4511     0629  0140               	movlb	0	; select bank0
  4512     062A  0850               	movf	I2C1_SlaveSetReadIntHandler@handler+1,w
  4513     062B  00A9               	movwf	_I2C1_SlaveRdInterruptHandler+1
  4514     062C  084F               	movf	I2C1_SlaveSetReadIntHandler@handler,w
  4515     062D  00A8               	movwf	_I2C1_SlaveRdInterruptHandler
  4516     062E                     l331:
  4517     062E  0008               	return
  4518     062F                     __end_of_I2C1_SlaveSetReadIntHandler:
  4519                           
  4520                           	psect	text23
  4521     062F                     __ptext23:	
  4522 ;; *************** function _I2C1_SlaveSetIsrHandler *****************
  4523 ;; Defined at:
  4524 ;;		line 234 in file "mcc_generated_files/i2c1_slave.c"
  4525 ;; Parameters:    Size  Location     Type
  4526 ;;  handler         2   15[BANK0 ] PTR FTN()void 
  4527 ;;		 -> I2C1_Isr(1), 
  4528 ;; Auto vars:     Size  Location     Type
  4529 ;;		None
  4530 ;; Return value:  Size  Location     Type
  4531 ;;                  1    wreg      void 
  4532 ;; Registers used:
  4533 ;;		wreg
  4534 ;; Tracked objects:
  4535 ;;		On entry : 0/0
  4536 ;;		On exit  : 0/0
  4537 ;;		Unchanged: 0/0
  4538 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4539 ;;      Params:         0       2       0       0
  4540 ;;      Locals:         0       0       0       0
  4541 ;;      Temps:          0       0       0       0
  4542 ;;      Totals:         0       2       0       0
  4543 ;;Total ram usage:        2 bytes
  4544 ;; Hardware stack levels used: 1
  4545 ;; Hardware stack levels required when called: 7
  4546 ;; This function calls:
  4547 ;;		Nothing
  4548 ;; This function is called by:
  4549 ;;		_I2C1_Open
  4550 ;; This function uses a non-reentrant model
  4551 ;;
  4552                           
  4553     062F                     _I2C1_SlaveSetIsrHandler:	
  4554                           ;psect for function _I2C1_SlaveSetIsrHandler
  4555                           
  4556     062F                     l2600:	
  4557                           ;incstack = 0
  4558                           ; Regs used in _I2C1_SlaveSetIsrHandler: [wreg]
  4559                           
  4560                           
  4561                           ;mcc_generated_files/i2c1_slave.c: 234: void I2C1_SlaveSetIsrHandler(i2c1InterruptHandle
      +                          r handler);mcc_generated_files/i2c1_slave.c: 235: {;mcc_generated_files/i2c1_slave.c: 23
      +                          6:     MSSP1_InterruptHandler = handler;
  4562     062F  0140               	movlb	0	; select bank0
  4563     0630  0850               	movf	I2C1_SlaveSetIsrHandler@handler+1,w
  4564     0631  00AB               	movwf	_MSSP1_InterruptHandler+1
  4565     0632  084F               	movf	I2C1_SlaveSetIsrHandler@handler,w
  4566     0633  00AA               	movwf	_MSSP1_InterruptHandler
  4567     0634                     l328:
  4568     0634  0008               	return
  4569     0635                     __end_of_I2C1_SlaveSetIsrHandler:
  4570                           
  4571                           	psect	text24
  4572     0635                     __ptext24:	
  4573 ;; *************** function _I2C1_SlaveSetBusColIntHandler *****************
  4574 ;; Defined at:
  4575 ;;		line 328 in file "mcc_generated_files/i2c1_slave.c"
  4576 ;; Parameters:    Size  Location     Type
  4577 ;;  handler         2   15[BANK0 ] PTR FTN()void 
  4578 ;;		 -> I2C1_SlaveDefBusColInterruptHandler(1), 
  4579 ;; Auto vars:     Size  Location     Type
  4580 ;;		None
  4581 ;; Return value:  Size  Location     Type
  4582 ;;                  1    wreg      void 
  4583 ;; Registers used:
  4584 ;;		wreg
  4585 ;; Tracked objects:
  4586 ;;		On entry : 0/0
  4587 ;;		On exit  : 0/0
  4588 ;;		Unchanged: 0/0
  4589 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4590 ;;      Params:         0       2       0       0
  4591 ;;      Locals:         0       0       0       0
  4592 ;;      Temps:          0       0       0       0
  4593 ;;      Totals:         0       2       0       0
  4594 ;;Total ram usage:        2 bytes
  4595 ;; Hardware stack levels used: 1
  4596 ;; Hardware stack levels required when called: 7
  4597 ;; This function calls:
  4598 ;;		Nothing
  4599 ;; This function is called by:
  4600 ;;		_I2C1_Open
  4601 ;; This function uses a non-reentrant model
  4602 ;;
  4603                           
  4604     0635                     _I2C1_SlaveSetBusColIntHandler:	
  4605                           ;psect for function _I2C1_SlaveSetBusColIntHandler
  4606                           
  4607     0635                     l2602:	
  4608                           ;incstack = 0
  4609                           ; Regs used in _I2C1_SlaveSetBusColIntHandler: [wreg]
  4610                           
  4611                           
  4612                           ;mcc_generated_files/i2c1_slave.c: 329:     I2C1_SlaveBusColInterruptHandler = handler;
  4613     0635  0140               	movlb	0	; select bank0
  4614     0636  0850               	movf	I2C1_SlaveSetBusColIntHandler@handler+1,w
  4615     0637  00A3               	movwf	_I2C1_SlaveBusColInterruptHandler+1
  4616     0638  084F               	movf	I2C1_SlaveSetBusColIntHandler@handler,w
  4617     0639  00A2               	movwf	_I2C1_SlaveBusColInterruptHandler
  4618     063A                     l374:
  4619     063A  0008               	return
  4620     063B                     __end_of_I2C1_SlaveSetBusColIntHandler:
  4621                           
  4622                           	psect	text25
  4623     063B                     __ptext25:	
  4624 ;; *************** function _I2C1_SlaveSetAddrIntHandler *****************
  4625 ;; Defined at:
  4626 ;;		line 294 in file "mcc_generated_files/i2c1_slave.c"
  4627 ;; Parameters:    Size  Location     Type
  4628 ;;  handler         2   15[BANK0 ] PTR FTN()void 
  4629 ;;		 -> I2C1_SlaveDefAddrInterruptHandler(1), 
  4630 ;; Auto vars:     Size  Location     Type
  4631 ;;		None
  4632 ;; Return value:  Size  Location     Type
  4633 ;;                  1    wreg      void 
  4634 ;; Registers used:
  4635 ;;		wreg
  4636 ;; Tracked objects:
  4637 ;;		On entry : 0/0
  4638 ;;		On exit  : 0/0
  4639 ;;		Unchanged: 0/0
  4640 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4641 ;;      Params:         0       2       0       0
  4642 ;;      Locals:         0       0       0       0
  4643 ;;      Temps:          0       0       0       0
  4644 ;;      Totals:         0       2       0       0
  4645 ;;Total ram usage:        2 bytes
  4646 ;; Hardware stack levels used: 1
  4647 ;; Hardware stack levels required when called: 7
  4648 ;; This function calls:
  4649 ;;		Nothing
  4650 ;; This function is called by:
  4651 ;;		_I2C1_Open
  4652 ;; This function uses a non-reentrant model
  4653 ;;
  4654                           
  4655     063B                     _I2C1_SlaveSetAddrIntHandler:	
  4656                           ;psect for function _I2C1_SlaveSetAddrIntHandler
  4657                           
  4658     063B                     l2608:	
  4659                           ;incstack = 0
  4660                           ; Regs used in _I2C1_SlaveSetAddrIntHandler: [wreg]
  4661                           
  4662                           
  4663                           ;mcc_generated_files/i2c1_slave.c: 295:     I2C1_SlaveAddrInterruptHandler = handler;
  4664     063B  0140               	movlb	0	; select bank0
  4665     063C  0850               	movf	I2C1_SlaveSetAddrIntHandler@handler+1,w
  4666     063D  00A5               	movwf	_I2C1_SlaveAddrInterruptHandler+1
  4667     063E  084F               	movf	I2C1_SlaveSetAddrIntHandler@handler,w
  4668     063F  00A4               	movwf	_I2C1_SlaveAddrInterruptHandler
  4669     0640                     l354:
  4670     0640  0008               	return
  4671     0641                     __end_of_I2C1_SlaveSetAddrIntHandler:
  4672                           
  4673                           	psect	text26
  4674     0597                     __ptext26:	
  4675 ;; *************** function _I2C1_SlaveOpen *****************
  4676 ;; Defined at:
  4677 ;;		line 343 in file "mcc_generated_files/i2c1_slave.c"
  4678 ;; Parameters:    Size  Location     Type
  4679 ;;		None
  4680 ;; Auto vars:     Size  Location     Type
  4681 ;;		None
  4682 ;; Return value:  Size  Location     Type
  4683 ;;                  1    wreg      _Bool 
  4684 ;; Registers used:
  4685 ;;		wreg, status,2, status,0
  4686 ;; Tracked objects:
  4687 ;;		On entry : 0/0
  4688 ;;		On exit  : 0/0
  4689 ;;		Unchanged: 0/0
  4690 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4691 ;;      Params:         0       0       0       0
  4692 ;;      Locals:         0       0       0       0
  4693 ;;      Temps:          0       1       0       0
  4694 ;;      Totals:         0       1       0       0
  4695 ;;Total ram usage:        1 bytes
  4696 ;; Hardware stack levels used: 1
  4697 ;; Hardware stack levels required when called: 7
  4698 ;; This function calls:
  4699 ;;		Nothing
  4700 ;; This function is called by:
  4701 ;;		_I2C1_Open
  4702 ;; This function uses a non-reentrant model
  4703 ;;
  4704                           
  4705     0597                     _I2C1_SlaveOpen:	
  4706                           ;psect for function _I2C1_SlaveOpen
  4707                           
  4708     0597                     l2584:	
  4709                           ;incstack = 0
  4710                           ; Regs used in _I2C1_SlaveOpen: [wreg+status,2+status,0]
  4711                           
  4712                           
  4713                           ;mcc_generated_files/i2c1_slave.c: 345:     if(!SSP1CON1bits.SSPEN)
  4714     0597  0143               	movlb	3	; select bank3
  4715     0598  1A90               	btfsc	16,5	;volatile
  4716     0599  2D9B               	goto	u981
  4717     059A  2D9C               	goto	u980
  4718     059B                     u981:
  4719     059B  2DA6               	goto	l385
  4720     059C                     u980:
  4721     059C                     l2586:
  4722                           
  4723                           ;mcc_generated_files/i2c1_slave.c: 346:     {;mcc_generated_files/i2c1_slave.c: 347:    
      +                               SSP1STAT = 0x40;
  4724     059C  3040               	movlw	64
  4725     059D  008F               	movwf	15	;volatile
  4726     059E                     l2588:
  4727                           
  4728                           ;mcc_generated_files/i2c1_slave.c: 348:         SSP1CON1 |= 0x06;
  4729     059E  3006               	movlw	6
  4730     059F  0140               	movlb	0	; select bank0
  4731     05A0  00CF               	movwf	??_I2C1_SlaveOpen
  4732     05A1  084F               	movf	??_I2C1_SlaveOpen,w
  4733     05A2  0143               	movlb	3	; select bank3
  4734     05A3  0490               	iorwf	16,f	;volatile
  4735     05A4                     l2590:
  4736                           
  4737                           ;mcc_generated_files/i2c1_slave.c: 349:         SSP1CON2 = 0x00;
  4738     05A4  0191               	clrf	17	;volatile
  4739     05A5                     l2592:
  4740                           
  4741                           ;mcc_generated_files/i2c1_slave.c: 350:         SSP1CON1bits.SSPEN = 1;
  4742     05A5  1690               	bsf	16,5	;volatile
  4743     05A6                     l385:
  4744     05A6  0008               	return
  4745     05A7                     __end_of_I2C1_SlaveOpen:
  4746                           
  4747                           	psect	text27
  4748     065C                     __ptext27:	
  4749 ;; *************** function _I2C1_SlaveEnableIrq *****************
  4750 ;; Defined at:
  4751 ;;		line 374 in file "mcc_generated_files/i2c1_slave.c"
  4752 ;; Parameters:    Size  Location     Type
  4753 ;;		None
  4754 ;; Auto vars:     Size  Location     Type
  4755 ;;		None
  4756 ;; Return value:  Size  Location     Type
  4757 ;;                  1    wreg      void 
  4758 ;; Registers used:
  4759 ;;		None
  4760 ;; Tracked objects:
  4761 ;;		On entry : 0/0
  4762 ;;		On exit  : 0/0
  4763 ;;		Unchanged: 0/0
  4764 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4765 ;;      Params:         0       0       0       0
  4766 ;;      Locals:         0       0       0       0
  4767 ;;      Temps:          0       0       0       0
  4768 ;;      Totals:         0       0       0       0
  4769 ;;Total ram usage:        0 bytes
  4770 ;; Hardware stack levels used: 1
  4771 ;; Hardware stack levels required when called: 7
  4772 ;; This function calls:
  4773 ;;		Nothing
  4774 ;; This function is called by:
  4775 ;;		_I2C1_Open
  4776 ;; This function uses a non-reentrant model
  4777 ;;
  4778                           
  4779     065C                     _I2C1_SlaveEnableIrq:	
  4780                           ;psect for function _I2C1_SlaveEnableIrq
  4781                           
  4782     065C                     l2612:	
  4783                           ;incstack = 0
  4784                           ; Regs used in _I2C1_SlaveEnableIrq: []
  4785                           
  4786                           
  4787                           ;mcc_generated_files/i2c1_slave.c: 376:     PIE1bits.SSP1IE = 1;
  4788     065C  014E               	movlb	14	; select bank14
  4789     065D  1497               	bsf	23,1	;volatile
  4790     065E                     l397:
  4791     065E  0008               	return
  4792     065F                     __end_of_I2C1_SlaveEnableIrq:
  4793                           
  4794                           	psect	intentry
  4795     0004                     __pintentry:	
  4796 ;; *************** function _INTERRUPT_InterruptManager *****************
  4797 ;; Defined at:
  4798 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  4799 ;; Parameters:    Size  Location     Type
  4800 ;;		None
  4801 ;; Auto vars:     Size  Location     Type
  4802 ;;		None
  4803 ;; Return value:  Size  Location     Type
  4804 ;;                  1    wreg      void 
  4805 ;; Registers used:
  4806 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4807 ;; Tracked objects:
  4808 ;;		On entry : 0/0
  4809 ;;		On exit  : 0/0
  4810 ;;		Unchanged: 0/0
  4811 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4812 ;;      Params:         0       0       0       0
  4813 ;;      Locals:         0       0       0       0
  4814 ;;      Temps:          0       0       0       0
  4815 ;;      Totals:         0       0       0       0
  4816 ;;Total ram usage:        0 bytes
  4817 ;; Hardware stack levels used: 1
  4818 ;; Hardware stack levels required when called: 6
  4819 ;; This function calls:
  4820 ;;		NULL
  4821 ;;		_I2C1_Isr
  4822 ;;		_TMR0_ISR
  4823 ;; This function is called by:
  4824 ;;		Interrupt level 1
  4825 ;; This function uses a non-reentrant model
  4826 ;;
  4827                           
  4828     0004                     _INTERRUPT_InterruptManager:
  4829                           
  4830                           ;incstack = 0
  4831     0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
  4832                           
  4833                           ; Regs used in _INTERRUPT_InterruptManager: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4834     0005  3180               	pagesel	$
  4835     0006                     i1l2360:
  4836                           
  4837                           ;mcc_generated_files/interrupt_manager.c: 55:     if(PIE0bits.TMR0IE == 1 && PIR0bits.TM
      +                          R0IF == 1)
  4838     0006  014E               	movlb	14	; select bank14
  4839     0007  1E96               	btfss	22,5	;volatile
  4840     0008  280A               	goto	u84_21
  4841     0009  280B               	goto	u84_20
  4842     000A                     u84_21:
  4843     000A  2813               	goto	i1l153
  4844     000B                     u84_20:
  4845     000B                     i1l2362:
  4846     000B  1E8C               	btfss	12,5	;volatile
  4847     000C  280E               	goto	u85_21
  4848     000D  280F               	goto	u85_20
  4849     000E                     u85_21:
  4850     000E  2813               	goto	i1l153
  4851     000F                     u85_20:
  4852     000F                     i1l2364:
  4853                           
  4854                           ;mcc_generated_files/interrupt_manager.c: 56:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 57:         TMR0_ISR();
  4855     000F  3185  25A7  3180   	fcall	_TMR0_ISR
  4856                           
  4857                           ;mcc_generated_files/interrupt_manager.c: 58:     }
  4858     0012  282F               	goto	i1l161
  4859     0013                     i1l153:	
  4860                           ;mcc_generated_files/interrupt_manager.c: 59:     else if(INTCONbits.PEIE == 1)
  4861                           
  4862     0013  1F0B               	btfss	11,6	;volatile
  4863     0014  2816               	goto	u86_21
  4864     0015  2817               	goto	u86_20
  4865     0016                     u86_21:
  4866     0016  282F               	goto	i1l161
  4867     0017                     u86_20:
  4868     0017                     i1l2366:
  4869                           
  4870                           ;mcc_generated_files/interrupt_manager.c: 60:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 61:         if(PIE1bits.BCL1IE == 1 && PIR1bits.BCL1IF == 1)
  4871     0017  1D17               	btfss	23,2	;volatile
  4872     0018  281A               	goto	u87_21
  4873     0019  281B               	goto	u87_20
  4874     001A                     u87_21:
  4875     001A  2826               	goto	i1l156
  4876     001B                     u87_20:
  4877     001B                     i1l2368:
  4878     001B  1D0D               	btfss	13,2	;volatile
  4879     001C  281E               	goto	u88_21
  4880     001D  281F               	goto	u88_20
  4881     001E                     u88_21:
  4882     001E  2826               	goto	i1l156
  4883     001F                     u88_20:
  4884     001F                     i1l2370:
  4885                           
  4886                           ;mcc_generated_files/interrupt_manager.c: 62:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 63:             MSSP1_InterruptHandler();
  4887     001F  0140               	movlb	0	; select bank0
  4888     0020  082B               	movf	_MSSP1_InterruptHandler+1,w
  4889     0021  008A               	movwf	10
  4890     0022  082A               	movf	_MSSP1_InterruptHandler,w
  4891     0023  000A               	callw
  4892     0024  3180               	pagesel	$
  4893                           
  4894                           ;mcc_generated_files/interrupt_manager.c: 64:         }
  4895     0025  282F               	goto	i1l161
  4896     0026                     i1l156:	
  4897                           ;mcc_generated_files/interrupt_manager.c: 65:         else if(PIE1bits.SSP1IE == 1 && PI
      +                          R1bits.SSP1IF == 1)
  4898                           
  4899     0026  1C97               	btfss	23,1	;volatile
  4900     0027  2829               	goto	u89_21
  4901     0028  282A               	goto	u89_20
  4902     0029                     u89_21:
  4903     0029  282F               	goto	i1l160
  4904     002A                     u89_20:
  4905     002A                     i1l2372:
  4906     002A  1C8D               	btfss	13,1	;volatile
  4907     002B  282D               	goto	u90_21
  4908     002C  282E               	goto	u90_20
  4909     002D                     u90_21:
  4910     002D  282F               	goto	i1l160
  4911     002E                     u90_20:
  4912     002E  281F               	goto	i1l2370
  4913     002F                     i1l160:	
  4914                           ;mcc_generated_files/interrupt_manager.c: 76:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 78:     }
  4915                           
  4916     002F                     i1l161:
  4917     002F  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  4918     0030  0009               	retfie
  4919     0031                     __end_of_INTERRUPT_InterruptManager:
  4920                           
  4921                           	psect	text29
  4922     05A7                     __ptext29:	
  4923 ;; *************** function _TMR0_ISR *****************
  4924 ;; Defined at:
  4925 ;;		line 131 in file "mcc_generated_files/tmr0.c"
  4926 ;; Parameters:    Size  Location     Type
  4927 ;;		None
  4928 ;; Auto vars:     Size  Location     Type
  4929 ;;		None
  4930 ;; Return value:  Size  Location     Type
  4931 ;;                  1    wreg      void 
  4932 ;; Registers used:
  4933 ;;		wreg, status,2, status,0, pclath, cstack
  4934 ;; Tracked objects:
  4935 ;;		On entry : 0/0
  4936 ;;		On exit  : 0/0
  4937 ;;		Unchanged: 0/0
  4938 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4939 ;;      Params:         0       0       0       0
  4940 ;;      Locals:         0       0       0       0
  4941 ;;      Temps:          0       0       0       0
  4942 ;;      Totals:         0       0       0       0
  4943 ;;Total ram usage:        0 bytes
  4944 ;; Hardware stack levels used: 1
  4945 ;; Hardware stack levels required when called: 1
  4946 ;; This function calls:
  4947 ;;		NULL
  4948 ;;		_TMR0_DefaultInterruptHandler
  4949 ;; This function is called by:
  4950 ;;		_INTERRUPT_InterruptManager
  4951 ;; This function uses a non-reentrant model
  4952 ;;
  4953                           
  4954     05A7                     _TMR0_ISR:	
  4955                           ;psect for function _TMR0_ISR
  4956                           
  4957     05A7                     i1l2302:	
  4958                           ;incstack = 0
  4959                           ; Regs used in _TMR0_ISR: [wreg+status,2+status,0+pclath+cstack]
  4960                           
  4961                           
  4962                           ;mcc_generated_files/tmr0.c: 134:     PIR0bits.TMR0IF = 0;
  4963     05A7  014E               	movlb	14	; select bank14
  4964     05A8  128C               	bcf	12,5	;volatile
  4965     05A9                     i1l2304:
  4966                           
  4967                           ;mcc_generated_files/tmr0.c: 136:     if(TMR0_InterruptHandler)
  4968     05A9  0140               	movlb	0	; select bank0
  4969     05AA  085F               	movf	_TMR0_InterruptHandler,w
  4970     05AB  0460               	iorwf	_TMR0_InterruptHandler+1,w
  4971     05AC  1903               	btfsc	3,2
  4972     05AD  2DAF               	goto	u77_21
  4973     05AE  2DB0               	goto	u77_20
  4974     05AF                     u77_21:
  4975     05AF  2DB5               	goto	i1l492
  4976     05B0                     u77_20:
  4977     05B0                     i1l2306:
  4978                           
  4979                           ;mcc_generated_files/tmr0.c: 137:     {;mcc_generated_files/tmr0.c: 138:         TMR0_In
      +                          terruptHandler();
  4980     05B0  0860               	movf	_TMR0_InterruptHandler+1,w
  4981     05B1  008A               	movwf	10
  4982     05B2  085F               	movf	_TMR0_InterruptHandler,w
  4983     05B3  000A               	callw
  4984     05B4  3185               	pagesel	$
  4985     05B5                     i1l492:
  4986     05B5  0008               	return
  4987     05B6                     __end_of_TMR0_ISR:
  4988                           
  4989                           	psect	text30
  4990     042C                     __ptext30:	
  4991 ;; *************** function _TMR0_DefaultInterruptHandler *****************
  4992 ;; Defined at:
  4993 ;;		line 152 in file "mcc_generated_files/tmr0.c"
  4994 ;; Parameters:    Size  Location     Type
  4995 ;;		None
  4996 ;; Auto vars:     Size  Location     Type
  4997 ;;		None
  4998 ;; Return value:  Size  Location     Type
  4999 ;;                  1    wreg      void 
  5000 ;; Registers used:
  5001 ;;		wreg, status,2, status,0
  5002 ;; Tracked objects:
  5003 ;;		On entry : 0/0
  5004 ;;		On exit  : 0/0
  5005 ;;		Unchanged: 0/0
  5006 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5007 ;;      Params:         0       0       0       0
  5008 ;;      Locals:         0       0       0       0
  5009 ;;      Temps:          1       0       0       0
  5010 ;;      Totals:         1       0       0       0
  5011 ;;Total ram usage:        1 bytes
  5012 ;; Hardware stack levels used: 1
  5013 ;; This function calls:
  5014 ;;		Nothing
  5015 ;; This function is called by:
  5016 ;;		_TMR0_Initialize
  5017 ;;		_TMR0_ISR
  5018 ;; This function uses a non-reentrant model
  5019 ;;
  5020                           
  5021     042C                     _TMR0_DefaultInterruptHandler:	
  5022                           ;psect for function _TMR0_DefaultInterruptHandler
  5023                           
  5024     042C                     i1l2232:	
  5025                           ;incstack = 0
  5026                           ; Regs used in _TMR0_DefaultInterruptHandler: [wreg+status,2+status,0]
  5027                           
  5028                           
  5029                           ;mcc_generated_files/tmr0.c: 156:     LED_timer++;
  5030     042C  3001               	movlw	1
  5031     042D  00F0               	movwf	??_TMR0_DefaultInterruptHandler
  5032     042E  0870               	movf	??_TMR0_DefaultInterruptHandler,w
  5033     042F  0140               	movlb	0	; select bank0
  5034     0430  07B8               	addwf	_LED_timer,f
  5035                           
  5036                           ;mcc_generated_files/tmr0.c: 159:     if(error_flag == 1)
  5037     0431  033A               	decf	_error_flag,w
  5038     0432  1D03               	btfss	3,2
  5039     0433  2C35               	goto	u64_21
  5040     0434  2C36               	goto	u64_20
  5041     0435                     u64_21:
  5042     0435  2C46               	goto	i1l2240
  5043     0436                     u64_20:
  5044     0436                     i1l2234:
  5045                           
  5046                           ;mcc_generated_files/tmr0.c: 160:     {;mcc_generated_files/tmr0.c: 161:         if(LED_
      +                          timer == 5)
  5047     0436  3005               	movlw	5
  5048     0437  0638               	xorwf	_LED_timer,w
  5049     0438  1D03               	btfss	3,2
  5050     0439  2C3B               	goto	u65_21
  5051     043A  2C3C               	goto	u65_20
  5052     043B                     u65_21:
  5053     043B  2C3D               	goto	i1l2236
  5054     043C                     u65_20:
  5055     043C                     i1l500:	
  5056                           ;mcc_generated_files/tmr0.c: 162:         {;mcc_generated_files/tmr0.c: 163:            
      +                           do { LATAbits.LATA2 = 1; } while(0);
  5057                           
  5058     043C  1518               	bsf	24,2	;volatile
  5059     043D                     i1l2236:
  5060                           
  5061                           ;mcc_generated_files/tmr0.c: 165:         if(LED_timer == 10)
  5062     043D  300A               	movlw	10
  5063     043E  0638               	xorwf	_LED_timer,w
  5064     043F  1D03               	btfss	3,2
  5065     0440  2C42               	goto	u66_21
  5066     0441  2C43               	goto	u66_20
  5067     0442                     u66_21:
  5068     0442  2C55               	goto	i1l512
  5069     0443                     u66_20:
  5070     0443                     i1l503:	
  5071                           ;mcc_generated_files/tmr0.c: 166:         {;mcc_generated_files/tmr0.c: 167:            
      +                           do { LATAbits.LATA2 = 0; } while(0);
  5072                           
  5073     0443  1118               	bcf	24,2	;volatile
  5074     0444                     i1l2238:
  5075                           
  5076                           ;mcc_generated_files/tmr0.c: 168:             LED_timer = 0;
  5077     0444  01B8               	clrf	_LED_timer
  5078     0445  2C55               	goto	i1l512
  5079     0446                     i1l2240:
  5080                           
  5081                           ;mcc_generated_files/tmr0.c: 171:         if(LED_timer == 50)
  5082     0446  3032               	movlw	50
  5083     0447  0638               	xorwf	_LED_timer,w
  5084     0448  1D03               	btfss	3,2
  5085     0449  2C4B               	goto	u67_21
  5086     044A  2C4C               	goto	u67_20
  5087     044B                     u67_21:
  5088     044B  2C4D               	goto	i1l2242
  5089     044C                     u67_20:
  5090     044C                     i1l507:	
  5091                           ;mcc_generated_files/tmr0.c: 172:         {;mcc_generated_files/tmr0.c: 173:            
      +                           do { LATAbits.LATA2 = 1; } while(0);
  5092                           
  5093     044C  1518               	bsf	24,2	;volatile
  5094     044D                     i1l2242:
  5095                           
  5096                           ;mcc_generated_files/tmr0.c: 175:         if(LED_timer == 100)
  5097     044D  3064               	movlw	100
  5098     044E  0638               	xorwf	_LED_timer,w
  5099     044F  1D03               	btfss	3,2
  5100     0450  2C52               	goto	u68_21
  5101     0451  2C53               	goto	u68_20
  5102     0452                     u68_21:
  5103     0452  2C55               	goto	i1l512
  5104     0453                     u68_20:
  5105     0453                     i1l510:	
  5106                           ;mcc_generated_files/tmr0.c: 176:         {;mcc_generated_files/tmr0.c: 177:            
      +                           do { LATAbits.LATA2 = 0; } while(0);
  5107                           
  5108     0453  1118               	bcf	24,2	;volatile
  5109     0454  2C44               	goto	i1l2238
  5110     0455                     i1l512:
  5111     0455  0008               	return
  5112     0456                     __end_of_TMR0_DefaultInterruptHandler:
  5113                           
  5114                           	psect	text31
  5115     01F5                     __ptext31:	
  5116 ;; *************** function _I2C1_Isr *****************
  5117 ;; Defined at:
  5118 ;;		line 169 in file "mcc_generated_files/i2c1_slave.c"
  5119 ;; Parameters:    Size  Location     Type
  5120 ;;		None
  5121 ;; Auto vars:     Size  Location     Type
  5122 ;;		None
  5123 ;; Return value:  Size  Location     Type
  5124 ;;                  1    wreg      void 
  5125 ;; Registers used:
  5126 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5127 ;; Tracked objects:
  5128 ;;		On entry : 0/0
  5129 ;;		On exit  : 0/0
  5130 ;;		Unchanged: 0/0
  5131 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5132 ;;      Params:         0       0       0       0
  5133 ;;      Locals:         0       0       0       0
  5134 ;;      Temps:          0       2       0       0
  5135 ;;      Totals:         0       2       0       0
  5136 ;;Total ram usage:        2 bytes
  5137 ;; Hardware stack levels used: 1
  5138 ;; Hardware stack levels required when called: 5
  5139 ;; This function calls:
  5140 ;;		_I2C1_SlaveAddrCallBack
  5141 ;;		_I2C1_SlaveClearIrq
  5142 ;;		_I2C1_SlaveIsAddr
  5143 ;;		_I2C1_SlaveIsRead
  5144 ;;		_I2C1_SlaveIsRxBufFull
  5145 ;;		_I2C1_SlaveIsTxBufEmpty
  5146 ;;		_I2C1_SlaveRdCallBack
  5147 ;;		_I2C1_SlaveReleaseClock
  5148 ;;		_I2C1_SlaveWrCallBack
  5149 ;; This function is called by:
  5150 ;;		_I2C1_Open
  5151 ;;		_INTERRUPT_InterruptManager
  5152 ;; This function uses a non-reentrant model
  5153 ;;
  5154                           
  5155     01F5                     _I2C1_Isr:	
  5156                           ;psect for function _I2C1_Isr
  5157                           
  5158     01F5                     i1l2312:	
  5159                           ;incstack = 0
  5160                           ; Regs used in _I2C1_Isr: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5161                           
  5162                           
  5163                           ;mcc_generated_files/i2c1_slave.c: 171:     I2C1_SlaveClearIrq();
  5164     01F5  3186  2662  3181   	fcall	_I2C1_SlaveClearIrq
  5165     01F8                     i1l2314:
  5166                           
  5167                           ;mcc_generated_files/i2c1_slave.c: 174:     if(I2C1_SlaveIsAddr())
  5168     01F8  3185  25F1  3181   	fcall	_I2C1_SlaveIsAddr
  5169     01FB  3A00               	xorlw	0
  5170     01FC  1903               	skipnz
  5171     01FD  29FF               	goto	u78_21
  5172     01FE  2A00               	goto	u78_20
  5173     01FF                     u78_21:
  5174     01FF  2A10               	goto	i1l2322
  5175     0200                     u78_20:
  5176     0200                     i1l2316:
  5177                           
  5178                           ;mcc_generated_files/i2c1_slave.c: 175:     {;mcc_generated_files/i2c1_slave.c: 182:    
      +                               if(I2C1_SlaveIsRead())
  5179     0200  3186  264C  3181   	fcall	_I2C1_SlaveIsRead
  5180     0203  3A00               	xorlw	0
  5181     0204  1903               	skipnz
  5182     0205  2A07               	goto	u79_21
  5183     0206  2A08               	goto	u79_20
  5184     0207                     u79_21:
  5185     0207  2A0C               	goto	i1l2320
  5186     0208                     u79_20:
  5187     0208                     i1l2318:
  5188                           
  5189                           ;mcc_generated_files/i2c1_slave.c: 183:         {;mcc_generated_files/i2c1_slave.c: 184:
      +                                       i2c1SlaveState = I2C1_ADDR_TX;
  5190     0208  3001               	movlw	1
  5191     0209  0140               	movlb	0	; select bank0
  5192     020A  00AE               	movwf	_i2c1SlaveState	;volatile
  5193                           
  5194                           ;mcc_generated_files/i2c1_slave.c: 185:         }
  5195     020B  2A48               	goto	i1l2346
  5196     020C                     i1l2320:
  5197                           
  5198                           ;mcc_generated_files/i2c1_slave.c: 187:         {;mcc_generated_files/i2c1_slave.c: 188:
      +                                       i2c1SlaveState = I2C1_ADDR_RX;
  5199     020C  3002               	movlw	2
  5200     020D  0140               	movlb	0	; select bank0
  5201     020E  00AE               	movwf	_i2c1SlaveState	;volatile
  5202     020F  2A48               	goto	i1l2346
  5203     0210                     i1l2322:
  5204                           
  5205                           ;mcc_generated_files/i2c1_slave.c: 192:     {;mcc_generated_files/i2c1_slave.c: 193:    
      +                               if(I2C1_SlaveIsRead())
  5206     0210  3186  264C  3181   	fcall	_I2C1_SlaveIsRead
  5207     0213  3A00               	xorlw	0
  5208     0214  1903               	skipnz
  5209     0215  2A17               	goto	u80_21
  5210     0216  2A18               	goto	u80_20
  5211     0217                     u80_21:
  5212     0217  2A1C               	goto	i1l2326
  5213     0218                     u80_20:
  5214     0218                     i1l2324:
  5215                           
  5216                           ;mcc_generated_files/i2c1_slave.c: 194:         {;mcc_generated_files/i2c1_slave.c: 195:
      +                                       i2c1SlaveState = I2C1_DATA_TX;
  5217     0218  3003               	movlw	3
  5218     0219  0140               	movlb	0	; select bank0
  5219     021A  00AE               	movwf	_i2c1SlaveState	;volatile
  5220                           
  5221                           ;mcc_generated_files/i2c1_slave.c: 196:         }
  5222     021B  2A48               	goto	i1l2346
  5223     021C                     i1l2326:
  5224                           
  5225                           ;mcc_generated_files/i2c1_slave.c: 198:         {;mcc_generated_files/i2c1_slave.c: 199:
      +                                       i2c1SlaveState = I2C1_DATA_RX;
  5226     021C  3004               	movlw	4
  5227     021D  0140               	movlb	0	; select bank0
  5228     021E  00AE               	movwf	_i2c1SlaveState	;volatile
  5229     021F  2A48               	goto	i1l2346
  5230     0220                     i1l2328:
  5231                           
  5232                           ;mcc_generated_files/i2c1_slave.c: 206:             I2C1_SlaveAddrCallBack();
  5233     0220  3185  25D1  3181   	fcall	_I2C1_SlaveAddrCallBack
  5234     0223                     i1l2330:
  5235                           
  5236                           ;mcc_generated_files/i2c1_slave.c: 207:             if(I2C1_SlaveIsTxBufEmpty())
  5237     0223  3185  25EA  3181   	fcall	_I2C1_SlaveIsTxBufEmpty
  5238     0226  3A00               	xorlw	0
  5239     0227  1903               	skipnz
  5240     0228  2A2A               	goto	u81_21
  5241     0229  2A2B               	goto	u81_20
  5242     022A                     u81_21:
  5243     022A  2A5E               	goto	i1l2348
  5244     022B                     u81_20:
  5245     022B                     i1l2332:
  5246                           
  5247                           ;mcc_generated_files/i2c1_slave.c: 208:             {;mcc_generated_files/i2c1_slave.c: 
      +                          209:                 I2C1_SlaveWrCallBack();
  5248     022B  3185  25C4  3181   	fcall	_I2C1_SlaveWrCallBack
  5249     022E  2A5E               	goto	i1l2348
  5250     022F                     i1l2334:
  5251                           
  5252                           ;mcc_generated_files/i2c1_slave.c: 213:             I2C1_SlaveAddrCallBack();
  5253     022F  3185  25D1  3181   	fcall	_I2C1_SlaveAddrCallBack
  5254                           
  5255                           ;mcc_generated_files/i2c1_slave.c: 214:             break;
  5256     0232  2A5E               	goto	i1l2348
  5257     0233                     i1l2336:
  5258                           
  5259                           ;mcc_generated_files/i2c1_slave.c: 216:             if(I2C1_SlaveIsTxBufEmpty())
  5260     0233  3185  25EA  3181   	fcall	_I2C1_SlaveIsTxBufEmpty
  5261     0236  3A00               	xorlw	0
  5262     0237  1903               	skipnz
  5263     0238  2A3A               	goto	u82_21
  5264     0239  2A3B               	goto	u82_20
  5265     023A                     u82_21:
  5266     023A  2A5E               	goto	i1l2348
  5267     023B                     u82_20:
  5268     023B  2A2B               	goto	i1l2332
  5269     023C                     i1l2340:
  5270                           
  5271                           ;mcc_generated_files/i2c1_slave.c: 222:             if(I2C1_SlaveIsRxBufFull())
  5272     023C  3186  2655  3181   	fcall	_I2C1_SlaveIsRxBufFull
  5273     023F  3A00               	xorlw	0
  5274     0240  1903               	skipnz
  5275     0241  2A43               	goto	u83_21
  5276     0242  2A44               	goto	u83_20
  5277     0243                     u83_21:
  5278     0243  2A5E               	goto	i1l2348
  5279     0244                     u83_20:
  5280     0244                     i1l2342:
  5281                           
  5282                           ;mcc_generated_files/i2c1_slave.c: 223:             {;mcc_generated_files/i2c1_slave.c: 
      +                          224:                 I2C1_SlaveRdCallBack();
  5283     0244  3185  254A  3181   	fcall	_I2C1_SlaveRdCallBack
  5284     0247  2A5E               	goto	i1l2348
  5285     0248                     i1l2346:
  5286     0248  082E               	movf	_i2c1SlaveState,w	;volatile
  5287     0249  00CD               	movwf	??_I2C1_Isr
  5288     024A  01CE               	clrf	??_I2C1_Isr+1
  5289                           
  5290                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5291                           ; Switch size 1, requested type "simple"
  5292                           ; Number of cases is 1, Range of values is 0 to 0
  5293                           ; switch strategies available:
  5294                           ; Name         Instructions Cycles
  5295                           ; simple_byte            4     3 (average)
  5296                           ; direct_byte            8     6 (fixed)
  5297                           ; jumptable            260     6 (fixed)
  5298                           ;	Chosen strategy is simple_byte
  5299     024B  084E               	movf	??_I2C1_Isr+1,w
  5300     024C  3A00               	xorlw	0	; case 0
  5301     024D  1903               	skipnz
  5302     024E  2A50               	goto	i1l2726
  5303     024F  2A5E               	goto	i1l2348
  5304     0250                     i1l2726:
  5305                           
  5306                           ; Switch size 1, requested type "simple"
  5307                           ; Number of cases is 4, Range of values is 1 to 4
  5308                           ; switch strategies available:
  5309                           ; Name         Instructions Cycles
  5310                           ; simple_byte           13     7 (average)
  5311                           ; direct_byte           17     9 (fixed)
  5312                           ; jumptable            263     9 (fixed)
  5313                           ;	Chosen strategy is simple_byte
  5314     0250  084D               	movf	??_I2C1_Isr,w
  5315     0251  3A01               	xorlw	1	; case 1
  5316     0252  1903               	skipnz
  5317     0253  2A20               	goto	i1l2328
  5318     0254  3A03               	xorlw	3	; case 2
  5319     0255  1903               	skipnz
  5320     0256  2A2F               	goto	i1l2334
  5321     0257  3A01               	xorlw	1	; case 3
  5322     0258  1903               	skipnz
  5323     0259  2A33               	goto	i1l2336
  5324     025A  3A07               	xorlw	7	; case 4
  5325     025B  1903               	skipnz
  5326     025C  2A3C               	goto	i1l2340
  5327     025D  2A5E               	goto	i1l2348
  5328     025E                     i1l2348:
  5329                           
  5330                           ;mcc_generated_files/i2c1_slave.c: 230:     I2C1_SlaveReleaseClock();
  5331     025E  3186  265F  3181   	fcall	_I2C1_SlaveReleaseClock
  5332     0261                     i1l325:
  5333     0261  0008               	return
  5334     0262                     __end_of_I2C1_Isr:
  5335                           
  5336                           	psect	text32
  5337     05C4                     __ptext32:	
  5338 ;; *************** function _I2C1_SlaveWrCallBack *****************
  5339 ;; Defined at:
  5340 ;;		line 281 in file "mcc_generated_files/i2c1_slave.c"
  5341 ;; Parameters:    Size  Location     Type
  5342 ;;		None
  5343 ;; Auto vars:     Size  Location     Type
  5344 ;;		None
  5345 ;; Return value:  Size  Location     Type
  5346 ;;                  1    wreg      void 
  5347 ;; Registers used:
  5348 ;;		wreg, status,2, status,0, pclath, cstack
  5349 ;; Tracked objects:
  5350 ;;		On entry : 0/0
  5351 ;;		On exit  : 0/0
  5352 ;;		Unchanged: 0/0
  5353 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5354 ;;      Params:         0       0       0       0
  5355 ;;      Locals:         0       0       0       0
  5356 ;;      Temps:          0       0       0       0
  5357 ;;      Totals:         0       0       0       0
  5358 ;;Total ram usage:        0 bytes
  5359 ;; Hardware stack levels used: 1
  5360 ;; Hardware stack levels required when called: 2
  5361 ;; This function calls:
  5362 ;;		NULL
  5363 ;;		_I2C1_SlaveDefWrInterruptHandler
  5364 ;; This function is called by:
  5365 ;;		_I2C1_Isr
  5366 ;; This function uses a non-reentrant model
  5367 ;;
  5368                           
  5369     05C4                     _I2C1_SlaveWrCallBack:	
  5370                           ;psect for function _I2C1_SlaveWrCallBack
  5371                           
  5372     05C4                     i1l2202:	
  5373                           ;incstack = 0
  5374                           ; Regs used in _I2C1_SlaveWrCallBack: [wreg+status,2+status,0+pclath+cstack]
  5375                           
  5376                           
  5377                           ;mcc_generated_files/i2c1_slave.c: 283:     if (I2C1_SlaveWrInterruptHandler)
  5378     05C4  0140               	movlb	0	; select bank0
  5379     05C5  0826               	movf	_I2C1_SlaveWrInterruptHandler,w
  5380     05C6  0427               	iorwf	_I2C1_SlaveWrInterruptHandler+1,w
  5381     05C7  1903               	btfsc	3,2
  5382     05C8  2DCA               	goto	u61_21
  5383     05C9  2DCB               	goto	u61_20
  5384     05CA                     u61_21:
  5385     05CA  2DD0               	goto	i1l348
  5386     05CB                     u61_20:
  5387     05CB                     i1l2204:
  5388                           
  5389                           ;mcc_generated_files/i2c1_slave.c: 284:     {;mcc_generated_files/i2c1_slave.c: 285:    
      +                               I2C1_SlaveWrInterruptHandler();
  5390     05CB  0827               	movf	_I2C1_SlaveWrInterruptHandler+1,w
  5391     05CC  008A               	movwf	10
  5392     05CD  0826               	movf	_I2C1_SlaveWrInterruptHandler,w
  5393     05CE  000A               	callw
  5394     05CF  3185               	pagesel	$
  5395     05D0                     i1l348:
  5396     05D0  0008               	return
  5397     05D1                     __end_of_I2C1_SlaveWrCallBack:
  5398                           
  5399                           	psect	text33
  5400     0641                     __ptext33:	
  5401 ;; *************** function _I2C1_SlaveDefWrInterruptHandler *****************
  5402 ;; Defined at:
  5403 ;;		line 289 in file "mcc_generated_files/i2c1_slave.c"
  5404 ;; Parameters:    Size  Location     Type
  5405 ;;		None
  5406 ;; Auto vars:     Size  Location     Type
  5407 ;;		None
  5408 ;; Return value:  Size  Location     Type
  5409 ;;                  1    wreg      void 
  5410 ;; Registers used:
  5411 ;;		wreg, status,2, status,0, pclath, cstack
  5412 ;; Tracked objects:
  5413 ;;		On entry : 0/0
  5414 ;;		On exit  : 0/0
  5415 ;;		Unchanged: 0/0
  5416 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5417 ;;      Params:         0       0       0       0
  5418 ;;      Locals:         0       0       0       0
  5419 ;;      Temps:          0       0       0       0
  5420 ;;      Totals:         0       0       0       0
  5421 ;;Total ram usage:        0 bytes
  5422 ;; Hardware stack levels used: 1
  5423 ;; Hardware stack levels required when called: 1
  5424 ;; This function calls:
  5425 ;;		_I2C1_SlaveSendTxData
  5426 ;; This function is called by:
  5427 ;;		_I2C1_Open
  5428 ;;		_I2C1_SlaveWrCallBack
  5429 ;; This function uses a non-reentrant model
  5430 ;;
  5431                           
  5432     0641                     _I2C1_SlaveDefWrInterruptHandler:	
  5433                           ;psect for function _I2C1_SlaveDefWrInterruptHandler
  5434                           
  5435     0641                     i1l2038:	
  5436                           ;incstack = 0
  5437                           ; Regs used in _I2C1_SlaveDefWrInterruptHandler: [wreg+status,2+status,0+pclath+cstack]
  5438                           
  5439                           
  5440                           ;mcc_generated_files/i2c1_slave.c: 290:     I2C1_SlaveSendTxData(i2c1WrData);
  5441     0641  0140               	movlb	0	; select bank0
  5442     0642  0831               	movf	_i2c1WrData,w	;volatile
  5443     0643  3186  2647  3186   	fcall	_I2C1_SlaveSendTxData
  5444     0646                     i1l351:
  5445     0646  0008               	return
  5446     0647                     __end_of_I2C1_SlaveDefWrInterruptHandler:
  5447                           
  5448                           	psect	text34
  5449     0647                     __ptext34:	
  5450 ;; *************** function _I2C1_SlaveSendTxData *****************
  5451 ;; Defined at:
  5452 ;;		line 424 in file "mcc_generated_files/i2c1_slave.c"
  5453 ;; Parameters:    Size  Location     Type
  5454 ;;  data            1    wreg     unsigned char 
  5455 ;; Auto vars:     Size  Location     Type
  5456 ;;  data            1    0[COMMON] unsigned char 
  5457 ;; Return value:  Size  Location     Type
  5458 ;;                  1    wreg      void 
  5459 ;; Registers used:
  5460 ;;		wreg
  5461 ;; Tracked objects:
  5462 ;;		On entry : 0/0
  5463 ;;		On exit  : 0/0
  5464 ;;		Unchanged: 0/0
  5465 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5466 ;;      Params:         0       0       0       0
  5467 ;;      Locals:         1       0       0       0
  5468 ;;      Temps:          0       0       0       0
  5469 ;;      Totals:         1       0       0       0
  5470 ;;Total ram usage:        1 bytes
  5471 ;; Hardware stack levels used: 1
  5472 ;; This function calls:
  5473 ;;		Nothing
  5474 ;; This function is called by:
  5475 ;;		_I2C1_SlaveDefWrInterruptHandler
  5476 ;;		_I2C1_Write
  5477 ;; This function uses a non-reentrant model
  5478 ;;
  5479                           
  5480     0647                     _I2C1_SlaveSendTxData:	
  5481                           ;psect for function _I2C1_SlaveSendTxData
  5482                           
  5483                           
  5484                           ;incstack = 0
  5485                           ; Regs used in _I2C1_SlaveSendTxData: [wreg]
  5486                           ;I2C1_SlaveSendTxData@data stored from wreg
  5487     0647  00F0               	movwf	I2C1_SlaveSendTxData@data
  5488     0648                     i1l1946:
  5489                           
  5490                           ;mcc_generated_files/i2c1_slave.c: 424: static __attribute__((inline)) void I2C1_SlaveSe
      +                          ndTxData(uint8_t data);mcc_generated_files/i2c1_slave.c: 425: {;mcc_generated_files/i2c1
      +                          _slave.c: 426:     SSP1BUF = data;
  5491     0648  0870               	movf	I2C1_SlaveSendTxData@data,w
  5492     0649  0143               	movlb	3	; select bank3
  5493     064A  008C               	movwf	12	;volatile
  5494     064B                     i1l427:
  5495     064B  0008               	return
  5496     064C                     __end_of_I2C1_SlaveSendTxData:
  5497                           
  5498                           	psect	text35
  5499     065F                     __ptext35:	
  5500 ;; *************** function _I2C1_SlaveReleaseClock *****************
  5501 ;; Defined at:
  5502 ;;		line 394 in file "mcc_generated_files/i2c1_slave.c"
  5503 ;; Parameters:    Size  Location     Type
  5504 ;;		None
  5505 ;; Auto vars:     Size  Location     Type
  5506 ;;		None
  5507 ;; Return value:  Size  Location     Type
  5508 ;;                  1    wreg      void 
  5509 ;; Registers used:
  5510 ;;		None
  5511 ;; Tracked objects:
  5512 ;;		On entry : 0/0
  5513 ;;		On exit  : 0/0
  5514 ;;		Unchanged: 0/0
  5515 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5516 ;;      Params:         0       0       0       0
  5517 ;;      Locals:         0       0       0       0
  5518 ;;      Temps:          0       0       0       0
  5519 ;;      Totals:         0       0       0       0
  5520 ;;Total ram usage:        0 bytes
  5521 ;; Hardware stack levels used: 1
  5522 ;; This function calls:
  5523 ;;		Nothing
  5524 ;; This function is called by:
  5525 ;;		_I2C1_Isr
  5526 ;; This function uses a non-reentrant model
  5527 ;;
  5528                           
  5529     065F                     _I2C1_SlaveReleaseClock:	
  5530                           ;psect for function _I2C1_SlaveReleaseClock
  5531                           
  5532     065F                     i1l2218:	
  5533                           ;incstack = 0
  5534                           ; Regs used in _I2C1_SlaveReleaseClock: []
  5535                           
  5536                           
  5537                           ;mcc_generated_files/i2c1_slave.c: 396:     SSP1CON1bits.CKP = 1;
  5538     065F  0143               	movlb	3	; select bank3
  5539     0660  1610               	bsf	16,4	;volatile
  5540     0661                     i1l409:
  5541     0661  0008               	return
  5542     0662                     __end_of_I2C1_SlaveReleaseClock:
  5543                           
  5544                           	psect	text36
  5545     054A                     __ptext36:	
  5546 ;; *************** function _I2C1_SlaveRdCallBack *****************
  5547 ;; Defined at:
  5548 ;;		line 244 in file "mcc_generated_files/i2c1_slave.c"
  5549 ;; Parameters:    Size  Location     Type
  5550 ;;		None
  5551 ;; Auto vars:     Size  Location     Type
  5552 ;;		None
  5553 ;; Return value:  Size  Location     Type
  5554 ;;                  1    wreg      void 
  5555 ;; Registers used:
  5556 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5557 ;; Tracked objects:
  5558 ;;		On entry : 0/0
  5559 ;;		On exit  : 0/0
  5560 ;;		Unchanged: 0/0
  5561 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5562 ;;      Params:         0       0       0       0
  5563 ;;      Locals:         0       0       0       0
  5564 ;;      Temps:          0       0       0       0
  5565 ;;      Totals:         0       0       0       0
  5566 ;;Total ram usage:        0 bytes
  5567 ;; Hardware stack levels used: 1
  5568 ;; Hardware stack levels required when called: 4
  5569 ;; This function calls:
  5570 ;;		NULL
  5571 ;;		_I2C1_SlaveDefRdInterruptHandler
  5572 ;;		_data_recv_handler
  5573 ;; This function is called by:
  5574 ;;		_I2C1_Isr
  5575 ;; This function uses a non-reentrant model
  5576 ;;
  5577                           
  5578     054A                     _I2C1_SlaveRdCallBack:	
  5579                           ;psect for function _I2C1_SlaveRdCallBack
  5580                           
  5581     054A                     i1l2210:	
  5582                           ;incstack = 0
  5583                           ; Regs used in _I2C1_SlaveRdCallBack: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5584                           
  5585                           
  5586                           ;mcc_generated_files/i2c1_slave.c: 246:     if (I2C1_SlaveRdInterruptHandler)
  5587     054A  0140               	movlb	0	; select bank0
  5588     054B  0828               	movf	_I2C1_SlaveRdInterruptHandler,w
  5589     054C  0429               	iorwf	_I2C1_SlaveRdInterruptHandler+1,w
  5590     054D  1903               	btfsc	3,2
  5591     054E  2D50               	goto	u62_21
  5592     054F  2D51               	goto	u62_20
  5593     0550                     u62_21:
  5594     0550  2D60               	goto	i1l336
  5595     0551                     u62_20:
  5596     0551                     i1l2212:
  5597                           
  5598                           ;mcc_generated_files/i2c1_slave.c: 247:     {;mcc_generated_files/i2c1_slave.c: 249:    
      +                               I2C1_SlaveRdInterruptHandler();
  5599     0551  0829               	movf	_I2C1_SlaveRdInterruptHandler+1,w
  5600     0552  008A               	movwf	10
  5601     0553  0828               	movf	_I2C1_SlaveRdInterruptHandler,w
  5602     0554  000A               	callw
  5603     0555  3185               	pagesel	$
  5604     0556                     i1l2214:
  5605                           
  5606                           ;mcc_generated_files/i2c1_slave.c: 251:         if(i2cReadCnt == 5 - 1)
  5607     0556  3004               	movlw	4
  5608     0557  0140               	movlb	0	; select bank0
  5609     0558  0632               	xorwf	_i2cReadCnt@i2c1_slave$F755,w	;volatile
  5610     0559  1D03               	btfss	3,2
  5611     055A  2D5C               	goto	u63_21
  5612     055B  2D5D               	goto	u63_20
  5613     055C                     u63_21:
  5614     055C  2D60               	goto	i1l336
  5615     055D                     u63_20:
  5616     055D                     i1l2216:
  5617                           
  5618                           ;mcc_generated_files/i2c1_slave.c: 252:         {;mcc_generated_files/i2c1_slave.c: 253:
      +                                       data_recv_handler();
  5619     055D  3183  23F4  3185   	fcall	_data_recv_handler
  5620     0560                     i1l336:
  5621     0560  0008               	return
  5622     0561                     __end_of_I2C1_SlaveRdCallBack:
  5623                           
  5624                           	psect	text37
  5625     03F4                     __ptext37:	
  5626 ;; *************** function _data_recv_handler *****************
  5627 ;; Defined at:
  5628 ;;		line 28 in file "flash_memory_filling.c"
  5629 ;; Parameters:    Size  Location     Type
  5630 ;;		None
  5631 ;; Auto vars:     Size  Location     Type
  5632 ;;  i               2   11[BANK0 ] unsigned short 
  5633 ;; Return value:  Size  Location     Type
  5634 ;;                  1    wreg      void 
  5635 ;; Registers used:
  5636 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5637 ;; Tracked objects:
  5638 ;;		On entry : 0/0
  5639 ;;		On exit  : 0/0
  5640 ;;		Unchanged: 0/0
  5641 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5642 ;;      Params:         0       0       0       0
  5643 ;;      Locals:         0       2       0       0
  5644 ;;      Temps:          0       2       0       0
  5645 ;;      Totals:         0       4       0       0
  5646 ;;Total ram usage:        4 bytes
  5647 ;; Hardware stack levels used: 1
  5648 ;; Hardware stack levels required when called: 3
  5649 ;; This function calls:
  5650 ;;		i1_FLASH_WriteWord
  5651 ;; This function is called by:
  5652 ;;		_I2C1_SlaveRdCallBack
  5653 ;; This function uses a non-reentrant model
  5654 ;;
  5655                           
  5656     03F4                     _data_recv_handler:	
  5657                           ;psect for function _data_recv_handler
  5658                           
  5659     03F4                     i1l2012:	
  5660                           ;incstack = 0
  5661                           ; Regs used in _data_recv_handler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5662                           
  5663                           
  5664                           ;flash_memory_filling.c: 30:     command = (0x80 & i2cDataRead[0]);
  5665     03F4  0140               	movlb	0	; select bank0
  5666     03F5  083B               	movf	_i2cDataRead,w	;volatile
  5667     03F6  3980               	andlw	128
  5668     03F7  00B7               	movwf	_command
  5669                           
  5670                           ;flash_memory_filling.c: 31:     low_cal = (0x40 & i2cDataRead[0]);
  5671     03F8  083B               	movf	_i2cDataRead,w	;volatile
  5672     03F9  3940               	andlw	64
  5673     03FA  00B6               	movwf	_low_cal
  5674                           
  5675                           ;flash_memory_filling.c: 32:     high_cal = (0x20 & i2cDataRead[0]);
  5676     03FB  083B               	movf	_i2cDataRead,w	;volatile
  5677     03FC  3920               	andlw	32
  5678     03FD  00B5               	movwf	_high_cal
  5679     03FE                     i1l2014:
  5680                           
  5681                           ;flash_memory_filling.c: 35:     if(command)
  5682     03FE  0837               	movf	_command,w
  5683     03FF  1903               	btfsc	3,2
  5684     0400  2C02               	goto	u52_21
  5685     0401  2C03               	goto	u52_20
  5686     0402                     u52_21:
  5687     0402  2C2B               	goto	i1l50
  5688     0403                     u52_20:
  5689     0403                     i1l2016:
  5690                           
  5691                           ;flash_memory_filling.c: 36:     {;flash_memory_filling.c: 37:         for(uint16_t i = 
      +                          1; i < 5; i++)
  5692     0403  3001               	movlw	1
  5693     0404  00CB               	movwf	data_recv_handler@i
  5694     0405  3000               	movlw	0
  5695     0406  00CC               	movwf	data_recv_handler@i+1
  5696     0407                     i1l2020:
  5697                           
  5698                           ;flash_memory_filling.c: 38:         {;flash_memory_filling.c: 39:             FLASH_Wri
      +                          teWord(0x780 + (i + 1), ramBuff, (uint16_t)i2cDataRead[i]);
  5699     0407  084B               	movf	data_recv_handler@i,w
  5700     0408  3E81               	addlw	129
  5701     0409  00C0               	movwf	i1FLASH_WriteWord@flashAddr
  5702     040A  3007               	movlw	7
  5703     040B  3D4C               	addwfc	data_recv_handler@i+1,w
  5704     040C  00C1               	movwf	i1FLASH_WriteWord@flashAddr+1
  5705     040D  30A0               	movlw	(low (_ramBuff| 0))& (0+255)
  5706     040E  00C2               	movwf	i1FLASH_WriteWord@ramBuf
  5707     040F  084B               	movf	data_recv_handler@i,w
  5708     0410  3E3B               	addlw	(low (_i2cDataRead| 0))& (0+255)
  5709     0411  0086               	movwf	6
  5710     0412  0187               	clrf	7
  5711     0413  0801               	movf	1,w
  5712     0414  00C9               	movwf	??_data_recv_handler
  5713     0415  01CA               	clrf	??_data_recv_handler+1
  5714     0416  0849               	movf	??_data_recv_handler,w
  5715     0417  00C3               	movwf	i1FLASH_WriteWord@word
  5716     0418  084A               	movf	??_data_recv_handler+1,w
  5717     0419  00C4               	movwf	i1FLASH_WriteWord@word+1
  5718     041A  3183  23B6  3183   	fcall	i1_FLASH_WriteWord
  5719     041D                     i1l2022:
  5720                           
  5721                           ;flash_memory_filling.c: 40:         }
  5722     041D  3001               	movlw	1
  5723     041E  0140               	movlb	0	; select bank0
  5724     041F  07CB               	addwf	data_recv_handler@i,f
  5725     0420  3000               	movlw	0
  5726     0421  3DCC               	addwfc	data_recv_handler@i+1,f
  5727     0422                     i1l2024:
  5728     0422  3000               	movlw	0
  5729     0423  024C               	subwf	data_recv_handler@i+1,w
  5730     0424  3005               	movlw	5
  5731     0425  1903               	skipnz
  5732     0426  024B               	subwf	data_recv_handler@i,w
  5733     0427  1C03               	skipc
  5734     0428  2C2A               	goto	u53_21
  5735     0429  2C2B               	goto	u53_20
  5736     042A                     u53_21:
  5737     042A  2C07               	goto	i1l2020
  5738     042B                     u53_20:
  5739     042B                     i1l50:
  5740     042B  0008               	return
  5741     042C                     __end_of_data_recv_handler:
  5742                           
  5743                           	psect	text38
  5744     03B6                     __ptext38:	
  5745 ;; *************** function i1_FLASH_WriteWord *****************
  5746 ;; Defined at:
  5747 ;;		line 75 in file "mcc_generated_files/memory.c"
  5748 ;; Parameters:    Size  Location     Type
  5749 ;;  flashAddr       2    0[BANK0 ] unsigned short 
  5750 ;;  ramBuf          1    2[BANK0 ] PTR unsigned short 
  5751 ;;		 -> ramBuff(64), 
  5752 ;;  word            2    3[BANK0 ] unsigned short 
  5753 ;; Auto vars:     Size  Location     Type
  5754 ;;  blockStartAd    2    6[BANK0 ] unsigned short 
  5755 ;;  i               1    8[BANK0 ] unsigned char 
  5756 ;;  offset          1    5[BANK0 ] unsigned char 
  5757 ;; Return value:  Size  Location     Type
  5758 ;;                  1    wreg      void 
  5759 ;; Registers used:
  5760 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5761 ;; Tracked objects:
  5762 ;;		On entry : 0/0
  5763 ;;		On exit  : 0/0
  5764 ;;		Unchanged: 0/0
  5765 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5766 ;;      Params:         0       5       0       0
  5767 ;;      Locals:         0       4       0       0
  5768 ;;      Temps:          1       0       0       0
  5769 ;;      Totals:         1       9       0       0
  5770 ;;Total ram usage:       10 bytes
  5771 ;; Hardware stack levels used: 1
  5772 ;; Hardware stack levels required when called: 2
  5773 ;; This function calls:
  5774 ;;		i1_FLASH_ReadWord
  5775 ;;		i1_FLASH_WriteBlock
  5776 ;; This function is called by:
  5777 ;;		_data_recv_handler
  5778 ;; This function uses a non-reentrant model
  5779 ;;
  5780                           
  5781     03B6                     i1_FLASH_WriteWord:	
  5782                           ;psect for function i1_FLASH_WriteWord
  5783                           
  5784     03B6                     i1l1972:	
  5785                           ;incstack = 0
  5786                           ; Regs used in i1_FLASH_WriteWord: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5787                           
  5788                           
  5789                           ;mcc_generated_files/memory.c: 75: void FLASH_WriteWord(uint16_t flashAddr, uint16_t *ra
      +                          mBuf, uint16_t word);mcc_generated_files/memory.c: 76: {;mcc_generated_files/memory.c: 7
      +                          7:     uint16_t blockStartAddr = (uint16_t)(flashAddr & ((0x800 -1) ^ (32 -1)));
  5790     03B6  30E0               	movlw	224
  5791     03B7  0140               	movlb	0	; select bank0
  5792     03B8  0540               	andwf	i1FLASH_WriteWord@flashAddr,w
  5793     03B9  00C6               	movwf	i1FLASH_WriteWord@blockStartAddr
  5794     03BA  3007               	movlw	7
  5795     03BB  0541               	andwf	i1FLASH_WriteWord@flashAddr+1,w
  5796     03BC  00C7               	movwf	i1FLASH_WriteWord@blockStartAddr+1
  5797     03BD                     i1l1974:
  5798                           
  5799                           ;mcc_generated_files/memory.c: 78:     uint8_t offset = (uint8_t)(flashAddr & (32 -1));
  5800     03BD  0840               	movf	i1FLASH_WriteWord@flashAddr,w
  5801     03BE  391F               	andlw	31
  5802     03BF  00C5               	movwf	i1FLASH_WriteWord@offset
  5803                           
  5804                           ;mcc_generated_files/memory.c: 79:     uint8_t i;;mcc_generated_files/memory.c: 82:     
      +                          for (i=0; i<32; i++)
  5805     03C0  01C8               	clrf	i1FLASH_WriteWord@i
  5806     03C1                     i1l1980:
  5807                           
  5808                           ;mcc_generated_files/memory.c: 83:     {;mcc_generated_files/memory.c: 84:         ramBu
      +                          f[i] = FLASH_ReadWord((blockStartAddr+i));
  5809     03C1  0848               	movf	i1FLASH_WriteWord@i,w
  5810     03C2  0746               	addwf	i1FLASH_WriteWord@blockStartAddr,w
  5811     03C3  00F0               	movwf	i1FLASH_ReadWord@flashAddr
  5812     03C4  0847               	movf	i1FLASH_WriteWord@blockStartAddr+1,w
  5813     03C5  1803               	skipnc
  5814     03C6  0A47               	incf	i1FLASH_WriteWord@blockStartAddr+1,w
  5815     03C7  00F1               	movwf	i1FLASH_ReadWord@flashAddr+1
  5816     03C8  3185  2531  3183   	fcall	i1_FLASH_ReadWord
  5817     03CB  0140               	movlb	0	; select bank0
  5818     03CC  3548               	lslf	i1FLASH_WriteWord@i,w
  5819     03CD  0742               	addwf	i1FLASH_WriteWord@ramBuf,w
  5820     03CE  00FD               	movwf	??i1_FLASH_WriteWord
  5821     03CF  087D               	movf	??i1_FLASH_WriteWord,w
  5822     03D0  0086               	movwf	6
  5823     03D1  0187               	clrf	7
  5824     03D2  0870               	movf	?i1_FLASH_ReadWord,w
  5825     03D3  3FC0               	movwi [0]fsr1
  5826     03D4  0871               	movf	?i1_FLASH_ReadWord+1,w
  5827     03D5  3FC1               	movwi [1]fsr1
  5828     03D6                     i1l1982:
  5829                           
  5830                           ;mcc_generated_files/memory.c: 85:     }
  5831     03D6  3001               	movlw	1
  5832     03D7  00FD               	movwf	??i1_FLASH_WriteWord
  5833     03D8  087D               	movf	??i1_FLASH_WriteWord,w
  5834     03D9  07C8               	addwf	i1FLASH_WriteWord@i,f
  5835     03DA                     i1l1984:
  5836     03DA  3020               	movlw	32
  5837     03DB  0248               	subwf	i1FLASH_WriteWord@i,w
  5838     03DC  1C03               	skipc
  5839     03DD  2BDF               	goto	u51_21
  5840     03DE  2BE0               	goto	u51_20
  5841     03DF                     u51_21:
  5842     03DF  2BC1               	goto	i1l1980
  5843     03E0                     u51_20:
  5844     03E0                     i1l1986:
  5845                           
  5846                           ;mcc_generated_files/memory.c: 88:     ramBuf[offset] = word;
  5847     03E0  3545               	lslf	i1FLASH_WriteWord@offset,w
  5848     03E1  0742               	addwf	i1FLASH_WriteWord@ramBuf,w
  5849     03E2  00FD               	movwf	??i1_FLASH_WriteWord
  5850     03E3  087D               	movf	??i1_FLASH_WriteWord,w
  5851     03E4  0086               	movwf	6
  5852     03E5  0187               	clrf	7
  5853     03E6  0843               	movf	i1FLASH_WriteWord@word,w
  5854     03E7  3FC0               	movwi [0]fsr1
  5855     03E8  0844               	movf	i1FLASH_WriteWord@word+1,w
  5856     03E9  3FC1               	movwi [1]fsr1
  5857     03EA                     i1l1988:
  5858                           
  5859                           ;mcc_generated_files/memory.c: 91:     FLASH_WriteBlock(blockStartAddr, ramBuf);
  5860     03EA  0847               	movf	i1FLASH_WriteWord@blockStartAddr+1,w
  5861     03EB  00F4               	movwf	i1FLASH_WriteBlock@writeAddr+1
  5862     03EC  0846               	movf	i1FLASH_WriteWord@blockStartAddr,w
  5863     03ED  00F3               	movwf	i1FLASH_WriteBlock@writeAddr
  5864     03EE  0842               	movf	i1FLASH_WriteWord@ramBuf,w
  5865     03EF  00F5               	movwf	i1FLASH_WriteBlock@flashWordArray
  5866     03F0  3182  22CE  3183   	fcall	i1_FLASH_WriteBlock
  5867     03F3                     i1l540:
  5868     03F3  0008               	return
  5869     03F4                     __end_ofi1_FLASH_WriteWord:
  5870                           
  5871                           	psect	text39
  5872     02CE                     __ptext39:	
  5873 ;; *************** function i1_FLASH_WriteBlock *****************
  5874 ;; Defined at:
  5875 ;;		line 94 in file "mcc_generated_files/memory.c"
  5876 ;; Parameters:    Size  Location     Type
  5877 ;;  writeAddr       2    3[COMMON] unsigned short 
  5878 ;;  flashWordArr    1    5[COMMON] PTR unsigned short 
  5879 ;;		 -> ramBuff(64), 
  5880 ;; Auto vars:     Size  Location     Type
  5881 ;;  blockStartAd    2    9[COMMON] unsigned short 
  5882 ;;  i               1   12[COMMON] unsigned char 
  5883 ;;  GIEBitValue     1   11[COMMON] unsigned char 
  5884 ;; Return value:  Size  Location     Type
  5885 ;;                  1    wreg      char 
  5886 ;; Registers used:
  5887 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5888 ;; Tracked objects:
  5889 ;;		On entry : 0/0
  5890 ;;		On exit  : 0/0
  5891 ;;		Unchanged: 0/0
  5892 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5893 ;;      Params:         3       0       0       0
  5894 ;;      Locals:         4       0       0       0
  5895 ;;      Temps:          3       0       0       0
  5896 ;;      Totals:        10       0       0       0
  5897 ;;Total ram usage:       10 bytes
  5898 ;; Hardware stack levels used: 1
  5899 ;; Hardware stack levels required when called: 1
  5900 ;; This function calls:
  5901 ;;		i1_FLASH_EraseBlock
  5902 ;; This function is called by:
  5903 ;;		i1_FLASH_WriteWord
  5904 ;; This function uses a non-reentrant model
  5905 ;;
  5906                           
  5907     02CE                     i1_FLASH_WriteBlock:	
  5908                           ;psect for function i1_FLASH_WriteBlock
  5909                           
  5910     02CE                     i1l1892:	
  5911                           ;incstack = 0
  5912                           ; Regs used in i1_FLASH_WriteBlock: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5913                           
  5914                           
  5915                           ;mcc_generated_files/memory.c: 94: int8_t FLASH_WriteBlock(uint16_t writeAddr, uint16_t 
      +                          *flashWordArray);mcc_generated_files/memory.c: 95: {;mcc_generated_files/memory.c: 96:  
      +                             uint16_t blockStartAddr = (uint16_t )(writeAddr & ((0x800 -1) ^ (32 -1)));
  5916     02CE  30E0               	movlw	224
  5917     02CF  0573               	andwf	i1FLASH_WriteBlock@writeAddr,w
  5918     02D0  00F9               	movwf	i1FLASH_WriteBlock@blockStartAddr
  5919     02D1  3007               	movlw	7
  5920     02D2  0574               	andwf	i1FLASH_WriteBlock@writeAddr+1,w
  5921     02D3  00FA               	movwf	i1FLASH_WriteBlock@blockStartAddr+1
  5922     02D4                     i1l1894:
  5923                           
  5924                           ;mcc_generated_files/memory.c: 97:     uint8_t GIEBitValue = INTCONbits.GIE;
  5925     02D4  3000               	movlw	0
  5926     02D5  1B8B               	btfsc	11,7	;volatile
  5927     02D6  3001               	movlw	1
  5928     02D7  00FB               	movwf	i1FLASH_WriteBlock@GIEBitValue
  5929     02D8                     i1l1896:
  5930                           
  5931                           ;mcc_generated_files/memory.c: 98:     uint8_t i;;mcc_generated_files/memory.c: 102:    
      +                           if( writeAddr != blockStartAddr )
  5932     02D8  087A               	movf	i1FLASH_WriteBlock@blockStartAddr+1,w
  5933     02D9  0674               	xorwf	i1FLASH_WriteBlock@writeAddr+1,w
  5934     02DA  1D03               	skipz
  5935     02DB  2ADE               	goto	u48_25
  5936     02DC  0879               	movf	i1FLASH_WriteBlock@blockStartAddr,w
  5937     02DD  0673               	xorwf	i1FLASH_WriteBlock@writeAddr,w
  5938     02DE                     u48_25:
  5939     02DE  1903               	skipnz
  5940     02DF  2AE1               	goto	u48_21
  5941     02E0  2AE2               	goto	u48_20
  5942     02E1                     u48_21:
  5943     02E1  2AE3               	goto	i1l543
  5944     02E2                     u48_20:
  5945     02E2  2B2C               	goto	i1l544
  5946     02E3                     i1l543:	
  5947                           ;mcc_generated_files/memory.c: 105:     }
  5948                           
  5949                           
  5950                           ;mcc_generated_files/memory.c: 107:     INTCONbits.GIE = 0;
  5951     02E3  138B               	bcf	11,7	;volatile
  5952     02E4                     i1l1900:
  5953                           
  5954                           ;mcc_generated_files/memory.c: 110:     FLASH_EraseBlock(writeAddr);
  5955     02E4  0874               	movf	i1FLASH_WriteBlock@writeAddr+1,w
  5956     02E5  00F1               	movwf	i1FLASH_EraseBlock@startAddr+1
  5957     02E6  0873               	movf	i1FLASH_WriteBlock@writeAddr,w
  5958     02E7  00F0               	movwf	i1FLASH_EraseBlock@startAddr
  5959     02E8  3184  24FA  3182   	fcall	i1_FLASH_EraseBlock
  5960     02EB                     i1l1902:
  5961                           
  5962                           ;mcc_generated_files/memory.c: 113:     NVMCON1bits.NVMREGS = 0;
  5963     02EB  0150               	movlb	16	; select bank16
  5964     02EC  131E               	bcf	30,6	;volsfr
  5965     02ED                     i1l1904:
  5966                           
  5967                           ;mcc_generated_files/memory.c: 114:     NVMCON1bits.WREN = 1;
  5968     02ED  151E               	bsf	30,2	;volsfr
  5969     02EE                     i1l1906:
  5970                           
  5971                           ;mcc_generated_files/memory.c: 115:     NVMCON1bits.LWLO = 1;
  5972     02EE  169E               	bsf	30,5	;volsfr
  5973     02EF                     i1l1908:
  5974                           
  5975                           ;mcc_generated_files/memory.c: 117:     for (i=0; i<32; i++)
  5976     02EF  01FC               	clrf	i1FLASH_WriteBlock@i
  5977     02F0                     i1l1914:
  5978                           
  5979                           ;mcc_generated_files/memory.c: 118:     {;mcc_generated_files/memory.c: 120:         NVM
      +                          ADRL = (writeAddr & 0xFF);
  5980     02F0  0873               	movf	i1FLASH_WriteBlock@writeAddr,w
  5981     02F1  0150               	movlb	16	; select bank16
  5982     02F2  009A               	movwf	26	;volatile
  5983     02F3                     i1l1916:
  5984                           
  5985                           ;mcc_generated_files/memory.c: 122:         NVMADRH = ((writeAddr & 0xFF00) >> 8);
  5986     02F3  0874               	movf	i1FLASH_WriteBlock@writeAddr+1,w
  5987     02F4  009B               	movwf	27	;volatile
  5988     02F5                     i1l1918:
  5989                           
  5990                           ;mcc_generated_files/memory.c: 125:         NVMDATL = flashWordArray[i];
  5991     02F5  357C               	lslf	i1FLASH_WriteBlock@i,w
  5992     02F6  0775               	addwf	i1FLASH_WriteBlock@flashWordArray,w
  5993     02F7  00F6               	movwf	??i1_FLASH_WriteBlock
  5994     02F8  0876               	movf	??i1_FLASH_WriteBlock,w
  5995     02F9  0086               	movwf	6
  5996     02FA  0187               	clrf	7
  5997     02FB  0801               	movf	1,w
  5998     02FC  009C               	movwf	28	;volatile
  5999     02FD                     i1l1920:
  6000                           
  6001                           ;mcc_generated_files/memory.c: 126:         NVMDATH = ((flashWordArray[i] & 0xFF00) >> 8
      +                          );
  6002     02FD  357C               	lslf	i1FLASH_WriteBlock@i,w
  6003     02FE  0775               	addwf	i1FLASH_WriteBlock@flashWordArray,w
  6004     02FF  00F6               	movwf	??i1_FLASH_WriteBlock
  6005     0300  0876               	movf	??i1_FLASH_WriteBlock,w
  6006     0301  0086               	movwf	6
  6007     0302  0187               	clrf	7
  6008     0303  3F40               	moviw [0]fsr1
  6009     0304  00F7               	movwf	??i1_FLASH_WriteBlock+1
  6010     0305  3F41               	moviw [1]fsr1
  6011     0306  00F8               	movwf	??i1_FLASH_WriteBlock+2
  6012     0307  0878               	movf	??i1_FLASH_WriteBlock+2,w
  6013     0308  009D               	movwf	29	;volatile
  6014     0309                     i1l1922:
  6015                           
  6016                           ;mcc_generated_files/memory.c: 128:         if(i == (32 -1))
  6017     0309  301F               	movlw	31
  6018     030A  067C               	xorwf	i1FLASH_WriteBlock@i,w
  6019     030B  1D03               	btfss	3,2
  6020     030C  2B0E               	goto	u49_21
  6021     030D  2B0F               	goto	u49_20
  6022     030E                     u49_21:
  6023     030E  2B10               	goto	i1l1926
  6024     030F                     u49_20:
  6025     030F                     i1l1924:
  6026                           
  6027                           ;mcc_generated_files/memory.c: 129:         {;mcc_generated_files/memory.c: 131:        
      +                               NVMCON1bits.LWLO = 0;
  6028     030F  129E               	bcf	30,5	;volsfr
  6029     0310                     i1l1926:
  6030                           
  6031                           ;mcc_generated_files/memory.c: 134:         NVMCON2 = 0x55;
  6032     0310  3055               	movlw	85
  6033     0311  009F               	movwf	31	;volsfr
  6034                           
  6035                           ;mcc_generated_files/memory.c: 135:         NVMCON2 = 0xAA;
  6036     0312  30AA               	movlw	170
  6037     0313  009F               	movwf	31	;volsfr
  6038     0314                     i1l1928:
  6039                           
  6040                           ;mcc_generated_files/memory.c: 136:         NVMCON1bits.WR = 1;
  6041     0314  149E               	bsf	30,1	;volsfr
  6042     0315                     i1l1930:
  6043                           
  6044                           ;mcc_generated_files/memory.c: 137:         __nop();
  6045     0315  0000               	nop
  6046     0316                     i1l1932:
  6047                           
  6048                           ;mcc_generated_files/memory.c: 138:         __nop();
  6049     0316  0000               	nop
  6050                           
  6051                           ;mcc_generated_files/memory.c: 140:      writeAddr++;
  6052     0317  3001               	movlw	1
  6053     0318  07F3               	addwf	i1FLASH_WriteBlock@writeAddr,f
  6054     0319  3000               	movlw	0
  6055     031A  3DF4               	addwfc	i1FLASH_WriteBlock@writeAddr+1,f
  6056     031B                     i1l1934:
  6057                           
  6058                           ;mcc_generated_files/memory.c: 141:     }
  6059     031B  3001               	movlw	1
  6060     031C  00F6               	movwf	??i1_FLASH_WriteBlock
  6061     031D  0876               	movf	??i1_FLASH_WriteBlock,w
  6062     031E  07FC               	addwf	i1FLASH_WriteBlock@i,f
  6063     031F                     i1l1936:
  6064     031F  3020               	movlw	32
  6065     0320  027C               	subwf	i1FLASH_WriteBlock@i,w
  6066     0321  1C03               	skipc
  6067     0322  2B24               	goto	u50_21
  6068     0323  2B25               	goto	u50_20
  6069     0324                     u50_21:
  6070     0324  2AF0               	goto	i1l1914
  6071     0325                     u50_20:
  6072     0325                     i1l546:
  6073                           
  6074                           ;mcc_generated_files/memory.c: 143:     NVMCON1bits.WREN = 0;
  6075     0325  0150               	movlb	16	; select bank16
  6076     0326  111E               	bcf	30,2	;volsfr
  6077     0327                     i1l1938:
  6078                           
  6079                           ;mcc_generated_files/memory.c: 144:     INTCONbits.GIE = GIEBitValue;
  6080     0327  0C7B               	rrf	i1FLASH_WriteBlock@GIEBitValue,w
  6081     0328  1C03               	skipc
  6082     0329  138B               	bcf	11,7	;volatile
  6083     032A  1803               	skipnc
  6084     032B  178B               	bsf	11,7	;volatile
  6085     032C                     i1l544:
  6086     032C  0008               	return
  6087     032D                     __end_ofi1_FLASH_WriteBlock:
  6088                           
  6089                           	psect	text40
  6090     04FA                     __ptext40:	
  6091 ;; *************** function i1_FLASH_EraseBlock *****************
  6092 ;; Defined at:
  6093 ;;		line 149 in file "mcc_generated_files/memory.c"
  6094 ;; Parameters:    Size  Location     Type
  6095 ;;  startAddr       2    0[COMMON] unsigned short 
  6096 ;; Auto vars:     Size  Location     Type
  6097 ;;  GIEBitValue     1    2[COMMON] unsigned char 
  6098 ;; Return value:  Size  Location     Type
  6099 ;;                  1    wreg      void 
  6100 ;; Registers used:
  6101 ;;		wreg, status,2, status,0
  6102 ;; Tracked objects:
  6103 ;;		On entry : 0/0
  6104 ;;		On exit  : 0/0
  6105 ;;		Unchanged: 0/0
  6106 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6107 ;;      Params:         2       0       0       0
  6108 ;;      Locals:         1       0       0       0
  6109 ;;      Temps:          0       0       0       0
  6110 ;;      Totals:         3       0       0       0
  6111 ;;Total ram usage:        3 bytes
  6112 ;; Hardware stack levels used: 1
  6113 ;; This function calls:
  6114 ;;		Nothing
  6115 ;; This function is called by:
  6116 ;;		i1_FLASH_WriteBlock
  6117 ;; This function uses a non-reentrant model
  6118 ;;
  6119                           
  6120     04FA                     i1_FLASH_EraseBlock:	
  6121                           ;psect for function i1_FLASH_EraseBlock
  6122                           
  6123     04FA                     i1l1846:	
  6124                           ;incstack = 0
  6125                           ; Regs used in i1_FLASH_EraseBlock: [wreg+status,2+status,0]
  6126                           
  6127                           
  6128                           ;mcc_generated_files/memory.c: 149: void FLASH_EraseBlock(uint16_t startAddr);mcc_genera
      +                          ted_files/memory.c: 150: {;mcc_generated_files/memory.c: 151:     uint8_t GIEBitValue = 
      +                          INTCONbits.GIE;
  6129     04FA  3000               	movlw	0
  6130     04FB  1B8B               	btfsc	11,7	;volatile
  6131     04FC  3001               	movlw	1
  6132     04FD  00F2               	movwf	i1FLASH_EraseBlock@GIEBitValue
  6133     04FE                     i1l1848:
  6134                           
  6135                           ;mcc_generated_files/memory.c: 154:     INTCONbits.GIE = 0;
  6136     04FE  138B               	bcf	11,7	;volatile
  6137     04FF                     i1l1850:
  6138                           
  6139                           ;mcc_generated_files/memory.c: 156:     NVMADRL = (startAddr & 0xFF);
  6140     04FF  0870               	movf	i1FLASH_EraseBlock@startAddr,w
  6141     0500  0150               	movlb	16	; select bank16
  6142     0501  009A               	movwf	26	;volatile
  6143     0502                     i1l1852:
  6144                           
  6145                           ;mcc_generated_files/memory.c: 158:     NVMADRH = ((startAddr & 0xFF00) >> 8);
  6146     0502  0871               	movf	i1FLASH_EraseBlock@startAddr+1,w
  6147     0503  009B               	movwf	27	;volatile
  6148     0504                     i1l1854:
  6149                           
  6150                           ;mcc_generated_files/memory.c: 161:     NVMCON1bits.NVMREGS = 0;
  6151     0504  131E               	bcf	30,6	;volsfr
  6152     0505                     i1l1856:
  6153                           
  6154                           ;mcc_generated_files/memory.c: 162:     NVMCON1bits.FREE = 1;
  6155     0505  161E               	bsf	30,4	;volsfr
  6156     0506                     i1l1858:
  6157                           
  6158                           ;mcc_generated_files/memory.c: 163:     NVMCON1bits.WREN = 1;
  6159     0506  151E               	bsf	30,2	;volsfr
  6160                           
  6161                           ;mcc_generated_files/memory.c: 166:     NVMCON2 = 0x55;
  6162     0507  3055               	movlw	85
  6163     0508  009F               	movwf	31	;volsfr
  6164                           
  6165                           ;mcc_generated_files/memory.c: 167:     NVMCON2 = 0xAA;
  6166     0509  30AA               	movlw	170
  6167     050A  009F               	movwf	31	;volsfr
  6168     050B                     i1l1860:
  6169                           
  6170                           ;mcc_generated_files/memory.c: 168:     NVMCON1bits.WR = 1;
  6171     050B  149E               	bsf	30,1	;volsfr
  6172     050C                     i1l1862:
  6173                           
  6174                           ;mcc_generated_files/memory.c: 169:     __nop();
  6175     050C  0000               	nop
  6176     050D                     i1l1864:
  6177                           
  6178                           ;mcc_generated_files/memory.c: 170:     __nop();
  6179     050D  0000               	nop
  6180     050E                     i1l1866:
  6181                           
  6182                           ;mcc_generated_files/memory.c: 172:     NVMCON1bits.WREN = 0;
  6183     050E  0150               	movlb	16	; select bank16
  6184     050F  111E               	bcf	30,2	;volsfr
  6185     0510                     i1l1868:
  6186                           
  6187                           ;mcc_generated_files/memory.c: 173:     INTCONbits.GIE = GIEBitValue;
  6188     0510  0C72               	rrf	i1FLASH_EraseBlock@GIEBitValue,w
  6189     0511  1C03               	skipc
  6190     0512  138B               	bcf	11,7	;volatile
  6191     0513  1803               	skipnc
  6192     0514  178B               	bsf	11,7	;volatile
  6193     0515                     i1l550:
  6194     0515  0008               	return
  6195     0516                     __end_ofi1_FLASH_EraseBlock:
  6196                           
  6197                           	psect	text41
  6198     0531                     __ptext41:	
  6199 ;; *************** function i1_FLASH_ReadWord *****************
  6200 ;; Defined at:
  6201 ;;		line 58 in file "mcc_generated_files/memory.c"
  6202 ;; Parameters:    Size  Location     Type
  6203 ;;  flashAddr       2    0[COMMON] unsigned short 
  6204 ;; Auto vars:     Size  Location     Type
  6205 ;;  GIEBitValue     1    2[COMMON] unsigned char 
  6206 ;; Return value:  Size  Location     Type
  6207 ;;                  2    0[COMMON] unsigned short 
  6208 ;; Registers used:
  6209 ;;		wreg, status,2, status,0
  6210 ;; Tracked objects:
  6211 ;;		On entry : 0/0
  6212 ;;		On exit  : 0/0
  6213 ;;		Unchanged: 0/0
  6214 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6215 ;;      Params:         2       0       0       0
  6216 ;;      Locals:         1       0       0       0
  6217 ;;      Temps:          0       0       0       0
  6218 ;;      Totals:         3       0       0       0
  6219 ;;Total ram usage:        3 bytes
  6220 ;; Hardware stack levels used: 1
  6221 ;; This function calls:
  6222 ;;		Nothing
  6223 ;; This function is called by:
  6224 ;;		i1_FLASH_WriteWord
  6225 ;; This function uses a non-reentrant model
  6226 ;;
  6227                           
  6228     0531                     i1_FLASH_ReadWord:	
  6229                           ;psect for function i1_FLASH_ReadWord
  6230                           
  6231     0531                     i1l1870:	
  6232                           ;incstack = 0
  6233                           ; Regs used in i1_FLASH_ReadWord: [wreg+status,2+status,0]
  6234                           
  6235                           
  6236                           ;mcc_generated_files/memory.c: 58: uint16_t FLASH_ReadWord(uint16_t flashAddr);mcc_gener
      +                          ated_files/memory.c: 59: {;mcc_generated_files/memory.c: 60:     uint8_t GIEBitValue = I
      +                          NTCONbits.GIE;
  6237     0531  3000               	movlw	0
  6238     0532  1B8B               	btfsc	11,7	;volatile
  6239     0533  3001               	movlw	1
  6240     0534  00F2               	movwf	i1FLASH_ReadWord@GIEBitValue
  6241     0535                     i1l1872:
  6242                           
  6243                           ;mcc_generated_files/memory.c: 62:     INTCONbits.GIE = 0;
  6244     0535  138B               	bcf	11,7	;volatile
  6245     0536                     i1l1874:
  6246                           
  6247                           ;mcc_generated_files/memory.c: 63:     NVMADRL = (flashAddr & 0x00FF);
  6248     0536  0870               	movf	i1FLASH_ReadWord@flashAddr,w
  6249     0537  0150               	movlb	16	; select bank16
  6250     0538  009A               	movwf	26	;volatile
  6251     0539                     i1l1876:
  6252                           
  6253                           ;mcc_generated_files/memory.c: 64:     NVMADRH = ((flashAddr & 0xFF00) >> 8);
  6254     0539  0871               	movf	i1FLASH_ReadWord@flashAddr+1,w
  6255     053A  009B               	movwf	27	;volatile
  6256     053B                     i1l1878:
  6257                           
  6258                           ;mcc_generated_files/memory.c: 66:     NVMCON1bits.NVMREGS = 0;
  6259     053B  131E               	bcf	30,6	;volsfr
  6260     053C                     i1l1880:
  6261                           
  6262                           ;mcc_generated_files/memory.c: 67:     NVMCON1bits.RD = 1;
  6263     053C  141E               	bsf	30,0	;volsfr
  6264     053D                     i1l1882:
  6265                           
  6266                           ;mcc_generated_files/memory.c: 68:     __nop();
  6267     053D  0000               	nop
  6268     053E                     i1l1884:
  6269                           
  6270                           ;mcc_generated_files/memory.c: 69:     __nop();
  6271     053E  0000               	nop
  6272     053F                     i1l1886:
  6273                           
  6274                           ;mcc_generated_files/memory.c: 70:     INTCONbits.GIE = GIEBitValue;
  6275     053F  0C72               	rrf	i1FLASH_ReadWord@GIEBitValue,w
  6276     0540  1C03               	skipc
  6277     0541  138B               	bcf	11,7	;volatile
  6278     0542  1803               	skipnc
  6279     0543  178B               	bsf	11,7	;volatile
  6280     0544                     i1l1888:
  6281                           
  6282                           ;mcc_generated_files/memory.c: 72:     return ((uint16_t)((NVMDATH << 8) | NVMDATL));
  6283     0544  0150               	movlb	16	; select bank16
  6284     0545  081D               	movf	29,w	;volatile
  6285     0546  00F1               	movwf	?i1_FLASH_ReadWord+1
  6286     0547  081C               	movf	28,w	;volatile
  6287     0548  00F0               	movwf	?i1_FLASH_ReadWord
  6288     0549                     i1l535:
  6289     0549  0008               	return
  6290     054A                     __end_ofi1_FLASH_ReadWord:
  6291                           
  6292                           	psect	text42
  6293     0516                     __ptext42:	
  6294 ;; *************** function _I2C1_SlaveDefRdInterruptHandler *****************
  6295 ;; Defined at:
  6296 ;;		line 259 in file "mcc_generated_files/i2c1_slave.c"
  6297 ;; Parameters:    Size  Location     Type
  6298 ;;		None
  6299 ;; Auto vars:     Size  Location     Type
  6300 ;;		None
  6301 ;; Return value:  Size  Location     Type
  6302 ;;                  1    wreg      void 
  6303 ;; Registers used:
  6304 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6305 ;; Tracked objects:
  6306 ;;		On entry : 0/0
  6307 ;;		On exit  : 0/0
  6308 ;;		Unchanged: 0/0
  6309 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6310 ;;      Params:         0       0       0       0
  6311 ;;      Locals:         0       0       0       0
  6312 ;;      Temps:          1       0       0       0
  6313 ;;      Totals:         1       0       0       0
  6314 ;;Total ram usage:        1 bytes
  6315 ;; Hardware stack levels used: 1
  6316 ;; Hardware stack levels required when called: 1
  6317 ;; This function calls:
  6318 ;;		_I2C1_SlaveGetRxData
  6319 ;; This function is called by:
  6320 ;;		_I2C1_Open
  6321 ;;		_I2C1_SlaveRdCallBack
  6322 ;; This function uses a non-reentrant model
  6323 ;;
  6324                           
  6325     0516                     _I2C1_SlaveDefRdInterruptHandler:	
  6326                           ;psect for function _I2C1_SlaveDefRdInterruptHandler
  6327                           
  6328     0516                     i1l2028:	
  6329                           ;incstack = 0
  6330                           ; Regs used in _I2C1_SlaveDefRdInterruptHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pcl
      +                          ath+cstack]
  6331                           
  6332                           
  6333                           ;mcc_generated_files/i2c1_slave.c: 261:     i2c1RdData = I2C1_SlaveGetRxData();
  6334     0516  3186  2665  3185   	fcall	_I2C1_SlaveGetRxData
  6335     0519  0140               	movlb	0	; select bank0
  6336     051A  00B0               	movwf	_i2c1RdData	;volatile
  6337     051B                     i1l2030:
  6338                           
  6339                           ;mcc_generated_files/i2c1_slave.c: 263:     if(i2cReadCnt < 5)
  6340     051B  3005               	movlw	5
  6341     051C  0232               	subwf	_i2cReadCnt@i2c1_slave$F755,w	;volatile
  6342     051D  1803               	skipnc
  6343     051E  2D20               	goto	u54_21
  6344     051F  2D21               	goto	u54_20
  6345     0520                     u54_21:
  6346     0520  2D28               	goto	i1l2034
  6347     0521                     u54_20:
  6348     0521                     i1l2032:
  6349                           
  6350                           ;mcc_generated_files/i2c1_slave.c: 264:     {;mcc_generated_files/i2c1_slave.c: 265:    
      +                               i2cDataRead[i2cReadCnt] = i2c1RdData;
  6351     0521  0832               	movf	_i2cReadCnt@i2c1_slave$F755,w
  6352     0522  3E3B               	addlw	(low (_i2cDataRead| 0))& (0+255)
  6353     0523  0086               	movwf	6
  6354     0524  0187               	clrf	7
  6355     0525  0830               	movf	_i2c1RdData,w	;volatile
  6356     0526  0081               	movwf	1
  6357                           
  6358                           ;mcc_generated_files/i2c1_slave.c: 266:     }
  6359     0527  2D2B               	goto	i1l2036
  6360     0528                     i1l2034:
  6361                           
  6362                           ;mcc_generated_files/i2c1_slave.c: 268:     {;mcc_generated_files/i2c1_slave.c: 269:    
      +                               I2C1_SlaveGetRxData();
  6363     0528  3186  2665  3185   	fcall	_I2C1_SlaveGetRxData
  6364     052B                     i1l2036:
  6365                           
  6366                           ;mcc_generated_files/i2c1_slave.c: 272:     i2cReadCnt++;
  6367     052B  3001               	movlw	1
  6368     052C  00F0               	movwf	??_I2C1_SlaveDefRdInterruptHandler
  6369     052D  0870               	movf	??_I2C1_SlaveDefRdInterruptHandler,w
  6370     052E  0140               	movlb	0	; select bank0
  6371     052F  07B2               	addwf	_i2cReadCnt@i2c1_slave$F755,f	;volatile
  6372     0530                     i1l341:
  6373     0530  0008               	return
  6374     0531                     __end_of_I2C1_SlaveDefRdInterruptHandler:
  6375                           
  6376                           	psect	text43
  6377     05EA                     __ptext43:	
  6378 ;; *************** function _I2C1_SlaveIsTxBufEmpty *****************
  6379 ;; Defined at:
  6380 ;;		line 414 in file "mcc_generated_files/i2c1_slave.c"
  6381 ;; Parameters:    Size  Location     Type
  6382 ;;		None
  6383 ;; Auto vars:     Size  Location     Type
  6384 ;;		None
  6385 ;; Return value:  Size  Location     Type
  6386 ;;                  1    wreg      _Bool 
  6387 ;; Registers used:
  6388 ;;		wreg, status,0
  6389 ;; Tracked objects:
  6390 ;;		On entry : 0/0
  6391 ;;		On exit  : 0/0
  6392 ;;		Unchanged: 0/0
  6393 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6394 ;;      Params:         0       0       0       0
  6395 ;;      Locals:         0       0       0       0
  6396 ;;      Temps:          0       0       0       0
  6397 ;;      Totals:         0       0       0       0
  6398 ;;Total ram usage:        0 bytes
  6399 ;; Hardware stack levels used: 1
  6400 ;; This function calls:
  6401 ;;		Nothing
  6402 ;; This function is called by:
  6403 ;;		_I2C1_Isr
  6404 ;; This function uses a non-reentrant model
  6405 ;;
  6406                           
  6407     05EA                     _I2C1_SlaveIsTxBufEmpty:	
  6408                           ;psect for function _I2C1_SlaveIsTxBufEmpty
  6409                           
  6410     05EA                     i1l2198:	
  6411                           ;incstack = 0
  6412                           ; Regs used in _I2C1_SlaveIsTxBufEmpty: [wreg+status,0]
  6413                           
  6414                           
  6415                           ;mcc_generated_files/i2c1_slave.c: 416:     return !SSP1STATbits.BF;
  6416     05EA  1003               	clrc
  6417     05EB  0143               	movlb	3	; select bank3
  6418     05EC  1C0F               	btfss	15,0	;volatile
  6419     05ED  1403               	setc
  6420     05EE  3000               	movlw	0
  6421     05EF  3D09               	addwfc	9,w
  6422     05F0                     i1l421:
  6423     05F0  0008               	return
  6424     05F1                     __end_of_I2C1_SlaveIsTxBufEmpty:
  6425                           
  6426                           	psect	text44
  6427     0655                     __ptext44:	
  6428 ;; *************** function _I2C1_SlaveIsRxBufFull *****************
  6429 ;; Defined at:
  6430 ;;		line 419 in file "mcc_generated_files/i2c1_slave.c"
  6431 ;; Parameters:    Size  Location     Type
  6432 ;;		None
  6433 ;; Auto vars:     Size  Location     Type
  6434 ;;		None
  6435 ;; Return value:  Size  Location     Type
  6436 ;;                  1    wreg      _Bool 
  6437 ;; Registers used:
  6438 ;;		wreg, status,2, status,0
  6439 ;; Tracked objects:
  6440 ;;		On entry : 0/0
  6441 ;;		On exit  : 0/0
  6442 ;;		Unchanged: 0/0
  6443 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6444 ;;      Params:         0       0       0       0
  6445 ;;      Locals:         0       0       0       0
  6446 ;;      Temps:          0       0       0       0
  6447 ;;      Totals:         0       0       0       0
  6448 ;;Total ram usage:        0 bytes
  6449 ;; Hardware stack levels used: 1
  6450 ;; This function calls:
  6451 ;;		Nothing
  6452 ;; This function is called by:
  6453 ;;		_I2C1_Isr
  6454 ;; This function uses a non-reentrant model
  6455 ;;
  6456                           
  6457     0655                     _I2C1_SlaveIsRxBufFull:	
  6458                           ;psect for function _I2C1_SlaveIsRxBufFull
  6459                           
  6460     0655                     i1l2206:	
  6461                           ;incstack = 0
  6462                           ; Regs used in _I2C1_SlaveIsRxBufFull: [wreg+status,2+status,0]
  6463                           
  6464                           
  6465                           ;mcc_generated_files/i2c1_slave.c: 421:     return SSP1STATbits.BF;
  6466     0655  0143               	movlb	3	; select bank3
  6467     0656  080F               	movf	15,w	;volatile
  6468     0657  3901               	andlw	1
  6469     0658                     i1l424:
  6470     0658  0008               	return
  6471     0659                     __end_of_I2C1_SlaveIsRxBufFull:
  6472                           
  6473                           	psect	text45
  6474     064C                     __ptext45:	
  6475 ;; *************** function _I2C1_SlaveIsRead *****************
  6476 ;; Defined at:
  6477 ;;		line 384 in file "mcc_generated_files/i2c1_slave.c"
  6478 ;; Parameters:    Size  Location     Type
  6479 ;;		None
  6480 ;; Auto vars:     Size  Location     Type
  6481 ;;		None
  6482 ;; Return value:  Size  Location     Type
  6483 ;;                  1    wreg      _Bool 
  6484 ;; Registers used:
  6485 ;;		wreg, status,2, status,0
  6486 ;; Tracked objects:
  6487 ;;		On entry : 0/0
  6488 ;;		On exit  : 0/0
  6489 ;;		Unchanged: 0/0
  6490 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6491 ;;      Params:         0       0       0       0
  6492 ;;      Locals:         0       0       0       0
  6493 ;;      Temps:          0       0       0       0
  6494 ;;      Totals:         0       0       0       0
  6495 ;;Total ram usage:        0 bytes
  6496 ;; Hardware stack levels used: 1
  6497 ;; This function calls:
  6498 ;;		Nothing
  6499 ;; This function is called by:
  6500 ;;		_I2C1_Isr
  6501 ;;		_I2C1_IsRead
  6502 ;; This function uses a non-reentrant model
  6503 ;;
  6504                           
  6505     064C                     _I2C1_SlaveIsRead:	
  6506                           ;psect for function _I2C1_SlaveIsRead
  6507                           
  6508     064C                     i1l2184:	
  6509                           ;incstack = 0
  6510                           ; Regs used in _I2C1_SlaveIsRead: [wreg+status,2+status,0]
  6511                           
  6512                           
  6513                           ;mcc_generated_files/i2c1_slave.c: 386:     return (SSP1STATbits.R_nW);
  6514     064C  0143               	movlb	3	; select bank3
  6515     064D  0C0F               	rrf	15,w	;volatile
  6516     064E  0C89               	rrf	9,f
  6517     064F  3901               	andlw	1
  6518     0650                     i1l403:
  6519     0650  0008               	return
  6520     0651                     __end_of_I2C1_SlaveIsRead:
  6521                           
  6522                           	psect	text46
  6523     05F1                     __ptext46:	
  6524 ;; *************** function _I2C1_SlaveIsAddr *****************
  6525 ;; Defined at:
  6526 ;;		line 379 in file "mcc_generated_files/i2c1_slave.c"
  6527 ;; Parameters:    Size  Location     Type
  6528 ;;		None
  6529 ;; Auto vars:     Size  Location     Type
  6530 ;;		None
  6531 ;; Return value:  Size  Location     Type
  6532 ;;                  1    wreg      _Bool 
  6533 ;; Registers used:
  6534 ;;		wreg, status,0
  6535 ;; Tracked objects:
  6536 ;;		On entry : 0/0
  6537 ;;		On exit  : 0/0
  6538 ;;		Unchanged: 0/0
  6539 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6540 ;;      Params:         0       0       0       0
  6541 ;;      Locals:         0       0       0       0
  6542 ;;      Temps:          0       0       0       0
  6543 ;;      Totals:         0       0       0       0
  6544 ;;Total ram usage:        0 bytes
  6545 ;; Hardware stack levels used: 1
  6546 ;; This function calls:
  6547 ;;		Nothing
  6548 ;; This function is called by:
  6549 ;;		_I2C1_Isr
  6550 ;; This function uses a non-reentrant model
  6551 ;;
  6552                           
  6553     05F1                     _I2C1_SlaveIsAddr:	
  6554                           ;psect for function _I2C1_SlaveIsAddr
  6555                           
  6556     05F1                     i1l2190:	
  6557                           ;incstack = 0
  6558                           ; Regs used in _I2C1_SlaveIsAddr: [wreg+status,0]
  6559                           
  6560                           
  6561                           ;mcc_generated_files/i2c1_slave.c: 381:     return !(SSP1STATbits.D_nA);
  6562     05F1  1003               	clrc
  6563     05F2  0143               	movlb	3	; select bank3
  6564     05F3  1E8F               	btfss	15,5	;volatile
  6565     05F4  1403               	setc
  6566     05F5  3000               	movlw	0
  6567     05F6  3D09               	addwfc	9,w
  6568     05F7                     i1l400:
  6569     05F7  0008               	return
  6570     05F8                     __end_of_I2C1_SlaveIsAddr:
  6571                           
  6572                           	psect	text47
  6573     0662                     __ptext47:	
  6574 ;; *************** function _I2C1_SlaveClearIrq *****************
  6575 ;; Defined at:
  6576 ;;		line 389 in file "mcc_generated_files/i2c1_slave.c"
  6577 ;; Parameters:    Size  Location     Type
  6578 ;;		None
  6579 ;; Auto vars:     Size  Location     Type
  6580 ;;		None
  6581 ;; Return value:  Size  Location     Type
  6582 ;;                  1    wreg      void 
  6583 ;; Registers used:
  6584 ;;		None
  6585 ;; Tracked objects:
  6586 ;;		On entry : 0/0
  6587 ;;		On exit  : 0/0
  6588 ;;		Unchanged: 0/0
  6589 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6590 ;;      Params:         0       0       0       0
  6591 ;;      Locals:         0       0       0       0
  6592 ;;      Temps:          0       0       0       0
  6593 ;;      Totals:         0       0       0       0
  6594 ;;Total ram usage:        0 bytes
  6595 ;; Hardware stack levels used: 1
  6596 ;; This function calls:
  6597 ;;		Nothing
  6598 ;; This function is called by:
  6599 ;;		_I2C1_Isr
  6600 ;; This function uses a non-reentrant model
  6601 ;;
  6602                           
  6603     0662                     _I2C1_SlaveClearIrq:	
  6604                           ;psect for function _I2C1_SlaveClearIrq
  6605                           
  6606     0662                     i1l2188:	
  6607                           ;incstack = 0
  6608                           ; Regs used in _I2C1_SlaveClearIrq: []
  6609                           
  6610                           
  6611                           ;mcc_generated_files/i2c1_slave.c: 391:     PIR1bits.SSP1IF = 0;
  6612     0662  014E               	movlb	14	; select bank14
  6613     0663  108D               	bcf	13,1	;volatile
  6614     0664                     i1l406:
  6615     0664  0008               	return
  6616     0665                     __end_of_I2C1_SlaveClearIrq:
  6617                           
  6618                           	psect	text48
  6619     05D1                     __ptext48:	
  6620 ;; *************** function _I2C1_SlaveAddrCallBack *****************
  6621 ;; Defined at:
  6622 ;;		line 298 in file "mcc_generated_files/i2c1_slave.c"
  6623 ;; Parameters:    Size  Location     Type
  6624 ;;		None
  6625 ;; Auto vars:     Size  Location     Type
  6626 ;;		None
  6627 ;; Return value:  Size  Location     Type
  6628 ;;                  1    wreg      void 
  6629 ;; Registers used:
  6630 ;;		wreg, status,2, status,0, pclath, cstack
  6631 ;; Tracked objects:
  6632 ;;		On entry : 0/0
  6633 ;;		On exit  : 0/0
  6634 ;;		Unchanged: 0/0
  6635 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6636 ;;      Params:         0       0       0       0
  6637 ;;      Locals:         0       0       0       0
  6638 ;;      Temps:          0       0       0       0
  6639 ;;      Totals:         0       0       0       0
  6640 ;;Total ram usage:        0 bytes
  6641 ;; Hardware stack levels used: 1
  6642 ;; Hardware stack levels required when called: 2
  6643 ;; This function calls:
  6644 ;;		NULL
  6645 ;;		_I2C1_SlaveDefAddrInterruptHandler
  6646 ;; This function is called by:
  6647 ;;		_I2C1_Isr
  6648 ;; This function uses a non-reentrant model
  6649 ;;
  6650                           
  6651     05D1                     _I2C1_SlaveAddrCallBack:	
  6652                           ;psect for function _I2C1_SlaveAddrCallBack
  6653                           
  6654     05D1                     i1l2194:	
  6655                           ;incstack = 0
  6656                           ; Regs used in _I2C1_SlaveAddrCallBack: [wreg+status,2+status,0+pclath+cstack]
  6657                           
  6658                           
  6659                           ;mcc_generated_files/i2c1_slave.c: 300:     if (I2C1_SlaveAddrInterruptHandler) {
  6660     05D1  0140               	movlb	0	; select bank0
  6661     05D2  0824               	movf	_I2C1_SlaveAddrInterruptHandler,w
  6662     05D3  0425               	iorwf	_I2C1_SlaveAddrInterruptHandler+1,w
  6663     05D4  1903               	btfsc	3,2
  6664     05D5  2DD7               	goto	u60_21
  6665     05D6  2DD8               	goto	u60_20
  6666     05D7                     u60_21:
  6667     05D7  2DDD               	goto	i1l358
  6668     05D8                     u60_20:
  6669     05D8                     i1l2196:
  6670                           
  6671                           ;mcc_generated_files/i2c1_slave.c: 301:         I2C1_SlaveAddrInterruptHandler();
  6672     05D8  0825               	movf	_I2C1_SlaveAddrInterruptHandler+1,w
  6673     05D9  008A               	movwf	10
  6674     05DA  0824               	movf	_I2C1_SlaveAddrInterruptHandler,w
  6675     05DB  000A               	callw
  6676     05DC  3185               	pagesel	$
  6677     05DD                     i1l358:
  6678     05DD  0008               	return
  6679     05DE                     __end_of_I2C1_SlaveAddrCallBack:
  6680                           
  6681                           	psect	text49
  6682     05F8                     __ptext49:	
  6683 ;; *************** function _I2C1_SlaveDefAddrInterruptHandler *****************
  6684 ;; Defined at:
  6685 ;;		line 305 in file "mcc_generated_files/i2c1_slave.c"
  6686 ;; Parameters:    Size  Location     Type
  6687 ;;		None
  6688 ;; Auto vars:     Size  Location     Type
  6689 ;;		None
  6690 ;; Return value:  Size  Location     Type
  6691 ;;                  1    wreg      void 
  6692 ;; Registers used:
  6693 ;;		wreg, status,2, pclath, cstack
  6694 ;; Tracked objects:
  6695 ;;		On entry : 0/0
  6696 ;;		On exit  : 0/0
  6697 ;;		Unchanged: 0/0
  6698 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6699 ;;      Params:         0       0       0       0
  6700 ;;      Locals:         0       0       0       0
  6701 ;;      Temps:          0       0       0       0
  6702 ;;      Totals:         0       0       0       0
  6703 ;;Total ram usage:        0 bytes
  6704 ;; Hardware stack levels used: 1
  6705 ;; Hardware stack levels required when called: 1
  6706 ;; This function calls:
  6707 ;;		_I2C1_SlaveGetRxData
  6708 ;; This function is called by:
  6709 ;;		_I2C1_Open
  6710 ;;		_I2C1_SlaveAddrCallBack
  6711 ;; This function uses a non-reentrant model
  6712 ;;
  6713                           
  6714     05F8                     _I2C1_SlaveDefAddrInterruptHandler:	
  6715                           ;psect for function _I2C1_SlaveDefAddrInterruptHandler
  6716                           
  6717     05F8                     i1l2040:	
  6718                           ;incstack = 0
  6719                           ; Regs used in _I2C1_SlaveDefAddrInterruptHandler: [wreg+status,2+pclath+cstack]
  6720                           
  6721                           
  6722                           ;mcc_generated_files/i2c1_slave.c: 306:     i2c1SlaveAddr = I2C1_SlaveGetRxData();
  6723     05F8  3186  2665  3185   	fcall	_I2C1_SlaveGetRxData
  6724     05FB  0140               	movlb	0	; select bank0
  6725     05FC  00AF               	movwf	_i2c1SlaveAddr	;volatile
  6726     05FD                     i1l2042:
  6727                           
  6728                           ;mcc_generated_files/i2c1_slave.c: 308:     i2cReadCnt = 0;
  6729     05FD  01B2               	clrf	_i2cReadCnt@i2c1_slave$F755	;volatile
  6730     05FE                     i1l361:
  6731     05FE  0008               	return
  6732     05FF                     __end_of_I2C1_SlaveDefAddrInterruptHandler:
  6733                           
  6734                           	psect	text50
  6735     0665                     __ptext50:	
  6736 ;; *************** function _I2C1_SlaveGetRxData *****************
  6737 ;; Defined at:
  6738 ;;		line 429 in file "mcc_generated_files/i2c1_slave.c"
  6739 ;; Parameters:    Size  Location     Type
  6740 ;;		None
  6741 ;; Auto vars:     Size  Location     Type
  6742 ;;		None
  6743 ;; Return value:  Size  Location     Type
  6744 ;;                  1    wreg      unsigned char 
  6745 ;; Registers used:
  6746 ;;		wreg
  6747 ;; Tracked objects:
  6748 ;;		On entry : 0/0
  6749 ;;		On exit  : 0/0
  6750 ;;		Unchanged: 0/0
  6751 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6752 ;;      Params:         0       0       0       0
  6753 ;;      Locals:         0       0       0       0
  6754 ;;      Temps:          0       0       0       0
  6755 ;;      Totals:         0       0       0       0
  6756 ;;Total ram usage:        0 bytes
  6757 ;; Hardware stack levels used: 1
  6758 ;; This function calls:
  6759 ;;		Nothing
  6760 ;; This function is called by:
  6761 ;;		_I2C1_SlaveDefRdInterruptHandler
  6762 ;;		_I2C1_SlaveDefAddrInterruptHandler
  6763 ;;		_I2C1_Read
  6764 ;; This function uses a non-reentrant model
  6765 ;;
  6766                           
  6767     0665                     _I2C1_SlaveGetRxData:	
  6768                           ;psect for function _I2C1_SlaveGetRxData
  6769                           
  6770     0665                     i1l1942:	
  6771                           ;incstack = 0
  6772                           ; Regs used in _I2C1_SlaveGetRxData: [wreg]
  6773                           
  6774                           
  6775                           ;mcc_generated_files/i2c1_slave.c: 431:     return SSP1BUF;
  6776     0665  0143               	movlb	3	; select bank3
  6777     0666  080C               	movf	12,w	;volatile
  6778     0667                     i1l430:
  6779     0667  0008               	return
  6780     0668                     __end_of_I2C1_SlaveGetRxData:
  6781     007E                     btemp	set	126	;btemp
  6782     007E                     int$flags	set	126
  6783     007E                     wtemp0	set	126
  6784                           
  6785                           	psect	idloc
  6786                           
  6787                           ;Config register IDLOC0 @ 0x8000
  6788                           ;	unspecified, using default values
  6789     8000                     	org	32768
  6790     8000  3FFF               	dw	16383
  6791                           
  6792                           ;Config register IDLOC1 @ 0x8001
  6793                           ;	unspecified, using default values
  6794     8001                     	org	32769
  6795     8001  3FFF               	dw	16383
  6796                           
  6797                           ;Config register IDLOC2 @ 0x8002
  6798                           ;	unspecified, using default values
  6799     8002                     	org	32770
  6800     8002  3FFF               	dw	16383
  6801                           
  6802                           ;Config register IDLOC3 @ 0x8003
  6803                           ;	unspecified, using default values
  6804     8003                     	org	32771
  6805     8003  3FFF               	dw	16383
  6806                           
  6807                           	psect	config
  6808                           
  6809                           ;Config register CONFIG1 @ 0x8007
  6810                           ;	External Oscillator Mode Selection bits
  6811                           ;	FEXTOSC = OFF, Oscillator not enabled
  6812                           ;	Power-up Default Value for COSC bits
  6813                           ;	RSTOSC = HFINTOSC_32MHZ, HFINTOSC (32 MHz)
  6814                           ;	Clock Out Enable bit
  6815                           ;	CLKOUTEN = OFF, CLKOUT function is disabled; I/O function on RA4
  6816                           ;	VDD Range Analog Calibration Selection bit
  6817                           ;	VDDAR = HI, Internal analog systems are calibrated for operation between VDD = 2.3V - 
      +                          5.5V
  6818     8007                     	org	32775
  6819     8007  3FCD               	dw	16333
  6820                           
  6821                           ;Config register CONFIG2 @ 0x8008
  6822                           ;	Master Clear Enable bit
  6823                           ;	MCLRE = EXTMCLR, If LVP = 0, MCLR pin is MCLR; If LVP = 1, RA3 pin function is MCLR
  6824                           ;	Power-up Timer Selection bits
  6825                           ;	PWRTS = PWRT_OFF, PWRT is disabled
  6826                           ;	WDT Operating Mode bits
  6827                           ;	WDTE = OFF, WDT disabled; SEN is ignored
  6828                           ;	Brown-out Reset Enable bits
  6829                           ;	BOREN = ON, Brown-out Reset Enabled, SBOREN bit is ignored
  6830                           ;	Brown-out Reset Voltage Selection bit
  6831                           ;	BORV = LO, Brown-out Reset Voltage (VBOR) set to 1.9V
  6832                           ;	PPSLOCKED One-Way Set Enable bit
  6833                           ;	PPS1WAY = ON, The PPSLOCKED bit can be set once after an unlocking sequence is execute
      +                          d; once PPSLOCKED is set, all future changes to PPS registers are prevented
  6834                           ;	Stack Overflow/Underflow Reset Enable bit
  6835                           ;	STVREN = ON, Stack Overflow or Underflow will cause a reset
  6836     8008                     	org	32776
  6837     8008  3FE7               	dw	16359
  6838                           
  6839                           ;Config register CONFIG3 @ 0x8009
  6840                           ;	unspecified, using default values
  6841     8009                     	org	32777
  6842     8009  3FFF               	dw	16383
  6843                           
  6844                           ;Config register CONFIG4 @ 0x800A
  6845                           ;	Boot Block Size Selection bits
  6846                           ;	BBSIZE = BB512, 512 words boot block size
  6847                           ;	Boot Block Enable bit
  6848                           ;	BBEN = OFF, Boot Block is disabled
  6849                           ;	SAF Enable bit
  6850                           ;	SAFEN = ON, SAF is enabled
  6851                           ;	Application Block Write Protection bit
  6852                           ;	WRTAPP = OFF, Application Block is not write-protected
  6853                           ;	Boot Block Write Protection bit
  6854                           ;	WRTB = OFF, Boot Block is not write-protected
  6855                           ;	Configuration Registers Write Protection bit
  6856                           ;	WRTC = OFF, Configuration Registers are not write-protected
  6857                           ;	Storage Area Flash (SAF) Write Protection bit
  6858                           ;	WRTSAF = OFF, SAF is not write-protected
  6859                           ;	Low Voltage Programming Enable bit
  6860                           ;	LVP = ON, Low Voltage programming enabled. MCLR/Vpp pin function is MCLR. MCLRE Config
      +                          uration bit is ignored.
  6861     800A                     	org	32778
  6862     800A  3FEF               	dw	16367
  6863                           
  6864                           ;Config register CONFIG5 @ 0x800B
  6865                           ;	User Program Flash Memory Code Protection bit
  6866                           ;	CP = OFF, User Program Flash Memory code protection is disabled
  6867     800B                     	org	32779
  6868     800B  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         96
    Persistent  34
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     31      65
    BANK1            80     11      75
    BANK2            80      0       0

Pointer List with Targets:

    FLASH_WriteBlock@flashWordArray	PTR unsigned short  size(1) Largest target is 64
		 -> ramBuff(BANK1[64]), 

    FLASH_WriteWord@ramBuf	PTR unsigned short  size(1) Largest target is 64
		 -> ramBuff(BANK1[64]), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_DefaultInterruptHandler(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_DefaultInterruptHandler(), NULL(), 

    I2C1_SlaveSetBusColIntHandler@handler	PTR FTN()void  size(2) Largest target is 1
		 -> I2C1_SlaveDefBusColInterruptHandler(), 

    I2C1_SlaveBusColInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), I2C1_SlaveDefBusColInterruptHandler(), 

    I2C1_SlaveSetWrColIntHandler@handler	PTR FTN()void  size(2) Largest target is 1
		 -> I2C1_SlaveDefWrColInterruptHandler(), 

    I2C1_SlaveWrColInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), I2C1_SlaveDefWrColInterruptHandler(), 

    I2C1_SlaveSetAddrIntHandler@handler	PTR FTN()void  size(2) Largest target is 1
		 -> I2C1_SlaveDefAddrInterruptHandler(), 

    I2C1_SlaveAddrInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), I2C1_SlaveDefAddrInterruptHandler(), 

    I2C1_SlaveSetWriteIntHandler@handler	PTR FTN()void  size(2) Largest target is 1
		 -> I2C1_SlaveDefWrInterruptHandler(), 

    I2C1_SlaveWrInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), I2C1_SlaveDefWrInterruptHandler(), 

    I2C1_SlaveSetReadIntHandler@handler	PTR FTN()void  size(2) Largest target is 1
		 -> I2C1_SlaveDefRdInterruptHandler(), 

    I2C1_SlaveRdInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), I2C1_SlaveDefRdInterruptHandler(), 

    I2C1_SlaveSetIsrHandler@handler	PTR FTN()void  size(2) Largest target is 1
		 -> I2C1_Isr(), 

    MSSP1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), I2C1_Isr(), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _TMR0_ISR->_TMR0_DefaultInterruptHandler
    _I2C1_SlaveDefWrInterruptHandler->_I2C1_SlaveSendTxData
    _data_recv_handler->i1_FLASH_WriteWord
    i1_FLASH_WriteWord->i1_FLASH_WriteBlock
    i1_FLASH_WriteBlock->i1_FLASH_EraseBlock

Critical Paths under _main in BANK0

    _main->_memory_initialize
    _memory_initialize->_FLASH_WriteWord
    _FLASH_WriteWord->_FLASH_WriteBlock
    _FLASH_WriteBlock->_FLASH_EraseBlock
    _TMR0_Initialize->_TMR0_SetInterruptHandler
    _I2C1_Open->_I2C1_SlaveSetAddrIntHandler
    _I2C1_Open->_I2C1_SlaveSetBusColIntHandler
    _I2C1_Open->_I2C1_SlaveSetIsrHandler
    _I2C1_Open->_I2C1_SlaveSetReadIntHandler
    _I2C1_Open->_I2C1_SlaveSetWrColIntHandler
    _I2C1_Open->_I2C1_SlaveSetWriteIntHandler

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    _INTERRUPT_InterruptManager->_I2C1_Isr
    _I2C1_SlaveRdCallBack->_data_recv_handler
    _data_recv_handler->i1_FLASH_WriteWord

Critical Paths under _main in BANK1

    _main->_memory_initialize
    _memory_initialize->_FLASH_WriteWord

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0    6545
                                             10 BANK1      1     1      0
                          _I2C1_Open
                  _SYSTEM_Initialize
         _SensorBoardType_validation
                       _error_signal
                 _getSensorBoardType
                  _memory_initialize
 ---------------------------------------------------------------------------------
 (1) _memory_initialize                                    3     3      0    5509
                                             29 BANK0      2     2      0
                                              9 BANK1      1     1      0
                     _FLASH_ReadWord
                    _FLASH_WriteWord
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4    1216
                                             15 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) _FLASH_WriteWord                                     10     5      5    3831
                                             28 BANK0      1     1      0
                                              0 BANK1      9     4      5
                     _FLASH_ReadWord
                   _FLASH_WriteBlock
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (3) _FLASH_WriteBlock                                    10     7      3     815
                                             18 BANK0     10     7      3
                   _FLASH_EraseBlock
 ---------------------------------------------------------------------------------
 (4) _FLASH_EraseBlock                                     3     1      2     186
                                             15 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (3) _FLASH_ReadWord                                       3     1      2     276
                                             15 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (1) _getSensorBoardType                                   2     2      0       0
                                             15 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _error_signal                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SensorBoardType_validation                           1     1      0      62
                                             15 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     121
                    _I2C1_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR0_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      0     0      0     121
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR0_SetInterruptHandler                             2     0      2     121
                                             15 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C1_Initialize                                      1     1      0       0
                                             15 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _I2C1_Open                                            0     0      0     788
                _I2C1_SlaveEnableIrq
                     _I2C1_SlaveOpen
        _I2C1_SlaveSetAddrIntHandler
      _I2C1_SlaveSetBusColIntHandler
            _I2C1_SlaveSetIsrHandler
        _I2C1_SlaveSetReadIntHandler
             _I2C1_SlaveSetSlaveAddr
             _I2C1_SlaveSetSlaveMask
       _I2C1_SlaveSetWrColIntHandler
       _I2C1_SlaveSetWriteIntHandler
 ---------------------------------------------------------------------------------
 (2) _I2C1_SlaveSetWriteIntHandler                         2     0      2     121
                                             15 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _I2C1_SlaveSetWrColIntHandler                         2     0      2     121
                                             15 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _I2C1_SlaveSetSlaveMask                               1     1      0      31
                                             15 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _I2C1_SlaveSetSlaveAddr                               1     1      0      31
                                             15 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _I2C1_SlaveSetReadIntHandler                          2     0      2     121
                                             15 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _I2C1_SlaveSetIsrHandler                              2     0      2     121
                                             15 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _I2C1_SlaveSetBusColIntHandler                        2     0      2     121
                                             15 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _I2C1_SlaveSetAddrIntHandler                          2     0      2     121
                                             15 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _I2C1_SlaveOpen                                       1     1      0       0
                                             15 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _I2C1_SlaveEnableIrq                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _INTERRUPT_InterruptManager                           0     0      0    1031
                                NULL *
                           _I2C1_Isr *
                           _TMR0_ISR
 ---------------------------------------------------------------------------------
 (6) _TMR0_ISR                                             0     0      0       0
                                NULL *
       _TMR0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (7) _TMR0_DefaultInterruptHandler                         1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (6) _I2C1_Isr                                             2     2      0    1031
                                             13 BANK0      2     2      0
             _I2C1_SlaveAddrCallBack
                 _I2C1_SlaveClearIrq
                   _I2C1_SlaveIsAddr
                   _I2C1_SlaveIsRead
              _I2C1_SlaveIsRxBufFull
             _I2C1_SlaveIsTxBufEmpty
               _I2C1_SlaveRdCallBack
             _I2C1_SlaveReleaseClock
               _I2C1_SlaveWrCallBack
 ---------------------------------------------------------------------------------
 (7) _I2C1_SlaveWrCallBack                                 0     0      0      22
                                NULL *
    _I2C1_SlaveDefWrInterruptHandler *
 ---------------------------------------------------------------------------------
 (8) _I2C1_SlaveDefWrInterruptHandler                      0     0      0      22
               _I2C1_SlaveSendTxData
 ---------------------------------------------------------------------------------
 (9) _I2C1_SlaveSendTxData                                 1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (7) _I2C1_SlaveReleaseClock                               0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C1_SlaveRdCallBack                                 0     0      0    1009
                                NULL *
    _I2C1_SlaveDefRdInterruptHandler *
                  _data_recv_handler
 ---------------------------------------------------------------------------------
 (8) _data_recv_handler                                    4     4      0    1009
                                              9 BANK0      4     4      0
                  i1_FLASH_WriteWord
 ---------------------------------------------------------------------------------
 (9) i1_FLASH_WriteWord                                   10     5      5     919
                                             13 COMMON     1     1      0
                                              0 BANK0      9     4      5
                   i1_FLASH_ReadWord
                 i1_FLASH_WriteBlock
 ---------------------------------------------------------------------------------
 (10) i1_FLASH_WriteBlock                                 10     7      3     458
                                              3 COMMON    10     7      3
                 i1_FLASH_EraseBlock
 ---------------------------------------------------------------------------------
 (11) i1_FLASH_EraseBlock                                  3     1      2      93
                                              0 COMMON     3     1      2
 ---------------------------------------------------------------------------------
 (10) i1_FLASH_ReadWord                                    3     1      2      93
                                              0 COMMON     3     1      2
 ---------------------------------------------------------------------------------
 (8) _I2C1_SlaveDefRdInterruptHandler                      1     1      0       0
                                              0 COMMON     1     1      0
                _I2C1_SlaveGetRxData
 ---------------------------------------------------------------------------------
 (7) _I2C1_SlaveIsTxBufEmpty                               0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C1_SlaveIsRxBufFull                                0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C1_SlaveIsRead                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C1_SlaveIsAddr                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C1_SlaveClearIrq                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C1_SlaveAddrCallBack                               0     0      0       0
                                NULL *
  _I2C1_SlaveDefAddrInterruptHandler *
 ---------------------------------------------------------------------------------
 (8) _I2C1_SlaveDefAddrInterruptHandler                    0     0      0       0
                _I2C1_SlaveGetRxData
 ---------------------------------------------------------------------------------
 (9) _I2C1_SlaveGetRxData                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (7) NULL(Fake)                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C1_Open
     _I2C1_SlaveEnableIrq
     _I2C1_SlaveOpen
     _I2C1_SlaveSetAddrIntHandler
     _I2C1_SlaveSetBusColIntHandler
     _I2C1_SlaveSetIsrHandler
     _I2C1_SlaveSetReadIntHandler
     _I2C1_SlaveSetSlaveAddr
     _I2C1_SlaveSetSlaveMask
     _I2C1_SlaveSetWrColIntHandler
     _I2C1_SlaveSetWriteIntHandler
   _SYSTEM_Initialize
     _I2C1_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
     _WDT_Initialize
   _SensorBoardType_validation
   _error_signal
   _getSensorBoardType
   _memory_initialize
     _FLASH_ReadWord
     _FLASH_WriteWord
       _FLASH_ReadWord
       _FLASH_WriteBlock
         _FLASH_EraseBlock
       ___wmul (ARG)
     ___wmul

 _INTERRUPT_InterruptManager (ROOT)
   NULL(Fake) *
   _I2C1_Isr *
     _I2C1_SlaveAddrCallBack
       NULL(Fake) *
       _I2C1_SlaveDefAddrInterruptHandler *
         _I2C1_SlaveGetRxData
     _I2C1_SlaveClearIrq
     _I2C1_SlaveIsAddr
     _I2C1_SlaveIsRead
     _I2C1_SlaveIsRxBufFull
     _I2C1_SlaveIsTxBufEmpty
     _I2C1_SlaveRdCallBack
       NULL(Fake) *
       _I2C1_SlaveDefRdInterruptHandler *
         _I2C1_SlaveGetRxData
       _data_recv_handler *
         i1_FLASH_WriteWord
           i1_FLASH_ReadWord
           i1_FLASH_WriteBlock
             i1_FLASH_EraseBlock
     _I2C1_SlaveReleaseClock
     _I2C1_SlaveWrCallBack
       NULL(Fake) *
       _I2C1_SlaveDefWrInterruptHandler *
         _I2C1_SlaveSendTxData
   _TMR0_ISR *
     NULL(Fake) *
     _TMR0_DefaultInterruptHandler *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM              F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     1F      41       5       81.2%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      B      4B       7       93.8%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
ABS                  0      0      9A      10        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
DATA                 0      0      9A      11        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%
BITSFR32             0      0       0      33        0.0%
SFR32                0      0       0      33        0.0%
BITSFR33             0      0       0      34        0.0%
SFR33                0      0       0      34        0.0%
BITSFR34             0      0       0      35        0.0%
SFR34                0      0       0      35        0.0%
BITSFR35             0      0       0      36        0.0%
SFR35                0      0       0      36        0.0%
BITSFR36             0      0       0      37        0.0%
SFR36                0      0       0      37        0.0%
BITSFR37             0      0       0      38        0.0%
SFR37                0      0       0      38        0.0%
BITSFR38             0      0       0      39        0.0%
SFR38                0      0       0      39        0.0%
BITSFR39             0      0       0      40        0.0%
SFR39                0      0       0      40        0.0%
BITSFR40             0      0       0      41        0.0%
SFR40                0      0       0      41        0.0%
BITSFR41             0      0       0      42        0.0%
SFR41                0      0       0      42        0.0%
BITSFR42             0      0       0      43        0.0%
SFR42                0      0       0      43        0.0%
BITSFR43             0      0       0      44        0.0%
SFR43                0      0       0      44        0.0%
BITSFR44             0      0       0      45        0.0%
SFR44                0      0       0      45        0.0%
BITSFR45             0      0       0      46        0.0%
SFR45                0      0       0      46        0.0%
BITSFR46             0      0       0      47        0.0%
SFR46                0      0       0      47        0.0%
BITSFR47             0      0       0      48        0.0%
SFR47                0      0       0      48        0.0%
BITSFR48             0      0       0      49        0.0%
SFR48                0      0       0      49        0.0%
BITSFR49             0      0       0      50        0.0%
SFR49                0      0       0      50        0.0%
BITSFR50             0      0       0      51        0.0%
SFR50                0      0       0      51        0.0%
BITSFR51             0      0       0      52        0.0%
SFR51                0      0       0      52        0.0%
BITSFR52             0      0       0      53        0.0%
SFR52                0      0       0      53        0.0%
BITSFR53             0      0       0      54        0.0%
SFR53                0      0       0      54        0.0%
BITSFR54             0      0       0      55        0.0%
SFR54                0      0       0      55        0.0%
BITSFR55             0      0       0      56        0.0%
SFR55                0      0       0      56        0.0%
BITSFR56             0      0       0      57        0.0%
SFR56                0      0       0      57        0.0%
BITSFR57             0      0       0      58        0.0%
SFR57                0      0       0      58        0.0%
BITSFR58             0      0       0      59        0.0%
SFR58                0      0       0      59        0.0%
BITSFR59             0      0       0      60        0.0%
SFR59                0      0       0      60        0.0%
BITSFR60             0      0       0      61        0.0%
SFR60                0      0       0      61        0.0%
BITSFR61             0      0       0      62        0.0%
SFR61                0      0       0      62        0.0%
BITSFR62             0      0       0      63        0.0%
SFR62                0      0       0      63        0.0%
BITSFR63             0      0       0      64        0.0%
SFR63                0      0       0      64        0.0%


Microchip Technology PIC Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Tue Apr 25 11:45:59 2023

            i1FLASH_EraseBlock@GIEBitValue 0072                   ??_I2C1_SlaveAddrCallBack 0070  
                                       l42 01F4                                         l72 0654  
                                       l64 05C3                                         l69 0586  
                      ___wmul@multiplicand 0051                                        l111 0478  
                                      l331 062E                                        l328 0634  
                                      l344 0616                                        l354 0640  
                                      l282 05E9                                        l602 0596  
                                      l364 061C                                        l540 0376  
                                      l285 03B5                                        l605 0610  
                                      l374 063A                                        l550 04D9  
                                      l391 0628                                        l535 04F9  
                                      l543 0278                                        l608 065B  
                                      l544 02CD                                        l385 05A6  
                                      l473 0575                                        l394 0622  
                                      l546 02C5                                        l722 04A5  
                                      l651 0498                                        l724 04B9  
                                      l652 0498                                        l397 065E  
                                      l495 060A                   __end_of_I2C1_SlaveIsAddr 05F8  
                                      u940 0277                                        u941 0276  
                                      u950 02AC                                        u951 02AB  
                                      u960 02C5                                        u961 02C4  
                                      u945 0273                                        u970 035C  
                                      u971 035B                                        u980 059C  
                                      u981 059B                                        u990 04A1  
                                      u991 04A0                   __end_of_I2C1_SlaveIsRead 0651  
                                      wreg 0009                          _data_recv_handler 03F4  
                         ?_FLASH_WriteWord 00E0             FLASH_WriteBlock@flashWordArray 0054  
                       ?_data_recv_handler 0070                                       l2500 0289  
                                     l2430 04BF                                       l2510 02AE  
                                     l2502 028D                                       l2600 062F  
                                     l2440 04C9                                       l2432 04C0  
                                     l2520 02BF                                       l2512 02B3  
                                     l2504 0297                           __end_of_I2C1_Isr 0262  
                                     l2602 0635                                       l2610 0617  
                                     l2450 04D3                                       l2442 04CE  
                                     l2434 04C3                                       l2522 02C7  
                                     l2514 02B4                                       l2506 02A5  
                                     l2612 065C                                       l2604 0611  
                                     l2620 0569                                       l2460 04E7  
                                     l2452 04DA                                       l2444 04CF  
                                     l2436 04C7                                       l2428 04BA  
                                     l2516 02B5                                       l2508 02AC  
                                     l2540 035C                                       l2700 0493  
                                     l2606 0629                                       l2630 060F  
                                     l2550 045F                                       l2622 056A  
                                     l2614 0561                                       l2470 04F1  
                                     l2462 04E8                                       l2454 04DF  
                                     l2446 04D0                                       l2438 04C8  
                                     l2518 02BB                                       l2542 0368  
                                     l2534 0338                                       l2526 032D  
                                     l2702 0496                                       l2608 063B  
                                     l2560 0465                                       l2552 0461  
                                     l2544 0456                                       l2624 0572  
                                     l2616 0566                                       l2632 0659  
                                     l2464 04E9                                       l2456 04E0  
                                     l2448 04D1                                       l2480 026D  
                                     l2536 0351                                       l2528 0334  
                                     l2640 04AA                                       l2704 0497  
                                     l2626 060B                                       l2570 046F  
                                     l2562 0467                                       l2554 0462  
                                     l2546 0459                                       l2474 0605  
                                     l2618 0567                                       l2466 04EA  
                                     l2458 04E3                                       l2490 0283  
                                     l2538 0356                                       l2642 04AF  
                                     l2634 049A                                       l2650 00F5  
                                     l2580 05E7                                       l2628 060D  
                                     l2572 0472                                       l2564 0469  
                                     l2556 0463                                       l2548 045B  
                                     l2468 04EB                                       l2492 0284  
                                     l2484 0279                                       l2476 0262  
                                     l2644 04B5                                       l2636 049D  
                                     l2660 01A8                                       l2652 0110  
                                     l2590 05A4                                       l2582 05E8  
                                     l2574 0475                                       l2566 046B  
                                     l2558 0464                                       l2670 057D  
                                     l2486 0280                                       l2478 0269  
                                     l2638 04A1                                       l2662 01CE  
                                     l2654 0136                                       l2592 05A5  
                                     l2584 0597                                       l2576 05DE  
                                     l2568 046D                                       l2672 0583  
                                     l2680 0651                                       l2664 05B6  
                                     l2488 0282                                       l2656 015C  
                                     l2648 00E5                                       l2586 059C  
                                     l2682 0377                                       l2578 05E1  
                                     l2690 0593                                       l2498 0286  
                                     l2658 0182                                       l2588 059E  
                                     l2596 0625                                       l2684 03B2  
                                     l2676 0585                                       l2668 0578  
                                     l2598 061F                                       l2686 0587  
                                     l2694 0479                                       l2688 0590  
                                     l2696 048A                                       l2698 0490  
                                     u1020 04B5                                       u1021 04B4  
                                     u1005 04A6                                       u1030 00F5  
                                     u1015 04AB                                       u1031 00F4  
                                     u1050 057D                                       u1051 057C  
                                     u1060 0583                                       u1061 0582  
                                     u1045 05BD                                       u1070 048A  
                                     u1071 0489                                       _LATA 0018  
                                     _LATC 001A                                       i1l50 042B  
                                     _WPUA 1F39                                       _WPUC 1F4F  
                                     _main 0479                        ??_data_recv_handler 0049  
       I2C1_SlaveSetAddrIntHandler@handler 004F                                       fsr0h 0005  
                                     fsr1h 0007                                       indf0 0000  
                                     fsr0l 0004                                       indf1 0001  
                                     fsr1l 0006                                       btemp 007E  
                        ?_FLASH_WriteBlock 0052                                       start 0031  
                               _i2c1RdData 0030                         ??_FLASH_WriteBlock 0055  
                               _i2c1WrData 0031         I2C1_SlaveSetReadIntHandler@handler 004F  
             _I2C1_SlaveRdInterruptHandler 0028               _I2C1_SlaveWrInterruptHandler 0026  
                         ??_I2C1_SlaveOpen 004F                    __end_of_TMR0_Initialize 0576  
           ??_TMR0_DefaultInterruptHandler 0070              __end_of_OSCILLATOR_Initialize 0611  
                        __end_of_I2C1_Open 03B6                                      ?_main 0070  
                __end_of_data_recv_handler 042C                                      i1l400 05F7  
                                    i1l160 002F                                      i1l161 002F  
                                    i1l153 0013                                      i1l403 0650  
                                    i1l500 043C                                      i1l156 0026  
                                    i1l421 05F0                                      i1l341 0530  
                                    i1l325 0261                                      i1l430 0667  
                                    i1l406 0664                                      i1l510 0453  
                                    i1l351 0646                                      i1l503 0443  
                                    i1l424 0658                                      i1l336 0560  
                                    i1l512 0455                                      i1l361 05FE  
                                    i1l409 0661                                      i1l427 064B  
                                    i1l507 044C                                      i1l540 03F3  
                                    i1l348 05D0                                      i1l358 05DD  
                                    i1l550 0515                                      i1l535 0549  
                                    i1l543 02E3                                      i1l544 032C  
                                    i1l546 0325                                      i1l492 05B5  
       __end_of_SensorBoardType_validation 0587                 _SensorBoardType_validation 0576  
                                    _OSCEN 0891                                      _TMR0H 059D  
                                    _TMR0L 059C                                      u50_20 0325  
                                    u50_21 0324                                      u51_20 03E0  
                                    u51_21 03DF                                      _PORTA 000C  
                                    _PORTC 000E                                      u60_20 05D8  
                                    u52_20 0403                                      u60_21 05D7  
                                    u52_21 0402                                      u53_20 042B  
                                    u61_20 05CB                                      u53_21 042A  
                                    u61_21 05CA                                      u54_20 0521  
                                    u62_20 0551                                      u54_21 0520  
                                    u62_21 0550                                      u63_20 055D  
                                    u63_21 055C                                      u48_20 02E2  
                                    u80_20 0218                                      u64_20 0436  
                                    u48_21 02E1                                      u80_21 0217  
                                    u64_21 0435                                      u48_25 02DE  
                                    u49_20 030F                                      u81_20 022B  
                                    u65_20 043C                                      u49_21 030E  
                                    u81_21 022A                                      u65_21 043B  
                                    _TRISA 0012                                      _TRISC 0014  
                                    u82_20 023B                                      u66_20 0443  
                                    u90_20 002E                                      u82_21 023A  
                                    u66_21 0442                                      u90_21 002D  
                                    u83_20 0244                                      u67_20 044C  
                                    u83_21 0243                                      u67_21 044B  
                                    u68_20 0453                                      u84_20 000B  
                                    u68_21 0452                                      u84_21 000A  
                                    u77_20 05B0                                      u85_20 000F  
                                    u77_21 05AF                                      u85_21 000E  
                                    u78_20 0200                                      u86_20 0017  
                                    u78_21 01FF                                      u86_21 0016  
                                    u79_20 0208                                      u87_20 001B  
                                    u79_21 0207                                      u87_21 001A  
                                    u88_20 001F                                      u88_21 001E  
                                    u89_20 002A                                      u89_21 0029  
                ?_TMR0_SetInterruptHandler 004F                          ??_I2C1_Initialize 004F  
                         __end_of_TMR0_ISR 05B6             I2C1_SlaveSetSlaveMask@maskAddr 004F  
                                    _debug 0034                             _WDT_Initialize 0659  
                               _i2cReadCnt 0039                             _i2c1SlaveState 002E  
                                    pclath 000A                                      status 0003  
                                    wtemp0 007E                            __initialization 00D0  
                             __end_of_main 049A                ?_INTERRUPT_InterruptManager 0070  
                                   ??_main 005F                         _I2C1_SlaveClearIrq 0662  
                        ?i1_FLASH_ReadWord 0070                 _i2cReadCnt@i2c1_slave$F185 0033  
               _i2cReadCnt@i2c1_slave$F755 0032                         ??i1_FLASH_ReadWord 0072  
                   __end_of_WDT_Initialize 065C                        ?_I2C1_SlaveClearIrq 0070  
                FLASH_WriteBlock@writeAddr 0052                    ?_I2C1_SlaveReleaseClock 0070  
                                   _ANSELA 1F38                                     _ANSELC 1F4E  
                                   _T0CON0 059E                                     _T0CON1 059F  
                                   _RC0PPS 1F20                                     _RC1PPS 1F21  
                       _getSensorBoardType 05B6                                     i1l2020 0407  
                                   i1l2012 03F4                                     i1l2030 051B  
                                   i1l2022 041D                                     i1l2014 03FE  
                                   i1l2040 05F8                                     i1l2032 0521  
                                   i1l2024 0422                                     i1l2016 0403  
                                   i1l2042 05FD                                     i1l2034 0528  
                                   i1l2210 054A                                     i1l2202 05C4  
                                   i1l2036 052B                                     i1l2028 0516  
                                   i1l2212 0551                                     i1l2204 05CB  
                                   i1l2206 0655                                     i1l2214 0556  
                                   i1l2038 0641                                     i1l2302 05A7  
                                   i1l2216 055D                                     i1l2320 020C  
                                   i1l2312 01F5                                     i1l2240 0446  
                                   i1l2232 042C                                     i1l2304 05A9  
                                   _ODCONA 1F3A                                     i1l2218 065F  
                                   i1l2330 0223                                     i1l2322 0210  
                                   i1l2314 01F8                                     i1l2242 044D  
                                   i1l2234 0436                                     i1l2306 05B0  
                                   _ODCONC 1F50                                     i1l2340 023C  
                                   i1l2332 022B                                     i1l2324 0218  
                                   i1l2316 0200                                     i1l2236 043D  
                                   i1l2190 05F1                                     i1l2342 0244  
                                   i1l2334 022F                                     i1l2326 021C  
                                   i1l2318 0208                                     i1l2238 0444  
                                   i1l2184 064C                                     i1l2336 0233  
                                   i1l2328 0220                                     i1l2360 0006  
                                   i1l2194 05D1                                     i1l2346 0248  
                                   i1l2370 001F                                     i1l2362 000B  
                                   i1l2196 05D8                                     i1l2188 0662  
                                   i1l1900 02E4                                     i1l2348 025E  
                                   i1l2372 002A                                     i1l2364 000F  
                                   i1l2198 05EA                                     i1l1902 02EB  
                                   i1l2366 0017                                     i1l1920 02FD  
                                   i1l1904 02ED                                     i1l2368 001B  
                                   i1l1850 04FF                                     i1l1930 0315  
                                   i1l1922 0309                                     i1l1914 02F0  
                                   i1l1906 02EE                                     i1l1860 050B  
                                   i1l1852 0502                                     i1l1932 0316  
                                   i1l1924 030F                                     i1l1916 02F3  
                                   i1l1908 02EF                                     i1l1942 0665  
                                   i1l1870 0531                                     i1l1862 050C  
                                   i1l1854 0504                                     i1l1846 04FA  
                                   i1l1934 031B                                     i1l1926 0310  
                                   i1l1918 02F5                                     i1l2726 0250  
                                   i1l1880 053C                                     i1l1872 0535  
                                   i1l1864 050D                                     i1l1856 0505  
                                   i1l1848 04FE                                     i1l1936 031F  
                                   i1l1928 0314                                     i1l1882 053D  
                                   i1l1874 0536                                     i1l1866 050E  
                                   i1l1858 0506                                     i1l1938 0327  
                                   i1l1946 0648                                     i1l1884 053E  
                                   i1l1876 0539                                     i1l1868 0510  
                                   i1l1892 02CE                                     i1l1980 03C1  
                                   i1l1972 03B6                                     i1l1886 053F  
                                   i1l1878 053B                                     i1l1894 02D4  
                                   i1l1982 03D6                                     i1l1974 03BD  
                                   i1l1888 0544                                     i1l1896 02D8  
                                   i1l1984 03DA                                     i1l1986 03E0  
                                   i1l1988 03EA                                     _INLVLA 1F3C  
                                   _INLVLC 1F52                                     _OSCFRQ 0893  
                                   _WDTCON 080C                                _i2cDataRead 003B  
                      ?_getSensorBoardType 0070                       ??_I2C1_SlaveClearIrq 0070  
                            ?_error_signal 0070                                     ___wmul 049A  
            FLASH_WriteWord@blockStartAddr 00E6                        FLASH_WriteWord@word 00E3  
                         ?_TMR0_Initialize 0070                                  ?_I2C1_Isr 0070  
                  ?_I2C1_SlaveSetSlaveAddr 0070                    ?_I2C1_SlaveSetSlaveMask 0070  
     __end_of_I2C1_SlaveSetWrColIntHandler 061D               _I2C1_SlaveSetWrColIntHandler 0617  
                  FLASH_ReadWord@flashAddr 004F                       ??_getSensorBoardType 004F  
     I2C1_SlaveSetBusColIntHandler@handler 004F                            ?_WDT_Initialize 0070  
           __end_of_I2C1_SlaveReleaseClock 0662   TMR0_SetInterruptHandler@InterruptHandler 004F  
                   _I2C1_SlaveAddrCallBack 05D1                          _SYSTEM_Initialize 0587  
                i1FLASH_ReadWord@flashAddr 0070                    __end_of__initialization 00E0  
      I2C1_SlaveSetWrColIntHandler@handler 004F                         ?_SYSTEM_Initialize 0070  
                           ??_error_signal 004F                             __pcstackCOMMON 0070  
              i1FLASH_WriteBlock@writeAddr 0073                 __end_ofi1_FLASH_EraseBlock 0516  
                      ??_SYSTEM_Initialize 0051                                  ?_TMR0_ISR 0070  
           __end_of_I2C1_SlaveSetSlaveAddr 0629                           FLASH_WriteWord@i 00E8  
           __end_of_I2C1_SlaveSetSlaveMask 0623                                 ??_I2C1_Isr 004D  
                        ?_I2C1_SlaveIsAddr 0070                          ?_I2C1_SlaveIsRead 0070  
              FLASH_WriteBlock@GIEBitValue 005A                         ??_I2C1_SlaveIsAddr 0070  
                       ??_I2C1_SlaveIsRead 0070                  __end_of_SYSTEM_Initialize 0597  
                               __pbssBANK0 0020                                 __pbssBANK1 00A0  
                     memory_initialize@TAG 00E9                        _I2C1_SlaveEnableIrq 065C  
                      _I2C1_SlaveGetRxData 0665                      _I2C1_SlaveIsRxBufFull 0655  
                               __pmaintext 0479              ?_I2C1_SlaveSetWriteIntHandler 004F  
         __end_of_TMR0_SetInterruptHandler 060B                                    ?___wmul 004F  
                               ??_TMR0_ISR 0071                                 __pintentry 0004  
                          _I2C1_Initialize 05DE                       ?_I2C1_SlaveEnableIrq 0070  
                     ?_I2C1_SlaveGetRxData 0070                             _FLASH_ReadWord 04DA  
              ?_SensorBoardType_validation 0070                                  _I2C1_Open 0377  
                                  _NVMADRH 081B                                    _NVMADRL 081A  
                                  _NVMDATH 081D                                    _OSCTUNE 0892  
                                  _NVMDATL 081C                                    _NVMCON2 081F  
                                  _SSP1ADD 018D                                    _SLRCONA 1F3B  
                                  _SLRCONC 1F51                                    _SSP1BUF 018C  
                        i1_FLASH_WriteWord 03B6                                    _SSP1MSK 018E  
                 ?_I2C1_SlaveSetIsrHandler 004F                         ?i1_FLASH_WriteWord 0040  
                         _FLASH_EraseBlock 04BA             ?_I2C1_SlaveSetBusColIntHandler 004F  
                      ??i1_FLASH_WriteWord 007D  SensorBoardType_validation@SensorBoardType 004F  
                    ??_I2C1_SlaveEnableIrq 004F                      ??_I2C1_SlaveGetRxData 0070  
                   __end_of_FLASH_ReadWord 04FA                                 _error_flag 003A  
         i1FLASH_WriteBlock@blockStartAddr 0079                                    __ptext1 00E3  
                                  __ptext2 049A                                    __ptext3 032D  
                                  __ptext4 0262                                    __ptext5 04BA  
                                  __ptext6 04DA                                    __ptext7 05B6  
                                  __ptext8 0651                                    __ptext9 0576  
                                  _command 0037                          _memory_initialize 00E3  
           _I2C1_SlaveAddrInterruptHandler 0024                                    _ramBuff 00A0  
                    _OSCILLATOR_Initialize 060B                  __end_ofi1_FLASH_WriteWord 03F4  
                       ?_memory_initialize 0070            I2C1_SlaveSetSlaveAddr@slaveAddr 004F  
                 ??_PIN_MANAGER_Initialize 004F                                    _low_cal 0036  
                               ?_I2C1_Open 0070                   ??_I2C1_SlaveIsTxBufEmpty 0070  
                                  main@TAG 00EA                       __end_of_error_signal 0655  
                         _default_in_flash 0040                                    clrloop0 0600  
               __end_ofi1_FLASH_WriteBlock 032D                       end_of_initialization 00E0  
                      ??_memory_initialize 005D                                  _LED_timer 0038  
                   ?_I2C1_SlaveIsRxBufFull 0070                         i1FLASH_WriteWord@i 0048  
          _I2C1_SlaveWrColInterruptHandler 0020                    __end_of_I2C1_Initialize 05EA  
             __end_of_I2C1_SlaveRdCallBack 0561                  FLASH_ReadWord@GIEBitValue 0051  
                __end_of_memory_initialize 01F5             ??_I2C1_SlaveSetWriteIntHandler 0051  
                          ?_FLASH_ReadWord 004F                           ??_WDT_Initialize 004F  
                 _TMR0_SetInterruptHandler 0605            __end_of_I2C1_SlaveSetIsrHandler 0635  
                  ?_I2C1_SlaveAddrCallBack 0070             I2C1_SlaveSetIsrHandler@handler 004F  
                        FLASH_WriteBlock@i 005B                          ??_FLASH_WriteWord 005C  
                           __end_of___wmul 04BA                              _i2c1SlaveAddr 002F  
                         _FLASH_WriteBlock 0262                     ?_OSCILLATOR_Initialize 0070  
           __end_of_I2C1_SlaveAddrCallBack 05DE               __end_of_I2C1_SlaveSendTxData 064C  
                      start_initialization 00D0                                ??_I2C1_Open 0051  
                       i1_FLASH_EraseBlock 04FA               __end_of_I2C1_SlaveWrCallBack 05D1  
              i1FLASH_ReadWord@GIEBitValue 0072                        ?i1_FLASH_EraseBlock 0070  
                 I2C1_SlaveSendTxData@data 0070                           ?_I2C1_Initialize 0070  
                                 ??___wmul 0053                       ??i1_FLASH_EraseBlock 0072  
              FLASH_EraseBlock@GIEBitValue 0051                   __end_of_FLASH_EraseBlock 04DA  
  __end_of_I2C1_SlaveDefRdInterruptHandler 0531          ??_I2C1_SlaveDefRdInterruptHandler 0070  
         ?_I2C1_SlaveDefRdInterruptHandler 0070            _I2C1_SlaveDefRdInterruptHandler 0516  
  __end_of_I2C1_SlaveDefWrInterruptHandler 0647          ??_I2C1_SlaveDefWrInterruptHandler 0071  
         ?_I2C1_SlaveDefWrInterruptHandler 0070            _I2C1_SlaveDefWrInterruptHandler 0641  
                                ___latbits 0000                              __pcstackBANK0 0040  
                            __pcstackBANK1 00E0                       _I2C1_SlaveRdCallBack 054A  
             ?_I2C1_SlaveSetAddrIntHandler 004F                           i1_FLASH_ReadWord 0531  
                    _TMR0_InterruptHandler 005F                                  __pnvBANK0 005F  
                   _PIN_MANAGER_Initialize 0456                     _MSSP1_InterruptHandler 002A  
                   _I2C1_SlaveIsTxBufEmpty 05EA                               _error_signal 0651  
             ?_I2C1_SlaveSetReadIntHandler 004F                   __end_of_default_in_flash 00D0  
                    i1FLASH_WriteWord@word 0043            ??_I2C1_SlaveSetBusColIntHandler 0051  
                                 _I2C1_Isr 01F5               ??_INTERRUPT_InterruptManager 007E  
                 ??_I2C1_SlaveReleaseClock 0070              i1FLASH_WriteBlock@GIEBitValue 007B  
      __end_of_I2C1_SlaveSetAddrIntHandler 0641                _I2C1_SlaveSetAddrIntHandler 063B  
                           _I2C1_SlaveOpen 0597                      ?_I2C1_SlaveRdCallBack 0070  
                  i1FLASH_WriteWord@ramBuf 0042                    i1FLASH_WriteWord@offset 0045  
                  ??_I2C1_SlaveIsRxBufFull 0070              ?_I2C1_SlaveSetWrColIntHandler 004F  
                 FLASH_WriteWord@flashAddr 00E0             FLASH_WriteBlock@blockStartAddr 0058  
            ??_I2C1_SlaveSetAddrIntHandler 0051                          ??_TMR0_Initialize 0051  
                           ___wmul@product 0053                                   _LATAbits 0018  
                                clear_ram0 05FF                                   _PIE0bits 0716  
                                 _PIE1bits 0717                   ??_I2C1_SlaveSetSlaveAddr 004F  
      __end_of_I2C1_SlaveSetReadIntHandler 062F                _I2C1_SlaveSetReadIntHandler 0629  
                 ??_I2C1_SlaveSetSlaveMask 004F                __end_of_I2C1_SlaveEnableIrq 065F  
               ??_TMR0_SetInterruptHandler 0051                                   _PIR0bits 070C  
              __end_of_I2C1_SlaveGetRxData 0668                                   _PIR1bits 070D  
                FLASH_EraseBlock@startAddr 004F                       _I2C1_SlaveSendTxData 0647  
                         ??_FLASH_ReadWord 0051                   _default_in_flash_absaddr 0040  
                       i1_FLASH_WriteBlock 02CE                       _I2C1_SlaveWrCallBack 05C4  
                                 _SSP1CON1 0190                                   _SSP1CON2 0191  
                                 _TMR0_ISR 05A7                                   _SSP1STAT 018F  
         i1FLASH_WriteBlock@flashWordArray 0075              ??_I2C1_SlaveSetReadIntHandler 0051  
                      ?i1_FLASH_WriteBlock 0073                          ___wmul@multiplier 004F  
                   __end_of_I2C1_SlaveOpen 05A7                 i1FLASH_WriteWord@flashAddr 0040  
                       data_recv_handler@i 004B            i1FLASH_WriteWord@blockStartAddr 0046  
         _I2C1_SlaveBusColInterruptHandler 0022                            _FLASH_WriteWord 032D  
       _I2C1_SlaveDefWrColInterruptHandler 0000                       ??i1_FLASH_WriteBlock 0076  
                 __end_of_FLASH_WriteBlock 02CE  __end_of_I2C1_SlaveDefAddrInterruptHandler 05FF  
      ??_I2C1_SlaveDefAddrInterruptHandler 0070         ?_I2C1_SlaveDefAddrInterruptHandler 0070  
        _I2C1_SlaveDefAddrInterruptHandler 05F8                           _I2C1_SlaveIsAddr 05F1  
                         _I2C1_SlaveIsRead 064C                      ?_I2C1_SlaveSendTxData 0070  
                    ?_I2C1_SlaveWrCallBack 0070                    ??_OSCILLATOR_Initialize 004F  
                 __p_default_in_flash_text 0040        _I2C1_SlaveDefBusColInterruptHandler 0000  
                          ?_I2C1_SlaveOpen 0070                     ??_I2C1_SlaveRdCallBack 007E  
    __end_of_I2C1_SlaveSetBusColIntHandler 063B              _I2C1_SlaveSetBusColIntHandler 0635  
                               _T0CON0bits 059E                i1FLASH_EraseBlock@startAddr 0070  
                                 __ptext10 0587                                   __ptext11 0659  
                                 __ptext20 061D                                   __ptext12 0561  
                                 __ptext21 0623                                   __ptext13 0605  
                                 __ptext30 042C                                   __ptext22 0629  
                                 __ptext14 0456                                   __ptext31 01F5  
                                 __ptext23 062F                                   __ptext15 060B  
                                 __ptext40 04FA                                   __ptext32 05C4  
                                 __ptext24 0635                                   __ptext16 05DE  
                                 __ptext41 0531                                   __ptext33 0641  
                                 __ptext25 063B                                   __ptext17 0377  
                                 __ptext50 0665                                   __ptext42 0516  
                                 __ptext34 0647                                   __ptext26 0597  
                                 __ptext18 0611                                   __ptext43 05EA  
                                 __ptext35 065F                                   __ptext27 065C  
                                 __ptext19 0617                                   __ptext44 0655  
                                 __ptext36 054A                                   __ptext45 064C  
                                 __ptext37 03F4                                   __ptext29 05A7  
                                 __ptext46 05F1                                   __ptext38 03B6  
                                 __ptext47 0662                                   __ptext39 02CE  
                                 __ptext48 05D1                                   __ptext49 05F8  
                             _SSP1CON1bits 0190                               _SSP1CON2bits 0191  
                                 _high_cal 0035                      FLASH_WriteWord@ramBuf 00E2  
                    FLASH_WriteWord@offset 00E5       __end_of_I2C1_SlaveSetWriteIntHandler 0617  
             _I2C1_SlaveSetWriteIntHandler 0611             ??_I2C1_SlaveSetWrColIntHandler 0051  
     __end_of_TMR0_DefaultInterruptHandler 0456               _TMR0_DefaultInterruptHandler 042C  
               __end_of_I2C1_SlaveClearIrq 0665                    _I2C1_SlaveSetIsrHandler 062F  
                                 int$flags 007E         __end_of_INTERRUPT_InterruptManager 0031  
               _INTERRUPT_InterruptManager 0004                               _SSP1STATbits 018F  
                        ?_FLASH_EraseBlock 004F                   __end_ofi1_FLASH_ReadWord 054A  
               __end_of_getSensorBoardType 05C4                         ??_FLASH_EraseBlock 0051  
                               _INTCONbits 000B                        i1FLASH_WriteBlock@i 007C  
                  __end_of_FLASH_WriteWord 0377               ??_SensorBoardType_validation 004F  
                              _NVMCON1bits 081E                _i2cReadCnt@i2c1_slave$F1101 002D  
              _i2cReadCnt@i2c1_slave$F1138 002C                                   intlevel1 0000  
                   _I2C1_SlaveReleaseClock 065F                    ?_PIN_MANAGER_Initialize 0070  
                  ?_I2C1_SlaveIsTxBufEmpty 0070                     ??_I2C1_SlaveSendTxData 0070  
                   ??_I2C1_SlaveWrCallBack 0071              ?_TMR0_DefaultInterruptHandler 0070  
      I2C1_SlaveSetWriteIntHandler@handler 004F                                 _SSP1DATPPS 1EC6  
                               _SSP1CLKPPS 1EC5                     _I2C1_SlaveSetSlaveAddr 0623  
                          _TMR0_Initialize 0561                     _I2C1_SlaveSetSlaveMask 061D  
           __end_of_PIN_MANAGER_Initialize 0479             __end_of_I2C1_SlaveIsTxBufEmpty 05F1  
            __end_of_I2C1_SlaveIsRxBufFull 0659                  ??_I2C1_SlaveSetIsrHandler 0051  
