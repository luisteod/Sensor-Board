

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Mon Apr 17 09:30:07 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	16F15223
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	_default_in_flash_text,global,class=STRCODE,delta=2,noexec
     5                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    10                           	psect	clrtext,global,class=CODE,delta=2
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    14                           	psect	text1,local,class=CODE,merge=1,delta=2
    15                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    16                           	psect	text3,local,class=CODE,merge=1,delta=2
    17                           	psect	text4,local,class=CODE,merge=1,delta=2
    18                           	psect	text5,local,class=CODE,merge=1,delta=2
    19                           	psect	text6,local,class=CODE,merge=1,delta=2
    20                           	psect	text7,local,class=CODE,merge=1,delta=2
    21                           	psect	text8,local,class=CODE,merge=1,delta=2
    22                           	psect	text9,local,class=CODE,merge=1,delta=2
    23                           	psect	text10,local,class=CODE,merge=1,delta=2
    24                           	psect	text11,local,class=CODE,merge=1,delta=2
    25                           	psect	text12,local,class=CODE,merge=1,delta=2
    26                           	psect	text13,local,class=CODE,merge=1,delta=2
    27                           	psect	text14,local,class=CODE,merge=1,delta=2
    28                           	psect	text15,local,class=CODE,merge=1,delta=2
    29                           	psect	intentry,global,class=CODE,delta=2
    30                           	psect	text17,local,class=CODE,merge=1,delta=2
    31                           	psect	text18,local,class=CODE,merge=1,delta=2
    32                           	psect	text19,local,class=CODE,merge=1,delta=2
    33                           	psect	text20,local,class=CODE,merge=1,delta=2
    34                           	psect	text21,local,class=CODE,merge=1,delta=2
    35                           	psect	text22,local,class=CODE,merge=1,inline,delta=2
    36                           	psect	text23,local,class=CODE,merge=1,inline,delta=2
    37                           	psect	text24,local,class=CODE,merge=1,delta=2
    38                           	psect	text25,local,class=CODE,merge=1,delta=2
    39                           	psect	text26,local,class=CODE,merge=1,inline,delta=2
    40                           	psect	text27,local,class=CODE,merge=1,inline,delta=2
    41                           	psect	text28,local,class=CODE,merge=1,inline,delta=2
    42                           	psect	text29,local,class=CODE,merge=1,inline,delta=2
    43                           	psect	text30,local,class=CODE,merge=1,inline,delta=2
    44                           	psect	text31,local,class=CODE,merge=1,delta=2
    45                           	psect	text32,local,class=CODE,merge=1,delta=2
    46                           	psect	text33,local,class=CODE,merge=1,inline,delta=2
    47                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    48                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    49                           	dabs	1,0x7E,2
    50     0000                     
    51                           ; Generated 19/07/2022 GMT
    52                           ; 
    53                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
    54                           ; All rights reserved.
    55                           ; 
    56                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    57                           ; 
    58                           ; Redistribution and use in source and binary forms, with or without modification, are
    59                           ; permitted provided that the following conditions are met:
    60                           ; 
    61                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    62                           ;        conditions and the following disclaimer.
    63                           ; 
    64                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    65                           ;        of conditions and the following disclaimer in the documentation and/or other
    66                           ;        materials provided with the distribution. Publication is not required when
    67                           ;        this file is used in an embedded application.
    68                           ; 
    69                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    70                           ;        software without specific prior written permission.
    71                           ; 
    72                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    73                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    74                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    75                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    76                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    77                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    78                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    79                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    80                           ; 
    81                           ; 
    82                           ; Code-generator required, PIC16F15223 Definitions
    83                           ; 
    84                           ; SFR Addresses
    85     0000                     	;# 
    86     0001                     	;# 
    87     0002                     	;# 
    88     0003                     	;# 
    89     0004                     	;# 
    90     0005                     	;# 
    91     0006                     	;# 
    92     0007                     	;# 
    93     0008                     	;# 
    94     0009                     	;# 
    95     000A                     	;# 
    96     000B                     	;# 
    97     000C                     	;# 
    98     000E                     	;# 
    99     0012                     	;# 
   100     0014                     	;# 
   101     0018                     	;# 
   102     001A                     	;# 
   103     009A                     	;# 
   104     009B                     	;# 
   105     009B                     	;# 
   106     009C                     	;# 
   107     009D                     	;# 
   108     009E                     	;# 
   109     009F                     	;# 
   110     010E                     	;# 
   111     010F                     	;# 
   112     0119                     	;# 
   113     011A                     	;# 
   114     011B                     	;# 
   115     011B                     	;# 
   116     011C                     	;# 
   117     011D                     	;# 
   118     011E                     	;# 
   119     011F                     	;# 
   120     018C                     	;# 
   121     018D                     	;# 
   122     018E                     	;# 
   123     018F                     	;# 
   124     0190                     	;# 
   125     0191                     	;# 
   126     0192                     	;# 
   127     020C                     	;# 
   128     020D                     	;# 
   129     020E                     	;# 
   130     020E                     	;# 
   131     020F                     	;# 
   132     020F                     	;# 
   133     0210                     	;# 
   134     0210                     	;# 
   135     0211                     	;# 
   136     0211                     	;# 
   137     028C                     	;# 
   138     028C                     	;# 
   139     028D                     	;# 
   140     028D                     	;# 
   141     028E                     	;# 
   142     028F                     	;# 
   143     0290                     	;# 
   144     0291                     	;# 
   145     030C                     	;# 
   146     030C                     	;# 
   147     030D                     	;# 
   148     030E                     	;# 
   149     030F                     	;# 
   150     0310                     	;# 
   151     0310                     	;# 
   152     0311                     	;# 
   153     0312                     	;# 
   154     0313                     	;# 
   155     0314                     	;# 
   156     0314                     	;# 
   157     0315                     	;# 
   158     0316                     	;# 
   159     0318                     	;# 
   160     0318                     	;# 
   161     0319                     	;# 
   162     031A                     	;# 
   163     059C                     	;# 
   164     059C                     	;# 
   165     059D                     	;# 
   166     059D                     	;# 
   167     059E                     	;# 
   168     059F                     	;# 
   169     070C                     	;# 
   170     070D                     	;# 
   171     070E                     	;# 
   172     0716                     	;# 
   173     0717                     	;# 
   174     0718                     	;# 
   175     080C                     	;# 
   176     0811                     	;# 
   177     0813                     	;# 
   178     0814                     	;# 
   179     081A                     	;# 
   180     081A                     	;# 
   181     081B                     	;# 
   182     081C                     	;# 
   183     081C                     	;# 
   184     081D                     	;# 
   185     081E                     	;# 
   186     081F                     	;# 
   187     088E                     	;# 
   188     0890                     	;# 
   189     0891                     	;# 
   190     0892                     	;# 
   191     0893                     	;# 
   192     090C                     	;# 
   193     1E8F                     	;# 
   194     1E90                     	;# 
   195     1E91                     	;# 
   196     1E92                     	;# 
   197     1E93                     	;# 
   198     1E9C                     	;# 
   199     1EA1                     	;# 
   200     1EA2                     	;# 
   201     1EC3                     	;# 
   202     1EC5                     	;# 
   203     1EC6                     	;# 
   204     1EC7                     	;# 
   205     1ECB                     	;# 
   206     1ECB                     	;# 
   207     1ECB                     	;# 
   208     1ECC                     	;# 
   209     1ECC                     	;# 
   210     1ECC                     	;# 
   211     1F10                     	;# 
   212     1F11                     	;# 
   213     1F12                     	;# 
   214     1F14                     	;# 
   215     1F15                     	;# 
   216     1F20                     	;# 
   217     1F21                     	;# 
   218     1F22                     	;# 
   219     1F23                     	;# 
   220     1F24                     	;# 
   221     1F25                     	;# 
   222     1F38                     	;# 
   223     1F39                     	;# 
   224     1F3A                     	;# 
   225     1F3B                     	;# 
   226     1F3C                     	;# 
   227     1F3D                     	;# 
   228     1F3E                     	;# 
   229     1F3F                     	;# 
   230     1F4E                     	;# 
   231     1F4F                     	;# 
   232     1F50                     	;# 
   233     1F51                     	;# 
   234     1F52                     	;# 
   235     1F53                     	;# 
   236     1F54                     	;# 
   237     1F55                     	;# 
   238     1FE4                     	;# 
   239     1FE5                     	;# 
   240     1FE6                     	;# 
   241     1FE7                     	;# 
   242     1FE8                     	;# 
   243     1FE8                     	;# 
   244     1FE9                     	;# 
   245     1FEA                     	;# 
   246     1FEB                     	;# 
   247     1FED                     	;# 
   248     1FEE                     	;# 
   249     1FEF                     	;# 
   250     0000                     	;# 
   251     0001                     	;# 
   252     0002                     	;# 
   253     0003                     	;# 
   254     0004                     	;# 
   255     0005                     	;# 
   256     0006                     	;# 
   257     0007                     	;# 
   258     0008                     	;# 
   259     0009                     	;# 
   260     000A                     	;# 
   261     000B                     	;# 
   262     000C                     	;# 
   263     000E                     	;# 
   264     0012                     	;# 
   265     0014                     	;# 
   266     0018                     	;# 
   267     001A                     	;# 
   268     009A                     	;# 
   269     009B                     	;# 
   270     009B                     	;# 
   271     009C                     	;# 
   272     009D                     	;# 
   273     009E                     	;# 
   274     009F                     	;# 
   275     010E                     	;# 
   276     010F                     	;# 
   277     0119                     	;# 
   278     011A                     	;# 
   279     011B                     	;# 
   280     011B                     	;# 
   281     011C                     	;# 
   282     011D                     	;# 
   283     011E                     	;# 
   284     011F                     	;# 
   285     018C                     	;# 
   286     018D                     	;# 
   287     018E                     	;# 
   288     018F                     	;# 
   289     0190                     	;# 
   290     0191                     	;# 
   291     0192                     	;# 
   292     020C                     	;# 
   293     020D                     	;# 
   294     020E                     	;# 
   295     020E                     	;# 
   296     020F                     	;# 
   297     020F                     	;# 
   298     0210                     	;# 
   299     0210                     	;# 
   300     0211                     	;# 
   301     0211                     	;# 
   302     028C                     	;# 
   303     028C                     	;# 
   304     028D                     	;# 
   305     028D                     	;# 
   306     028E                     	;# 
   307     028F                     	;# 
   308     0290                     	;# 
   309     0291                     	;# 
   310     030C                     	;# 
   311     030C                     	;# 
   312     030D                     	;# 
   313     030E                     	;# 
   314     030F                     	;# 
   315     0310                     	;# 
   316     0310                     	;# 
   317     0311                     	;# 
   318     0312                     	;# 
   319     0313                     	;# 
   320     0314                     	;# 
   321     0314                     	;# 
   322     0315                     	;# 
   323     0316                     	;# 
   324     0318                     	;# 
   325     0318                     	;# 
   326     0319                     	;# 
   327     031A                     	;# 
   328     059C                     	;# 
   329     059C                     	;# 
   330     059D                     	;# 
   331     059D                     	;# 
   332     059E                     	;# 
   333     059F                     	;# 
   334     070C                     	;# 
   335     070D                     	;# 
   336     070E                     	;# 
   337     0716                     	;# 
   338     0717                     	;# 
   339     0718                     	;# 
   340     080C                     	;# 
   341     0811                     	;# 
   342     0813                     	;# 
   343     0814                     	;# 
   344     081A                     	;# 
   345     081A                     	;# 
   346     081B                     	;# 
   347     081C                     	;# 
   348     081C                     	;# 
   349     081D                     	;# 
   350     081E                     	;# 
   351     081F                     	;# 
   352     088E                     	;# 
   353     0890                     	;# 
   354     0891                     	;# 
   355     0892                     	;# 
   356     0893                     	;# 
   357     090C                     	;# 
   358     1E8F                     	;# 
   359     1E90                     	;# 
   360     1E91                     	;# 
   361     1E92                     	;# 
   362     1E93                     	;# 
   363     1E9C                     	;# 
   364     1EA1                     	;# 
   365     1EA2                     	;# 
   366     1EC3                     	;# 
   367     1EC5                     	;# 
   368     1EC6                     	;# 
   369     1EC7                     	;# 
   370     1ECB                     	;# 
   371     1ECB                     	;# 
   372     1ECB                     	;# 
   373     1ECC                     	;# 
   374     1ECC                     	;# 
   375     1ECC                     	;# 
   376     1F10                     	;# 
   377     1F11                     	;# 
   378     1F12                     	;# 
   379     1F14                     	;# 
   380     1F15                     	;# 
   381     1F20                     	;# 
   382     1F21                     	;# 
   383     1F22                     	;# 
   384     1F23                     	;# 
   385     1F24                     	;# 
   386     1F25                     	;# 
   387     1F38                     	;# 
   388     1F39                     	;# 
   389     1F3A                     	;# 
   390     1F3B                     	;# 
   391     1F3C                     	;# 
   392     1F3D                     	;# 
   393     1F3E                     	;# 
   394     1F3F                     	;# 
   395     1F4E                     	;# 
   396     1F4F                     	;# 
   397     1F50                     	;# 
   398     1F51                     	;# 
   399     1F52                     	;# 
   400     1F53                     	;# 
   401     1F54                     	;# 
   402     1F55                     	;# 
   403     1FE4                     	;# 
   404     1FE5                     	;# 
   405     1FE6                     	;# 
   406     1FE7                     	;# 
   407     1FE8                     	;# 
   408     1FE8                     	;# 
   409     1FE9                     	;# 
   410     1FEA                     	;# 
   411     1FEB                     	;# 
   412     1FED                     	;# 
   413     1FEE                     	;# 
   414     1FEF                     	;# 
   415     0000                     	;# 
   416     0001                     	;# 
   417     0002                     	;# 
   418     0003                     	;# 
   419     0004                     	;# 
   420     0005                     	;# 
   421     0006                     	;# 
   422     0007                     	;# 
   423     0008                     	;# 
   424     0009                     	;# 
   425     000A                     	;# 
   426     000B                     	;# 
   427     000C                     	;# 
   428     000E                     	;# 
   429     0012                     	;# 
   430     0014                     	;# 
   431     0018                     	;# 
   432     001A                     	;# 
   433     009A                     	;# 
   434     009B                     	;# 
   435     009B                     	;# 
   436     009C                     	;# 
   437     009D                     	;# 
   438     009E                     	;# 
   439     009F                     	;# 
   440     010E                     	;# 
   441     010F                     	;# 
   442     0119                     	;# 
   443     011A                     	;# 
   444     011B                     	;# 
   445     011B                     	;# 
   446     011C                     	;# 
   447     011D                     	;# 
   448     011E                     	;# 
   449     011F                     	;# 
   450     018C                     	;# 
   451     018D                     	;# 
   452     018E                     	;# 
   453     018F                     	;# 
   454     0190                     	;# 
   455     0191                     	;# 
   456     0192                     	;# 
   457     020C                     	;# 
   458     020D                     	;# 
   459     020E                     	;# 
   460     020E                     	;# 
   461     020F                     	;# 
   462     020F                     	;# 
   463     0210                     	;# 
   464     0210                     	;# 
   465     0211                     	;# 
   466     0211                     	;# 
   467     028C                     	;# 
   468     028C                     	;# 
   469     028D                     	;# 
   470     028D                     	;# 
   471     028E                     	;# 
   472     028F                     	;# 
   473     0290                     	;# 
   474     0291                     	;# 
   475     030C                     	;# 
   476     030C                     	;# 
   477     030D                     	;# 
   478     030E                     	;# 
   479     030F                     	;# 
   480     0310                     	;# 
   481     0310                     	;# 
   482     0311                     	;# 
   483     0312                     	;# 
   484     0313                     	;# 
   485     0314                     	;# 
   486     0314                     	;# 
   487     0315                     	;# 
   488     0316                     	;# 
   489     0318                     	;# 
   490     0318                     	;# 
   491     0319                     	;# 
   492     031A                     	;# 
   493     059C                     	;# 
   494     059C                     	;# 
   495     059D                     	;# 
   496     059D                     	;# 
   497     059E                     	;# 
   498     059F                     	;# 
   499     070C                     	;# 
   500     070D                     	;# 
   501     070E                     	;# 
   502     0716                     	;# 
   503     0717                     	;# 
   504     0718                     	;# 
   505     080C                     	;# 
   506     0811                     	;# 
   507     0813                     	;# 
   508     0814                     	;# 
   509     081A                     	;# 
   510     081A                     	;# 
   511     081B                     	;# 
   512     081C                     	;# 
   513     081C                     	;# 
   514     081D                     	;# 
   515     081E                     	;# 
   516     081F                     	;# 
   517     088E                     	;# 
   518     0890                     	;# 
   519     0891                     	;# 
   520     0892                     	;# 
   521     0893                     	;# 
   522     090C                     	;# 
   523     1E8F                     	;# 
   524     1E90                     	;# 
   525     1E91                     	;# 
   526     1E92                     	;# 
   527     1E93                     	;# 
   528     1E9C                     	;# 
   529     1EA1                     	;# 
   530     1EA2                     	;# 
   531     1EC3                     	;# 
   532     1EC5                     	;# 
   533     1EC6                     	;# 
   534     1EC7                     	;# 
   535     1ECB                     	;# 
   536     1ECB                     	;# 
   537     1ECB                     	;# 
   538     1ECC                     	;# 
   539     1ECC                     	;# 
   540     1ECC                     	;# 
   541     1F10                     	;# 
   542     1F11                     	;# 
   543     1F12                     	;# 
   544     1F14                     	;# 
   545     1F15                     	;# 
   546     1F20                     	;# 
   547     1F21                     	;# 
   548     1F22                     	;# 
   549     1F23                     	;# 
   550     1F24                     	;# 
   551     1F25                     	;# 
   552     1F38                     	;# 
   553     1F39                     	;# 
   554     1F3A                     	;# 
   555     1F3B                     	;# 
   556     1F3C                     	;# 
   557     1F3D                     	;# 
   558     1F3E                     	;# 
   559     1F3F                     	;# 
   560     1F4E                     	;# 
   561     1F4F                     	;# 
   562     1F50                     	;# 
   563     1F51                     	;# 
   564     1F52                     	;# 
   565     1F53                     	;# 
   566     1F54                     	;# 
   567     1F55                     	;# 
   568     1FE4                     	;# 
   569     1FE5                     	;# 
   570     1FE6                     	;# 
   571     1FE7                     	;# 
   572     1FE8                     	;# 
   573     1FE8                     	;# 
   574     1FE9                     	;# 
   575     1FEA                     	;# 
   576     1FEB                     	;# 
   577     1FED                     	;# 
   578     1FEE                     	;# 
   579     1FEF                     	;# 
   580     0000                     	;# 
   581     0001                     	;# 
   582     0002                     	;# 
   583     0003                     	;# 
   584     0004                     	;# 
   585     0005                     	;# 
   586     0006                     	;# 
   587     0007                     	;# 
   588     0008                     	;# 
   589     0009                     	;# 
   590     000A                     	;# 
   591     000B                     	;# 
   592     000C                     	;# 
   593     000E                     	;# 
   594     0012                     	;# 
   595     0014                     	;# 
   596     0018                     	;# 
   597     001A                     	;# 
   598     009A                     	;# 
   599     009B                     	;# 
   600     009B                     	;# 
   601     009C                     	;# 
   602     009D                     	;# 
   603     009E                     	;# 
   604     009F                     	;# 
   605     010E                     	;# 
   606     010F                     	;# 
   607     0119                     	;# 
   608     011A                     	;# 
   609     011B                     	;# 
   610     011B                     	;# 
   611     011C                     	;# 
   612     011D                     	;# 
   613     011E                     	;# 
   614     011F                     	;# 
   615     018C                     	;# 
   616     018D                     	;# 
   617     018E                     	;# 
   618     018F                     	;# 
   619     0190                     	;# 
   620     0191                     	;# 
   621     0192                     	;# 
   622     020C                     	;# 
   623     020D                     	;# 
   624     020E                     	;# 
   625     020E                     	;# 
   626     020F                     	;# 
   627     020F                     	;# 
   628     0210                     	;# 
   629     0210                     	;# 
   630     0211                     	;# 
   631     0211                     	;# 
   632     028C                     	;# 
   633     028C                     	;# 
   634     028D                     	;# 
   635     028D                     	;# 
   636     028E                     	;# 
   637     028F                     	;# 
   638     0290                     	;# 
   639     0291                     	;# 
   640     030C                     	;# 
   641     030C                     	;# 
   642     030D                     	;# 
   643     030E                     	;# 
   644     030F                     	;# 
   645     0310                     	;# 
   646     0310                     	;# 
   647     0311                     	;# 
   648     0312                     	;# 
   649     0313                     	;# 
   650     0314                     	;# 
   651     0314                     	;# 
   652     0315                     	;# 
   653     0316                     	;# 
   654     0318                     	;# 
   655     0318                     	;# 
   656     0319                     	;# 
   657     031A                     	;# 
   658     059C                     	;# 
   659     059C                     	;# 
   660     059D                     	;# 
   661     059D                     	;# 
   662     059E                     	;# 
   663     059F                     	;# 
   664     070C                     	;# 
   665     070D                     	;# 
   666     070E                     	;# 
   667     0716                     	;# 
   668     0717                     	;# 
   669     0718                     	;# 
   670     080C                     	;# 
   671     0811                     	;# 
   672     0813                     	;# 
   673     0814                     	;# 
   674     081A                     	;# 
   675     081A                     	;# 
   676     081B                     	;# 
   677     081C                     	;# 
   678     081C                     	;# 
   679     081D                     	;# 
   680     081E                     	;# 
   681     081F                     	;# 
   682     088E                     	;# 
   683     0890                     	;# 
   684     0891                     	;# 
   685     0892                     	;# 
   686     0893                     	;# 
   687     090C                     	;# 
   688     1E8F                     	;# 
   689     1E90                     	;# 
   690     1E91                     	;# 
   691     1E92                     	;# 
   692     1E93                     	;# 
   693     1E9C                     	;# 
   694     1EA1                     	;# 
   695     1EA2                     	;# 
   696     1EC3                     	;# 
   697     1EC5                     	;# 
   698     1EC6                     	;# 
   699     1EC7                     	;# 
   700     1ECB                     	;# 
   701     1ECB                     	;# 
   702     1ECB                     	;# 
   703     1ECC                     	;# 
   704     1ECC                     	;# 
   705     1ECC                     	;# 
   706     1F10                     	;# 
   707     1F11                     	;# 
   708     1F12                     	;# 
   709     1F14                     	;# 
   710     1F15                     	;# 
   711     1F20                     	;# 
   712     1F21                     	;# 
   713     1F22                     	;# 
   714     1F23                     	;# 
   715     1F24                     	;# 
   716     1F25                     	;# 
   717     1F38                     	;# 
   718     1F39                     	;# 
   719     1F3A                     	;# 
   720     1F3B                     	;# 
   721     1F3C                     	;# 
   722     1F3D                     	;# 
   723     1F3E                     	;# 
   724     1F3F                     	;# 
   725     1F4E                     	;# 
   726     1F4F                     	;# 
   727     1F50                     	;# 
   728     1F51                     	;# 
   729     1F52                     	;# 
   730     1F53                     	;# 
   731     1F54                     	;# 
   732     1F55                     	;# 
   733     1FE4                     	;# 
   734     1FE5                     	;# 
   735     1FE6                     	;# 
   736     1FE7                     	;# 
   737     1FE8                     	;# 
   738     1FE8                     	;# 
   739     1FE9                     	;# 
   740     1FEA                     	;# 
   741     1FEB                     	;# 
   742     1FED                     	;# 
   743     1FEE                     	;# 
   744     1FEF                     	;# 
   745     0000                     	;# 
   746     0001                     	;# 
   747     0002                     	;# 
   748     0003                     	;# 
   749     0004                     	;# 
   750     0005                     	;# 
   751     0006                     	;# 
   752     0007                     	;# 
   753     0008                     	;# 
   754     0009                     	;# 
   755     000A                     	;# 
   756     000B                     	;# 
   757     000C                     	;# 
   758     000E                     	;# 
   759     0012                     	;# 
   760     0014                     	;# 
   761     0018                     	;# 
   762     001A                     	;# 
   763     009A                     	;# 
   764     009B                     	;# 
   765     009B                     	;# 
   766     009C                     	;# 
   767     009D                     	;# 
   768     009E                     	;# 
   769     009F                     	;# 
   770     010E                     	;# 
   771     010F                     	;# 
   772     0119                     	;# 
   773     011A                     	;# 
   774     011B                     	;# 
   775     011B                     	;# 
   776     011C                     	;# 
   777     011D                     	;# 
   778     011E                     	;# 
   779     011F                     	;# 
   780     018C                     	;# 
   781     018D                     	;# 
   782     018E                     	;# 
   783     018F                     	;# 
   784     0190                     	;# 
   785     0191                     	;# 
   786     0192                     	;# 
   787     020C                     	;# 
   788     020D                     	;# 
   789     020E                     	;# 
   790     020E                     	;# 
   791     020F                     	;# 
   792     020F                     	;# 
   793     0210                     	;# 
   794     0210                     	;# 
   795     0211                     	;# 
   796     0211                     	;# 
   797     028C                     	;# 
   798     028C                     	;# 
   799     028D                     	;# 
   800     028D                     	;# 
   801     028E                     	;# 
   802     028F                     	;# 
   803     0290                     	;# 
   804     0291                     	;# 
   805     030C                     	;# 
   806     030C                     	;# 
   807     030D                     	;# 
   808     030E                     	;# 
   809     030F                     	;# 
   810     0310                     	;# 
   811     0310                     	;# 
   812     0311                     	;# 
   813     0312                     	;# 
   814     0313                     	;# 
   815     0314                     	;# 
   816     0314                     	;# 
   817     0315                     	;# 
   818     0316                     	;# 
   819     0318                     	;# 
   820     0318                     	;# 
   821     0319                     	;# 
   822     031A                     	;# 
   823     059C                     	;# 
   824     059C                     	;# 
   825     059D                     	;# 
   826     059D                     	;# 
   827     059E                     	;# 
   828     059F                     	;# 
   829     070C                     	;# 
   830     070D                     	;# 
   831     070E                     	;# 
   832     0716                     	;# 
   833     0717                     	;# 
   834     0718                     	;# 
   835     080C                     	;# 
   836     0811                     	;# 
   837     0813                     	;# 
   838     0814                     	;# 
   839     081A                     	;# 
   840     081A                     	;# 
   841     081B                     	;# 
   842     081C                     	;# 
   843     081C                     	;# 
   844     081D                     	;# 
   845     081E                     	;# 
   846     081F                     	;# 
   847     088E                     	;# 
   848     0890                     	;# 
   849     0891                     	;# 
   850     0892                     	;# 
   851     0893                     	;# 
   852     090C                     	;# 
   853     1E8F                     	;# 
   854     1E90                     	;# 
   855     1E91                     	;# 
   856     1E92                     	;# 
   857     1E93                     	;# 
   858     1E9C                     	;# 
   859     1EA1                     	;# 
   860     1EA2                     	;# 
   861     1EC3                     	;# 
   862     1EC5                     	;# 
   863     1EC6                     	;# 
   864     1EC7                     	;# 
   865     1ECB                     	;# 
   866     1ECB                     	;# 
   867     1ECB                     	;# 
   868     1ECC                     	;# 
   869     1ECC                     	;# 
   870     1ECC                     	;# 
   871     1F10                     	;# 
   872     1F11                     	;# 
   873     1F12                     	;# 
   874     1F14                     	;# 
   875     1F15                     	;# 
   876     1F20                     	;# 
   877     1F21                     	;# 
   878     1F22                     	;# 
   879     1F23                     	;# 
   880     1F24                     	;# 
   881     1F25                     	;# 
   882     1F38                     	;# 
   883     1F39                     	;# 
   884     1F3A                     	;# 
   885     1F3B                     	;# 
   886     1F3C                     	;# 
   887     1F3D                     	;# 
   888     1F3E                     	;# 
   889     1F3F                     	;# 
   890     1F4E                     	;# 
   891     1F4F                     	;# 
   892     1F50                     	;# 
   893     1F51                     	;# 
   894     1F52                     	;# 
   895     1F53                     	;# 
   896     1F54                     	;# 
   897     1F55                     	;# 
   898     1FE4                     	;# 
   899     1FE5                     	;# 
   900     1FE6                     	;# 
   901     1FE7                     	;# 
   902     1FE8                     	;# 
   903     1FE8                     	;# 
   904     1FE9                     	;# 
   905     1FEA                     	;# 
   906     1FEB                     	;# 
   907     1FED                     	;# 
   908     1FEE                     	;# 
   909     1FEF                     	;# 
   910     0000                     	;# 
   911     0001                     	;# 
   912     0002                     	;# 
   913     0003                     	;# 
   914     0004                     	;# 
   915     0005                     	;# 
   916     0006                     	;# 
   917     0007                     	;# 
   918     0008                     	;# 
   919     0009                     	;# 
   920     000A                     	;# 
   921     000B                     	;# 
   922     000C                     	;# 
   923     000E                     	;# 
   924     0012                     	;# 
   925     0014                     	;# 
   926     0018                     	;# 
   927     001A                     	;# 
   928     009A                     	;# 
   929     009B                     	;# 
   930     009B                     	;# 
   931     009C                     	;# 
   932     009D                     	;# 
   933     009E                     	;# 
   934     009F                     	;# 
   935     010E                     	;# 
   936     010F                     	;# 
   937     0119                     	;# 
   938     011A                     	;# 
   939     011B                     	;# 
   940     011B                     	;# 
   941     011C                     	;# 
   942     011D                     	;# 
   943     011E                     	;# 
   944     011F                     	;# 
   945     018C                     	;# 
   946     018D                     	;# 
   947     018E                     	;# 
   948     018F                     	;# 
   949     0190                     	;# 
   950     0191                     	;# 
   951     0192                     	;# 
   952     020C                     	;# 
   953     020D                     	;# 
   954     020E                     	;# 
   955     020E                     	;# 
   956     020F                     	;# 
   957     020F                     	;# 
   958     0210                     	;# 
   959     0210                     	;# 
   960     0211                     	;# 
   961     0211                     	;# 
   962     028C                     	;# 
   963     028C                     	;# 
   964     028D                     	;# 
   965     028D                     	;# 
   966     028E                     	;# 
   967     028F                     	;# 
   968     0290                     	;# 
   969     0291                     	;# 
   970     030C                     	;# 
   971     030C                     	;# 
   972     030D                     	;# 
   973     030E                     	;# 
   974     030F                     	;# 
   975     0310                     	;# 
   976     0310                     	;# 
   977     0311                     	;# 
   978     0312                     	;# 
   979     0313                     	;# 
   980     0314                     	;# 
   981     0314                     	;# 
   982     0315                     	;# 
   983     0316                     	;# 
   984     0318                     	;# 
   985     0318                     	;# 
   986     0319                     	;# 
   987     031A                     	;# 
   988     059C                     	;# 
   989     059C                     	;# 
   990     059D                     	;# 
   991     059D                     	;# 
   992     059E                     	;# 
   993     059F                     	;# 
   994     070C                     	;# 
   995     070D                     	;# 
   996     070E                     	;# 
   997     0716                     	;# 
   998     0717                     	;# 
   999     0718                     	;# 
  1000     080C                     	;# 
  1001     0811                     	;# 
  1002     0813                     	;# 
  1003     0814                     	;# 
  1004     081A                     	;# 
  1005     081A                     	;# 
  1006     081B                     	;# 
  1007     081C                     	;# 
  1008     081C                     	;# 
  1009     081D                     	;# 
  1010     081E                     	;# 
  1011     081F                     	;# 
  1012     088E                     	;# 
  1013     0890                     	;# 
  1014     0891                     	;# 
  1015     0892                     	;# 
  1016     0893                     	;# 
  1017     090C                     	;# 
  1018     1E8F                     	;# 
  1019     1E90                     	;# 
  1020     1E91                     	;# 
  1021     1E92                     	;# 
  1022     1E93                     	;# 
  1023     1E9C                     	;# 
  1024     1EA1                     	;# 
  1025     1EA2                     	;# 
  1026     1EC3                     	;# 
  1027     1EC5                     	;# 
  1028     1EC6                     	;# 
  1029     1EC7                     	;# 
  1030     1ECB                     	;# 
  1031     1ECB                     	;# 
  1032     1ECB                     	;# 
  1033     1ECC                     	;# 
  1034     1ECC                     	;# 
  1035     1ECC                     	;# 
  1036     1F10                     	;# 
  1037     1F11                     	;# 
  1038     1F12                     	;# 
  1039     1F14                     	;# 
  1040     1F15                     	;# 
  1041     1F20                     	;# 
  1042     1F21                     	;# 
  1043     1F22                     	;# 
  1044     1F23                     	;# 
  1045     1F24                     	;# 
  1046     1F25                     	;# 
  1047     1F38                     	;# 
  1048     1F39                     	;# 
  1049     1F3A                     	;# 
  1050     1F3B                     	;# 
  1051     1F3C                     	;# 
  1052     1F3D                     	;# 
  1053     1F3E                     	;# 
  1054     1F3F                     	;# 
  1055     1F4E                     	;# 
  1056     1F4F                     	;# 
  1057     1F50                     	;# 
  1058     1F51                     	;# 
  1059     1F52                     	;# 
  1060     1F53                     	;# 
  1061     1F54                     	;# 
  1062     1F55                     	;# 
  1063     1FE4                     	;# 
  1064     1FE5                     	;# 
  1065     1FE6                     	;# 
  1066     1FE7                     	;# 
  1067     1FE8                     	;# 
  1068     1FE8                     	;# 
  1069     1FE9                     	;# 
  1070     1FEA                     	;# 
  1071     1FEB                     	;# 
  1072     1FED                     	;# 
  1073     1FEE                     	;# 
  1074     1FEF                     	;# 
  1075     0000                     	;# 
  1076     0001                     	;# 
  1077     0002                     	;# 
  1078     0003                     	;# 
  1079     0004                     	;# 
  1080     0005                     	;# 
  1081     0006                     	;# 
  1082     0007                     	;# 
  1083     0008                     	;# 
  1084     0009                     	;# 
  1085     000A                     	;# 
  1086     000B                     	;# 
  1087     000C                     	;# 
  1088     000E                     	;# 
  1089     0012                     	;# 
  1090     0014                     	;# 
  1091     0018                     	;# 
  1092     001A                     	;# 
  1093     009A                     	;# 
  1094     009B                     	;# 
  1095     009B                     	;# 
  1096     009C                     	;# 
  1097     009D                     	;# 
  1098     009E                     	;# 
  1099     009F                     	;# 
  1100     010E                     	;# 
  1101     010F                     	;# 
  1102     0119                     	;# 
  1103     011A                     	;# 
  1104     011B                     	;# 
  1105     011B                     	;# 
  1106     011C                     	;# 
  1107     011D                     	;# 
  1108     011E                     	;# 
  1109     011F                     	;# 
  1110     018C                     	;# 
  1111     018D                     	;# 
  1112     018E                     	;# 
  1113     018F                     	;# 
  1114     0190                     	;# 
  1115     0191                     	;# 
  1116     0192                     	;# 
  1117     020C                     	;# 
  1118     020D                     	;# 
  1119     020E                     	;# 
  1120     020E                     	;# 
  1121     020F                     	;# 
  1122     020F                     	;# 
  1123     0210                     	;# 
  1124     0210                     	;# 
  1125     0211                     	;# 
  1126     0211                     	;# 
  1127     028C                     	;# 
  1128     028C                     	;# 
  1129     028D                     	;# 
  1130     028D                     	;# 
  1131     028E                     	;# 
  1132     028F                     	;# 
  1133     0290                     	;# 
  1134     0291                     	;# 
  1135     030C                     	;# 
  1136     030C                     	;# 
  1137     030D                     	;# 
  1138     030E                     	;# 
  1139     030F                     	;# 
  1140     0310                     	;# 
  1141     0310                     	;# 
  1142     0311                     	;# 
  1143     0312                     	;# 
  1144     0313                     	;# 
  1145     0314                     	;# 
  1146     0314                     	;# 
  1147     0315                     	;# 
  1148     0316                     	;# 
  1149     0318                     	;# 
  1150     0318                     	;# 
  1151     0319                     	;# 
  1152     031A                     	;# 
  1153     059C                     	;# 
  1154     059C                     	;# 
  1155     059D                     	;# 
  1156     059D                     	;# 
  1157     059E                     	;# 
  1158     059F                     	;# 
  1159     070C                     	;# 
  1160     070D                     	;# 
  1161     070E                     	;# 
  1162     0716                     	;# 
  1163     0717                     	;# 
  1164     0718                     	;# 
  1165     080C                     	;# 
  1166     0811                     	;# 
  1167     0813                     	;# 
  1168     0814                     	;# 
  1169     081A                     	;# 
  1170     081A                     	;# 
  1171     081B                     	;# 
  1172     081C                     	;# 
  1173     081C                     	;# 
  1174     081D                     	;# 
  1175     081E                     	;# 
  1176     081F                     	;# 
  1177     088E                     	;# 
  1178     0890                     	;# 
  1179     0891                     	;# 
  1180     0892                     	;# 
  1181     0893                     	;# 
  1182     090C                     	;# 
  1183     1E8F                     	;# 
  1184     1E90                     	;# 
  1185     1E91                     	;# 
  1186     1E92                     	;# 
  1187     1E93                     	;# 
  1188     1E9C                     	;# 
  1189     1EA1                     	;# 
  1190     1EA2                     	;# 
  1191     1EC3                     	;# 
  1192     1EC5                     	;# 
  1193     1EC6                     	;# 
  1194     1EC7                     	;# 
  1195     1ECB                     	;# 
  1196     1ECB                     	;# 
  1197     1ECB                     	;# 
  1198     1ECC                     	;# 
  1199     1ECC                     	;# 
  1200     1ECC                     	;# 
  1201     1F10                     	;# 
  1202     1F11                     	;# 
  1203     1F12                     	;# 
  1204     1F14                     	;# 
  1205     1F15                     	;# 
  1206     1F20                     	;# 
  1207     1F21                     	;# 
  1208     1F22                     	;# 
  1209     1F23                     	;# 
  1210     1F24                     	;# 
  1211     1F25                     	;# 
  1212     1F38                     	;# 
  1213     1F39                     	;# 
  1214     1F3A                     	;# 
  1215     1F3B                     	;# 
  1216     1F3C                     	;# 
  1217     1F3D                     	;# 
  1218     1F3E                     	;# 
  1219     1F3F                     	;# 
  1220     1F4E                     	;# 
  1221     1F4F                     	;# 
  1222     1F50                     	;# 
  1223     1F51                     	;# 
  1224     1F52                     	;# 
  1225     1F53                     	;# 
  1226     1F54                     	;# 
  1227     1F55                     	;# 
  1228     1FE4                     	;# 
  1229     1FE5                     	;# 
  1230     1FE6                     	;# 
  1231     1FE7                     	;# 
  1232     1FE8                     	;# 
  1233     1FE8                     	;# 
  1234     1FE9                     	;# 
  1235     1FEA                     	;# 
  1236     1FEB                     	;# 
  1237     1FED                     	;# 
  1238     1FEE                     	;# 
  1239     1FEF                     	;# 
  1240     0000                     	;# 
  1241     0001                     	;# 
  1242     0002                     	;# 
  1243     0003                     	;# 
  1244     0004                     	;# 
  1245     0005                     	;# 
  1246     0006                     	;# 
  1247     0007                     	;# 
  1248     0008                     	;# 
  1249     0009                     	;# 
  1250     000A                     	;# 
  1251     000B                     	;# 
  1252     000C                     	;# 
  1253     000E                     	;# 
  1254     0012                     	;# 
  1255     0014                     	;# 
  1256     0018                     	;# 
  1257     001A                     	;# 
  1258     009A                     	;# 
  1259     009B                     	;# 
  1260     009B                     	;# 
  1261     009C                     	;# 
  1262     009D                     	;# 
  1263     009E                     	;# 
  1264     009F                     	;# 
  1265     010E                     	;# 
  1266     010F                     	;# 
  1267     0119                     	;# 
  1268     011A                     	;# 
  1269     011B                     	;# 
  1270     011B                     	;# 
  1271     011C                     	;# 
  1272     011D                     	;# 
  1273     011E                     	;# 
  1274     011F                     	;# 
  1275     018C                     	;# 
  1276     018D                     	;# 
  1277     018E                     	;# 
  1278     018F                     	;# 
  1279     0190                     	;# 
  1280     0191                     	;# 
  1281     0192                     	;# 
  1282     020C                     	;# 
  1283     020D                     	;# 
  1284     020E                     	;# 
  1285     020E                     	;# 
  1286     020F                     	;# 
  1287     020F                     	;# 
  1288     0210                     	;# 
  1289     0210                     	;# 
  1290     0211                     	;# 
  1291     0211                     	;# 
  1292     028C                     	;# 
  1293     028C                     	;# 
  1294     028D                     	;# 
  1295     028D                     	;# 
  1296     028E                     	;# 
  1297     028F                     	;# 
  1298     0290                     	;# 
  1299     0291                     	;# 
  1300     030C                     	;# 
  1301     030C                     	;# 
  1302     030D                     	;# 
  1303     030E                     	;# 
  1304     030F                     	;# 
  1305     0310                     	;# 
  1306     0310                     	;# 
  1307     0311                     	;# 
  1308     0312                     	;# 
  1309     0313                     	;# 
  1310     0314                     	;# 
  1311     0314                     	;# 
  1312     0315                     	;# 
  1313     0316                     	;# 
  1314     0318                     	;# 
  1315     0318                     	;# 
  1316     0319                     	;# 
  1317     031A                     	;# 
  1318     059C                     	;# 
  1319     059C                     	;# 
  1320     059D                     	;# 
  1321     059D                     	;# 
  1322     059E                     	;# 
  1323     059F                     	;# 
  1324     070C                     	;# 
  1325     070D                     	;# 
  1326     070E                     	;# 
  1327     0716                     	;# 
  1328     0717                     	;# 
  1329     0718                     	;# 
  1330     080C                     	;# 
  1331     0811                     	;# 
  1332     0813                     	;# 
  1333     0814                     	;# 
  1334     081A                     	;# 
  1335     081A                     	;# 
  1336     081B                     	;# 
  1337     081C                     	;# 
  1338     081C                     	;# 
  1339     081D                     	;# 
  1340     081E                     	;# 
  1341     081F                     	;# 
  1342     088E                     	;# 
  1343     0890                     	;# 
  1344     0891                     	;# 
  1345     0892                     	;# 
  1346     0893                     	;# 
  1347     090C                     	;# 
  1348     1E8F                     	;# 
  1349     1E90                     	;# 
  1350     1E91                     	;# 
  1351     1E92                     	;# 
  1352     1E93                     	;# 
  1353     1E9C                     	;# 
  1354     1EA1                     	;# 
  1355     1EA2                     	;# 
  1356     1EC3                     	;# 
  1357     1EC5                     	;# 
  1358     1EC6                     	;# 
  1359     1EC7                     	;# 
  1360     1ECB                     	;# 
  1361     1ECB                     	;# 
  1362     1ECB                     	;# 
  1363     1ECC                     	;# 
  1364     1ECC                     	;# 
  1365     1ECC                     	;# 
  1366     1F10                     	;# 
  1367     1F11                     	;# 
  1368     1F12                     	;# 
  1369     1F14                     	;# 
  1370     1F15                     	;# 
  1371     1F20                     	;# 
  1372     1F21                     	;# 
  1373     1F22                     	;# 
  1374     1F23                     	;# 
  1375     1F24                     	;# 
  1376     1F25                     	;# 
  1377     1F38                     	;# 
  1378     1F39                     	;# 
  1379     1F3A                     	;# 
  1380     1F3B                     	;# 
  1381     1F3C                     	;# 
  1382     1F3D                     	;# 
  1383     1F3E                     	;# 
  1384     1F3F                     	;# 
  1385     1F4E                     	;# 
  1386     1F4F                     	;# 
  1387     1F50                     	;# 
  1388     1F51                     	;# 
  1389     1F52                     	;# 
  1390     1F53                     	;# 
  1391     1F54                     	;# 
  1392     1F55                     	;# 
  1393     1FE4                     	;# 
  1394     1FE5                     	;# 
  1395     1FE6                     	;# 
  1396     1FE7                     	;# 
  1397     1FE8                     	;# 
  1398     1FE8                     	;# 
  1399     1FE9                     	;# 
  1400     1FEA                     	;# 
  1401     1FEB                     	;# 
  1402     1FED                     	;# 
  1403     1FEE                     	;# 
  1404     1FEF                     	;# 
  1405     0000                     	;# 
  1406     0001                     	;# 
  1407     0002                     	;# 
  1408     0003                     	;# 
  1409     0004                     	;# 
  1410     0005                     	;# 
  1411     0006                     	;# 
  1412     0007                     	;# 
  1413     0008                     	;# 
  1414     0009                     	;# 
  1415     000A                     	;# 
  1416     000B                     	;# 
  1417     000C                     	;# 
  1418     000E                     	;# 
  1419     0012                     	;# 
  1420     0014                     	;# 
  1421     0018                     	;# 
  1422     001A                     	;# 
  1423     009A                     	;# 
  1424     009B                     	;# 
  1425     009B                     	;# 
  1426     009C                     	;# 
  1427     009D                     	;# 
  1428     009E                     	;# 
  1429     009F                     	;# 
  1430     010E                     	;# 
  1431     010F                     	;# 
  1432     0119                     	;# 
  1433     011A                     	;# 
  1434     011B                     	;# 
  1435     011B                     	;# 
  1436     011C                     	;# 
  1437     011D                     	;# 
  1438     011E                     	;# 
  1439     011F                     	;# 
  1440     018C                     	;# 
  1441     018D                     	;# 
  1442     018E                     	;# 
  1443     018F                     	;# 
  1444     0190                     	;# 
  1445     0191                     	;# 
  1446     0192                     	;# 
  1447     020C                     	;# 
  1448     020D                     	;# 
  1449     020E                     	;# 
  1450     020E                     	;# 
  1451     020F                     	;# 
  1452     020F                     	;# 
  1453     0210                     	;# 
  1454     0210                     	;# 
  1455     0211                     	;# 
  1456     0211                     	;# 
  1457     028C                     	;# 
  1458     028C                     	;# 
  1459     028D                     	;# 
  1460     028D                     	;# 
  1461     028E                     	;# 
  1462     028F                     	;# 
  1463     0290                     	;# 
  1464     0291                     	;# 
  1465     030C                     	;# 
  1466     030C                     	;# 
  1467     030D                     	;# 
  1468     030E                     	;# 
  1469     030F                     	;# 
  1470     0310                     	;# 
  1471     0310                     	;# 
  1472     0311                     	;# 
  1473     0312                     	;# 
  1474     0313                     	;# 
  1475     0314                     	;# 
  1476     0314                     	;# 
  1477     0315                     	;# 
  1478     0316                     	;# 
  1479     0318                     	;# 
  1480     0318                     	;# 
  1481     0319                     	;# 
  1482     031A                     	;# 
  1483     059C                     	;# 
  1484     059C                     	;# 
  1485     059D                     	;# 
  1486     059D                     	;# 
  1487     059E                     	;# 
  1488     059F                     	;# 
  1489     070C                     	;# 
  1490     070D                     	;# 
  1491     070E                     	;# 
  1492     0716                     	;# 
  1493     0717                     	;# 
  1494     0718                     	;# 
  1495     080C                     	;# 
  1496     0811                     	;# 
  1497     0813                     	;# 
  1498     0814                     	;# 
  1499     081A                     	;# 
  1500     081A                     	;# 
  1501     081B                     	;# 
  1502     081C                     	;# 
  1503     081C                     	;# 
  1504     081D                     	;# 
  1505     081E                     	;# 
  1506     081F                     	;# 
  1507     088E                     	;# 
  1508     0890                     	;# 
  1509     0891                     	;# 
  1510     0892                     	;# 
  1511     0893                     	;# 
  1512     090C                     	;# 
  1513     1E8F                     	;# 
  1514     1E90                     	;# 
  1515     1E91                     	;# 
  1516     1E92                     	;# 
  1517     1E93                     	;# 
  1518     1E9C                     	;# 
  1519     1EA1                     	;# 
  1520     1EA2                     	;# 
  1521     1EC3                     	;# 
  1522     1EC5                     	;# 
  1523     1EC6                     	;# 
  1524     1EC7                     	;# 
  1525     1ECB                     	;# 
  1526     1ECB                     	;# 
  1527     1ECB                     	;# 
  1528     1ECC                     	;# 
  1529     1ECC                     	;# 
  1530     1ECC                     	;# 
  1531     1F10                     	;# 
  1532     1F11                     	;# 
  1533     1F12                     	;# 
  1534     1F14                     	;# 
  1535     1F15                     	;# 
  1536     1F20                     	;# 
  1537     1F21                     	;# 
  1538     1F22                     	;# 
  1539     1F23                     	;# 
  1540     1F24                     	;# 
  1541     1F25                     	;# 
  1542     1F38                     	;# 
  1543     1F39                     	;# 
  1544     1F3A                     	;# 
  1545     1F3B                     	;# 
  1546     1F3C                     	;# 
  1547     1F3D                     	;# 
  1548     1F3E                     	;# 
  1549     1F3F                     	;# 
  1550     1F4E                     	;# 
  1551     1F4F                     	;# 
  1552     1F50                     	;# 
  1553     1F51                     	;# 
  1554     1F52                     	;# 
  1555     1F53                     	;# 
  1556     1F54                     	;# 
  1557     1F55                     	;# 
  1558     1FE4                     	;# 
  1559     1FE5                     	;# 
  1560     1FE6                     	;# 
  1561     1FE7                     	;# 
  1562     1FE8                     	;# 
  1563     1FE8                     	;# 
  1564     1FE9                     	;# 
  1565     1FEA                     	;# 
  1566     1FEB                     	;# 
  1567     1FED                     	;# 
  1568     1FEE                     	;# 
  1569     1FEF                     	;# 
  1570                           
  1571 ;; Function _I2C1_SlaveDefWrColInterruptHandler is unused but had its address taken
  1572     0000                     
  1573 ;; Function _I2C1_SlaveDefBusColInterruptHandler is unused but had its address taken
  1574     0040                     _default_in_flash_absaddr	set	64
  1575     0040                     _default_in_flash_absaddr	set	64
  1576                           
  1577                           	psect	_default_in_flash_text
  1578     0040                     __p_default_in_flash_text:
  1579     0040                     _default_in_flash:
  1580     0040  3401               	retlw	1
  1581     0041  3400               	retlw	0
  1582     0042  3401               	retlw	1
  1583     0043  3400               	retlw	0
  1584     0044  3401               	retlw	1
  1585     0045  3400               	retlw	0
  1586     0046  3401               	retlw	1
  1587     0047  3400               	retlw	0
  1588     0048  3401               	retlw	1
  1589     0049  3400               	retlw	0
  1590     004A  3401               	retlw	1
  1591     004B  3400               	retlw	0
  1592     004C  3402               	retlw	2
  1593     004D  3400               	retlw	0
  1594     004E  3402               	retlw	2
  1595     004F  3400               	retlw	0
  1596     0050  3402               	retlw	2
  1597     0051  3400               	retlw	0
  1598     0052  3402               	retlw	2
  1599     0053  3400               	retlw	0
  1600     0054  3402               	retlw	2
  1601     0055  3400               	retlw	0
  1602     0056  3402               	retlw	2
  1603     0057  3400               	retlw	0
  1604     0058  3403               	retlw	3
  1605     0059  3400               	retlw	0
  1606     005A  3403               	retlw	3
  1607     005B  3400               	retlw	0
  1608     005C  3403               	retlw	3
  1609     005D  3400               	retlw	0
  1610     005E  3403               	retlw	3
  1611     005F  3400               	retlw	0
  1612     0060  3403               	retlw	3
  1613     0061  3400               	retlw	0
  1614     0062  3403               	retlw	3
  1615     0063  3400               	retlw	0
  1616     0064  3404               	retlw	4
  1617     0065  3400               	retlw	0
  1618     0066  3404               	retlw	4
  1619     0067  3400               	retlw	0
  1620     0068  3404               	retlw	4
  1621     0069  3400               	retlw	0
  1622     006A  3404               	retlw	4
  1623     006B  3400               	retlw	0
  1624     006C  3404               	retlw	4
  1625     006D  3400               	retlw	0
  1626     006E  3404               	retlw	4
  1627     006F  3400               	retlw	0
  1628     0070  3405               	retlw	5
  1629     0071  3400               	retlw	0
  1630     0072  3405               	retlw	5
  1631     0073  3400               	retlw	0
  1632     0074  3405               	retlw	5
  1633     0075  3400               	retlw	0
  1634     0076  3405               	retlw	5
  1635     0077  3400               	retlw	0
  1636     0078  3405               	retlw	5
  1637     0079  3400               	retlw	0
  1638     007A  3405               	retlw	5
  1639     007B  3400               	retlw	0
  1640     007C  3406               	retlw	6
  1641     007D  3400               	retlw	0
  1642     007E  3406               	retlw	6
  1643     007F  3400               	retlw	0
  1644     0080  3406               	retlw	6
  1645     0081  3400               	retlw	0
  1646     0082  3406               	retlw	6
  1647     0083  3400               	retlw	0
  1648     0084  3406               	retlw	6
  1649     0085  3400               	retlw	0
  1650     0086  3406               	retlw	6
  1651     0087  3400               	retlw	0
  1652     0088  3407               	retlw	7
  1653     0089  3400               	retlw	0
  1654     008A  3407               	retlw	7
  1655     008B  3400               	retlw	0
  1656     008C  3407               	retlw	7
  1657     008D  3400               	retlw	0
  1658     008E  3407               	retlw	7
  1659     008F  3400               	retlw	0
  1660     0090  3407               	retlw	7
  1661     0091  3400               	retlw	0
  1662     0092  3407               	retlw	7
  1663     0093  3400               	retlw	0
  1664     0094  3408               	retlw	8
  1665     0095  3400               	retlw	0
  1666     0096  3408               	retlw	8
  1667     0097  3400               	retlw	0
  1668     0098  3408               	retlw	8
  1669     0099  3400               	retlw	0
  1670     009A  3408               	retlw	8
  1671     009B  3400               	retlw	0
  1672     009C  3408               	retlw	8
  1673     009D  3400               	retlw	0
  1674     009E  3408               	retlw	8
  1675     009F  3400               	retlw	0
  1676     00A0  3409               	retlw	9
  1677     00A1  3400               	retlw	0
  1678     00A2  3409               	retlw	9
  1679     00A3  3400               	retlw	0
  1680     00A4  3409               	retlw	9
  1681     00A5  3400               	retlw	0
  1682     00A6  3409               	retlw	9
  1683     00A7  3400               	retlw	0
  1684     00A8  3409               	retlw	9
  1685     00A9  3400               	retlw	0
  1686     00AA  3409               	retlw	9
  1687     00AB  3400               	retlw	0
  1688     00AC  340A               	retlw	10
  1689     00AD  3400               	retlw	0
  1690     00AE  340A               	retlw	10
  1691     00AF  3400               	retlw	0
  1692     00B0  340A               	retlw	10
  1693     00B1  3400               	retlw	0
  1694     00B2  340A               	retlw	10
  1695     00B3  3400               	retlw	0
  1696     00B4  340A               	retlw	10
  1697     00B5  3400               	retlw	0
  1698     00B6  340A               	retlw	10
  1699     00B7  3400               	retlw	0
  1700     00B8  340B               	retlw	11
  1701     00B9  3400               	retlw	0
  1702     00BA  340B               	retlw	11
  1703     00BB  3400               	retlw	0
  1704     00BC  340B               	retlw	11
  1705     00BD  3400               	retlw	0
  1706     00BE  340B               	retlw	11
  1707     00BF  3400               	retlw	0
  1708     00C0  340B               	retlw	11
  1709     00C1  3400               	retlw	0
  1710     00C2  340B               	retlw	11
  1711     00C3  3400               	retlw	0
  1712     00C4  340C               	retlw	12
  1713     00C5  3400               	retlw	0
  1714     00C6  340C               	retlw	12
  1715     00C7  3400               	retlw	0
  1716     00C8  340C               	retlw	12
  1717     00C9  3400               	retlw	0
  1718     00CA  340C               	retlw	12
  1719     00CB  3400               	retlw	0
  1720     00CC  340C               	retlw	12
  1721     00CD  3400               	retlw	0
  1722     00CE  340C               	retlw	12
  1723     00CF  3400               	retlw	0
  1724     00D0                     __end_of_default_in_flash:
  1725                           
  1726                           	psect	nvBANK0
  1727     0049                     __pnvBANK0:
  1728     0049                     _TMR0_InterruptHandler:
  1729     0049                     	ds	2
  1730     0018                     _LATAbits	set	24
  1731     000B                     _INTCONbits	set	11
  1732     0014                     _TRISC	set	20
  1733     0012                     _TRISA	set	18
  1734     001A                     _LATC	set	26
  1735     0018                     _LATA	set	24
  1736     000C                     _PORTA	set	12
  1737     000E                     _PORTC	set	14
  1738     018C                     _SSP1BUF	set	396
  1739     0191                     _SSP1CON2bits	set	401
  1740     018F                     _SSP1STATbits	set	399
  1741     018E                     _SSP1MSK	set	398
  1742     018D                     _SSP1ADD	set	397
  1743     0190                     _SSP1CON1bits	set	400
  1744     0191                     _SSP1CON2	set	401
  1745     0190                     _SSP1CON1	set	400
  1746     018F                     _SSP1STAT	set	399
  1747     059E                     _T0CON0bits	set	1438
  1748     059E                     _T0CON0	set	1438
  1749     059C                     _TMR0L	set	1436
  1750     059D                     _TMR0H	set	1437
  1751     059F                     _T0CON1	set	1439
  1752     070D                     _PIR1bits	set	1805
  1753     0717                     _PIE1bits	set	1815
  1754     070C                     _PIR0bits	set	1804
  1755     0716                     _PIE0bits	set	1814
  1756     080C                     _WDTCON	set	2060
  1757     081F                     _NVMCON2	set	2079
  1758     081C                     _NVMDATL	set	2076
  1759     081D                     _NVMDATH	set	2077
  1760     081E                     _NVMCON1bits	set	2078
  1761     081B                     _NVMADRH	set	2075
  1762     081A                     _NVMADRL	set	2074
  1763     0892                     _OSCTUNE	set	2194
  1764     0893                     _OSCFRQ	set	2195
  1765     0891                     _OSCEN	set	2193
  1766     1EC6                     _SSP1DATPPS	set	7878
  1767     1EC5                     _SSP1CLKPPS	set	7877
  1768     1F21                     _RC1PPS	set	7969
  1769     1F20                     _RC0PPS	set	7968
  1770     1F52                     _INLVLC	set	8018
  1771     1F3C                     _INLVLA	set	7996
  1772     1F51                     _SLRCONC	set	8017
  1773     1F3B                     _SLRCONA	set	7995
  1774     1F50                     _ODCONC	set	8016
  1775     1F3A                     _ODCONA	set	7994
  1776     1F4F                     _WPUC	set	8015
  1777     1F39                     _WPUA	set	7993
  1778     1F38                     _ANSELA	set	7992
  1779     1F4E                     _ANSELC	set	8014
  1780                           
  1781                           	psect	cinit
  1782     00D0                     start_initialization:	
  1783                           ; #config settings
  1784                           
  1785     00D0                     __initialization:
  1786                           
  1787                           ; Clear objects allocated to COMMON
  1788     00D0  01F8               	clrf	__pbssCOMMON& (0+127)
  1789     00D1  01F9               	clrf	(__pbssCOMMON+1)& (0+127)
  1790     00D2  01FA               	clrf	(__pbssCOMMON+2)& (0+127)
  1791                           
  1792                           ; Clear objects allocated to BANK0
  1793     00D3  3037               	movlw	low __pbssBANK0
  1794     00D4  0084               	movwf	4
  1795     00D5  3000               	movlw	high __pbssBANK0
  1796     00D6  0085               	movwf	5
  1797     00D7  3012               	movlw	18
  1798     00D8  3184  2455  3180   	fcall	clear_ram0
  1799                           
  1800                           ; Clear objects allocated to BANK1
  1801     00DB  30A0               	movlw	low __pbssBANK1
  1802     00DC  0084               	movwf	4
  1803     00DD  3000               	movlw	high __pbssBANK1
  1804     00DE  0085               	movwf	5
  1805     00DF  3040               	movlw	64
  1806     00E0  3184  2455  3180   	fcall	clear_ram0
  1807     00E3                     end_of_initialization:	
  1808                           ;End of C runtime variable initialization code
  1809                           
  1810     00E3                     __end_of__initialization:
  1811     00E3  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  1812     00E4  0140               	movlb	0
  1813     00E5  2B62               	ljmp	_main	;jump to C main() function
  1814                           
  1815                           	psect	bssCOMMON
  1816     0078                     __pbssCOMMON:
  1817     0078                     _i2cReadCnt:
  1818     0078                     	ds	1
  1819     0079                     _i2c1WrData:
  1820     0079                     	ds	1
  1821     007A                     _LED_timer:
  1822     007A                     	ds	1
  1823                           
  1824                           	psect	bssBANK0
  1825     0037                     __pbssBANK0:
  1826     0037                     _i2cDataRead:
  1827     0037                     	ds	3
  1828     003A                     _I2C1_SlaveWrColInterruptHandler:
  1829     003A                     	ds	2
  1830     003C                     _I2C1_SlaveBusColInterruptHandler:
  1831     003C                     	ds	2
  1832     003E                     _I2C1_SlaveAddrInterruptHandler:
  1833     003E                     	ds	2
  1834     0040                     _I2C1_SlaveWrInterruptHandler:
  1835     0040                     	ds	2
  1836     0042                     _I2C1_SlaveRdInterruptHandler:
  1837     0042                     	ds	2
  1838     0044                     _MSSP1_InterruptHandler:
  1839     0044                     	ds	2
  1840     0046                     _i2c1SlaveState:
  1841     0046                     	ds	1
  1842     0047                     _i2c1SlaveAddr:
  1843     0047                     	ds	1
  1844     0048                     _i2c1RdData:
  1845     0048                     	ds	1
  1846                           
  1847                           	psect	bssBANK1
  1848     00A0                     __pbssBANK1:
  1849     00A0                     memory_initialize@ramBuff:
  1850     00A0                     	ds	64
  1851                           
  1852                           	psect	clrtext
  1853     0455                     clear_ram0:	
  1854                           ;	Called with FSR0 containing the base address, and
  1855                           ;	WREG with the size to clear
  1856                           
  1857     0455  0064               	clrwdt	;clear the watchdog before getting into this loop
  1858     0456                     clrloop0:
  1859     0456  0180               	clrf	0	;clear RAM location pointed to by FSR
  1860     0457  3101               	addfsr 0,1
  1861     0458  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  1862     0459  2C56               	goto	clrloop0	;have we reached the end yet?
  1863     045A  3400               	retlw	0	;all done for this memory range, return
  1864                           
  1865                           	psect	cstackCOMMON
  1866     0070                     __pcstackCOMMON:
  1867     0070                     ?_TMR0_ISR:
  1868     0070                     ?_I2C1_Isr:	
  1869                           ; 1 bytes @ 0x0
  1870                           
  1871     0070                     ?_I2C1_SlaveDefWrInterruptHandler:	
  1872                           ; 1 bytes @ 0x0
  1873                           
  1874     0070                     ?_I2C1_SlaveDefRdInterruptHandler:	
  1875                           ; 1 bytes @ 0x0
  1876                           
  1877     0070                     ??_I2C1_SlaveDefRdInterruptHandler:	
  1878                           ; 1 bytes @ 0x0
  1879                           
  1880     0070                     ?_I2C1_SlaveDefAddrInterruptHandler:	
  1881                           ; 1 bytes @ 0x0
  1882                           
  1883     0070                     ??_I2C1_SlaveDefAddrInterruptHandler:	
  1884                           ; 1 bytes @ 0x0
  1885                           
  1886     0070                     ?_I2C1_SlaveGetRxData:	
  1887                           ; 1 bytes @ 0x0
  1888                           
  1889     0070                     ??_I2C1_SlaveGetRxData:	
  1890                           ; 1 bytes @ 0x0
  1891                           
  1892     0070                     ?_I2C1_SlaveSendTxData:	
  1893                           ; 1 bytes @ 0x0
  1894                           
  1895     0070                     ??_I2C1_SlaveSendTxData:	
  1896                           ; 1 bytes @ 0x0
  1897                           
  1898     0070                     ?_I2C1_SlaveIsRead:	
  1899                           ; 1 bytes @ 0x0
  1900                           
  1901     0070                     ??_I2C1_SlaveIsRead:	
  1902                           ; 1 bytes @ 0x0
  1903                           
  1904     0070                     ?_I2C1_SlaveClearIrq:	
  1905                           ; 1 bytes @ 0x0
  1906                           
  1907     0070                     ??_I2C1_SlaveClearIrq:	
  1908                           ; 1 bytes @ 0x0
  1909                           
  1910     0070                     ?_I2C1_SlaveIsAddr:	
  1911                           ; 1 bytes @ 0x0
  1912                           
  1913     0070                     ??_I2C1_SlaveIsAddr:	
  1914                           ; 1 bytes @ 0x0
  1915                           
  1916     0070                     ?_I2C1_SlaveAddrCallBack:	
  1917                           ; 1 bytes @ 0x0
  1918                           
  1919     0070                     ??_I2C1_SlaveAddrCallBack:	
  1920                           ; 1 bytes @ 0x0
  1921                           
  1922     0070                     ?_I2C1_SlaveIsTxBufEmpty:	
  1923                           ; 1 bytes @ 0x0
  1924                           
  1925     0070                     ??_I2C1_SlaveIsTxBufEmpty:	
  1926                           ; 1 bytes @ 0x0
  1927                           
  1928     0070                     ?_I2C1_SlaveWrCallBack:	
  1929                           ; 1 bytes @ 0x0
  1930                           
  1931     0070                     ?_I2C1_SlaveIsRxBufFull:	
  1932                           ; 1 bytes @ 0x0
  1933                           
  1934     0070                     ??_I2C1_SlaveIsRxBufFull:	
  1935                           ; 1 bytes @ 0x0
  1936                           
  1937     0070                     ?_I2C1_SlaveRdCallBack:	
  1938                           ; 1 bytes @ 0x0
  1939                           
  1940     0070                     ??_I2C1_SlaveRdCallBack:	
  1941                           ; 1 bytes @ 0x0
  1942                           
  1943     0070                     ?_I2C1_SlaveReleaseClock:	
  1944                           ; 1 bytes @ 0x0
  1945                           
  1946     0070                     ??_I2C1_SlaveReleaseClock:	
  1947                           ; 1 bytes @ 0x0
  1948                           
  1949     0070                     ?_TMR0_DefaultInterruptHandler:	
  1950                           ; 1 bytes @ 0x0
  1951                           
  1952     0070                     ??_TMR0_DefaultInterruptHandler:	
  1953                           ; 1 bytes @ 0x0
  1954                           
  1955     0070                     ?_OSCILLATOR_Initialize:	
  1956                           ; 1 bytes @ 0x0
  1957                           
  1958     0070                     ?_WDT_Initialize:	
  1959                           ; 1 bytes @ 0x0
  1960                           
  1961     0070                     ?_memory_initialize:	
  1962                           ; 1 bytes @ 0x0
  1963                           
  1964     0070                     ?_getSensorBoardType:	
  1965                           ; 1 bytes @ 0x0
  1966                           
  1967     0070                     ?_SensorBoardType_validation:	
  1968                           ; 1 bytes @ 0x0
  1969                           
  1970     0070                     ?_PIN_MANAGER_Initialize:	
  1971                           ; 1 bytes @ 0x0
  1972                           
  1973     0070                     ?_INTERRUPT_InterruptManager:	
  1974                           ; 1 bytes @ 0x0
  1975                           
  1976     0070                     ?_I2C1_Initialize:	
  1977                           ; 1 bytes @ 0x0
  1978                           
  1979     0070                     ?_TMR0_Initialize:	
  1980                           ; 1 bytes @ 0x0
  1981                           
  1982     0070                     ?_SYSTEM_Initialize:	
  1983                           ; 1 bytes @ 0x0
  1984                           
  1985     0070                     ?_main:	
  1986                           ; 1 bytes @ 0x0
  1987                           
  1988     0070                     I2C1_SlaveSendTxData@data:	
  1989                           ; 1 bytes @ 0x0
  1990                           
  1991                           
  1992                           ; 1 bytes @ 0x0
  1993     0070                     	ds	1
  1994     0071                     ??_TMR0_ISR:
  1995     0071                     ??_I2C1_Isr:	
  1996                           ; 1 bytes @ 0x1
  1997                           
  1998     0071                     ??_I2C1_SlaveDefWrInterruptHandler:	
  1999                           ; 1 bytes @ 0x1
  2000                           
  2001     0071                     ??_I2C1_SlaveWrCallBack:	
  2002                           ; 1 bytes @ 0x1
  2003                           
  2004                           
  2005                           ; 1 bytes @ 0x1
  2006     0071                     	ds	2
  2007     0073                     ?_TMR0_SetInterruptHandler:
  2008     0073                     ?_FLASH_EraseBlock:	
  2009                           ; 1 bytes @ 0x3
  2010                           
  2011     0073                     ??_OSCILLATOR_Initialize:	
  2012                           ; 1 bytes @ 0x3
  2013                           
  2014     0073                     ??_WDT_Initialize:	
  2015                           ; 1 bytes @ 0x3
  2016                           
  2017     0073                     ??_getSensorBoardType:	
  2018                           ; 1 bytes @ 0x3
  2019                           
  2020     0073                     ??_SensorBoardType_validation:	
  2021                           ; 1 bytes @ 0x3
  2022                           
  2023     0073                     ??_PIN_MANAGER_Initialize:	
  2024                           ; 1 bytes @ 0x3
  2025                           
  2026     0073                     ??_INTERRUPT_InterruptManager:	
  2027                           ; 1 bytes @ 0x3
  2028                           
  2029     0073                     ??_I2C1_Initialize:	
  2030                           ; 1 bytes @ 0x3
  2031                           
  2032     0073                     ?_FLASH_ReadWord:	
  2033                           ; 1 bytes @ 0x3
  2034                           
  2035     0073                     ?___wmul:	
  2036                           ; 2 bytes @ 0x3
  2037                           
  2038     0073                     SensorBoardType_validation@SensorBoardType:	
  2039                           ; 2 bytes @ 0x3
  2040                           
  2041     0073                     TMR0_SetInterruptHandler@InterruptHandler:	
  2042                           ; 1 bytes @ 0x3
  2043                           
  2044     0073                     FLASH_ReadWord@flashAddr:	
  2045                           ; 2 bytes @ 0x3
  2046                           
  2047     0073                     FLASH_EraseBlock@startAddr:	
  2048                           ; 2 bytes @ 0x3
  2049                           
  2050     0073                     ___wmul@multiplier:	
  2051                           ; 2 bytes @ 0x3
  2052                           
  2053                           
  2054                           ; 2 bytes @ 0x3
  2055     0073                     	ds	2
  2056     0075                     ??_FLASH_ReadWord:
  2057     0075                     ??_TMR0_SetInterruptHandler:	
  2058                           ; 1 bytes @ 0x5
  2059                           
  2060     0075                     ??_FLASH_EraseBlock:	
  2061                           ; 1 bytes @ 0x5
  2062                           
  2063     0075                     ??_TMR0_Initialize:	
  2064                           ; 1 bytes @ 0x5
  2065                           
  2066     0075                     ??_SYSTEM_Initialize:	
  2067                           ; 1 bytes @ 0x5
  2068                           
  2069     0075                     FLASH_ReadWord@GIEBitValue:	
  2070                           ; 1 bytes @ 0x5
  2071                           
  2072     0075                     FLASH_EraseBlock@GIEBitValue:	
  2073                           ; 1 bytes @ 0x5
  2074                           
  2075     0075                     ___wmul@multiplicand:	
  2076                           ; 1 bytes @ 0x5
  2077                           
  2078                           
  2079                           ; 2 bytes @ 0x5
  2080     0075                     	ds	2
  2081     0077                     ??_FLASH_WriteWord:
  2082     0077                     ??___wmul:	
  2083                           ; 1 bytes @ 0x7
  2084                           
  2085                           
  2086                           ; 1 bytes @ 0x7
  2087     0077                     	ds	1
  2088     0078                     ??_main:
  2089                           
  2090                           	psect	cstackBANK0
  2091     0020                     __pcstackBANK0:	
  2092                           ; 1 bytes @ 0x8
  2093                           
  2094     0020                     ?_FLASH_WriteBlock:
  2095     0020                     FLASH_WriteBlock@writeAddr:	
  2096                           ; 1 bytes @ 0x0
  2097                           
  2098     0020                     ___wmul@product:	
  2099                           ; 2 bytes @ 0x0
  2100                           
  2101                           
  2102                           ; 2 bytes @ 0x0
  2103     0020                     	ds	2
  2104     0022                     FLASH_WriteBlock@flashWordArray:
  2105                           
  2106                           ; 1 bytes @ 0x2
  2107     0022                     	ds	1
  2108     0023                     ??_FLASH_WriteBlock:
  2109                           
  2110                           ; 1 bytes @ 0x3
  2111     0023                     	ds	3
  2112     0026                     FLASH_WriteBlock@blockStartAddr:
  2113                           
  2114                           ; 2 bytes @ 0x6
  2115     0026                     	ds	2
  2116     0028                     FLASH_WriteBlock@GIEBitValue:
  2117                           
  2118                           ; 1 bytes @ 0x8
  2119     0028                     	ds	1
  2120     0029                     FLASH_WriteBlock@i:
  2121                           
  2122                           ; 1 bytes @ 0x9
  2123     0029                     	ds	1
  2124     002A                     ?_FLASH_WriteWord:
  2125     002A                     FLASH_WriteWord@flashAddr:	
  2126                           ; 1 bytes @ 0xA
  2127                           
  2128                           
  2129                           ; 2 bytes @ 0xA
  2130     002A                     	ds	2
  2131     002C                     FLASH_WriteWord@ramBuf:
  2132                           
  2133                           ; 1 bytes @ 0xC
  2134     002C                     	ds	1
  2135     002D                     FLASH_WriteWord@word:
  2136                           
  2137                           ; 2 bytes @ 0xD
  2138     002D                     	ds	2
  2139     002F                     FLASH_WriteWord@offset:
  2140                           
  2141                           ; 1 bytes @ 0xF
  2142     002F                     	ds	1
  2143     0030                     FLASH_WriteWord@blockStartAddr:
  2144                           
  2145                           ; 2 bytes @ 0x10
  2146     0030                     	ds	2
  2147     0032                     FLASH_WriteWord@i:
  2148                           
  2149                           ; 1 bytes @ 0x12
  2150     0032                     	ds	1
  2151     0033                     ??_memory_initialize:
  2152                           
  2153                           ; 1 bytes @ 0x13
  2154     0033                     	ds	2
  2155     0035                     memory_initialize@TAG:
  2156                           
  2157                           ; 1 bytes @ 0x15
  2158     0035                     	ds	1
  2159     0036                     main@TAG:
  2160                           
  2161                           ; 1 bytes @ 0x16
  2162     0036                     	ds	1
  2163                           
  2164                           	psect	maintext
  2165     0362                     __pmaintext:	
  2166 ;;
  2167 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  2168 ;;
  2169 ;; *************** function _main *****************
  2170 ;; Defined at:
  2171 ;;		line 49 in file "main.c"
  2172 ;; Parameters:    Size  Location     Type
  2173 ;;		None
  2174 ;; Auto vars:     Size  Location     Type
  2175 ;;  TAG             1   22[BANK0 ] unsigned char 
  2176 ;; Return value:  Size  Location     Type
  2177 ;;                  1    wreg      void 
  2178 ;; Registers used:
  2179 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2180 ;; Tracked objects:
  2181 ;;		On entry : B3F/0
  2182 ;;		On exit  : 0/0
  2183 ;;		Unchanged: 0/0
  2184 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2185 ;;      Params:         0       0       0       0
  2186 ;;      Locals:         0       1       0       0
  2187 ;;      Temps:          0       0       0       0
  2188 ;;      Totals:         0       1       0       0
  2189 ;;Total ram usage:        1 bytes
  2190 ;; Hardware stack levels required when called: 9
  2191 ;; This function calls:
  2192 ;;		_SYSTEM_Initialize
  2193 ;;		_SensorBoardType_validation
  2194 ;;		_getSensorBoardType
  2195 ;;		_memory_initialize
  2196 ;; This function is called by:
  2197 ;;		Startup code after reset
  2198 ;; This function uses a non-reentrant model
  2199 ;;
  2200                           
  2201     0362                     _main:	
  2202                           ;psect for function _main
  2203                           
  2204     0362                     l2158:	
  2205                           ;incstack = 0
  2206                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2207                           
  2208                           
  2209                           ;main.c: 52:     SYSTEM_Initialize();
  2210     0362  3183  23E2  3183   	fcall	_SYSTEM_Initialize
  2211                           
  2212                           ;main.c: 54:     uint8_t TAG = getSensorBoardType();
  2213     0365  3184  2401  3183   	fcall	_getSensorBoardType
  2214     0368  0140               	movlb	0	; select bank0
  2215     0369  00B6               	movwf	main@TAG
  2216                           
  2217                           ;main.c: 55:     if(SensorBoardType_validation(TAG)){
  2218     036A  0836               	movf	main@TAG,w
  2219     036B  3183  23D2  3183   	fcall	_SensorBoardType_validation
  2220     036E  3A00               	xorlw	0
  2221     036F  1903               	skipnz
  2222     0370  2B72               	goto	u821
  2223     0371  2B73               	goto	u820
  2224     0372                     u821:
  2225     0372  2B78               	goto	l568
  2226     0373                     u820:
  2227     0373                     l2160:
  2228                           
  2229                           ;main.c: 57:         memory_initialize(TAG);
  2230     0373  0140               	movlb	0	; select bank0
  2231     0374  0836               	movf	main@TAG,w
  2232     0375  3180  20E6  3183   	fcall	_memory_initialize
  2233     0378                     l568:	
  2234                           ;main.c: 61:     }
  2235                           
  2236                           
  2237                           ;main.c: 74:     (INTCONbits.GIE = 1);
  2238     0378  178B               	bsf	11,7	;volatile
  2239                           
  2240                           ;main.c: 77:     (INTCONbits.PEIE = 1);
  2241     0379  170B               	bsf	11,6	;volatile
  2242     037A                     l569:	
  2243                           ;main.c: 85:     while (1)
  2244                           
  2245     037A                     l570:	
  2246                           ;main.c: 86:     {;main.c: 91:     }
  2247                           
  2248     037A  2B7A               	goto	l569
  2249     037B  2831               	ljmp	start
  2250     037C                     __end_of_main:
  2251                           
  2252                           	psect	text1
  2253     00E6                     __ptext1:	
  2254 ;; *************** function _memory_initialize *****************
  2255 ;; Defined at:
  2256 ;;		line 4 in file "flash_memory_filling.c"
  2257 ;; Parameters:    Size  Location     Type
  2258 ;;  TAG             1    wreg     unsigned char 
  2259 ;; Auto vars:     Size  Location     Type
  2260 ;;  TAG             1   21[BANK0 ] unsigned char 
  2261 ;; Return value:  Size  Location     Type
  2262 ;;                  1    wreg      void 
  2263 ;; Registers used:
  2264 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2265 ;; Tracked objects:
  2266 ;;		On entry : 0/0
  2267 ;;		On exit  : 0/0
  2268 ;;		Unchanged: 0/0
  2269 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2270 ;;      Params:         0       0       0       0
  2271 ;;      Locals:         0       1       0       0
  2272 ;;      Temps:          0       2       0       0
  2273 ;;      Totals:         0       3       0       0
  2274 ;;Total ram usage:        3 bytes
  2275 ;; Hardware stack levels used: 1
  2276 ;; Hardware stack levels required when called: 8
  2277 ;; This function calls:
  2278 ;;		_FLASH_ReadWord
  2279 ;;		_FLASH_WriteWord
  2280 ;;		___wmul
  2281 ;; This function is called by:
  2282 ;;		_main
  2283 ;; This function uses a non-reentrant model
  2284 ;;
  2285                           
  2286     00E6                     _memory_initialize:	
  2287                           ;psect for function _memory_initialize
  2288                           
  2289                           
  2290                           ;incstack = 0
  2291                           ; Regs used in _memory_initialize: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2292                           ;memory_initialize@TAG stored from wreg
  2293     00E6  0140               	movlb	0	; select bank0
  2294     00E7  00B5               	movwf	memory_initialize@TAG
  2295     00E8                     l2142:
  2296                           
  2297                           ;flash_memory_filling.c: 4: void memory_initialize(uint8_t TAG);flash_memory_filling.c: 
      +                          5: {;flash_memory_filling.c: 7:     static uint16_t ramBuff[32];;flash_memory_filling.c:
      +                           9:     if(FLASH_ReadWord(0x780) != 0x55)
  2298     00E8  3080               	movlw	128
  2299     00E9  00F3               	movwf	FLASH_ReadWord@flashAddr
  2300     00EA  3007               	movlw	7
  2301     00EB  00F4               	movwf	FLASH_ReadWord@flashAddr+1
  2302     00EC  3183  237C  3180   	fcall	_FLASH_ReadWord
  2303     00EF  3055               	movlw	85
  2304     00F0  0673               	xorwf	?_FLASH_ReadWord,w
  2305     00F1  0474               	iorwf	?_FLASH_ReadWord+1,w
  2306     00F2  1903               	btfsc	3,2
  2307     00F3  28F5               	goto	u811
  2308     00F4  28F6               	goto	u810
  2309     00F5                     u811:
  2310     00F5  29E9               	goto	l26
  2311     00F6                     u810:
  2312     00F6                     l2144:
  2313                           
  2314                           ;flash_memory_filling.c: 10:     {;flash_memory_filling.c: 11:         FLASH_WriteWord(0
      +                          x780, ramBuff, 0x55);
  2315     00F6  3080               	movlw	128
  2316     00F7  0140               	movlb	0	; select bank0
  2317     00F8  00AA               	movwf	FLASH_WriteWord@flashAddr
  2318     00F9  3007               	movlw	7
  2319     00FA  00AB               	movwf	FLASH_WriteWord@flashAddr+1
  2320     00FB  30A0               	movlw	(low (memory_initialize@ramBuff| 0))& (0+255)
  2321     00FC  00AC               	movwf	FLASH_WriteWord@ramBuf
  2322     00FD  3055               	movlw	85
  2323     00FE  00AD               	movwf	FLASH_WriteWord@word
  2324     00FF  3000               	movlw	0
  2325     0100  00AE               	movwf	FLASH_WriteWord@word+1
  2326     0101  3182  22C3  3180   	fcall	_FLASH_WriteWord
  2327                           
  2328                           ;flash_memory_filling.c: 12:         FLASH_WriteWord(0x780 + 1, ramBuff, 0x00 );
  2329     0104  3081               	movlw	129
  2330     0105  0140               	movlb	0	; select bank0
  2331     0106  00AA               	movwf	FLASH_WriteWord@flashAddr
  2332     0107  3007               	movlw	7
  2333     0108  00AB               	movwf	FLASH_WriteWord@flashAddr+1
  2334     0109  30A0               	movlw	(low (memory_initialize@ramBuff| 0))& (0+255)
  2335     010A  00AC               	movwf	FLASH_WriteWord@ramBuf
  2336     010B  3000               	movlw	0
  2337     010C  00AD               	movwf	FLASH_WriteWord@word
  2338     010D  00AE               	movwf	FLASH_WriteWord@word+1
  2339     010E  3182  22C3  3180   	fcall	_FLASH_WriteWord
  2340     0111                     l2146:
  2341                           
  2342                           ;flash_memory_filling.c: 13:         FLASH_WriteWord(0x780 + 2, ramBuff, (uint16_t)defau
      +                          lt_in_flash[TAG - 1][0]);
  2343     0111  3082               	movlw	130
  2344     0112  0140               	movlb	0	; select bank0
  2345     0113  00AA               	movwf	FLASH_WriteWord@flashAddr
  2346     0114  3007               	movlw	7
  2347     0115  00AB               	movwf	FLASH_WriteWord@flashAddr+1
  2348     0116  30A0               	movlw	(low (memory_initialize@ramBuff| 0))& (0+255)
  2349     0117  00AC               	movwf	FLASH_WriteWord@ramBuf
  2350     0118  0835               	movf	memory_initialize@TAG,w
  2351     0119  00B3               	movwf	??_memory_initialize
  2352     011A  01B4               	clrf	??_memory_initialize+1
  2353     011B  0833               	movf	??_memory_initialize,w
  2354     011C  00F3               	movwf	___wmul@multiplier
  2355     011D  0834               	movf	??_memory_initialize+1,w
  2356     011E  00F4               	movwf	___wmul@multiplier+1
  2357     011F  300C               	movlw	12
  2358     0120  00F5               	movwf	___wmul@multiplicand
  2359     0121  3000               	movlw	0
  2360     0122  00F6               	movwf	___wmul@multiplicand+1
  2361     0123  3183  2324  3180   	fcall	___wmul
  2362     0126  3034               	movlw	52
  2363     0127  0773               	addwf	?___wmul,w
  2364     0128  0084               	movwf	4
  2365     0129  3000               	movlw	0
  2366     012A  3D74               	addwfc	?___wmul+1,w
  2367     012B  3880               	iorlw	128
  2368     012C  0085               	movwf	5
  2369     012D  3F00               	moviw [0]fsr0
  2370     012E  0140               	movlb	0	; select bank0
  2371     012F  00AD               	movwf	FLASH_WriteWord@word
  2372     0130  3F01               	moviw [1]fsr0
  2373     0131  00AE               	movwf	FLASH_WriteWord@word+1
  2374     0132  3182  22C3  3180   	fcall	_FLASH_WriteWord
  2375     0135                     l2148:
  2376                           
  2377                           ;flash_memory_filling.c: 14:         FLASH_WriteWord(0x780 + 3, ramBuff, (uint16_t)defau
      +                          lt_in_flash[TAG - 1][1]);
  2378     0135  3083               	movlw	131
  2379     0136  0140               	movlb	0	; select bank0
  2380     0137  00AA               	movwf	FLASH_WriteWord@flashAddr
  2381     0138  3007               	movlw	7
  2382     0139  00AB               	movwf	FLASH_WriteWord@flashAddr+1
  2383     013A  30A0               	movlw	(low (memory_initialize@ramBuff| 0))& (0+255)
  2384     013B  00AC               	movwf	FLASH_WriteWord@ramBuf
  2385     013C  0835               	movf	memory_initialize@TAG,w
  2386     013D  00B3               	movwf	??_memory_initialize
  2387     013E  01B4               	clrf	??_memory_initialize+1
  2388     013F  0833               	movf	??_memory_initialize,w
  2389     0140  00F3               	movwf	___wmul@multiplier
  2390     0141  0834               	movf	??_memory_initialize+1,w
  2391     0142  00F4               	movwf	___wmul@multiplier+1
  2392     0143  300C               	movlw	12
  2393     0144  00F5               	movwf	___wmul@multiplicand
  2394     0145  3000               	movlw	0
  2395     0146  00F6               	movwf	___wmul@multiplicand+1
  2396     0147  3183  2324  3180   	fcall	___wmul
  2397     014A  3036               	movlw	54
  2398     014B  0773               	addwf	?___wmul,w
  2399     014C  0084               	movwf	4
  2400     014D  3000               	movlw	0
  2401     014E  3D74               	addwfc	?___wmul+1,w
  2402     014F  3880               	iorlw	128
  2403     0150  0085               	movwf	5
  2404     0151  3F00               	moviw [0]fsr0
  2405     0152  0140               	movlb	0	; select bank0
  2406     0153  00AD               	movwf	FLASH_WriteWord@word
  2407     0154  3F01               	moviw [1]fsr0
  2408     0155  00AE               	movwf	FLASH_WriteWord@word+1
  2409     0156  3182  22C3  3180   	fcall	_FLASH_WriteWord
  2410     0159                     l2150:
  2411                           
  2412                           ;flash_memory_filling.c: 15:         FLASH_WriteWord(0x780 + 4, ramBuff, (uint16_t)defau
      +                          lt_in_flash[TAG - 1][2]);
  2413     0159  3084               	movlw	132
  2414     015A  0140               	movlb	0	; select bank0
  2415     015B  00AA               	movwf	FLASH_WriteWord@flashAddr
  2416     015C  3007               	movlw	7
  2417     015D  00AB               	movwf	FLASH_WriteWord@flashAddr+1
  2418     015E  30A0               	movlw	(low (memory_initialize@ramBuff| 0))& (0+255)
  2419     015F  00AC               	movwf	FLASH_WriteWord@ramBuf
  2420     0160  0835               	movf	memory_initialize@TAG,w
  2421     0161  00B3               	movwf	??_memory_initialize
  2422     0162  01B4               	clrf	??_memory_initialize+1
  2423     0163  0833               	movf	??_memory_initialize,w
  2424     0164  00F3               	movwf	___wmul@multiplier
  2425     0165  0834               	movf	??_memory_initialize+1,w
  2426     0166  00F4               	movwf	___wmul@multiplier+1
  2427     0167  300C               	movlw	12
  2428     0168  00F5               	movwf	___wmul@multiplicand
  2429     0169  3000               	movlw	0
  2430     016A  00F6               	movwf	___wmul@multiplicand+1
  2431     016B  3183  2324  3180   	fcall	___wmul
  2432     016E  3038               	movlw	56
  2433     016F  0773               	addwf	?___wmul,w
  2434     0170  0084               	movwf	4
  2435     0171  3000               	movlw	0
  2436     0172  3D74               	addwfc	?___wmul+1,w
  2437     0173  3880               	iorlw	128
  2438     0174  0085               	movwf	5
  2439     0175  3F00               	moviw [0]fsr0
  2440     0176  0140               	movlb	0	; select bank0
  2441     0177  00AD               	movwf	FLASH_WriteWord@word
  2442     0178  3F01               	moviw [1]fsr0
  2443     0179  00AE               	movwf	FLASH_WriteWord@word+1
  2444     017A  3182  22C3  3180   	fcall	_FLASH_WriteWord
  2445     017D                     l2152:
  2446                           
  2447                           ;flash_memory_filling.c: 16:         FLASH_WriteWord(0x780 + 5, ramBuff, (uint16_t)defau
      +                          lt_in_flash[TAG - 1][3]);
  2448     017D  3085               	movlw	133
  2449     017E  0140               	movlb	0	; select bank0
  2450     017F  00AA               	movwf	FLASH_WriteWord@flashAddr
  2451     0180  3007               	movlw	7
  2452     0181  00AB               	movwf	FLASH_WriteWord@flashAddr+1
  2453     0182  30A0               	movlw	(low (memory_initialize@ramBuff| 0))& (0+255)
  2454     0183  00AC               	movwf	FLASH_WriteWord@ramBuf
  2455     0184  0835               	movf	memory_initialize@TAG,w
  2456     0185  00B3               	movwf	??_memory_initialize
  2457     0186  01B4               	clrf	??_memory_initialize+1
  2458     0187  0833               	movf	??_memory_initialize,w
  2459     0188  00F3               	movwf	___wmul@multiplier
  2460     0189  0834               	movf	??_memory_initialize+1,w
  2461     018A  00F4               	movwf	___wmul@multiplier+1
  2462     018B  300C               	movlw	12
  2463     018C  00F5               	movwf	___wmul@multiplicand
  2464     018D  3000               	movlw	0
  2465     018E  00F6               	movwf	___wmul@multiplicand+1
  2466     018F  3183  2324  3180   	fcall	___wmul
  2467     0192  303A               	movlw	58
  2468     0193  0773               	addwf	?___wmul,w
  2469     0194  0084               	movwf	4
  2470     0195  3000               	movlw	0
  2471     0196  3D74               	addwfc	?___wmul+1,w
  2472     0197  3880               	iorlw	128
  2473     0198  0085               	movwf	5
  2474     0199  3F00               	moviw [0]fsr0
  2475     019A  0140               	movlb	0	; select bank0
  2476     019B  00AD               	movwf	FLASH_WriteWord@word
  2477     019C  3F01               	moviw [1]fsr0
  2478     019D  00AE               	movwf	FLASH_WriteWord@word+1
  2479     019E  3182  22C3  3180   	fcall	_FLASH_WriteWord
  2480     01A1                     l2154:
  2481                           
  2482                           ;flash_memory_filling.c: 17:         FLASH_WriteWord(0x780 + 6, ramBuff, (uint16_t)defau
      +                          lt_in_flash[TAG - 1][4]);
  2483     01A1  3086               	movlw	134
  2484     01A2  0140               	movlb	0	; select bank0
  2485     01A3  00AA               	movwf	FLASH_WriteWord@flashAddr
  2486     01A4  3007               	movlw	7
  2487     01A5  00AB               	movwf	FLASH_WriteWord@flashAddr+1
  2488     01A6  30A0               	movlw	(low (memory_initialize@ramBuff| 0))& (0+255)
  2489     01A7  00AC               	movwf	FLASH_WriteWord@ramBuf
  2490     01A8  0835               	movf	memory_initialize@TAG,w
  2491     01A9  00B3               	movwf	??_memory_initialize
  2492     01AA  01B4               	clrf	??_memory_initialize+1
  2493     01AB  0833               	movf	??_memory_initialize,w
  2494     01AC  00F3               	movwf	___wmul@multiplier
  2495     01AD  0834               	movf	??_memory_initialize+1,w
  2496     01AE  00F4               	movwf	___wmul@multiplier+1
  2497     01AF  300C               	movlw	12
  2498     01B0  00F5               	movwf	___wmul@multiplicand
  2499     01B1  3000               	movlw	0
  2500     01B2  00F6               	movwf	___wmul@multiplicand+1
  2501     01B3  3183  2324  3180   	fcall	___wmul
  2502     01B6  303C               	movlw	60
  2503     01B7  0773               	addwf	?___wmul,w
  2504     01B8  0084               	movwf	4
  2505     01B9  3000               	movlw	0
  2506     01BA  3D74               	addwfc	?___wmul+1,w
  2507     01BB  3880               	iorlw	128
  2508     01BC  0085               	movwf	5
  2509     01BD  3F00               	moviw [0]fsr0
  2510     01BE  0140               	movlb	0	; select bank0
  2511     01BF  00AD               	movwf	FLASH_WriteWord@word
  2512     01C0  3F01               	moviw [1]fsr0
  2513     01C1  00AE               	movwf	FLASH_WriteWord@word+1
  2514     01C2  3182  22C3  3180   	fcall	_FLASH_WriteWord
  2515     01C5                     l2156:
  2516                           
  2517                           ;flash_memory_filling.c: 18:         FLASH_WriteWord(0x780 + 7, ramBuff, (uint16_t)defau
      +                          lt_in_flash[TAG - 1][5]);
  2518     01C5  3087               	movlw	135
  2519     01C6  0140               	movlb	0	; select bank0
  2520     01C7  00AA               	movwf	FLASH_WriteWord@flashAddr
  2521     01C8  3007               	movlw	7
  2522     01C9  00AB               	movwf	FLASH_WriteWord@flashAddr+1
  2523     01CA  30A0               	movlw	(low (memory_initialize@ramBuff| 0))& (0+255)
  2524     01CB  00AC               	movwf	FLASH_WriteWord@ramBuf
  2525     01CC  0835               	movf	memory_initialize@TAG,w
  2526     01CD  00B3               	movwf	??_memory_initialize
  2527     01CE  01B4               	clrf	??_memory_initialize+1
  2528     01CF  0833               	movf	??_memory_initialize,w
  2529     01D0  00F3               	movwf	___wmul@multiplier
  2530     01D1  0834               	movf	??_memory_initialize+1,w
  2531     01D2  00F4               	movwf	___wmul@multiplier+1
  2532     01D3  300C               	movlw	12
  2533     01D4  00F5               	movwf	___wmul@multiplicand
  2534     01D5  3000               	movlw	0
  2535     01D6  00F6               	movwf	___wmul@multiplicand+1
  2536     01D7  3183  2324  3180   	fcall	___wmul
  2537     01DA  303E               	movlw	62
  2538     01DB  0773               	addwf	?___wmul,w
  2539     01DC  0084               	movwf	4
  2540     01DD  3000               	movlw	0
  2541     01DE  3D74               	addwfc	?___wmul+1,w
  2542     01DF  3880               	iorlw	128
  2543     01E0  0085               	movwf	5
  2544     01E1  3F00               	moviw [0]fsr0
  2545     01E2  0140               	movlb	0	; select bank0
  2546     01E3  00AD               	movwf	FLASH_WriteWord@word
  2547     01E4  3F01               	moviw [1]fsr0
  2548     01E5  00AE               	movwf	FLASH_WriteWord@word+1
  2549     01E6  3182  22C3  3180   	fcall	_FLASH_WriteWord
  2550     01E9                     l26:
  2551     01E9  0008               	return
  2552     01EA                     __end_of_memory_initialize:
  2553                           
  2554                           	psect	text2
  2555     0324                     __ptext2:	
  2556 ;; *************** function ___wmul *****************
  2557 ;; Defined at:
  2558 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\Umul16.c"
  2559 ;; Parameters:    Size  Location     Type
  2560 ;;  multiplier      2    3[COMMON] unsigned int 
  2561 ;;  multiplicand    2    5[COMMON] unsigned int 
  2562 ;; Auto vars:     Size  Location     Type
  2563 ;;  product         2    0[BANK0 ] unsigned int 
  2564 ;; Return value:  Size  Location     Type
  2565 ;;                  2    3[COMMON] unsigned int 
  2566 ;; Registers used:
  2567 ;;		wreg, status,2, status,0
  2568 ;; Tracked objects:
  2569 ;;		On entry : 0/0
  2570 ;;		On exit  : 0/0
  2571 ;;		Unchanged: 0/0
  2572 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2573 ;;      Params:         4       0       0       0
  2574 ;;      Locals:         0       2       0       0
  2575 ;;      Temps:          0       0       0       0
  2576 ;;      Totals:         4       2       0       0
  2577 ;;Total ram usage:        6 bytes
  2578 ;; Hardware stack levels used: 1
  2579 ;; Hardware stack levels required when called: 5
  2580 ;; This function calls:
  2581 ;;		Nothing
  2582 ;; This function is called by:
  2583 ;;		_memory_initialize
  2584 ;; This function uses a non-reentrant model
  2585 ;;
  2586                           
  2587     0324                     ___wmul:	
  2588                           ;psect for function ___wmul
  2589                           
  2590     0324                     l2128:	
  2591                           ;incstack = 0
  2592                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  2593                           
  2594     0324  0140               	movlb	0	; select bank0
  2595     0325  01A0               	clrf	___wmul@product
  2596     0326  01A1               	clrf	___wmul@product+1
  2597     0327                     l2130:
  2598     0327  1C73               	btfss	___wmul@multiplier,0
  2599     0328  2B2A               	goto	u771
  2600     0329  2B2B               	goto	u770
  2601     032A                     u771:
  2602     032A  2B30               	goto	l640
  2603     032B                     u770:
  2604     032B                     l2132:
  2605     032B  0875               	movf	___wmul@multiplicand,w
  2606     032C  0140               	movlb	0	; select bank0
  2607     032D  07A0               	addwf	___wmul@product,f
  2608     032E  0876               	movf	___wmul@multiplicand+1,w
  2609     032F  3DA1               	addwfc	___wmul@product+1,f
  2610     0330                     l640:
  2611     0330  3001               	movlw	1
  2612     0331                     u785:
  2613     0331  35F5               	lslf	___wmul@multiplicand,f
  2614     0332  0DF6               	rlf	___wmul@multiplicand+1,f
  2615     0333  0B89               	decfsz	9,f
  2616     0334  2B31               	goto	u785
  2617     0335                     l2134:
  2618     0335  3001               	movlw	1
  2619     0336                     u795:
  2620     0336  36F4               	lsrf	___wmul@multiplier+1,f
  2621     0337  0CF3               	rrf	___wmul@multiplier,f
  2622     0338  0B89               	decfsz	9,f
  2623     0339  2B36               	goto	u795
  2624     033A                     l2136:
  2625     033A  0873               	movf	___wmul@multiplier,w
  2626     033B  0474               	iorwf	___wmul@multiplier+1,w
  2627     033C  1D03               	btfss	3,2
  2628     033D  2B3F               	goto	u801
  2629     033E  2B40               	goto	u800
  2630     033F                     u801:
  2631     033F  2B27               	goto	l2130
  2632     0340                     u800:
  2633     0340                     l2138:
  2634     0340  0140               	movlb	0	; select bank0
  2635     0341  0821               	movf	___wmul@product+1,w
  2636     0342  00F4               	movwf	?___wmul+1
  2637     0343  0820               	movf	___wmul@product,w
  2638     0344  00F3               	movwf	?___wmul
  2639     0345                     l642:
  2640     0345  0008               	return
  2641     0346                     __end_of___wmul:
  2642                           
  2643                           	psect	text3
  2644     02C3                     __ptext3:	
  2645 ;; *************** function _FLASH_WriteWord *****************
  2646 ;; Defined at:
  2647 ;;		line 75 in file "mcc_generated_files/memory.c"
  2648 ;; Parameters:    Size  Location     Type
  2649 ;;  flashAddr       2   10[BANK0 ] unsigned short 
  2650 ;;  ramBuf          1   12[BANK0 ] PTR unsigned short 
  2651 ;;		 -> memory_initialize@ramBuff(64), 
  2652 ;;  word            2   13[BANK0 ] unsigned short 
  2653 ;; Auto vars:     Size  Location     Type
  2654 ;;  blockStartAd    2   16[BANK0 ] unsigned short 
  2655 ;;  i               1   18[BANK0 ] unsigned char 
  2656 ;;  offset          1   15[BANK0 ] unsigned char 
  2657 ;; Return value:  Size  Location     Type
  2658 ;;                  1    wreg      void 
  2659 ;; Registers used:
  2660 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2661 ;; Tracked objects:
  2662 ;;		On entry : 0/0
  2663 ;;		On exit  : 0/0
  2664 ;;		Unchanged: 0/0
  2665 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2666 ;;      Params:         0       5       0       0
  2667 ;;      Locals:         0       4       0       0
  2668 ;;      Temps:          1       0       0       0
  2669 ;;      Totals:         1       9       0       0
  2670 ;;Total ram usage:       10 bytes
  2671 ;; Hardware stack levels used: 1
  2672 ;; Hardware stack levels required when called: 7
  2673 ;; This function calls:
  2674 ;;		_FLASH_ReadWord
  2675 ;;		_FLASH_WriteBlock
  2676 ;; This function is called by:
  2677 ;;		_memory_initialize
  2678 ;; This function uses a non-reentrant model
  2679 ;;
  2680                           
  2681     02C3                     _FLASH_WriteWord:	
  2682                           ;psect for function _FLASH_WriteWord
  2683                           
  2684     02C3                     l2110:	
  2685                           ;incstack = 0
  2686                           ; Regs used in _FLASH_WriteWord: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2687                           
  2688                           
  2689                           ;mcc_generated_files/memory.c: 75: void FLASH_WriteWord(uint16_t flashAddr, uint16_t *ra
      +                          mBuf, uint16_t word);mcc_generated_files/memory.c: 76: {;mcc_generated_files/memory.c: 7
      +                          7:     uint16_t blockStartAddr = (uint16_t)(flashAddr & ((0x800 -1) ^ (32 -1)));
  2690     02C3  30E0               	movlw	224
  2691     02C4  0140               	movlb	0	; select bank0
  2692     02C5  052A               	andwf	FLASH_WriteWord@flashAddr,w
  2693     02C6  00B0               	movwf	FLASH_WriteWord@blockStartAddr
  2694     02C7  3007               	movlw	7
  2695     02C8  052B               	andwf	FLASH_WriteWord@flashAddr+1,w
  2696     02C9  00B1               	movwf	FLASH_WriteWord@blockStartAddr+1
  2697     02CA                     l2112:
  2698                           
  2699                           ;mcc_generated_files/memory.c: 78:     uint8_t offset = (uint8_t)(flashAddr & (32 -1));
  2700     02CA  082A               	movf	FLASH_WriteWord@flashAddr,w
  2701     02CB  391F               	andlw	31
  2702     02CC  00AF               	movwf	FLASH_WriteWord@offset
  2703                           
  2704                           ;mcc_generated_files/memory.c: 79:     uint8_t i;;mcc_generated_files/memory.c: 82:     
      +                          for (i=0; i<32; i++)
  2705     02CD  01B2               	clrf	FLASH_WriteWord@i
  2706     02CE                     l2118:
  2707                           
  2708                           ;mcc_generated_files/memory.c: 83:     {;mcc_generated_files/memory.c: 84:         ramBu
      +                          f[i] = FLASH_ReadWord((blockStartAddr+i));
  2709     02CE  0832               	movf	FLASH_WriteWord@i,w
  2710     02CF  0730               	addwf	FLASH_WriteWord@blockStartAddr,w
  2711     02D0  00F3               	movwf	FLASH_ReadWord@flashAddr
  2712     02D1  0831               	movf	FLASH_WriteWord@blockStartAddr+1,w
  2713     02D2  1803               	skipnc
  2714     02D3  0A31               	incf	FLASH_WriteWord@blockStartAddr+1,w
  2715     02D4  00F4               	movwf	FLASH_ReadWord@flashAddr+1
  2716     02D5  3183  237C  3182   	fcall	_FLASH_ReadWord
  2717     02D8  0140               	movlb	0	; select bank0
  2718     02D9  3532               	lslf	FLASH_WriteWord@i,w
  2719     02DA  072C               	addwf	FLASH_WriteWord@ramBuf,w
  2720     02DB  00F7               	movwf	??_FLASH_WriteWord
  2721     02DC  0877               	movf	??_FLASH_WriteWord,w
  2722     02DD  0086               	movwf	6
  2723     02DE  0187               	clrf	7
  2724     02DF  0873               	movf	?_FLASH_ReadWord,w
  2725     02E0  3FC0               	movwi [0]fsr1
  2726     02E1  0874               	movf	?_FLASH_ReadWord+1,w
  2727     02E2  3FC1               	movwi [1]fsr1
  2728     02E3                     l2120:
  2729                           
  2730                           ;mcc_generated_files/memory.c: 85:     }
  2731     02E3  3001               	movlw	1
  2732     02E4  00F7               	movwf	??_FLASH_WriteWord
  2733     02E5  0877               	movf	??_FLASH_WriteWord,w
  2734     02E6  07B2               	addwf	FLASH_WriteWord@i,f
  2735     02E7                     l2122:
  2736     02E7  3020               	movlw	32
  2737     02E8  0232               	subwf	FLASH_WriteWord@i,w
  2738     02E9  1C03               	skipc
  2739     02EA  2AEC               	goto	u761
  2740     02EB  2AED               	goto	u760
  2741     02EC                     u761:
  2742     02EC  2ACE               	goto	l2118
  2743     02ED                     u760:
  2744     02ED                     l2124:
  2745                           
  2746                           ;mcc_generated_files/memory.c: 88:     ramBuf[offset] = word;
  2747     02ED  352F               	lslf	FLASH_WriteWord@offset,w
  2748     02EE  072C               	addwf	FLASH_WriteWord@ramBuf,w
  2749     02EF  00F7               	movwf	??_FLASH_WriteWord
  2750     02F0  0877               	movf	??_FLASH_WriteWord,w
  2751     02F1  0086               	movwf	6
  2752     02F2  0187               	clrf	7
  2753     02F3  082D               	movf	FLASH_WriteWord@word,w
  2754     02F4  3FC0               	movwi [0]fsr1
  2755     02F5  082E               	movf	FLASH_WriteWord@word+1,w
  2756     02F6  3FC1               	movwi [1]fsr1
  2757     02F7                     l2126:
  2758                           
  2759                           ;mcc_generated_files/memory.c: 91:     FLASH_WriteBlock(blockStartAddr, ramBuf);
  2760     02F7  0831               	movf	FLASH_WriteWord@blockStartAddr+1,w
  2761     02F8  00A1               	movwf	FLASH_WriteBlock@writeAddr+1
  2762     02F9  0830               	movf	FLASH_WriteWord@blockStartAddr,w
  2763     02FA  00A0               	movwf	FLASH_WriteBlock@writeAddr
  2764     02FB  082C               	movf	FLASH_WriteWord@ramBuf,w
  2765     02FC  00A2               	movwf	FLASH_WriteBlock@flashWordArray
  2766     02FD  3182  2257  3182   	fcall	_FLASH_WriteBlock
  2767     0300                     l476:
  2768     0300  0008               	return
  2769     0301                     __end_of_FLASH_WriteWord:
  2770                           
  2771                           	psect	text4
  2772     0257                     __ptext4:	
  2773 ;; *************** function _FLASH_WriteBlock *****************
  2774 ;; Defined at:
  2775 ;;		line 94 in file "mcc_generated_files/memory.c"
  2776 ;; Parameters:    Size  Location     Type
  2777 ;;  writeAddr       2    0[BANK0 ] unsigned short 
  2778 ;;  flashWordArr    1    2[BANK0 ] PTR unsigned short 
  2779 ;;		 -> memory_initialize@ramBuff(64), 
  2780 ;; Auto vars:     Size  Location     Type
  2781 ;;  blockStartAd    2    6[BANK0 ] unsigned short 
  2782 ;;  i               1    9[BANK0 ] unsigned char 
  2783 ;;  GIEBitValue     1    8[BANK0 ] unsigned char 
  2784 ;; Return value:  Size  Location     Type
  2785 ;;                  1    wreg      char 
  2786 ;; Registers used:
  2787 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2788 ;; Tracked objects:
  2789 ;;		On entry : 0/0
  2790 ;;		On exit  : 0/0
  2791 ;;		Unchanged: 0/0
  2792 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2793 ;;      Params:         0       3       0       0
  2794 ;;      Locals:         0       4       0       0
  2795 ;;      Temps:          0       3       0       0
  2796 ;;      Totals:         0      10       0       0
  2797 ;;Total ram usage:       10 bytes
  2798 ;; Hardware stack levels used: 1
  2799 ;; Hardware stack levels required when called: 6
  2800 ;; This function calls:
  2801 ;;		_FLASH_EraseBlock
  2802 ;; This function is called by:
  2803 ;;		_FLASH_WriteWord
  2804 ;; This function uses a non-reentrant model
  2805 ;;
  2806                           
  2807     0257                     _FLASH_WriteBlock:	
  2808                           ;psect for function _FLASH_WriteBlock
  2809                           
  2810     0257                     l2060:	
  2811                           ;incstack = 0
  2812                           ; Regs used in _FLASH_WriteBlock: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2813                           
  2814                           
  2815                           ;mcc_generated_files/memory.c: 94: int8_t FLASH_WriteBlock(uint16_t writeAddr, uint16_t 
      +                          *flashWordArray);mcc_generated_files/memory.c: 95: {;mcc_generated_files/memory.c: 96:  
      +                             uint16_t blockStartAddr = (uint16_t )(writeAddr & ((0x800 -1) ^ (32 -1)));
  2816     0257  30E0               	movlw	224
  2817     0258  0140               	movlb	0	; select bank0
  2818     0259  0520               	andwf	FLASH_WriteBlock@writeAddr,w
  2819     025A  00A6               	movwf	FLASH_WriteBlock@blockStartAddr
  2820     025B  3007               	movlw	7
  2821     025C  0521               	andwf	FLASH_WriteBlock@writeAddr+1,w
  2822     025D  00A7               	movwf	FLASH_WriteBlock@blockStartAddr+1
  2823     025E                     l2062:
  2824                           
  2825                           ;mcc_generated_files/memory.c: 97:     uint8_t GIEBitValue = INTCONbits.GIE;
  2826     025E  3000               	movlw	0
  2827     025F  1B8B               	btfsc	11,7	;volatile
  2828     0260  3001               	movlw	1
  2829     0261  00A8               	movwf	FLASH_WriteBlock@GIEBitValue
  2830     0262                     l2064:
  2831                           
  2832                           ;mcc_generated_files/memory.c: 98:     uint8_t i;;mcc_generated_files/memory.c: 102:    
      +                           if( writeAddr != blockStartAddr )
  2833     0262  0827               	movf	FLASH_WriteBlock@blockStartAddr+1,w
  2834     0263  0621               	xorwf	FLASH_WriteBlock@writeAddr+1,w
  2835     0264  1D03               	skipz
  2836     0265  2A68               	goto	u735
  2837     0266  0826               	movf	FLASH_WriteBlock@blockStartAddr,w
  2838     0267  0620               	xorwf	FLASH_WriteBlock@writeAddr,w
  2839     0268                     u735:
  2840     0268  1903               	skipnz
  2841     0269  2A6B               	goto	u731
  2842     026A  2A6C               	goto	u730
  2843     026B                     u731:
  2844     026B  2A6D               	goto	l479
  2845     026C                     u730:
  2846     026C  2AC2               	goto	l480
  2847     026D                     l479:	
  2848                           ;mcc_generated_files/memory.c: 105:     }
  2849                           
  2850                           
  2851                           ;mcc_generated_files/memory.c: 107:     INTCONbits.GIE = 0;
  2852     026D  138B               	bcf	11,7	;volatile
  2853     026E                     l2068:
  2854                           
  2855                           ;mcc_generated_files/memory.c: 110:     FLASH_EraseBlock(writeAddr);
  2856     026E  0821               	movf	FLASH_WriteBlock@writeAddr+1,w
  2857     026F  00F4               	movwf	FLASH_EraseBlock@startAddr+1
  2858     0270  0820               	movf	FLASH_WriteBlock@writeAddr,w
  2859     0271  00F3               	movwf	FLASH_EraseBlock@startAddr
  2860     0272  3183  2346  3182   	fcall	_FLASH_EraseBlock
  2861     0275                     l2070:
  2862                           
  2863                           ;mcc_generated_files/memory.c: 113:     NVMCON1bits.NVMREGS = 0;
  2864     0275  0150               	movlb	16	; select bank16
  2865     0276  131E               	bcf	30,6	;volsfr
  2866     0277                     l2072:
  2867                           
  2868                           ;mcc_generated_files/memory.c: 114:     NVMCON1bits.WREN = 1;
  2869     0277  151E               	bsf	30,2	;volsfr
  2870     0278                     l2074:
  2871                           
  2872                           ;mcc_generated_files/memory.c: 115:     NVMCON1bits.LWLO = 1;
  2873     0278  169E               	bsf	30,5	;volsfr
  2874     0279                     l2076:
  2875                           
  2876                           ;mcc_generated_files/memory.c: 117:     for (i=0; i<32; i++)
  2877     0279  0140               	movlb	0	; select bank0
  2878     027A  01A9               	clrf	FLASH_WriteBlock@i
  2879     027B                     l2082:
  2880                           
  2881                           ;mcc_generated_files/memory.c: 118:     {;mcc_generated_files/memory.c: 120:         NVM
      +                          ADRL = (writeAddr & 0xFF);
  2882     027B  0820               	movf	FLASH_WriteBlock@writeAddr,w
  2883     027C  0150               	movlb	16	; select bank16
  2884     027D  009A               	movwf	26	;volatile
  2885     027E                     l2084:
  2886                           
  2887                           ;mcc_generated_files/memory.c: 122:         NVMADRH = ((writeAddr & 0xFF00) >> 8);
  2888     027E  0140               	movlb	0	; select bank0
  2889     027F  0821               	movf	FLASH_WriteBlock@writeAddr+1,w
  2890     0280  0150               	movlb	16	; select bank16
  2891     0281  009B               	movwf	27	;volatile
  2892     0282                     l2086:
  2893                           
  2894                           ;mcc_generated_files/memory.c: 125:         NVMDATL = flashWordArray[i];
  2895     0282  0140               	movlb	0	; select bank0
  2896     0283  3529               	lslf	FLASH_WriteBlock@i,w
  2897     0284  0722               	addwf	FLASH_WriteBlock@flashWordArray,w
  2898     0285  00A3               	movwf	??_FLASH_WriteBlock
  2899     0286  0823               	movf	??_FLASH_WriteBlock,w
  2900     0287  0086               	movwf	6
  2901     0288  0187               	clrf	7
  2902     0289  0801               	movf	1,w
  2903     028A  0150               	movlb	16	; select bank16
  2904     028B  009C               	movwf	28	;volatile
  2905     028C                     l2088:
  2906                           
  2907                           ;mcc_generated_files/memory.c: 126:         NVMDATH = ((flashWordArray[i] & 0xFF00) >> 8
      +                          );
  2908     028C  0140               	movlb	0	; select bank0
  2909     028D  3529               	lslf	FLASH_WriteBlock@i,w
  2910     028E  0722               	addwf	FLASH_WriteBlock@flashWordArray,w
  2911     028F  00A3               	movwf	??_FLASH_WriteBlock
  2912     0290  0823               	movf	??_FLASH_WriteBlock,w
  2913     0291  0086               	movwf	6
  2914     0292  0187               	clrf	7
  2915     0293  3F40               	moviw [0]fsr1
  2916     0294  00A4               	movwf	??_FLASH_WriteBlock+1
  2917     0295  3F41               	moviw [1]fsr1
  2918     0296  00A5               	movwf	??_FLASH_WriteBlock+2
  2919     0297  0825               	movf	??_FLASH_WriteBlock+2,w
  2920     0298  0150               	movlb	16	; select bank16
  2921     0299  009D               	movwf	29	;volatile
  2922     029A                     l2090:
  2923                           
  2924                           ;mcc_generated_files/memory.c: 128:         if(i == (32 -1))
  2925     029A  301F               	movlw	31
  2926     029B  0140               	movlb	0	; select bank0
  2927     029C  0629               	xorwf	FLASH_WriteBlock@i,w
  2928     029D  1D03               	btfss	3,2
  2929     029E  2AA0               	goto	u741
  2930     029F  2AA1               	goto	u740
  2931     02A0                     u741:
  2932     02A0  2AA3               	goto	l2094
  2933     02A1                     u740:
  2934     02A1                     l2092:
  2935                           
  2936                           ;mcc_generated_files/memory.c: 129:         {;mcc_generated_files/memory.c: 131:        
      +                               NVMCON1bits.LWLO = 0;
  2937     02A1  0150               	movlb	16	; select bank16
  2938     02A2  129E               	bcf	30,5	;volsfr
  2939     02A3                     l2094:
  2940                           
  2941                           ;mcc_generated_files/memory.c: 134:         NVMCON2 = 0x55;
  2942     02A3  3055               	movlw	85
  2943     02A4  0150               	movlb	16	; select bank16
  2944     02A5  009F               	movwf	31	;volsfr
  2945                           
  2946                           ;mcc_generated_files/memory.c: 135:         NVMCON2 = 0xAA;
  2947     02A6  30AA               	movlw	170
  2948     02A7  009F               	movwf	31	;volsfr
  2949     02A8                     l2096:
  2950                           
  2951                           ;mcc_generated_files/memory.c: 136:         NVMCON1bits.WR = 1;
  2952     02A8  149E               	bsf	30,1	;volsfr
  2953     02A9                     l2098:
  2954                           
  2955                           ;mcc_generated_files/memory.c: 137:         __nop();
  2956     02A9  0000               	nop
  2957     02AA                     l2100:
  2958                           
  2959                           ;mcc_generated_files/memory.c: 138:         __nop();
  2960     02AA  0000               	nop
  2961                           
  2962                           ;mcc_generated_files/memory.c: 140:      writeAddr++;
  2963     02AB  3001               	movlw	1
  2964     02AC  0140               	movlb	0	; select bank0
  2965     02AD  07A0               	addwf	FLASH_WriteBlock@writeAddr,f
  2966     02AE  3000               	movlw	0
  2967     02AF  3DA1               	addwfc	FLASH_WriteBlock@writeAddr+1,f
  2968     02B0                     l2102:
  2969                           
  2970                           ;mcc_generated_files/memory.c: 141:     }
  2971     02B0  3001               	movlw	1
  2972     02B1  00A3               	movwf	??_FLASH_WriteBlock
  2973     02B2  0823               	movf	??_FLASH_WriteBlock,w
  2974     02B3  07A9               	addwf	FLASH_WriteBlock@i,f
  2975     02B4                     l2104:
  2976     02B4  3020               	movlw	32
  2977     02B5  0229               	subwf	FLASH_WriteBlock@i,w
  2978     02B6  1C03               	skipc
  2979     02B7  2AB9               	goto	u751
  2980     02B8  2ABA               	goto	u750
  2981     02B9                     u751:
  2982     02B9  2A7B               	goto	l2082
  2983     02BA                     u750:
  2984     02BA                     l482:
  2985                           
  2986                           ;mcc_generated_files/memory.c: 143:     NVMCON1bits.WREN = 0;
  2987     02BA  0150               	movlb	16	; select bank16
  2988     02BB  111E               	bcf	30,2	;volsfr
  2989     02BC                     l2106:
  2990                           
  2991                           ;mcc_generated_files/memory.c: 144:     INTCONbits.GIE = GIEBitValue;
  2992     02BC  0140               	movlb	0	; select bank0
  2993     02BD  0C28               	rrf	FLASH_WriteBlock@GIEBitValue,w
  2994     02BE  1C03               	skipc
  2995     02BF  138B               	bcf	11,7	;volatile
  2996     02C0  1803               	skipnc
  2997     02C1  178B               	bsf	11,7	;volatile
  2998     02C2                     l480:
  2999     02C2  0008               	return
  3000     02C3                     __end_of_FLASH_WriteBlock:
  3001                           
  3002                           	psect	text5
  3003     0346                     __ptext5:	
  3004 ;; *************** function _FLASH_EraseBlock *****************
  3005 ;; Defined at:
  3006 ;;		line 149 in file "mcc_generated_files/memory.c"
  3007 ;; Parameters:    Size  Location     Type
  3008 ;;  startAddr       2    3[COMMON] unsigned short 
  3009 ;; Auto vars:     Size  Location     Type
  3010 ;;  GIEBitValue     1    5[COMMON] unsigned char 
  3011 ;; Return value:  Size  Location     Type
  3012 ;;                  1    wreg      void 
  3013 ;; Registers used:
  3014 ;;		wreg, status,2, status,0
  3015 ;; Tracked objects:
  3016 ;;		On entry : 0/0
  3017 ;;		On exit  : 0/0
  3018 ;;		Unchanged: 0/0
  3019 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3020 ;;      Params:         2       0       0       0
  3021 ;;      Locals:         1       0       0       0
  3022 ;;      Temps:          0       0       0       0
  3023 ;;      Totals:         3       0       0       0
  3024 ;;Total ram usage:        3 bytes
  3025 ;; Hardware stack levels used: 1
  3026 ;; Hardware stack levels required when called: 5
  3027 ;; This function calls:
  3028 ;;		Nothing
  3029 ;; This function is called by:
  3030 ;;		_FLASH_WriteBlock
  3031 ;; This function uses a non-reentrant model
  3032 ;;
  3033                           
  3034     0346                     _FLASH_EraseBlock:	
  3035                           ;psect for function _FLASH_EraseBlock
  3036                           
  3037     0346                     l2014:	
  3038                           ;incstack = 0
  3039                           ; Regs used in _FLASH_EraseBlock: [wreg+status,2+status,0]
  3040                           
  3041                           
  3042                           ;mcc_generated_files/memory.c: 149: void FLASH_EraseBlock(uint16_t startAddr);mcc_genera
      +                          ted_files/memory.c: 150: {;mcc_generated_files/memory.c: 151:     uint8_t GIEBitValue = 
      +                          INTCONbits.GIE;
  3043     0346  3000               	movlw	0
  3044     0347  1B8B               	btfsc	11,7	;volatile
  3045     0348  3001               	movlw	1
  3046     0349  00F5               	movwf	FLASH_EraseBlock@GIEBitValue
  3047     034A                     l2016:
  3048                           
  3049                           ;mcc_generated_files/memory.c: 154:     INTCONbits.GIE = 0;
  3050     034A  138B               	bcf	11,7	;volatile
  3051     034B                     l2018:
  3052                           
  3053                           ;mcc_generated_files/memory.c: 156:     NVMADRL = (startAddr & 0xFF);
  3054     034B  0873               	movf	FLASH_EraseBlock@startAddr,w
  3055     034C  0150               	movlb	16	; select bank16
  3056     034D  009A               	movwf	26	;volatile
  3057     034E                     l2020:
  3058                           
  3059                           ;mcc_generated_files/memory.c: 158:     NVMADRH = ((startAddr & 0xFF00) >> 8);
  3060     034E  0874               	movf	FLASH_EraseBlock@startAddr+1,w
  3061     034F  009B               	movwf	27	;volatile
  3062     0350                     l2022:
  3063                           
  3064                           ;mcc_generated_files/memory.c: 161:     NVMCON1bits.NVMREGS = 0;
  3065     0350  131E               	bcf	30,6	;volsfr
  3066     0351                     l2024:
  3067                           
  3068                           ;mcc_generated_files/memory.c: 162:     NVMCON1bits.FREE = 1;
  3069     0351  161E               	bsf	30,4	;volsfr
  3070     0352                     l2026:
  3071                           
  3072                           ;mcc_generated_files/memory.c: 163:     NVMCON1bits.WREN = 1;
  3073     0352  151E               	bsf	30,2	;volsfr
  3074                           
  3075                           ;mcc_generated_files/memory.c: 166:     NVMCON2 = 0x55;
  3076     0353  3055               	movlw	85
  3077     0354  009F               	movwf	31	;volsfr
  3078                           
  3079                           ;mcc_generated_files/memory.c: 167:     NVMCON2 = 0xAA;
  3080     0355  30AA               	movlw	170
  3081     0356  009F               	movwf	31	;volsfr
  3082     0357                     l2028:
  3083                           
  3084                           ;mcc_generated_files/memory.c: 168:     NVMCON1bits.WR = 1;
  3085     0357  149E               	bsf	30,1	;volsfr
  3086     0358                     l2030:
  3087                           
  3088                           ;mcc_generated_files/memory.c: 169:     __nop();
  3089     0358  0000               	nop
  3090     0359                     l2032:
  3091                           
  3092                           ;mcc_generated_files/memory.c: 170:     __nop();
  3093     0359  0000               	nop
  3094     035A                     l2034:
  3095                           
  3096                           ;mcc_generated_files/memory.c: 172:     NVMCON1bits.WREN = 0;
  3097     035A  0150               	movlb	16	; select bank16
  3098     035B  111E               	bcf	30,2	;volsfr
  3099     035C                     l2036:
  3100                           
  3101                           ;mcc_generated_files/memory.c: 173:     INTCONbits.GIE = GIEBitValue;
  3102     035C  0C75               	rrf	FLASH_EraseBlock@GIEBitValue,w
  3103     035D  1C03               	skipc
  3104     035E  138B               	bcf	11,7	;volatile
  3105     035F  1803               	skipnc
  3106     0360  178B               	bsf	11,7	;volatile
  3107     0361                     l486:
  3108     0361  0008               	return
  3109     0362                     __end_of_FLASH_EraseBlock:
  3110                           
  3111                           	psect	text6
  3112     037C                     __ptext6:	
  3113 ;; *************** function _FLASH_ReadWord *****************
  3114 ;; Defined at:
  3115 ;;		line 58 in file "mcc_generated_files/memory.c"
  3116 ;; Parameters:    Size  Location     Type
  3117 ;;  flashAddr       2    3[COMMON] unsigned short 
  3118 ;; Auto vars:     Size  Location     Type
  3119 ;;  GIEBitValue     1    5[COMMON] unsigned char 
  3120 ;; Return value:  Size  Location     Type
  3121 ;;                  2    3[COMMON] unsigned short 
  3122 ;; Registers used:
  3123 ;;		wreg, status,2, status,0
  3124 ;; Tracked objects:
  3125 ;;		On entry : 0/0
  3126 ;;		On exit  : 0/0
  3127 ;;		Unchanged: 0/0
  3128 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3129 ;;      Params:         2       0       0       0
  3130 ;;      Locals:         1       0       0       0
  3131 ;;      Temps:          0       0       0       0
  3132 ;;      Totals:         3       0       0       0
  3133 ;;Total ram usage:        3 bytes
  3134 ;; Hardware stack levels used: 1
  3135 ;; Hardware stack levels required when called: 5
  3136 ;; This function calls:
  3137 ;;		Nothing
  3138 ;; This function is called by:
  3139 ;;		_memory_initialize
  3140 ;;		_FLASH_WriteWord
  3141 ;; This function uses a non-reentrant model
  3142 ;;
  3143                           
  3144     037C                     _FLASH_ReadWord:	
  3145                           ;psect for function _FLASH_ReadWord
  3146                           
  3147     037C                     l2038:	
  3148                           ;incstack = 0
  3149                           ; Regs used in _FLASH_ReadWord: [wreg+status,2+status,0]
  3150                           
  3151                           
  3152                           ;mcc_generated_files/memory.c: 58: uint16_t FLASH_ReadWord(uint16_t flashAddr);mcc_gener
      +                          ated_files/memory.c: 59: {;mcc_generated_files/memory.c: 60:     uint8_t GIEBitValue = I
      +                          NTCONbits.GIE;
  3153     037C  3000               	movlw	0
  3154     037D  1B8B               	btfsc	11,7	;volatile
  3155     037E  3001               	movlw	1
  3156     037F  00F5               	movwf	FLASH_ReadWord@GIEBitValue
  3157     0380                     l2040:
  3158                           
  3159                           ;mcc_generated_files/memory.c: 62:     INTCONbits.GIE = 0;
  3160     0380  138B               	bcf	11,7	;volatile
  3161     0381                     l2042:
  3162                           
  3163                           ;mcc_generated_files/memory.c: 63:     NVMADRL = (flashAddr & 0x00FF);
  3164     0381  0873               	movf	FLASH_ReadWord@flashAddr,w
  3165     0382  0150               	movlb	16	; select bank16
  3166     0383  009A               	movwf	26	;volatile
  3167     0384                     l2044:
  3168                           
  3169                           ;mcc_generated_files/memory.c: 64:     NVMADRH = ((flashAddr & 0xFF00) >> 8);
  3170     0384  0874               	movf	FLASH_ReadWord@flashAddr+1,w
  3171     0385  009B               	movwf	27	;volatile
  3172     0386                     l2046:
  3173                           
  3174                           ;mcc_generated_files/memory.c: 66:     NVMCON1bits.NVMREGS = 0;
  3175     0386  131E               	bcf	30,6	;volsfr
  3176     0387                     l2048:
  3177                           
  3178                           ;mcc_generated_files/memory.c: 67:     NVMCON1bits.RD = 1;
  3179     0387  141E               	bsf	30,0	;volsfr
  3180     0388                     l2050:
  3181                           
  3182                           ;mcc_generated_files/memory.c: 68:     __nop();
  3183     0388  0000               	nop
  3184     0389                     l2052:
  3185                           
  3186                           ;mcc_generated_files/memory.c: 69:     __nop();
  3187     0389  0000               	nop
  3188     038A                     l2054:
  3189                           
  3190                           ;mcc_generated_files/memory.c: 70:     INTCONbits.GIE = GIEBitValue;
  3191     038A  0C75               	rrf	FLASH_ReadWord@GIEBitValue,w
  3192     038B  1C03               	skipc
  3193     038C  138B               	bcf	11,7	;volatile
  3194     038D  1803               	skipnc
  3195     038E  178B               	bsf	11,7	;volatile
  3196     038F                     l2056:
  3197                           
  3198                           ;mcc_generated_files/memory.c: 72:     return ((uint16_t)((NVMDATH << 8) | NVMDATL));
  3199     038F  0150               	movlb	16	; select bank16
  3200     0390  081D               	movf	29,w	;volatile
  3201     0391  00F4               	movwf	?_FLASH_ReadWord+1
  3202     0392  081C               	movf	28,w	;volatile
  3203     0393  00F3               	movwf	?_FLASH_ReadWord
  3204     0394                     l471:
  3205     0394  0008               	return
  3206     0395                     __end_of_FLASH_ReadWord:
  3207                           
  3208                           	psect	text7
  3209     0401                     __ptext7:	
  3210 ;; *************** function _getSensorBoardType *****************
  3211 ;; Defined at:
  3212 ;;		line 31 in file "sensor.c"
  3213 ;; Parameters:    Size  Location     Type
  3214 ;;		None
  3215 ;; Auto vars:     Size  Location     Type
  3216 ;;		None
  3217 ;; Return value:  Size  Location     Type
  3218 ;;                  1    wreg      unsigned char 
  3219 ;; Registers used:
  3220 ;;		wreg, status,2, status,0
  3221 ;; Tracked objects:
  3222 ;;		On entry : 0/0
  3223 ;;		On exit  : 0/0
  3224 ;;		Unchanged: 0/0
  3225 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3226 ;;      Params:         0       0       0       0
  3227 ;;      Locals:         0       0       0       0
  3228 ;;      Temps:          2       0       0       0
  3229 ;;      Totals:         2       0       0       0
  3230 ;;Total ram usage:        2 bytes
  3231 ;; Hardware stack levels used: 1
  3232 ;; Hardware stack levels required when called: 5
  3233 ;; This function calls:
  3234 ;;		Nothing
  3235 ;; This function is called by:
  3236 ;;		_main
  3237 ;; This function uses a non-reentrant model
  3238 ;;
  3239                           
  3240     0401                     _getSensorBoardType:	
  3241                           ;psect for function _getSensorBoardType
  3242                           
  3243     0401                     l1868:	
  3244                           ;incstack = 0
  3245                           ; Regs used in _getSensorBoardType: [wreg+status,2+status,0]
  3246                           
  3247                           
  3248                           ;sensor.c: 33:     return (((PORTC & 0x3C)) >>2 | (PORTA & 0x30));
  3249     0401  3030               	movlw	48
  3250     0402  0140               	movlb	0	; select bank0
  3251     0403  050C               	andwf	12,w	;volatile
  3252     0404  00F3               	movwf	??_getSensorBoardType
  3253     0405  080E               	movf	14,w	;volatile
  3254     0406  00F4               	movwf	??_getSensorBoardType+1
  3255     0407  3002               	movlw	2
  3256     0408                     u535:
  3257     0408  36F4               	lsrf	??_getSensorBoardType+1,f
  3258     0409  0B89               	decfsz	9,f
  3259     040A  2C08               	goto	u535
  3260     040B  0874               	movf	??_getSensorBoardType+1,w
  3261     040C  390F               	andlw	15
  3262     040D  0473               	iorwf	??_getSensorBoardType,w
  3263     040E                     l33:
  3264     040E  0008               	return
  3265     040F                     __end_of_getSensorBoardType:
  3266                           
  3267                           	psect	text8
  3268     03D2                     __ptext8:	
  3269 ;; *************** function _SensorBoardType_validation *****************
  3270 ;; Defined at:
  3271 ;;		line 36 in file "sensor.c"
  3272 ;; Parameters:    Size  Location     Type
  3273 ;;  SensorBoardT    1    wreg     unsigned char 
  3274 ;; Auto vars:     Size  Location     Type
  3275 ;;  SensorBoardT    1    3[COMMON] unsigned char 
  3276 ;; Return value:  Size  Location     Type
  3277 ;;                  1    wreg      unsigned char 
  3278 ;; Registers used:
  3279 ;;		wreg, status,2, status,0
  3280 ;; Tracked objects:
  3281 ;;		On entry : 0/0
  3282 ;;		On exit  : 0/0
  3283 ;;		Unchanged: 0/0
  3284 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3285 ;;      Params:         0       0       0       0
  3286 ;;      Locals:         1       0       0       0
  3287 ;;      Temps:          0       0       0       0
  3288 ;;      Totals:         1       0       0       0
  3289 ;;Total ram usage:        1 bytes
  3290 ;; Hardware stack levels used: 1
  3291 ;; Hardware stack levels required when called: 5
  3292 ;; This function calls:
  3293 ;;		Nothing
  3294 ;; This function is called by:
  3295 ;;		_main
  3296 ;; This function uses a non-reentrant model
  3297 ;;
  3298                           
  3299     03D2                     _SensorBoardType_validation:	
  3300                           ;psect for function _SensorBoardType_validation
  3301                           
  3302                           
  3303                           ;incstack = 0
  3304                           ; Regs used in _SensorBoardType_validation: [wreg+status,2+status,0]
  3305                           ;SensorBoardType_validation@SensorBoardType stored from wreg
  3306     03D2  00F3               	movwf	SensorBoardType_validation@SensorBoardType
  3307     03D3                     l1872:
  3308                           
  3309                           ;sensor.c: 36: uint8_t SensorBoardType_validation (uint8_t SensorBoardType);sensor.c: 37
      +                          : {;sensor.c: 38:     if(SensorBoardType>=1)
  3310     03D3  0873               	movf	SensorBoardType_validation@SensorBoardType,w
  3311     03D4  1903               	btfsc	3,2
  3312     03D5  2BD7               	goto	u541
  3313     03D6  2BD8               	goto	u540
  3314     03D7                     u541:
  3315     03D7  2BE0               	goto	l1880
  3316     03D8                     u540:
  3317     03D8                     l1874:
  3318                           
  3319                           ;sensor.c: 39:     {;sensor.c: 40:         if(SensorBoardType<=12)
  3320     03D8  300D               	movlw	13
  3321     03D9  0273               	subwf	SensorBoardType_validation@SensorBoardType,w
  3322     03DA  1803               	skipnc
  3323     03DB  2BDD               	goto	u551
  3324     03DC  2BDE               	goto	u550
  3325     03DD                     u551:
  3326     03DD  2BE0               	goto	l1880
  3327     03DE                     u550:
  3328     03DE                     l1876:
  3329                           
  3330                           ;sensor.c: 41:         {;sensor.c: 42:             return(1);
  3331     03DE  3001               	movlw	1
  3332     03DF  2BE1               	goto	l38
  3333     03E0                     l1880:
  3334                           
  3335                           ;sensor.c: 46:     return(0);
  3336     03E0  3000               	movlw	0
  3337     03E1                     l38:
  3338     03E1  0008               	return
  3339     03E2                     __end_of_SensorBoardType_validation:
  3340                           
  3341                           	psect	text9
  3342     03E2                     __ptext9:	
  3343 ;; *************** function _SYSTEM_Initialize *****************
  3344 ;; Defined at:
  3345 ;;		line 50 in file "mcc_generated_files/mcc.c"
  3346 ;; Parameters:    Size  Location     Type
  3347 ;;		None
  3348 ;; Auto vars:     Size  Location     Type
  3349 ;;		None
  3350 ;; Return value:  Size  Location     Type
  3351 ;;                  1    wreg      void 
  3352 ;; Registers used:
  3353 ;;		wreg, status,2, status,0, pclath, cstack
  3354 ;; Tracked objects:
  3355 ;;		On entry : 0/0
  3356 ;;		On exit  : 0/0
  3357 ;;		Unchanged: 0/0
  3358 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3359 ;;      Params:         0       0       0       0
  3360 ;;      Locals:         0       0       0       0
  3361 ;;      Temps:          0       0       0       0
  3362 ;;      Totals:         0       0       0       0
  3363 ;;Total ram usage:        0 bytes
  3364 ;; Hardware stack levels used: 1
  3365 ;; Hardware stack levels required when called: 7
  3366 ;; This function calls:
  3367 ;;		_I2C1_Initialize
  3368 ;;		_OSCILLATOR_Initialize
  3369 ;;		_PIN_MANAGER_Initialize
  3370 ;;		_TMR0_Initialize
  3371 ;;		_WDT_Initialize
  3372 ;; This function is called by:
  3373 ;;		_main
  3374 ;; This function uses a non-reentrant model
  3375 ;;
  3376                           
  3377     03E2                     _SYSTEM_Initialize:	
  3378                           ;psect for function _SYSTEM_Initialize
  3379                           
  3380     03E2                     l1932:	
  3381                           ;incstack = 0
  3382                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  3383                           
  3384                           
  3385                           ;mcc_generated_files/mcc.c: 53:     I2C1_Initialize();
  3386     03E2  3184  2436  3183   	fcall	_I2C1_Initialize
  3387                           
  3388                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
  3389     03E5  3183  2301  3183   	fcall	_PIN_MANAGER_Initialize
  3390                           
  3391                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
  3392     03E8  3184  2461  3183   	fcall	_OSCILLATOR_Initialize
  3393     03EB                     l1934:
  3394                           
  3395                           ;mcc_generated_files/mcc.c: 56:     WDT_Initialize();
  3396     03EB  3184  247A  3183   	fcall	_WDT_Initialize
  3397     03EE                     l1936:
  3398                           
  3399                           ;mcc_generated_files/mcc.c: 57:     TMR0_Initialize();
  3400     03EE  3183  23AB  3183   	fcall	_TMR0_Initialize
  3401     03F1                     l530:
  3402     03F1  0008               	return
  3403     03F2                     __end_of_SYSTEM_Initialize:
  3404                           
  3405                           	psect	text10
  3406     047A                     __ptext10:	
  3407 ;; *************** function _WDT_Initialize *****************
  3408 ;; Defined at:
  3409 ;;		line 70 in file "mcc_generated_files/mcc.c"
  3410 ;; Parameters:    Size  Location     Type
  3411 ;;		None
  3412 ;; Auto vars:     Size  Location     Type
  3413 ;;		None
  3414 ;; Return value:  Size  Location     Type
  3415 ;;                  1    wreg      void 
  3416 ;; Registers used:
  3417 ;;		status,2
  3418 ;; Tracked objects:
  3419 ;;		On entry : 0/0
  3420 ;;		On exit  : 0/0
  3421 ;;		Unchanged: 0/0
  3422 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3423 ;;      Params:         0       0       0       0
  3424 ;;      Locals:         0       0       0       0
  3425 ;;      Temps:          0       0       0       0
  3426 ;;      Totals:         0       0       0       0
  3427 ;;Total ram usage:        0 bytes
  3428 ;; Hardware stack levels used: 1
  3429 ;; Hardware stack levels required when called: 5
  3430 ;; This function calls:
  3431 ;;		Nothing
  3432 ;; This function is called by:
  3433 ;;		_SYSTEM_Initialize
  3434 ;; This function uses a non-reentrant model
  3435 ;;
  3436                           
  3437     047A                     _WDT_Initialize:	
  3438                           ;psect for function _WDT_Initialize
  3439                           
  3440     047A                     l1836:	
  3441                           ;incstack = 0
  3442                           ; Regs used in _WDT_Initialize: [status,2]
  3443                           
  3444                           
  3445                           ;mcc_generated_files/mcc.c: 73:     WDTCON = 0x00;
  3446     047A  0150               	movlb	16	; select bank16
  3447     047B  018C               	clrf	12	;volatile
  3448     047C                     l536:
  3449     047C  0008               	return
  3450     047D                     __end_of_WDT_Initialize:
  3451                           
  3452                           	psect	text11
  3453     03AB                     __ptext11:	
  3454 ;; *************** function _TMR0_Initialize *****************
  3455 ;; Defined at:
  3456 ;;		line 67 in file "mcc_generated_files/tmr0.c"
  3457 ;; Parameters:    Size  Location     Type
  3458 ;;		None
  3459 ;; Auto vars:     Size  Location     Type
  3460 ;;		None
  3461 ;; Return value:  Size  Location     Type
  3462 ;;                  1    wreg      void 
  3463 ;; Registers used:
  3464 ;;		wreg, status,2, status,0, pclath, cstack
  3465 ;; Tracked objects:
  3466 ;;		On entry : 0/0
  3467 ;;		On exit  : 0/0
  3468 ;;		Unchanged: 0/0
  3469 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3470 ;;      Params:         0       0       0       0
  3471 ;;      Locals:         0       0       0       0
  3472 ;;      Temps:          0       0       0       0
  3473 ;;      Totals:         0       0       0       0
  3474 ;;Total ram usage:        0 bytes
  3475 ;; Hardware stack levels used: 1
  3476 ;; Hardware stack levels required when called: 6
  3477 ;; This function calls:
  3478 ;;		_TMR0_SetInterruptHandler
  3479 ;; This function is called by:
  3480 ;;		_SYSTEM_Initialize
  3481 ;; This function uses a non-reentrant model
  3482 ;;
  3483                           
  3484     03AB                     _TMR0_Initialize:	
  3485                           ;psect for function _TMR0_Initialize
  3486                           
  3487     03AB                     l1812:	
  3488                           ;incstack = 0
  3489                           ; Regs used in _TMR0_Initialize: [wreg+status,2+status,0+pclath+cstack]
  3490                           
  3491                           
  3492                           ;mcc_generated_files/tmr0.c: 72:     T0CON1 = 0x69;
  3493     03AB  3069               	movlw	105
  3494     03AC  014B               	movlb	11	; select bank11
  3495     03AD  009F               	movwf	31	;volatile
  3496                           
  3497                           ;mcc_generated_files/tmr0.c: 75:     TMR0H = 0x9B;
  3498     03AE  309B               	movlw	155
  3499     03AF  009D               	movwf	29	;volatile
  3500     03B0                     l1814:
  3501                           
  3502                           ;mcc_generated_files/tmr0.c: 78:     TMR0L = 0x00;
  3503     03B0  019C               	clrf	28	;volatile
  3504     03B1                     l1816:
  3505                           
  3506                           ;mcc_generated_files/tmr0.c: 81:     PIR0bits.TMR0IF = 0;
  3507     03B1  014E               	movlb	14	; select bank14
  3508     03B2  128C               	bcf	12,5	;volatile
  3509     03B3                     l1818:
  3510                           
  3511                           ;mcc_generated_files/tmr0.c: 84:     PIE0bits.TMR0IE = 1;
  3512     03B3  1696               	bsf	22,5	;volatile
  3513     03B4                     l1820:
  3514                           
  3515                           ;mcc_generated_files/tmr0.c: 87:     TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandl
      +                          er);
  3516     03B4  3095               	movlw	low _TMR0_DefaultInterruptHandler
  3517     03B5  00F3               	movwf	TMR0_SetInterruptHandler@InterruptHandler
  3518     03B6  3003               	movlw	high _TMR0_DefaultInterruptHandler
  3519     03B7  00F4               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1
  3520     03B8  3184  245B  3183   	fcall	_TMR0_SetInterruptHandler
  3521     03BB                     l1822:
  3522                           
  3523                           ;mcc_generated_files/tmr0.c: 90:     T0CON0 = 0x80;
  3524     03BB  3080               	movlw	128
  3525     03BC  014B               	movlb	11	; select bank11
  3526     03BD  009E               	movwf	30	;volatile
  3527     03BE                     l417:
  3528     03BE  0008               	return
  3529     03BF                     __end_of_TMR0_Initialize:
  3530                           
  3531                           	psect	text12
  3532     045B                     __ptext12:	
  3533 ;; *************** function _TMR0_SetInterruptHandler *****************
  3534 ;; Defined at:
  3535 ;;		line 142 in file "mcc_generated_files/tmr0.c"
  3536 ;; Parameters:    Size  Location     Type
  3537 ;;  InterruptHan    2    3[COMMON] PTR FTN()void 
  3538 ;;		 -> TMR0_DefaultInterruptHandler(1), 
  3539 ;; Auto vars:     Size  Location     Type
  3540 ;;		None
  3541 ;; Return value:  Size  Location     Type
  3542 ;;                  1    wreg      void 
  3543 ;; Registers used:
  3544 ;;		wreg
  3545 ;; Tracked objects:
  3546 ;;		On entry : 0/0
  3547 ;;		On exit  : 0/0
  3548 ;;		Unchanged: 0/0
  3549 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3550 ;;      Params:         2       0       0       0
  3551 ;;      Locals:         0       0       0       0
  3552 ;;      Temps:          0       0       0       0
  3553 ;;      Totals:         2       0       0       0
  3554 ;;Total ram usage:        2 bytes
  3555 ;; Hardware stack levels used: 1
  3556 ;; Hardware stack levels required when called: 5
  3557 ;; This function calls:
  3558 ;;		Nothing
  3559 ;; This function is called by:
  3560 ;;		_TMR0_Initialize
  3561 ;; This function uses a non-reentrant model
  3562 ;;
  3563                           
  3564     045B                     _TMR0_SetInterruptHandler:	
  3565                           ;psect for function _TMR0_SetInterruptHandler
  3566                           
  3567     045B                     l1670:	
  3568                           ;incstack = 0
  3569                           ; Regs used in _TMR0_SetInterruptHandler: [wreg]
  3570                           
  3571                           
  3572                           ;mcc_generated_files/tmr0.c: 143:     TMR0_InterruptHandler = InterruptHandler;
  3573     045B  0874               	movf	TMR0_SetInterruptHandler@InterruptHandler+1,w
  3574     045C  0140               	movlb	0	; select bank0
  3575     045D  00CA               	movwf	_TMR0_InterruptHandler+1
  3576     045E  0873               	movf	TMR0_SetInterruptHandler@InterruptHandler,w
  3577     045F  00C9               	movwf	_TMR0_InterruptHandler
  3578     0460                     l439:
  3579     0460  0008               	return
  3580     0461                     __end_of_TMR0_SetInterruptHandler:
  3581                           
  3582                           	psect	text13
  3583     0301                     __ptext13:	
  3584 ;; *************** function _PIN_MANAGER_Initialize *****************
  3585 ;; Defined at:
  3586 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  3587 ;; Parameters:    Size  Location     Type
  3588 ;;		None
  3589 ;; Auto vars:     Size  Location     Type
  3590 ;;		None
  3591 ;; Return value:  Size  Location     Type
  3592 ;;                  1    wreg      void 
  3593 ;; Registers used:
  3594 ;;		wreg, status,2
  3595 ;; Tracked objects:
  3596 ;;		On entry : 0/0
  3597 ;;		On exit  : 0/0
  3598 ;;		Unchanged: 0/0
  3599 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3600 ;;      Params:         0       0       0       0
  3601 ;;      Locals:         0       0       0       0
  3602 ;;      Temps:          0       0       0       0
  3603 ;;      Totals:         0       0       0       0
  3604 ;;Total ram usage:        0 bytes
  3605 ;; Hardware stack levels used: 1
  3606 ;; Hardware stack levels required when called: 5
  3607 ;; This function calls:
  3608 ;;		Nothing
  3609 ;; This function is called by:
  3610 ;;		_SYSTEM_Initialize
  3611 ;; This function uses a non-reentrant model
  3612 ;;
  3613                           
  3614     0301                     _PIN_MANAGER_Initialize:	
  3615                           ;psect for function _PIN_MANAGER_Initialize
  3616                           
  3617     0301                     l1740:	
  3618                           ;incstack = 0
  3619                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  3620                           
  3621                           
  3622                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
  3623     0301  0140               	movlb	0	; select bank0
  3624     0302  0198               	clrf	24	;volatile
  3625                           
  3626                           ;mcc_generated_files/pin_manager.c: 61:     LATC = 0x00;
  3627     0303  019A               	clrf	26	;volatile
  3628     0304                     l1742:
  3629                           
  3630                           ;mcc_generated_files/pin_manager.c: 66:     TRISA = 0x3B;
  3631     0304  303B               	movlw	59
  3632     0305  0092               	movwf	18	;volatile
  3633     0306                     l1744:
  3634                           
  3635                           ;mcc_generated_files/pin_manager.c: 67:     TRISC = 0x3F;
  3636     0306  303F               	movlw	63
  3637     0307  0094               	movwf	20	;volatile
  3638                           
  3639                           ;mcc_generated_files/pin_manager.c: 72:     ANSELC = 0x00;
  3640     0308  017E               	movlb	62	; select bank62
  3641     0309  01CE               	clrf	78	;volatile
  3642     030A                     l1746:
  3643                           
  3644                           ;mcc_generated_files/pin_manager.c: 73:     ANSELA = 0x07;
  3645     030A  3007               	movlw	7
  3646     030B  00B8               	movwf	56	;volatile
  3647     030C                     l1748:
  3648                           
  3649                           ;mcc_generated_files/pin_manager.c: 78:     WPUA = 0x00;
  3650     030C  01B9               	clrf	57	;volatile
  3651     030D                     l1750:
  3652                           
  3653                           ;mcc_generated_files/pin_manager.c: 79:     WPUC = 0x00;
  3654     030D  01CF               	clrf	79	;volatile
  3655     030E                     l1752:
  3656                           
  3657                           ;mcc_generated_files/pin_manager.c: 84:     ODCONA = 0x00;
  3658     030E  01BA               	clrf	58	;volatile
  3659     030F                     l1754:
  3660                           
  3661                           ;mcc_generated_files/pin_manager.c: 85:     ODCONC = 0x00;
  3662     030F  01D0               	clrf	80	;volatile
  3663     0310                     l1756:
  3664                           
  3665                           ;mcc_generated_files/pin_manager.c: 90:     SLRCONA = 0x37;
  3666     0310  3037               	movlw	55
  3667     0311  00BB               	movwf	59	;volatile
  3668     0312                     l1758:
  3669                           
  3670                           ;mcc_generated_files/pin_manager.c: 91:     SLRCONC = 0x3F;
  3671     0312  303F               	movlw	63
  3672     0313  00D1               	movwf	81	;volatile
  3673     0314                     l1760:
  3674                           
  3675                           ;mcc_generated_files/pin_manager.c: 96:     INLVLA = 0x3F;
  3676     0314  303F               	movlw	63
  3677     0315  00BC               	movwf	60	;volatile
  3678     0316                     l1762:
  3679                           
  3680                           ;mcc_generated_files/pin_manager.c: 97:     INLVLC = 0x3F;
  3681     0316  303F               	movlw	63
  3682     0317  00D2               	movwf	82	;volatile
  3683     0318                     l1764:
  3684                           
  3685                           ;mcc_generated_files/pin_manager.c: 106:     RC0PPS = 0x07;
  3686     0318  3007               	movlw	7
  3687     0319  00A0               	movwf	32	;volatile
  3688     031A                     l1766:
  3689                           
  3690                           ;mcc_generated_files/pin_manager.c: 107:     SSP1CLKPPS = 0x10;
  3691     031A  3010               	movlw	16
  3692     031B  017D               	movlb	61	; select bank61
  3693     031C  00C5               	movwf	69	;volatile
  3694     031D                     l1768:
  3695                           
  3696                           ;mcc_generated_files/pin_manager.c: 108:     RC1PPS = 0x08;
  3697     031D  3008               	movlw	8
  3698     031E  017E               	movlb	62	; select bank62
  3699     031F  00A1               	movwf	33	;volatile
  3700     0320                     l1770:
  3701                           
  3702                           ;mcc_generated_files/pin_manager.c: 109:     SSP1DATPPS = 0x11;
  3703     0320  3011               	movlw	17
  3704     0321  017D               	movlb	61	; select bank61
  3705     0322  00C6               	movwf	70	;volatile
  3706     0323                     l77:
  3707     0323  0008               	return
  3708     0324                     __end_of_PIN_MANAGER_Initialize:
  3709                           
  3710                           	psect	text14
  3711     0461                     __ptext14:	
  3712 ;; *************** function _OSCILLATOR_Initialize *****************
  3713 ;; Defined at:
  3714 ;;		line 60 in file "mcc_generated_files/mcc.c"
  3715 ;; Parameters:    Size  Location     Type
  3716 ;;		None
  3717 ;; Auto vars:     Size  Location     Type
  3718 ;;		None
  3719 ;; Return value:  Size  Location     Type
  3720 ;;                  1    wreg      void 
  3721 ;; Registers used:
  3722 ;;		wreg, status,2
  3723 ;; Tracked objects:
  3724 ;;		On entry : 0/0
  3725 ;;		On exit  : 0/0
  3726 ;;		Unchanged: 0/0
  3727 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3728 ;;      Params:         0       0       0       0
  3729 ;;      Locals:         0       0       0       0
  3730 ;;      Temps:          0       0       0       0
  3731 ;;      Totals:         0       0       0       0
  3732 ;;Total ram usage:        0 bytes
  3733 ;; Hardware stack levels used: 1
  3734 ;; Hardware stack levels required when called: 5
  3735 ;; This function calls:
  3736 ;;		Nothing
  3737 ;; This function is called by:
  3738 ;;		_SYSTEM_Initialize
  3739 ;; This function uses a non-reentrant model
  3740 ;;
  3741                           
  3742     0461                     _OSCILLATOR_Initialize:	
  3743                           ;psect for function _OSCILLATOR_Initialize
  3744                           
  3745     0461                     l1830:	
  3746                           ;incstack = 0
  3747                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  3748                           
  3749                           
  3750                           ;mcc_generated_files/mcc.c: 63:     OSCEN = 0x00;
  3751     0461  0151               	movlb	17	; select bank17
  3752     0462  0191               	clrf	17	;volatile
  3753     0463                     l1832:
  3754                           
  3755                           ;mcc_generated_files/mcc.c: 65:     OSCFRQ = 0x03;
  3756     0463  3003               	movlw	3
  3757     0464  0093               	movwf	19	;volatile
  3758     0465                     l1834:
  3759                           
  3760                           ;mcc_generated_files/mcc.c: 67:     OSCTUNE = 0x00;
  3761     0465  0192               	clrf	18	;volatile
  3762     0466                     l533:
  3763     0466  0008               	return
  3764     0467                     __end_of_OSCILLATOR_Initialize:
  3765                           
  3766                           	psect	text15
  3767     0436                     __ptext15:	
  3768 ;; *************** function _I2C1_Initialize *****************
  3769 ;; Defined at:
  3770 ;;		line 113 in file "mcc_generated_files/i2c1_slave.c"
  3771 ;; Parameters:    Size  Location     Type
  3772 ;;		None
  3773 ;; Auto vars:     Size  Location     Type
  3774 ;;		None
  3775 ;; Return value:  Size  Location     Type
  3776 ;;                  1    wreg      void 
  3777 ;; Registers used:
  3778 ;;		wreg, status,2, status,0
  3779 ;; Tracked objects:
  3780 ;;		On entry : 0/0
  3781 ;;		On exit  : 0/0
  3782 ;;		Unchanged: 0/0
  3783 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3784 ;;      Params:         0       0       0       0
  3785 ;;      Locals:         0       0       0       0
  3786 ;;      Temps:          1       0       0       0
  3787 ;;      Totals:         1       0       0       0
  3788 ;;Total ram usage:        1 bytes
  3789 ;; Hardware stack levels used: 1
  3790 ;; Hardware stack levels required when called: 5
  3791 ;; This function calls:
  3792 ;;		Nothing
  3793 ;; This function is called by:
  3794 ;;		_SYSTEM_Initialize
  3795 ;;		_I2C1_Enable
  3796 ;; This function uses a non-reentrant model
  3797 ;;
  3798                           
  3799     0436                     _I2C1_Initialize:	
  3800                           ;psect for function _I2C1_Initialize
  3801                           
  3802     0436                     l1772:	
  3803                           ;incstack = 0
  3804                           ; Regs used in _I2C1_Initialize: [wreg+status,2+status,0]
  3805                           
  3806                           
  3807                           ;mcc_generated_files/i2c1_slave.c: 115:     SSP1STAT = 0x40;
  3808     0436  3040               	movlw	64
  3809     0437  0143               	movlb	3	; select bank3
  3810     0438  008F               	movwf	15	;volatile
  3811     0439                     l1774:
  3812                           
  3813                           ;mcc_generated_files/i2c1_slave.c: 116:     SSP1CON1 |= 0x06;
  3814     0439  3006               	movlw	6
  3815     043A  00F3               	movwf	??_I2C1_Initialize
  3816     043B  0873               	movf	??_I2C1_Initialize,w
  3817     043C  0490               	iorwf	16,f	;volatile
  3818     043D                     l1776:
  3819                           
  3820                           ;mcc_generated_files/i2c1_slave.c: 117:     SSP1CON2 = 0x00;
  3821     043D  0191               	clrf	17	;volatile
  3822     043E                     l1778:
  3823                           
  3824                           ;mcc_generated_files/i2c1_slave.c: 118:     SSP1CON1bits.SSPEN = 0;
  3825     043E  1290               	bcf	16,5	;volatile
  3826     043F                     l228:
  3827     043F  0008               	return
  3828     0440                     __end_of_I2C1_Initialize:
  3829                           
  3830                           	psect	intentry
  3831     0004                     __pintentry:	
  3832 ;; *************** function _INTERRUPT_InterruptManager *****************
  3833 ;; Defined at:
  3834 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  3835 ;; Parameters:    Size  Location     Type
  3836 ;;		None
  3837 ;; Auto vars:     Size  Location     Type
  3838 ;;		None
  3839 ;; Return value:  Size  Location     Type
  3840 ;;                  1    wreg      void 
  3841 ;; Registers used:
  3842 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3843 ;; Tracked objects:
  3844 ;;		On entry : 0/0
  3845 ;;		On exit  : 0/0
  3846 ;;		Unchanged: 0/0
  3847 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3848 ;;      Params:         0       0       0       0
  3849 ;;      Locals:         0       0       0       0
  3850 ;;      Temps:          0       0       0       0
  3851 ;;      Totals:         0       0       0       0
  3852 ;;Total ram usage:        0 bytes
  3853 ;; Hardware stack levels used: 1
  3854 ;; Hardware stack levels required when called: 4
  3855 ;; This function calls:
  3856 ;;		NULL
  3857 ;;		_I2C1_Isr
  3858 ;;		_TMR0_ISR
  3859 ;; This function is called by:
  3860 ;;		Interrupt level 1
  3861 ;; This function uses a non-reentrant model
  3862 ;;
  3863                           
  3864     0004                     _INTERRUPT_InterruptManager:
  3865                           
  3866                           ;incstack = 0
  3867     0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
  3868                           
  3869                           ; Regs used in _INTERRUPT_InterruptManager: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3870     0005  3180               	pagesel	$
  3871     0006                     i1l1938:
  3872                           
  3873                           ;mcc_generated_files/interrupt_manager.c: 55:     if(PIE0bits.TMR0IE == 1 && PIR0bits.TM
      +                          R0IF == 1)
  3874     0006  014E               	movlb	14	; select bank14
  3875     0007  1E96               	btfss	22,5	;volatile
  3876     0008  280A               	goto	u63_21
  3877     0009  280B               	goto	u63_20
  3878     000A                     u63_21:
  3879     000A  2813               	goto	i1l111
  3880     000B                     u63_20:
  3881     000B                     i1l1940:
  3882     000B  1E8C               	btfss	12,5	;volatile
  3883     000C  280E               	goto	u64_21
  3884     000D  280F               	goto	u64_20
  3885     000E                     u64_21:
  3886     000E  2813               	goto	i1l111
  3887     000F                     u64_20:
  3888     000F                     i1l1942:
  3889                           
  3890                           ;mcc_generated_files/interrupt_manager.c: 56:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 57:         TMR0_ISR();
  3891     000F  3183  23F2  3180   	fcall	_TMR0_ISR
  3892                           
  3893                           ;mcc_generated_files/interrupt_manager.c: 58:     }
  3894     0012  282F               	goto	i1l119
  3895     0013                     i1l111:	
  3896                           ;mcc_generated_files/interrupt_manager.c: 59:     else if(INTCONbits.PEIE == 1)
  3897                           
  3898     0013  1F0B               	btfss	11,6	;volatile
  3899     0014  2816               	goto	u65_21
  3900     0015  2817               	goto	u65_20
  3901     0016                     u65_21:
  3902     0016  282F               	goto	i1l119
  3903     0017                     u65_20:
  3904     0017                     i1l1944:
  3905                           
  3906                           ;mcc_generated_files/interrupt_manager.c: 60:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 61:         if(PIE1bits.BCL1IE == 1 && PIR1bits.BCL1IF == 1)
  3907     0017  1D17               	btfss	23,2	;volatile
  3908     0018  281A               	goto	u66_21
  3909     0019  281B               	goto	u66_20
  3910     001A                     u66_21:
  3911     001A  2826               	goto	i1l114
  3912     001B                     u66_20:
  3913     001B                     i1l1946:
  3914     001B  1D0D               	btfss	13,2	;volatile
  3915     001C  281E               	goto	u67_21
  3916     001D  281F               	goto	u67_20
  3917     001E                     u67_21:
  3918     001E  2826               	goto	i1l114
  3919     001F                     u67_20:
  3920     001F                     i1l1948:
  3921                           
  3922                           ;mcc_generated_files/interrupt_manager.c: 62:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 63:             MSSP1_InterruptHandler();
  3923     001F  0140               	movlb	0	; select bank0
  3924     0020  0845               	movf	_MSSP1_InterruptHandler+1,w
  3925     0021  008A               	movwf	10
  3926     0022  0844               	movf	_MSSP1_InterruptHandler,w
  3927     0023  000A               	callw
  3928     0024  3180               	pagesel	$
  3929                           
  3930                           ;mcc_generated_files/interrupt_manager.c: 64:         }
  3931     0025  282F               	goto	i1l119
  3932     0026                     i1l114:	
  3933                           ;mcc_generated_files/interrupt_manager.c: 65:         else if(PIE1bits.SSP1IE == 1 && PI
      +                          R1bits.SSP1IF == 1)
  3934                           
  3935     0026  1C97               	btfss	23,1	;volatile
  3936     0027  2829               	goto	u68_21
  3937     0028  282A               	goto	u68_20
  3938     0029                     u68_21:
  3939     0029  282F               	goto	i1l118
  3940     002A                     u68_20:
  3941     002A                     i1l1950:
  3942     002A  1C8D               	btfss	13,1	;volatile
  3943     002B  282D               	goto	u69_21
  3944     002C  282E               	goto	u69_20
  3945     002D                     u69_21:
  3946     002D  282F               	goto	i1l118
  3947     002E                     u69_20:
  3948     002E  281F               	goto	i1l1948
  3949     002F                     i1l118:	
  3950                           ;mcc_generated_files/interrupt_manager.c: 76:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 78:     }
  3951                           
  3952     002F                     i1l119:
  3953     002F  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  3954     0030  0009               	retfie
  3955     0031                     __end_of_INTERRUPT_InterruptManager:
  3956                           
  3957                           	psect	text17
  3958     03F2                     __ptext17:	
  3959 ;; *************** function _TMR0_ISR *****************
  3960 ;; Defined at:
  3961 ;;		line 127 in file "mcc_generated_files/tmr0.c"
  3962 ;; Parameters:    Size  Location     Type
  3963 ;;		None
  3964 ;; Auto vars:     Size  Location     Type
  3965 ;;		None
  3966 ;; Return value:  Size  Location     Type
  3967 ;;                  1    wreg      void 
  3968 ;; Registers used:
  3969 ;;		wreg, status,2, status,0, pclath, cstack
  3970 ;; Tracked objects:
  3971 ;;		On entry : 0/0
  3972 ;;		On exit  : 0/0
  3973 ;;		Unchanged: 0/0
  3974 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3975 ;;      Params:         0       0       0       0
  3976 ;;      Locals:         0       0       0       0
  3977 ;;      Temps:          0       0       0       0
  3978 ;;      Totals:         0       0       0       0
  3979 ;;Total ram usage:        0 bytes
  3980 ;; Hardware stack levels used: 1
  3981 ;; Hardware stack levels required when called: 1
  3982 ;; This function calls:
  3983 ;;		NULL
  3984 ;;		_TMR0_DefaultInterruptHandler
  3985 ;; This function is called by:
  3986 ;;		_INTERRUPT_InterruptManager
  3987 ;; This function uses a non-reentrant model
  3988 ;;
  3989                           
  3990     03F2                     _TMR0_ISR:	
  3991                           ;psect for function _TMR0_ISR
  3992                           
  3993     03F2                     i1l1884:	
  3994                           ;incstack = 0
  3995                           ; Regs used in _TMR0_ISR: [wreg+status,2+status,0+pclath+cstack]
  3996                           
  3997                           
  3998                           ;mcc_generated_files/tmr0.c: 130:     PIR0bits.TMR0IF = 0;
  3999     03F2  014E               	movlb	14	; select bank14
  4000     03F3  128C               	bcf	12,5	;volatile
  4001     03F4                     i1l1886:
  4002                           
  4003                           ;mcc_generated_files/tmr0.c: 132:     if(TMR0_InterruptHandler)
  4004     03F4  0140               	movlb	0	; select bank0
  4005     03F5  0849               	movf	_TMR0_InterruptHandler,w
  4006     03F6  044A               	iorwf	_TMR0_InterruptHandler+1,w
  4007     03F7  1903               	btfsc	3,2
  4008     03F8  2BFA               	goto	u56_21
  4009     03F9  2BFB               	goto	u56_20
  4010     03FA                     u56_21:
  4011     03FA  2C00               	goto	i1l436
  4012     03FB                     u56_20:
  4013     03FB                     i1l1888:
  4014                           
  4015                           ;mcc_generated_files/tmr0.c: 133:     {;mcc_generated_files/tmr0.c: 134:         TMR0_In
      +                          terruptHandler();
  4016     03FB  084A               	movf	_TMR0_InterruptHandler+1,w
  4017     03FC  008A               	movwf	10
  4018     03FD  0849               	movf	_TMR0_InterruptHandler,w
  4019     03FE  000A               	callw
  4020     03FF  3183               	pagesel	$
  4021     0400                     i1l436:
  4022     0400  0008               	return
  4023     0401                     __end_of_TMR0_ISR:
  4024                           
  4025                           	psect	text18
  4026     0395                     __ptext18:	
  4027 ;; *************** function _TMR0_DefaultInterruptHandler *****************
  4028 ;; Defined at:
  4029 ;;		line 148 in file "mcc_generated_files/tmr0.c"
  4030 ;; Parameters:    Size  Location     Type
  4031 ;;		None
  4032 ;; Auto vars:     Size  Location     Type
  4033 ;;		None
  4034 ;; Return value:  Size  Location     Type
  4035 ;;                  1    wreg      void 
  4036 ;; Registers used:
  4037 ;;		wreg, status,2, status,0
  4038 ;; Tracked objects:
  4039 ;;		On entry : 0/0
  4040 ;;		On exit  : 0/0
  4041 ;;		Unchanged: 0/0
  4042 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4043 ;;      Params:         0       0       0       0
  4044 ;;      Locals:         0       0       0       0
  4045 ;;      Temps:          1       0       0       0
  4046 ;;      Totals:         1       0       0       0
  4047 ;;Total ram usage:        1 bytes
  4048 ;; Hardware stack levels used: 1
  4049 ;; This function calls:
  4050 ;;		Nothing
  4051 ;; This function is called by:
  4052 ;;		_TMR0_Initialize
  4053 ;;		_TMR0_ISR
  4054 ;; This function uses a non-reentrant model
  4055 ;;
  4056                           
  4057     0395                     _TMR0_DefaultInterruptHandler:	
  4058                           ;psect for function _TMR0_DefaultInterruptHandler
  4059                           
  4060     0395                     i1l1824:	
  4061                           ;incstack = 0
  4062                           ; Regs used in _TMR0_DefaultInterruptHandler: [wreg+status,2+status,0]
  4063                           
  4064                           
  4065                           ;mcc_generated_files/tmr0.c: 151:      LED_timer++;
  4066     0395  3001               	movlw	1
  4067     0396  00F0               	movwf	??_TMR0_DefaultInterruptHandler
  4068     0397  0870               	movf	??_TMR0_DefaultInterruptHandler,w
  4069     0398  07FA               	addwf	_LED_timer,f
  4070                           
  4071                           ;mcc_generated_files/tmr0.c: 152:     if (LED_timer==10)
  4072     0399  300A               	movlw	10
  4073     039A  067A               	xorwf	_LED_timer,w
  4074     039B  1D03               	btfss	3,2
  4075     039C  2B9E               	goto	u46_21
  4076     039D  2B9F               	goto	u46_20
  4077     039E                     u46_21:
  4078     039E  2BA1               	goto	i1l1826
  4079     039F                     u46_20:
  4080     039F                     i1l443:	
  4081                           ;mcc_generated_files/tmr0.c: 153:     {;mcc_generated_files/tmr0.c: 154:         do { LA
      +                          TAbits.LATA2 = 1; } while(0);
  4082                           
  4083     039F  0140               	movlb	0	; select bank0
  4084     03A0  1518               	bsf	24,2	;volatile
  4085     03A1                     i1l1826:
  4086                           
  4087                           ;mcc_generated_files/tmr0.c: 156:     if(LED_timer==20)
  4088     03A1  3014               	movlw	20
  4089     03A2  067A               	xorwf	_LED_timer,w
  4090     03A3  1D03               	btfss	3,2
  4091     03A4  2BA6               	goto	u47_21
  4092     03A5  2BA7               	goto	u47_20
  4093     03A6                     u47_21:
  4094     03A6  2BAA               	goto	i1l448
  4095     03A7                     u47_20:
  4096     03A7                     i1l446:	
  4097                           ;mcc_generated_files/tmr0.c: 157:     {;mcc_generated_files/tmr0.c: 158:        do { LAT
      +                          Abits.LATA2 = 0; } while(0);
  4098                           
  4099     03A7  0140               	movlb	0	; select bank0
  4100     03A8  1118               	bcf	24,2	;volatile
  4101     03A9                     i1l1828:
  4102                           
  4103                           ;mcc_generated_files/tmr0.c: 159:        LED_timer = 0;
  4104     03A9  01FA               	clrf	_LED_timer
  4105     03AA                     i1l448:
  4106     03AA  0008               	return
  4107     03AB                     __end_of_TMR0_DefaultInterruptHandler:
  4108                           
  4109                           	psect	text19
  4110     01EA                     __ptext19:	
  4111 ;; *************** function _I2C1_Isr *****************
  4112 ;; Defined at:
  4113 ;;		line 170 in file "mcc_generated_files/i2c1_slave.c"
  4114 ;; Parameters:    Size  Location     Type
  4115 ;;		None
  4116 ;; Auto vars:     Size  Location     Type
  4117 ;;		None
  4118 ;; Return value:  Size  Location     Type
  4119 ;;                  1    wreg      void 
  4120 ;; Registers used:
  4121 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4122 ;; Tracked objects:
  4123 ;;		On entry : 0/0
  4124 ;;		On exit  : 0/0
  4125 ;;		Unchanged: 0/0
  4126 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4127 ;;      Params:         0       0       0       0
  4128 ;;      Locals:         0       0       0       0
  4129 ;;      Temps:          2       0       0       0
  4130 ;;      Totals:         2       0       0       0
  4131 ;;Total ram usage:        2 bytes
  4132 ;; Hardware stack levels used: 1
  4133 ;; Hardware stack levels required when called: 3
  4134 ;; This function calls:
  4135 ;;		_I2C1_SlaveAddrCallBack
  4136 ;;		_I2C1_SlaveClearIrq
  4137 ;;		_I2C1_SlaveIsAddr
  4138 ;;		_I2C1_SlaveIsRead
  4139 ;;		_I2C1_SlaveIsRxBufFull
  4140 ;;		_I2C1_SlaveIsTxBufEmpty
  4141 ;;		_I2C1_SlaveRdCallBack
  4142 ;;		_I2C1_SlaveReleaseClock
  4143 ;;		_I2C1_SlaveWrCallBack
  4144 ;; This function is called by:
  4145 ;;		_I2C1_Open
  4146 ;;		_INTERRUPT_InterruptManager
  4147 ;; This function uses a non-reentrant model
  4148 ;;
  4149                           
  4150     01EA                     _I2C1_Isr:	
  4151                           ;psect for function _I2C1_Isr
  4152                           
  4153     01EA                     i1l1890:	
  4154                           ;incstack = 0
  4155                           ; Regs used in _I2C1_Isr: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4156                           
  4157                           
  4158                           ;mcc_generated_files/i2c1_slave.c: 172:     I2C1_SlaveClearIrq();
  4159     01EA  3184  2480  3181   	fcall	_I2C1_SlaveClearIrq
  4160     01ED                     i1l1892:
  4161                           
  4162                           ;mcc_generated_files/i2c1_slave.c: 174:     if(I2C1_SlaveIsAddr())
  4163     01ED  3184  2447  3181   	fcall	_I2C1_SlaveIsAddr
  4164     01F0  3A00               	xorlw	0
  4165     01F1  1903               	skipnz
  4166     01F2  29F4               	goto	u57_21
  4167     01F3  29F5               	goto	u57_20
  4168     01F4                     u57_21:
  4169     01F4  2A05               	goto	i1l1900
  4170     01F5                     u57_20:
  4171     01F5                     i1l1894:
  4172                           
  4173                           ;mcc_generated_files/i2c1_slave.c: 175:     {;mcc_generated_files/i2c1_slave.c: 176:    
      +                               if(I2C1_SlaveIsRead())
  4174     01F5  3184  2471  3181   	fcall	_I2C1_SlaveIsRead
  4175     01F8  3A00               	xorlw	0
  4176     01F9  1903               	skipnz
  4177     01FA  29FC               	goto	u58_21
  4178     01FB  29FD               	goto	u58_20
  4179     01FC                     u58_21:
  4180     01FC  2A01               	goto	i1l1898
  4181     01FD                     u58_20:
  4182     01FD                     i1l1896:
  4183                           
  4184                           ;mcc_generated_files/i2c1_slave.c: 177:         {;mcc_generated_files/i2c1_slave.c: 178:
      +                                       i2c1SlaveState = I2C1_ADDR_TX;
  4185     01FD  3001               	movlw	1
  4186     01FE  0140               	movlb	0	; select bank0
  4187     01FF  00C6               	movwf	_i2c1SlaveState	;volatile
  4188                           
  4189                           ;mcc_generated_files/i2c1_slave.c: 179:         }
  4190     0200  2A3D               	goto	i1l1924
  4191     0201                     i1l1898:
  4192                           
  4193                           ;mcc_generated_files/i2c1_slave.c: 181:         {;mcc_generated_files/i2c1_slave.c: 182:
      +                                       i2c1SlaveState = I2C1_ADDR_RX;
  4194     0201  3002               	movlw	2
  4195     0202  0140               	movlb	0	; select bank0
  4196     0203  00C6               	movwf	_i2c1SlaveState	;volatile
  4197     0204  2A3D               	goto	i1l1924
  4198     0205                     i1l1900:
  4199                           
  4200                           ;mcc_generated_files/i2c1_slave.c: 186:     {;mcc_generated_files/i2c1_slave.c: 187:    
      +                               if(I2C1_SlaveIsRead())
  4201     0205  3184  2471  3181   	fcall	_I2C1_SlaveIsRead
  4202     0208  3A00               	xorlw	0
  4203     0209  1903               	skipnz
  4204     020A  2A0C               	goto	u59_21
  4205     020B  2A0D               	goto	u59_20
  4206     020C                     u59_21:
  4207     020C  2A11               	goto	i1l1904
  4208     020D                     u59_20:
  4209     020D                     i1l1902:
  4210                           
  4211                           ;mcc_generated_files/i2c1_slave.c: 188:         {;mcc_generated_files/i2c1_slave.c: 189:
      +                                       i2c1SlaveState = I2C1_DATA_TX;
  4212     020D  3003               	movlw	3
  4213     020E  0140               	movlb	0	; select bank0
  4214     020F  00C6               	movwf	_i2c1SlaveState	;volatile
  4215                           
  4216                           ;mcc_generated_files/i2c1_slave.c: 190:         }
  4217     0210  2A3D               	goto	i1l1924
  4218     0211                     i1l1904:
  4219                           
  4220                           ;mcc_generated_files/i2c1_slave.c: 192:         {;mcc_generated_files/i2c1_slave.c: 193:
      +                                       i2c1SlaveState = I2C1_DATA_RX;
  4221     0211  3004               	movlw	4
  4222     0212  0140               	movlb	0	; select bank0
  4223     0213  00C6               	movwf	_i2c1SlaveState	;volatile
  4224     0214  2A3D               	goto	i1l1924
  4225     0215                     i1l1906:
  4226                           
  4227                           ;mcc_generated_files/i2c1_slave.c: 200:             I2C1_SlaveAddrCallBack();
  4228     0215  3184  2429  3181   	fcall	_I2C1_SlaveAddrCallBack
  4229     0218                     i1l1908:
  4230                           
  4231                           ;mcc_generated_files/i2c1_slave.c: 201:             if(I2C1_SlaveIsTxBufEmpty())
  4232     0218  3184  2440  3181   	fcall	_I2C1_SlaveIsTxBufEmpty
  4233     021B  3A00               	xorlw	0
  4234     021C  1903               	skipnz
  4235     021D  2A1F               	goto	u60_21
  4236     021E  2A20               	goto	u60_20
  4237     021F                     u60_21:
  4238     021F  2A53               	goto	i1l1926
  4239     0220                     u60_20:
  4240     0220                     i1l1910:
  4241                           
  4242                           ;mcc_generated_files/i2c1_slave.c: 202:             {;mcc_generated_files/i2c1_slave.c: 
      +                          203:                 I2C1_SlaveWrCallBack();
  4243     0220  3184  240F  3181   	fcall	_I2C1_SlaveWrCallBack
  4244     0223  2A53               	goto	i1l1926
  4245     0224                     i1l1912:
  4246                           
  4247                           ;mcc_generated_files/i2c1_slave.c: 207:             I2C1_SlaveAddrCallBack();
  4248     0224  3184  2429  3181   	fcall	_I2C1_SlaveAddrCallBack
  4249                           
  4250                           ;mcc_generated_files/i2c1_slave.c: 208:             break;
  4251     0227  2A53               	goto	i1l1926
  4252     0228                     i1l1914:
  4253                           
  4254                           ;mcc_generated_files/i2c1_slave.c: 210:             if(I2C1_SlaveIsTxBufEmpty())
  4255     0228  3184  2440  3181   	fcall	_I2C1_SlaveIsTxBufEmpty
  4256     022B  3A00               	xorlw	0
  4257     022C  1903               	skipnz
  4258     022D  2A2F               	goto	u61_21
  4259     022E  2A30               	goto	u61_20
  4260     022F                     u61_21:
  4261     022F  2A53               	goto	i1l1926
  4262     0230                     u61_20:
  4263     0230  2A20               	goto	i1l1910
  4264     0231                     i1l1918:
  4265                           
  4266                           ;mcc_generated_files/i2c1_slave.c: 216:             if(I2C1_SlaveIsRxBufFull())
  4267     0231  3184  2476  3181   	fcall	_I2C1_SlaveIsRxBufFull
  4268     0234  3A00               	xorlw	0
  4269     0235  1903               	skipnz
  4270     0236  2A38               	goto	u62_21
  4271     0237  2A39               	goto	u62_20
  4272     0238                     u62_21:
  4273     0238  2A53               	goto	i1l1926
  4274     0239                     u62_20:
  4275     0239                     i1l1920:
  4276                           
  4277                           ;mcc_generated_files/i2c1_slave.c: 217:             {;mcc_generated_files/i2c1_slave.c: 
      +                          218:                 I2C1_SlaveRdCallBack();
  4278     0239  3184  241C  3181   	fcall	_I2C1_SlaveRdCallBack
  4279     023C  2A53               	goto	i1l1926
  4280     023D                     i1l1924:
  4281     023D  0846               	movf	_i2c1SlaveState,w	;volatile
  4282     023E  00F1               	movwf	??_I2C1_Isr
  4283     023F  01F2               	clrf	??_I2C1_Isr+1
  4284                           
  4285                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4286                           ; Switch size 1, requested type "simple"
  4287                           ; Number of cases is 1, Range of values is 0 to 0
  4288                           ; switch strategies available:
  4289                           ; Name         Instructions Cycles
  4290                           ; simple_byte            4     3 (average)
  4291                           ; direct_byte            8     6 (fixed)
  4292                           ; jumptable            260     6 (fixed)
  4293                           ;	Chosen strategy is simple_byte
  4294     0240  0872               	movf	??_I2C1_Isr+1,w
  4295     0241  3A00               	xorlw	0	; case 0
  4296     0242  1903               	skipnz
  4297     0243  2A45               	goto	i1l2182
  4298     0244  2A53               	goto	i1l1926
  4299     0245                     i1l2182:
  4300                           
  4301                           ; Switch size 1, requested type "simple"
  4302                           ; Number of cases is 4, Range of values is 1 to 4
  4303                           ; switch strategies available:
  4304                           ; Name         Instructions Cycles
  4305                           ; simple_byte           13     7 (average)
  4306                           ; direct_byte           17     9 (fixed)
  4307                           ; jumptable            263     9 (fixed)
  4308                           ;	Chosen strategy is simple_byte
  4309     0245  0871               	movf	??_I2C1_Isr,w
  4310     0246  3A01               	xorlw	1	; case 1
  4311     0247  1903               	skipnz
  4312     0248  2A15               	goto	i1l1906
  4313     0249  3A03               	xorlw	3	; case 2
  4314     024A  1903               	skipnz
  4315     024B  2A24               	goto	i1l1912
  4316     024C  3A01               	xorlw	1	; case 3
  4317     024D  1903               	skipnz
  4318     024E  2A28               	goto	i1l1914
  4319     024F  3A07               	xorlw	7	; case 4
  4320     0250  1903               	skipnz
  4321     0251  2A31               	goto	i1l1918
  4322     0252  2A53               	goto	i1l1926
  4323     0253                     i1l1926:
  4324                           
  4325                           ;mcc_generated_files/i2c1_slave.c: 224:     I2C1_SlaveReleaseClock();
  4326     0253  3184  247D  3181   	fcall	_I2C1_SlaveReleaseClock
  4327     0256                     i1l271:
  4328     0256  0008               	return
  4329     0257                     __end_of_I2C1_Isr:
  4330                           
  4331                           	psect	text20
  4332     040F                     __ptext20:	
  4333 ;; *************** function _I2C1_SlaveWrCallBack *****************
  4334 ;; Defined at:
  4335 ;;		line 263 in file "mcc_generated_files/i2c1_slave.c"
  4336 ;; Parameters:    Size  Location     Type
  4337 ;;		None
  4338 ;; Auto vars:     Size  Location     Type
  4339 ;;		None
  4340 ;; Return value:  Size  Location     Type
  4341 ;;                  1    wreg      void 
  4342 ;; Registers used:
  4343 ;;		wreg, status,2, status,0, pclath, cstack
  4344 ;; Tracked objects:
  4345 ;;		On entry : 0/0
  4346 ;;		On exit  : 0/0
  4347 ;;		Unchanged: 0/0
  4348 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4349 ;;      Params:         0       0       0       0
  4350 ;;      Locals:         0       0       0       0
  4351 ;;      Temps:          0       0       0       0
  4352 ;;      Totals:         0       0       0       0
  4353 ;;Total ram usage:        0 bytes
  4354 ;; Hardware stack levels used: 1
  4355 ;; Hardware stack levels required when called: 2
  4356 ;; This function calls:
  4357 ;;		NULL
  4358 ;;		_I2C1_SlaveDefWrInterruptHandler
  4359 ;; This function is called by:
  4360 ;;		_I2C1_Isr
  4361 ;; This function uses a non-reentrant model
  4362 ;;
  4363                           
  4364     040F                     _I2C1_SlaveWrCallBack:	
  4365                           ;psect for function _I2C1_SlaveWrCallBack
  4366                           
  4367     040F                     i1l1798:	
  4368                           ;incstack = 0
  4369                           ; Regs used in _I2C1_SlaveWrCallBack: [wreg+status,2+status,0+pclath+cstack]
  4370                           
  4371                           
  4372                           ;mcc_generated_files/i2c1_slave.c: 265:     if (I2C1_SlaveWrInterruptHandler)
  4373     040F  0140               	movlb	0	; select bank0
  4374     0410  0840               	movf	_I2C1_SlaveWrInterruptHandler,w
  4375     0411  0441               	iorwf	_I2C1_SlaveWrInterruptHandler+1,w
  4376     0412  1903               	btfsc	3,2
  4377     0413  2C15               	goto	u44_21
  4378     0414  2C16               	goto	u44_20
  4379     0415                     u44_21:
  4380     0415  2C1B               	goto	i1l294
  4381     0416                     u44_20:
  4382     0416                     i1l1800:
  4383                           
  4384                           ;mcc_generated_files/i2c1_slave.c: 266:     {;mcc_generated_files/i2c1_slave.c: 267:    
      +                               I2C1_SlaveWrInterruptHandler();
  4385     0416  0841               	movf	_I2C1_SlaveWrInterruptHandler+1,w
  4386     0417  008A               	movwf	10
  4387     0418  0840               	movf	_I2C1_SlaveWrInterruptHandler,w
  4388     0419  000A               	callw
  4389     041A  3184               	pagesel	$
  4390     041B                     i1l294:
  4391     041B  0008               	return
  4392     041C                     __end_of_I2C1_SlaveWrCallBack:
  4393                           
  4394                           	psect	text21
  4395     0467                     __ptext21:	
  4396 ;; *************** function _I2C1_SlaveDefWrInterruptHandler *****************
  4397 ;; Defined at:
  4398 ;;		line 271 in file "mcc_generated_files/i2c1_slave.c"
  4399 ;; Parameters:    Size  Location     Type
  4400 ;;		None
  4401 ;; Auto vars:     Size  Location     Type
  4402 ;;		None
  4403 ;; Return value:  Size  Location     Type
  4404 ;;                  1    wreg      void 
  4405 ;; Registers used:
  4406 ;;		wreg, status,2, status,0, pclath, cstack
  4407 ;; Tracked objects:
  4408 ;;		On entry : 0/0
  4409 ;;		On exit  : 0/0
  4410 ;;		Unchanged: 0/0
  4411 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4412 ;;      Params:         0       0       0       0
  4413 ;;      Locals:         0       0       0       0
  4414 ;;      Temps:          0       0       0       0
  4415 ;;      Totals:         0       0       0       0
  4416 ;;Total ram usage:        0 bytes
  4417 ;; Hardware stack levels used: 1
  4418 ;; Hardware stack levels required when called: 1
  4419 ;; This function calls:
  4420 ;;		_I2C1_SlaveSendTxData
  4421 ;; This function is called by:
  4422 ;;		_I2C1_Open
  4423 ;;		_I2C1_SlaveWrCallBack
  4424 ;; This function uses a non-reentrant model
  4425 ;;
  4426                           
  4427     0467                     _I2C1_SlaveDefWrInterruptHandler:	
  4428                           ;psect for function _I2C1_SlaveDefWrInterruptHandler
  4429                           
  4430     0467                     i1l1664:	
  4431                           ;incstack = 0
  4432                           ; Regs used in _I2C1_SlaveDefWrInterruptHandler: [wreg+status,2+status,0+pclath+cstack]
  4433                           
  4434                           
  4435                           ;mcc_generated_files/i2c1_slave.c: 272:     I2C1_SlaveSendTxData(i2c1WrData);
  4436     0467  0879               	movf	_i2c1WrData,w	;volatile
  4437     0468  3184  246C  3184   	fcall	_I2C1_SlaveSendTxData
  4438     046B                     i1l297:
  4439     046B  0008               	return
  4440     046C                     __end_of_I2C1_SlaveDefWrInterruptHandler:
  4441                           
  4442                           	psect	text22
  4443     046C                     __ptext22:	
  4444 ;; *************** function _I2C1_SlaveSendTxData *****************
  4445 ;; Defined at:
  4446 ;;		line 407 in file "mcc_generated_files/i2c1_slave.c"
  4447 ;; Parameters:    Size  Location     Type
  4448 ;;  data            1    wreg     unsigned char 
  4449 ;; Auto vars:     Size  Location     Type
  4450 ;;  data            1    0[COMMON] unsigned char 
  4451 ;; Return value:  Size  Location     Type
  4452 ;;                  1    wreg      void 
  4453 ;; Registers used:
  4454 ;;		wreg
  4455 ;; Tracked objects:
  4456 ;;		On entry : 0/0
  4457 ;;		On exit  : 0/0
  4458 ;;		Unchanged: 0/0
  4459 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4460 ;;      Params:         0       0       0       0
  4461 ;;      Locals:         1       0       0       0
  4462 ;;      Temps:          0       0       0       0
  4463 ;;      Totals:         1       0       0       0
  4464 ;;Total ram usage:        1 bytes
  4465 ;; Hardware stack levels used: 1
  4466 ;; This function calls:
  4467 ;;		Nothing
  4468 ;; This function is called by:
  4469 ;;		_I2C1_SlaveDefWrInterruptHandler
  4470 ;;		_I2C1_Write
  4471 ;; This function uses a non-reentrant model
  4472 ;;
  4473                           
  4474     046C                     _I2C1_SlaveSendTxData:	
  4475                           ;psect for function _I2C1_SlaveSendTxData
  4476                           
  4477                           
  4478                           ;incstack = 0
  4479                           ; Regs used in _I2C1_SlaveSendTxData: [wreg]
  4480                           ;I2C1_SlaveSendTxData@data stored from wreg
  4481     046C  00F0               	movwf	I2C1_SlaveSendTxData@data
  4482     046D                     i1l1610:
  4483                           
  4484                           ;mcc_generated_files/i2c1_slave.c: 407: static __attribute__((inline)) void I2C1_SlaveSe
      +                          ndTxData(uint8_t data);mcc_generated_files/i2c1_slave.c: 408: {;mcc_generated_files/i2c1
      +                          _slave.c: 409:     SSP1BUF = data;
  4485     046D  0870               	movf	I2C1_SlaveSendTxData@data,w
  4486     046E  0143               	movlb	3	; select bank3
  4487     046F  008C               	movwf	12	;volatile
  4488     0470                     i1l373:
  4489     0470  0008               	return
  4490     0471                     __end_of_I2C1_SlaveSendTxData:
  4491                           
  4492                           	psect	text23
  4493     047D                     __ptext23:	
  4494 ;; *************** function _I2C1_SlaveReleaseClock *****************
  4495 ;; Defined at:
  4496 ;;		line 377 in file "mcc_generated_files/i2c1_slave.c"
  4497 ;; Parameters:    Size  Location     Type
  4498 ;;		None
  4499 ;; Auto vars:     Size  Location     Type
  4500 ;;		None
  4501 ;; Return value:  Size  Location     Type
  4502 ;;                  1    wreg      void 
  4503 ;; Registers used:
  4504 ;;		None
  4505 ;; Tracked objects:
  4506 ;;		On entry : 0/0
  4507 ;;		On exit  : 0/0
  4508 ;;		Unchanged: 0/0
  4509 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4510 ;;      Params:         0       0       0       0
  4511 ;;      Locals:         0       0       0       0
  4512 ;;      Temps:          0       0       0       0
  4513 ;;      Totals:         0       0       0       0
  4514 ;;Total ram usage:        0 bytes
  4515 ;; Hardware stack levels used: 1
  4516 ;; This function calls:
  4517 ;;		Nothing
  4518 ;; This function is called by:
  4519 ;;		_I2C1_Isr
  4520 ;; This function uses a non-reentrant model
  4521 ;;
  4522                           
  4523     047D                     _I2C1_SlaveReleaseClock:	
  4524                           ;psect for function _I2C1_SlaveReleaseClock
  4525                           
  4526     047D                     i1l1810:	
  4527                           ;incstack = 0
  4528                           ; Regs used in _I2C1_SlaveReleaseClock: []
  4529                           
  4530                           
  4531                           ;mcc_generated_files/i2c1_slave.c: 379:     SSP1CON1bits.CKP = 1;
  4532     047D  0143               	movlb	3	; select bank3
  4533     047E  1610               	bsf	16,4	;volatile
  4534     047F                     i1l355:
  4535     047F  0008               	return
  4536     0480                     __end_of_I2C1_SlaveReleaseClock:
  4537                           
  4538                           	psect	text24
  4539     041C                     __ptext24:	
  4540 ;; *************** function _I2C1_SlaveRdCallBack *****************
  4541 ;; Defined at:
  4542 ;;		line 238 in file "mcc_generated_files/i2c1_slave.c"
  4543 ;; Parameters:    Size  Location     Type
  4544 ;;		None
  4545 ;; Auto vars:     Size  Location     Type
  4546 ;;		None
  4547 ;; Return value:  Size  Location     Type
  4548 ;;                  1    wreg      void 
  4549 ;; Registers used:
  4550 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4551 ;; Tracked objects:
  4552 ;;		On entry : 0/0
  4553 ;;		On exit  : 0/0
  4554 ;;		Unchanged: 0/0
  4555 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4556 ;;      Params:         0       0       0       0
  4557 ;;      Locals:         0       0       0       0
  4558 ;;      Temps:          0       0       0       0
  4559 ;;      Totals:         0       0       0       0
  4560 ;;Total ram usage:        0 bytes
  4561 ;; Hardware stack levels used: 1
  4562 ;; Hardware stack levels required when called: 2
  4563 ;; This function calls:
  4564 ;;		NULL
  4565 ;;		_I2C1_SlaveDefRdInterruptHandler
  4566 ;; This function is called by:
  4567 ;;		_I2C1_Isr
  4568 ;; This function uses a non-reentrant model
  4569 ;;
  4570                           
  4571     041C                     _I2C1_SlaveRdCallBack:	
  4572                           ;psect for function _I2C1_SlaveRdCallBack
  4573                           
  4574     041C                     i1l1806:	
  4575                           ;incstack = 0
  4576                           ; Regs used in _I2C1_SlaveRdCallBack: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4577                           
  4578                           
  4579                           ;mcc_generated_files/i2c1_slave.c: 240:     if (I2C1_SlaveRdInterruptHandler)
  4580     041C  0140               	movlb	0	; select bank0
  4581     041D  0842               	movf	_I2C1_SlaveRdInterruptHandler,w
  4582     041E  0443               	iorwf	_I2C1_SlaveRdInterruptHandler+1,w
  4583     041F  1903               	btfsc	3,2
  4584     0420  2C22               	goto	u45_21
  4585     0421  2C23               	goto	u45_20
  4586     0422                     u45_21:
  4587     0422  2C28               	goto	i1l281
  4588     0423                     u45_20:
  4589     0423                     i1l1808:
  4590                           
  4591                           ;mcc_generated_files/i2c1_slave.c: 241:     {;mcc_generated_files/i2c1_slave.c: 243:    
      +                               I2C1_SlaveRdInterruptHandler();
  4592     0423  0843               	movf	_I2C1_SlaveRdInterruptHandler+1,w
  4593     0424  008A               	movwf	10
  4594     0425  0842               	movf	_I2C1_SlaveRdInterruptHandler,w
  4595     0426  000A               	callw
  4596     0427  3184               	pagesel	$
  4597     0428                     i1l281:
  4598     0428  0008               	return
  4599     0429                     __end_of_I2C1_SlaveRdCallBack:
  4600                           
  4601                           	psect	text25
  4602     03BF                     __ptext25:	
  4603 ;; *************** function _I2C1_SlaveDefRdInterruptHandler *****************
  4604 ;; Defined at:
  4605 ;;		line 248 in file "mcc_generated_files/i2c1_slave.c"
  4606 ;; Parameters:    Size  Location     Type
  4607 ;;		None
  4608 ;; Auto vars:     Size  Location     Type
  4609 ;;		None
  4610 ;; Return value:  Size  Location     Type
  4611 ;;                  1    wreg      void 
  4612 ;; Registers used:
  4613 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4614 ;; Tracked objects:
  4615 ;;		On entry : 0/0
  4616 ;;		On exit  : 0/0
  4617 ;;		Unchanged: 0/0
  4618 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4619 ;;      Params:         0       0       0       0
  4620 ;;      Locals:         0       0       0       0
  4621 ;;      Temps:          0       0       0       0
  4622 ;;      Totals:         0       0       0       0
  4623 ;;Total ram usage:        0 bytes
  4624 ;; Hardware stack levels used: 1
  4625 ;; Hardware stack levels required when called: 1
  4626 ;; This function calls:
  4627 ;;		_I2C1_SlaveGetRxData
  4628 ;; This function is called by:
  4629 ;;		_I2C1_Open
  4630 ;;		_I2C1_SlaveRdCallBack
  4631 ;; This function uses a non-reentrant model
  4632 ;;
  4633                           
  4634     03BF                     _I2C1_SlaveDefRdInterruptHandler:	
  4635                           ;psect for function _I2C1_SlaveDefRdInterruptHandler
  4636                           
  4637     03BF                     i1l1658:	
  4638                           ;incstack = 0
  4639                           ; Regs used in _I2C1_SlaveDefRdInterruptHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pcl
      +                          ath+cstack]
  4640                           
  4641                           
  4642                           ;mcc_generated_files/i2c1_slave.c: 250:     i2c1RdData = I2C1_SlaveGetRxData();
  4643     03BF  3184  2483  3183   	fcall	_I2C1_SlaveGetRxData
  4644     03C2  0140               	movlb	0	; select bank0
  4645     03C3  00C8               	movwf	_i2c1RdData	;volatile
  4646                           
  4647                           ;mcc_generated_files/i2c1_slave.c: 252:     while(i2cReadCnt < 3)
  4648     03C4  2BCB               	goto	i1l1662
  4649     03C5                     i1l1660:
  4650                           
  4651                           ;mcc_generated_files/i2c1_slave.c: 253:     {;mcc_generated_files/i2c1_slave.c: 254:    
      +                               i2cDataRead[i2cReadCnt] = i2c1RdData;
  4652     03C5  0878               	movf	_i2cReadCnt,w
  4653     03C6  3E37               	addlw	(low (_i2cDataRead| 0))& (0+255)
  4654     03C7  0086               	movwf	6
  4655     03C8  0187               	clrf	7
  4656     03C9  0848               	movf	_i2c1RdData,w	;volatile
  4657     03CA  0081               	movwf	1
  4658     03CB                     i1l1662:
  4659                           
  4660                           ;mcc_generated_files/i2c1_slave.c: 252:     while(i2cReadCnt < 3)
  4661     03CB  3003               	movlw	3
  4662     03CC  0278               	subwf	_i2cReadCnt,w	;volatile
  4663     03CD  1C03               	skipc
  4664     03CE  2BD0               	goto	u38_21
  4665     03CF  2BD1               	goto	u38_20
  4666     03D0                     u38_21:
  4667     03D0  2BC5               	goto	i1l1660
  4668     03D1                     u38_20:
  4669     03D1                     i1l287:
  4670     03D1  0008               	return
  4671     03D2                     __end_of_I2C1_SlaveDefRdInterruptHandler:
  4672                           
  4673                           	psect	text26
  4674     0440                     __ptext26:	
  4675 ;; *************** function _I2C1_SlaveIsTxBufEmpty *****************
  4676 ;; Defined at:
  4677 ;;		line 397 in file "mcc_generated_files/i2c1_slave.c"
  4678 ;; Parameters:    Size  Location     Type
  4679 ;;		None
  4680 ;; Auto vars:     Size  Location     Type
  4681 ;;		None
  4682 ;; Return value:  Size  Location     Type
  4683 ;;                  1    wreg      _Bool 
  4684 ;; Registers used:
  4685 ;;		wreg, status,0
  4686 ;; Tracked objects:
  4687 ;;		On entry : 0/0
  4688 ;;		On exit  : 0/0
  4689 ;;		Unchanged: 0/0
  4690 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4691 ;;      Params:         0       0       0       0
  4692 ;;      Locals:         0       0       0       0
  4693 ;;      Temps:          0       0       0       0
  4694 ;;      Totals:         0       0       0       0
  4695 ;;Total ram usage:        0 bytes
  4696 ;; Hardware stack levels used: 1
  4697 ;; This function calls:
  4698 ;;		Nothing
  4699 ;; This function is called by:
  4700 ;;		_I2C1_Isr
  4701 ;; This function uses a non-reentrant model
  4702 ;;
  4703                           
  4704     0440                     _I2C1_SlaveIsTxBufEmpty:	
  4705                           ;psect for function _I2C1_SlaveIsTxBufEmpty
  4706                           
  4707     0440                     i1l1794:	
  4708                           ;incstack = 0
  4709                           ; Regs used in _I2C1_SlaveIsTxBufEmpty: [wreg+status,0]
  4710                           
  4711                           
  4712                           ;mcc_generated_files/i2c1_slave.c: 399:     return !SSP1STATbits.BF;
  4713     0440  1003               	clrc
  4714     0441  0143               	movlb	3	; select bank3
  4715     0442  1C0F               	btfss	15,0	;volatile
  4716     0443  1403               	setc
  4717     0444  3000               	movlw	0
  4718     0445  3D09               	addwfc	9,w
  4719     0446                     i1l367:
  4720     0446  0008               	return
  4721     0447                     __end_of_I2C1_SlaveIsTxBufEmpty:
  4722                           
  4723                           	psect	text27
  4724     0476                     __ptext27:	
  4725 ;; *************** function _I2C1_SlaveIsRxBufFull *****************
  4726 ;; Defined at:
  4727 ;;		line 402 in file "mcc_generated_files/i2c1_slave.c"
  4728 ;; Parameters:    Size  Location     Type
  4729 ;;		None
  4730 ;; Auto vars:     Size  Location     Type
  4731 ;;		None
  4732 ;; Return value:  Size  Location     Type
  4733 ;;                  1    wreg      _Bool 
  4734 ;; Registers used:
  4735 ;;		wreg, status,2, status,0
  4736 ;; Tracked objects:
  4737 ;;		On entry : 0/0
  4738 ;;		On exit  : 0/0
  4739 ;;		Unchanged: 0/0
  4740 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4741 ;;      Params:         0       0       0       0
  4742 ;;      Locals:         0       0       0       0
  4743 ;;      Temps:          0       0       0       0
  4744 ;;      Totals:         0       0       0       0
  4745 ;;Total ram usage:        0 bytes
  4746 ;; Hardware stack levels used: 1
  4747 ;; This function calls:
  4748 ;;		Nothing
  4749 ;; This function is called by:
  4750 ;;		_I2C1_Isr
  4751 ;; This function uses a non-reentrant model
  4752 ;;
  4753                           
  4754     0476                     _I2C1_SlaveIsRxBufFull:	
  4755                           ;psect for function _I2C1_SlaveIsRxBufFull
  4756                           
  4757     0476                     i1l1802:	
  4758                           ;incstack = 0
  4759                           ; Regs used in _I2C1_SlaveIsRxBufFull: [wreg+status,2+status,0]
  4760                           
  4761                           
  4762                           ;mcc_generated_files/i2c1_slave.c: 404:     return SSP1STATbits.BF;
  4763     0476  0143               	movlb	3	; select bank3
  4764     0477  080F               	movf	15,w	;volatile
  4765     0478  3901               	andlw	1
  4766     0479                     i1l370:
  4767     0479  0008               	return
  4768     047A                     __end_of_I2C1_SlaveIsRxBufFull:
  4769                           
  4770                           	psect	text28
  4771     0471                     __ptext28:	
  4772 ;; *************** function _I2C1_SlaveIsRead *****************
  4773 ;; Defined at:
  4774 ;;		line 367 in file "mcc_generated_files/i2c1_slave.c"
  4775 ;; Parameters:    Size  Location     Type
  4776 ;;		None
  4777 ;; Auto vars:     Size  Location     Type
  4778 ;;		None
  4779 ;; Return value:  Size  Location     Type
  4780 ;;                  1    wreg      _Bool 
  4781 ;; Registers used:
  4782 ;;		wreg, status,2, status,0
  4783 ;; Tracked objects:
  4784 ;;		On entry : 0/0
  4785 ;;		On exit  : 0/0
  4786 ;;		Unchanged: 0/0
  4787 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4788 ;;      Params:         0       0       0       0
  4789 ;;      Locals:         0       0       0       0
  4790 ;;      Temps:          0       0       0       0
  4791 ;;      Totals:         0       0       0       0
  4792 ;;Total ram usage:        0 bytes
  4793 ;; Hardware stack levels used: 1
  4794 ;; This function calls:
  4795 ;;		Nothing
  4796 ;; This function is called by:
  4797 ;;		_I2C1_Isr
  4798 ;;		_I2C1_IsRead
  4799 ;; This function uses a non-reentrant model
  4800 ;;
  4801                           
  4802     0471                     _I2C1_SlaveIsRead:	
  4803                           ;psect for function _I2C1_SlaveIsRead
  4804                           
  4805     0471                     i1l1780:	
  4806                           ;incstack = 0
  4807                           ; Regs used in _I2C1_SlaveIsRead: [wreg+status,2+status,0]
  4808                           
  4809                           
  4810                           ;mcc_generated_files/i2c1_slave.c: 369:     return (SSP1STATbits.R_nW);
  4811     0471  0143               	movlb	3	; select bank3
  4812     0472  0C0F               	rrf	15,w	;volatile
  4813     0473  0C89               	rrf	9,f
  4814     0474  3901               	andlw	1
  4815     0475                     i1l349:
  4816     0475  0008               	return
  4817     0476                     __end_of_I2C1_SlaveIsRead:
  4818                           
  4819                           	psect	text29
  4820     0447                     __ptext29:	
  4821 ;; *************** function _I2C1_SlaveIsAddr *****************
  4822 ;; Defined at:
  4823 ;;		line 362 in file "mcc_generated_files/i2c1_slave.c"
  4824 ;; Parameters:    Size  Location     Type
  4825 ;;		None
  4826 ;; Auto vars:     Size  Location     Type
  4827 ;;		None
  4828 ;; Return value:  Size  Location     Type
  4829 ;;                  1    wreg      _Bool 
  4830 ;; Registers used:
  4831 ;;		wreg, status,0
  4832 ;; Tracked objects:
  4833 ;;		On entry : 0/0
  4834 ;;		On exit  : 0/0
  4835 ;;		Unchanged: 0/0
  4836 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4837 ;;      Params:         0       0       0       0
  4838 ;;      Locals:         0       0       0       0
  4839 ;;      Temps:          0       0       0       0
  4840 ;;      Totals:         0       0       0       0
  4841 ;;Total ram usage:        0 bytes
  4842 ;; Hardware stack levels used: 1
  4843 ;; This function calls:
  4844 ;;		Nothing
  4845 ;; This function is called by:
  4846 ;;		_I2C1_Isr
  4847 ;; This function uses a non-reentrant model
  4848 ;;
  4849                           
  4850     0447                     _I2C1_SlaveIsAddr:	
  4851                           ;psect for function _I2C1_SlaveIsAddr
  4852                           
  4853     0447                     i1l1786:	
  4854                           ;incstack = 0
  4855                           ; Regs used in _I2C1_SlaveIsAddr: [wreg+status,0]
  4856                           
  4857                           
  4858                           ;mcc_generated_files/i2c1_slave.c: 364:     return !(SSP1STATbits.D_nA);
  4859     0447  1003               	clrc
  4860     0448  0143               	movlb	3	; select bank3
  4861     0449  1E8F               	btfss	15,5	;volatile
  4862     044A  1403               	setc
  4863     044B  3000               	movlw	0
  4864     044C  3D09               	addwfc	9,w
  4865     044D                     i1l346:
  4866     044D  0008               	return
  4867     044E                     __end_of_I2C1_SlaveIsAddr:
  4868                           
  4869                           	psect	text30
  4870     0480                     __ptext30:	
  4871 ;; *************** function _I2C1_SlaveClearIrq *****************
  4872 ;; Defined at:
  4873 ;;		line 372 in file "mcc_generated_files/i2c1_slave.c"
  4874 ;; Parameters:    Size  Location     Type
  4875 ;;		None
  4876 ;; Auto vars:     Size  Location     Type
  4877 ;;		None
  4878 ;; Return value:  Size  Location     Type
  4879 ;;                  1    wreg      void 
  4880 ;; Registers used:
  4881 ;;		None
  4882 ;; Tracked objects:
  4883 ;;		On entry : 0/0
  4884 ;;		On exit  : 0/0
  4885 ;;		Unchanged: 0/0
  4886 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4887 ;;      Params:         0       0       0       0
  4888 ;;      Locals:         0       0       0       0
  4889 ;;      Temps:          0       0       0       0
  4890 ;;      Totals:         0       0       0       0
  4891 ;;Total ram usage:        0 bytes
  4892 ;; Hardware stack levels used: 1
  4893 ;; This function calls:
  4894 ;;		Nothing
  4895 ;; This function is called by:
  4896 ;;		_I2C1_Isr
  4897 ;; This function uses a non-reentrant model
  4898 ;;
  4899                           
  4900     0480                     _I2C1_SlaveClearIrq:	
  4901                           ;psect for function _I2C1_SlaveClearIrq
  4902                           
  4903     0480                     i1l1784:	
  4904                           ;incstack = 0
  4905                           ; Regs used in _I2C1_SlaveClearIrq: []
  4906                           
  4907                           
  4908                           ;mcc_generated_files/i2c1_slave.c: 374:     PIR1bits.SSP1IF = 0;
  4909     0480  014E               	movlb	14	; select bank14
  4910     0481  108D               	bcf	13,1	;volatile
  4911     0482                     i1l352:
  4912     0482  0008               	return
  4913     0483                     __end_of_I2C1_SlaveClearIrq:
  4914                           
  4915                           	psect	text31
  4916     0429                     __ptext31:	
  4917 ;; *************** function _I2C1_SlaveAddrCallBack *****************
  4918 ;; Defined at:
  4919 ;;		line 280 in file "mcc_generated_files/i2c1_slave.c"
  4920 ;; Parameters:    Size  Location     Type
  4921 ;;		None
  4922 ;; Auto vars:     Size  Location     Type
  4923 ;;		None
  4924 ;; Return value:  Size  Location     Type
  4925 ;;                  1    wreg      void 
  4926 ;; Registers used:
  4927 ;;		wreg, status,2, status,0, pclath, cstack
  4928 ;; Tracked objects:
  4929 ;;		On entry : 0/0
  4930 ;;		On exit  : 0/0
  4931 ;;		Unchanged: 0/0
  4932 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4933 ;;      Params:         0       0       0       0
  4934 ;;      Locals:         0       0       0       0
  4935 ;;      Temps:          0       0       0       0
  4936 ;;      Totals:         0       0       0       0
  4937 ;;Total ram usage:        0 bytes
  4938 ;; Hardware stack levels used: 1
  4939 ;; Hardware stack levels required when called: 2
  4940 ;; This function calls:
  4941 ;;		NULL
  4942 ;;		_I2C1_SlaveDefAddrInterruptHandler
  4943 ;; This function is called by:
  4944 ;;		_I2C1_Isr
  4945 ;; This function uses a non-reentrant model
  4946 ;;
  4947                           
  4948     0429                     _I2C1_SlaveAddrCallBack:	
  4949                           ;psect for function _I2C1_SlaveAddrCallBack
  4950                           
  4951     0429                     i1l1790:	
  4952                           ;incstack = 0
  4953                           ; Regs used in _I2C1_SlaveAddrCallBack: [wreg+status,2+status,0+pclath+cstack]
  4954                           
  4955                           
  4956                           ;mcc_generated_files/i2c1_slave.c: 282:     if (I2C1_SlaveAddrInterruptHandler) {
  4957     0429  0140               	movlb	0	; select bank0
  4958     042A  083E               	movf	_I2C1_SlaveAddrInterruptHandler,w
  4959     042B  043F               	iorwf	_I2C1_SlaveAddrInterruptHandler+1,w
  4960     042C  1903               	btfsc	3,2
  4961     042D  2C2F               	goto	u43_21
  4962     042E  2C30               	goto	u43_20
  4963     042F                     u43_21:
  4964     042F  2C35               	goto	i1l304
  4965     0430                     u43_20:
  4966     0430                     i1l1792:
  4967                           
  4968                           ;mcc_generated_files/i2c1_slave.c: 283:         I2C1_SlaveAddrInterruptHandler();
  4969     0430  083F               	movf	_I2C1_SlaveAddrInterruptHandler+1,w
  4970     0431  008A               	movwf	10
  4971     0432  083E               	movf	_I2C1_SlaveAddrInterruptHandler,w
  4972     0433  000A               	callw
  4973     0434  3184               	pagesel	$
  4974     0435                     i1l304:
  4975     0435  0008               	return
  4976     0436                     __end_of_I2C1_SlaveAddrCallBack:
  4977                           
  4978                           	psect	text32
  4979     044E                     __ptext32:	
  4980 ;; *************** function _I2C1_SlaveDefAddrInterruptHandler *****************
  4981 ;; Defined at:
  4982 ;;		line 288 in file "mcc_generated_files/i2c1_slave.c"
  4983 ;; Parameters:    Size  Location     Type
  4984 ;;		None
  4985 ;; Auto vars:     Size  Location     Type
  4986 ;;		None
  4987 ;; Return value:  Size  Location     Type
  4988 ;;                  1    wreg      void 
  4989 ;; Registers used:
  4990 ;;		wreg, status,2, pclath, cstack
  4991 ;; Tracked objects:
  4992 ;;		On entry : 0/0
  4993 ;;		On exit  : 0/0
  4994 ;;		Unchanged: 0/0
  4995 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4996 ;;      Params:         0       0       0       0
  4997 ;;      Locals:         0       0       0       0
  4998 ;;      Temps:          0       0       0       0
  4999 ;;      Totals:         0       0       0       0
  5000 ;;Total ram usage:        0 bytes
  5001 ;; Hardware stack levels used: 1
  5002 ;; Hardware stack levels required when called: 1
  5003 ;; This function calls:
  5004 ;;		_I2C1_SlaveGetRxData
  5005 ;; This function is called by:
  5006 ;;		_I2C1_Open
  5007 ;;		_I2C1_SlaveAddrCallBack
  5008 ;; This function uses a non-reentrant model
  5009 ;;
  5010                           
  5011     044E                     _I2C1_SlaveDefAddrInterruptHandler:	
  5012                           ;psect for function _I2C1_SlaveDefAddrInterruptHandler
  5013                           
  5014     044E                     i1l1666:	
  5015                           ;incstack = 0
  5016                           ; Regs used in _I2C1_SlaveDefAddrInterruptHandler: [wreg+status,2+pclath+cstack]
  5017                           
  5018                           
  5019                           ;mcc_generated_files/i2c1_slave.c: 289:     i2c1SlaveAddr = I2C1_SlaveGetRxData();
  5020     044E  3184  2483  3184   	fcall	_I2C1_SlaveGetRxData
  5021     0451  0140               	movlb	0	; select bank0
  5022     0452  00C7               	movwf	_i2c1SlaveAddr	;volatile
  5023     0453                     i1l1668:
  5024                           
  5025                           ;mcc_generated_files/i2c1_slave.c: 291:     i2cReadCnt = 0;
  5026     0453  01F8               	clrf	_i2cReadCnt	;volatile
  5027     0454                     i1l307:
  5028     0454  0008               	return
  5029     0455                     __end_of_I2C1_SlaveDefAddrInterruptHandler:
  5030                           
  5031                           	psect	text33
  5032     0483                     __ptext33:	
  5033 ;; *************** function _I2C1_SlaveGetRxData *****************
  5034 ;; Defined at:
  5035 ;;		line 412 in file "mcc_generated_files/i2c1_slave.c"
  5036 ;; Parameters:    Size  Location     Type
  5037 ;;		None
  5038 ;; Auto vars:     Size  Location     Type
  5039 ;;		None
  5040 ;; Return value:  Size  Location     Type
  5041 ;;                  1    wreg      unsigned char 
  5042 ;; Registers used:
  5043 ;;		wreg
  5044 ;; Tracked objects:
  5045 ;;		On entry : 0/0
  5046 ;;		On exit  : 0/0
  5047 ;;		Unchanged: 0/0
  5048 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5049 ;;      Params:         0       0       0       0
  5050 ;;      Locals:         0       0       0       0
  5051 ;;      Temps:          0       0       0       0
  5052 ;;      Totals:         0       0       0       0
  5053 ;;Total ram usage:        0 bytes
  5054 ;; Hardware stack levels used: 1
  5055 ;; This function calls:
  5056 ;;		Nothing
  5057 ;; This function is called by:
  5058 ;;		_I2C1_SlaveDefRdInterruptHandler
  5059 ;;		_I2C1_SlaveDefAddrInterruptHandler
  5060 ;;		_I2C1_Read
  5061 ;; This function uses a non-reentrant model
  5062 ;;
  5063                           
  5064     0483                     _I2C1_SlaveGetRxData:	
  5065                           ;psect for function _I2C1_SlaveGetRxData
  5066                           
  5067     0483                     i1l1606:	
  5068                           ;incstack = 0
  5069                           ; Regs used in _I2C1_SlaveGetRxData: [wreg]
  5070                           
  5071                           
  5072                           ;mcc_generated_files/i2c1_slave.c: 414:     return SSP1BUF;
  5073     0483  0143               	movlb	3	; select bank3
  5074     0484  080C               	movf	12,w	;volatile
  5075     0485                     i1l376:
  5076     0485  0008               	return
  5077     0486                     __end_of_I2C1_SlaveGetRxData:
  5078     007E                     btemp	set	126	;btemp
  5079     007E                     int$flags	set	126
  5080     007E                     wtemp0	set	126
  5081                           
  5082                           	psect	idloc
  5083                           
  5084                           ;Config register IDLOC0 @ 0x8000
  5085                           ;	unspecified, using default values
  5086     8000                     	org	32768
  5087     8000  3FFF               	dw	16383
  5088                           
  5089                           ;Config register IDLOC1 @ 0x8001
  5090                           ;	unspecified, using default values
  5091     8001                     	org	32769
  5092     8001  3FFF               	dw	16383
  5093                           
  5094                           ;Config register IDLOC2 @ 0x8002
  5095                           ;	unspecified, using default values
  5096     8002                     	org	32770
  5097     8002  3FFF               	dw	16383
  5098                           
  5099                           ;Config register IDLOC3 @ 0x8003
  5100                           ;	unspecified, using default values
  5101     8003                     	org	32771
  5102     8003  3FFF               	dw	16383
  5103                           
  5104                           	psect	config
  5105                           
  5106                           ;Config register CONFIG1 @ 0x8007
  5107                           ;	External Oscillator Mode Selection bits
  5108                           ;	FEXTOSC = OFF, Oscillator not enabled
  5109                           ;	Power-up Default Value for COSC bits
  5110                           ;	RSTOSC = HFINTOSC_32MHZ, HFINTOSC (32 MHz)
  5111                           ;	Clock Out Enable bit
  5112                           ;	CLKOUTEN = OFF, CLKOUT function is disabled; I/O function on RA4
  5113                           ;	VDD Range Analog Calibration Selection bit
  5114                           ;	VDDAR = HI, Internal analog systems are calibrated for operation between VDD = 2.3V - 
      +                          5.5V
  5115     8007                     	org	32775
  5116     8007  3FCD               	dw	16333
  5117                           
  5118                           ;Config register CONFIG2 @ 0x8008
  5119                           ;	Master Clear Enable bit
  5120                           ;	MCLRE = EXTMCLR, If LVP = 0, MCLR pin is MCLR; If LVP = 1, RA3 pin function is MCLR
  5121                           ;	Power-up Timer Selection bits
  5122                           ;	PWRTS = PWRT_OFF, PWRT is disabled
  5123                           ;	WDT Operating Mode bits
  5124                           ;	WDTE = OFF, WDT disabled; SEN is ignored
  5125                           ;	Brown-out Reset Enable bits
  5126                           ;	BOREN = ON, Brown-out Reset Enabled, SBOREN bit is ignored
  5127                           ;	Brown-out Reset Voltage Selection bit
  5128                           ;	BORV = LO, Brown-out Reset Voltage (VBOR) set to 1.9V
  5129                           ;	PPSLOCKED One-Way Set Enable bit
  5130                           ;	PPS1WAY = ON, The PPSLOCKED bit can be set once after an unlocking sequence is execute
      +                          d; once PPSLOCKED is set, all future changes to PPS registers are prevented
  5131                           ;	Stack Overflow/Underflow Reset Enable bit
  5132                           ;	STVREN = ON, Stack Overflow or Underflow will cause a reset
  5133     8008                     	org	32776
  5134     8008  3FE7               	dw	16359
  5135                           
  5136                           ;Config register CONFIG3 @ 0x8009
  5137                           ;	unspecified, using default values
  5138     8009                     	org	32777
  5139     8009  3FFF               	dw	16383
  5140                           
  5141                           ;Config register CONFIG4 @ 0x800A
  5142                           ;	Boot Block Size Selection bits
  5143                           ;	BBSIZE = BB512, 512 words boot block size
  5144                           ;	Boot Block Enable bit
  5145                           ;	BBEN = OFF, Boot Block is disabled
  5146                           ;	SAF Enable bit
  5147                           ;	SAFEN = ON, SAF is enabled
  5148                           ;	Application Block Write Protection bit
  5149                           ;	WRTAPP = OFF, Application Block is not write-protected
  5150                           ;	Boot Block Write Protection bit
  5151                           ;	WRTB = OFF, Boot Block is not write-protected
  5152                           ;	Configuration Registers Write Protection bit
  5153                           ;	WRTC = OFF, Configuration Registers are not write-protected
  5154                           ;	Storage Area Flash (SAF) Write Protection bit
  5155                           ;	WRTSAF = OFF, SAF is not write-protected
  5156                           ;	Low Voltage Programming Enable bit
  5157                           ;	LVP = ON, Low Voltage programming enabled. MCLR/Vpp pin function is MCLR. MCLRE Config
      +                          uration bit is ignored.
  5158     800A                     	org	32778
  5159     800A  3FEF               	dw	16367
  5160                           
  5161                           ;Config register CONFIG5 @ 0x800B
  5162                           ;	User Program Flash Memory Code Protection bit
  5163                           ;	CP = OFF, User Program Flash Memory code protection is disabled
  5164     800B                     	org	32779
  5165     800B  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         85
    Persistent  34
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      11
    BANK0            80     23      43
    BANK1            80      0      64
    BANK2            80      0       0

Pointer List with Targets:

    FLASH_WriteBlock@flashWordArray	PTR unsigned short  size(1) Largest target is 64
		 -> memory_initialize@ramBuff(BANK1[64]), 

    FLASH_WriteWord@ramBuf	PTR unsigned short  size(1) Largest target is 64
		 -> memory_initialize@ramBuff(BANK1[64]), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_DefaultInterruptHandler(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_DefaultInterruptHandler(), NULL(), 

    I2C1_SlaveBusColInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), I2C1_SlaveDefBusColInterruptHandler(), 

    I2C1_SlaveWrColInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), I2C1_SlaveDefWrColInterruptHandler(), 

    I2C1_SlaveAddrInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), I2C1_SlaveDefAddrInterruptHandler(), 

    I2C1_SlaveWrInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), I2C1_SlaveDefWrInterruptHandler(), 

    I2C1_SlaveRdInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), I2C1_SlaveDefRdInterruptHandler(), 

    MSSP1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), I2C1_Isr(), 


Critical Paths under _main in COMMON

    _memory_initialize->_FLASH_WriteWord
    _FLASH_WriteWord->___wmul
    _FLASH_WriteBlock->_FLASH_EraseBlock
    _TMR0_Initialize->_TMR0_SetInterruptHandler

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _INTERRUPT_InterruptManager->_I2C1_Isr
    _TMR0_ISR->_TMR0_DefaultInterruptHandler
    _I2C1_SlaveDefWrInterruptHandler->_I2C1_SlaveSendTxData

Critical Paths under _main in BANK0

    _main->_memory_initialize
    _memory_initialize->_FLASH_WriteWord
    _FLASH_WriteWord->_FLASH_WriteBlock

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0    5551
                                             22 BANK0      1     1      0
                  _SYSTEM_Initialize
         _SensorBoardType_validation
                 _getSensorBoardType
                  _memory_initialize
 ---------------------------------------------------------------------------------
 (1) _memory_initialize                                    3     3      0    5344
                                             19 BANK0      3     3      0
                     _FLASH_ReadWord
                    _FLASH_WriteWord
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4    1216
                                              3 COMMON     4     0      4
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _FLASH_WriteWord                                     10     5      5    3666
                                              7 COMMON     1     1      0
                                             10 BANK0      9     4      5
                     _FLASH_ReadWord
                   _FLASH_WriteBlock
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (3) _FLASH_WriteBlock                                    10     7      3     815
                                              0 BANK0     10     7      3
                   _FLASH_EraseBlock
 ---------------------------------------------------------------------------------
 (4) _FLASH_EraseBlock                                     3     1      2     186
                                              3 COMMON     3     1      2
 ---------------------------------------------------------------------------------
 (3) _FLASH_ReadWord                                       3     1      2     276
                                              3 COMMON     3     1      2
 ---------------------------------------------------------------------------------
 (1) _getSensorBoardType                                   2     2      0       0
                                              3 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _SensorBoardType_validation                           1     1      0      44
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0      98
                    _I2C1_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR0_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      0     0      0      98
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR0_SetInterruptHandler                             2     0      2      98
                                              3 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C1_Initialize                                      1     1      0       0
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _INTERRUPT_InterruptManager                           0     0      0      22
                                NULL *
                           _I2C1_Isr *
                           _TMR0_ISR
 ---------------------------------------------------------------------------------
 (6) _TMR0_ISR                                             0     0      0       0
                                NULL *
       _TMR0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (7) _TMR0_DefaultInterruptHandler                         1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (6) _I2C1_Isr                                             2     2      0      22
                                              1 COMMON     2     2      0
             _I2C1_SlaveAddrCallBack
                 _I2C1_SlaveClearIrq
                   _I2C1_SlaveIsAddr
                   _I2C1_SlaveIsRead
              _I2C1_SlaveIsRxBufFull
             _I2C1_SlaveIsTxBufEmpty
               _I2C1_SlaveRdCallBack
             _I2C1_SlaveReleaseClock
               _I2C1_SlaveWrCallBack
 ---------------------------------------------------------------------------------
 (7) _I2C1_SlaveWrCallBack                                 0     0      0      22
                                NULL *
    _I2C1_SlaveDefWrInterruptHandler *
 ---------------------------------------------------------------------------------
 (8) _I2C1_SlaveDefWrInterruptHandler                      0     0      0      22
               _I2C1_SlaveSendTxData
 ---------------------------------------------------------------------------------
 (9) _I2C1_SlaveSendTxData                                 1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (7) _I2C1_SlaveReleaseClock                               0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C1_SlaveRdCallBack                                 0     0      0       0
                                NULL *
    _I2C1_SlaveDefRdInterruptHandler *
 ---------------------------------------------------------------------------------
 (8) _I2C1_SlaveDefRdInterruptHandler                      0     0      0       0
                _I2C1_SlaveGetRxData
 ---------------------------------------------------------------------------------
 (7) _I2C1_SlaveIsTxBufEmpty                               0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C1_SlaveIsRxBufFull                                0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C1_SlaveIsRead                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C1_SlaveIsAddr                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C1_SlaveClearIrq                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C1_SlaveAddrCallBack                               0     0      0       0
                                NULL *
  _I2C1_SlaveDefAddrInterruptHandler *
 ---------------------------------------------------------------------------------
 (8) _I2C1_SlaveDefAddrInterruptHandler                    0     0      0       0
                _I2C1_SlaveGetRxData
 ---------------------------------------------------------------------------------
 (9) _I2C1_SlaveGetRxData                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (7) NULL(Fake)                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _I2C1_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
     _WDT_Initialize
   _SensorBoardType_validation
   _getSensorBoardType
   _memory_initialize
     _FLASH_ReadWord
     _FLASH_WriteWord
       _FLASH_ReadWord
       _FLASH_WriteBlock
         _FLASH_EraseBlock
       ___wmul (ARG)
     ___wmul

 _INTERRUPT_InterruptManager (ROOT)
   NULL(Fake) *
   _I2C1_Isr *
     _I2C1_SlaveAddrCallBack
       NULL(Fake) *
       _I2C1_SlaveDefAddrInterruptHandler *
         _I2C1_SlaveGetRxData
     _I2C1_SlaveClearIrq
     _I2C1_SlaveIsAddr
     _I2C1_SlaveIsRead
     _I2C1_SlaveIsRxBufFull
     _I2C1_SlaveIsTxBufEmpty
     _I2C1_SlaveRdCallBack
       NULL(Fake) *
       _I2C1_SlaveDefRdInterruptHandler *
         _I2C1_SlaveGetRxData
     _I2C1_SlaveReleaseClock
     _I2C1_SlaveWrCallBack
       NULL(Fake) *
       _I2C1_SlaveDefWrInterruptHandler *
         _I2C1_SlaveSendTxData
   _TMR0_ISR *
     NULL(Fake) *
     _TMR0_DefaultInterruptHandler *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM              F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      8       B       2       78.6%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     17      2B       5       53.8%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0      40       7       80.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
ABS                  0      0      76      10        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
DATA                 0      0      76      11        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%
BITSFR32             0      0       0      33        0.0%
SFR32                0      0       0      33        0.0%
BITSFR33             0      0       0      34        0.0%
SFR33                0      0       0      34        0.0%
BITSFR34             0      0       0      35        0.0%
SFR34                0      0       0      35        0.0%
BITSFR35             0      0       0      36        0.0%
SFR35                0      0       0      36        0.0%
BITSFR36             0      0       0      37        0.0%
SFR36                0      0       0      37        0.0%
BITSFR37             0      0       0      38        0.0%
SFR37                0      0       0      38        0.0%
BITSFR38             0      0       0      39        0.0%
SFR38                0      0       0      39        0.0%
BITSFR39             0      0       0      40        0.0%
SFR39                0      0       0      40        0.0%
BITSFR40             0      0       0      41        0.0%
SFR40                0      0       0      41        0.0%
BITSFR41             0      0       0      42        0.0%
SFR41                0      0       0      42        0.0%
BITSFR42             0      0       0      43        0.0%
SFR42                0      0       0      43        0.0%
BITSFR43             0      0       0      44        0.0%
SFR43                0      0       0      44        0.0%
BITSFR44             0      0       0      45        0.0%
SFR44                0      0       0      45        0.0%
BITSFR45             0      0       0      46        0.0%
SFR45                0      0       0      46        0.0%
BITSFR46             0      0       0      47        0.0%
SFR46                0      0       0      47        0.0%
BITSFR47             0      0       0      48        0.0%
SFR47                0      0       0      48        0.0%
BITSFR48             0      0       0      49        0.0%
SFR48                0      0       0      49        0.0%
BITSFR49             0      0       0      50        0.0%
SFR49                0      0       0      50        0.0%
BITSFR50             0      0       0      51        0.0%
SFR50                0      0       0      51        0.0%
BITSFR51             0      0       0      52        0.0%
SFR51                0      0       0      52        0.0%
BITSFR52             0      0       0      53        0.0%
SFR52                0      0       0      53        0.0%
BITSFR53             0      0       0      54        0.0%
SFR53                0      0       0      54        0.0%
BITSFR54             0      0       0      55        0.0%
SFR54                0      0       0      55        0.0%
BITSFR55             0      0       0      56        0.0%
SFR55                0      0       0      56        0.0%
BITSFR56             0      0       0      57        0.0%
SFR56                0      0       0      57        0.0%
BITSFR57             0      0       0      58        0.0%
SFR57                0      0       0      58        0.0%
BITSFR58             0      0       0      59        0.0%
SFR58                0      0       0      59        0.0%
BITSFR59             0      0       0      60        0.0%
SFR59                0      0       0      60        0.0%
BITSFR60             0      0       0      61        0.0%
SFR60                0      0       0      61        0.0%
BITSFR61             0      0       0      62        0.0%
SFR61                0      0       0      62        0.0%
BITSFR62             0      0       0      63        0.0%
SFR62                0      0       0      63        0.0%
BITSFR63             0      0       0      64        0.0%
SFR63                0      0       0      64        0.0%


Microchip Technology PIC Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Mon Apr 17 09:30:07 2023

                 ??_I2C1_SlaveAddrCallBack 0070                                         l33 040E  
                                       l26 01E9                                         l38 03E1  
                                       l77 0323                        ___wmul@multiplicand 0075  
                                      l228 043F                                        l417 03BE  
                                      l530 03F1                                        l533 0466  
                                      l439 0460                                        l471 0394  
                                      l536 047C                                        l480 02C2  
                                      l640 0330                                        l482 02BA  
                                      l642 0345                                        l570 037A  
                                      l476 0300                                        l486 0361  
                                      l479 026D                                        l568 0378  
                                      l569 037A                   __end_of_I2C1_SlaveIsAddr 044E  
                                      u540 03D8                                        u541 03D7  
                                      u550 03DE                                        u551 03DD  
                                      u535 0408                                        u800 0340  
                                      u801 033F                                        u730 026C  
                                      u810 00F6                                        u731 026B  
                                      u811 00F5                                        u740 02A1  
                                      u820 0373                                        u741 02A0  
                                      u821 0372                                        u750 02BA  
                                      u751 02B9                                        u735 0268  
                                      u760 02ED                                        u761 02EC  
                                      u770 032B                                        u771 032A  
                                      u785 0331                                        u795 0336  
                 __end_of_I2C1_SlaveIsRead 0476                                        wreg 0009  
                         ?_FLASH_WriteWord 002A             FLASH_WriteBlock@flashWordArray 0022  
                                     l2020 034E                                       l2100 02AA  
                                     l2030 0358                                       l2022 0350  
                                     l2014 0346                                       l2102 02B0  
                                     l2110 02C3                                       l2040 0380  
                                     l2032 0359                                       l2024 0351  
                                     l2016 034A                                       l2104 02B4  
                                     l2120 02E3                                       l2112 02CA  
                                     l2050 0388                                       l2042 0381  
                                     l2034 035A                                       l2026 0352  
                                     l2018 034B                                       l2106 02BC  
                                     l2122 02E7                                       l2130 0327  
                                     l2052 0389                                       l2044 0384  
                                     l2036 035C                                       l2028 0357  
                                     l2060 0257                                       l2124 02ED  
                                     l2132 032B                                       l2054 038A  
                                     l2046 0386                                       l2038 037C  
                                     l2070 0275                                       l2062 025E  
                                     l2126 02F7                                       l2118 02CE  
                                     l2134 0335                                       l2150 0159  
                                     l2142 00E8                                       l2056 038F  
                                     l2048 0387                                       l2072 0277  
                                     l2064 0262                                       l2136 033A  
                                     l2128 0324                                       l2152 017D  
                                     l2144 00F6                                       l2160 0373  
                                     l2090 029A                                       l2082 027B  
                                     l2074 0278                                       l2138 0340  
                                     l2154 01A1                                       l2146 0111  
                                     l2092 02A1                                       l2084 027E  
                                     l2076 0279                                       l2068 026E  
                                     l2156 01C5                                       l2148 0135  
                                     l2094 02A3                                       l2086 0282  
                                     l2158 0362                                       l2096 02A8  
                                     l2088 028C                           __end_of_I2C1_Isr 0257  
                                     l2098 02A9                                       l1740 0301  
                                     l1820 03B4                                       l1812 03AB  
                                     l1830 0461                                       l1750 030D  
                                     l1742 0304                                       l1670 045B  
                                     l1822 03BB                                       l1814 03B0  
                                     l1832 0463                                       l1760 0314  
                                     l1752 030E                                       l1744 0306  
                                     l1816 03B1                                       l1834 0465  
                                     l1770 0320                                       l1762 0316  
                                     l1754 030F                                       l1746 030A  
                                     l1818 03B3                                       l1772 0436  
                                     l1764 0318                                       l1756 0310  
                                     l1748 030C                                       l1836 047A  
                                     l1932 03E2                                       l1774 0439  
                                     l1766 031A                                       l1758 0312  
                                     l1934 03EB                                       l1776 043D  
                                     l1768 031D                                       l1936 03EE  
                                     l1880 03E0                                       l1872 03D3  
                                     l1778 043E                                       l1874 03D8  
                                     l1876 03DE                                       l1868 0401  
                                     _LATA 0018                                       _LATC 001A  
                                     _WPUA 1F39                                       _WPUC 1F4F  
                                     _main 0362                                       fsr0h 0005  
                                     fsr1h 0007                                       indf0 0000  
                                     fsr0l 0004                                       indf1 0001  
                                     fsr1l 0006                                       btemp 007E  
                        ?_FLASH_WriteBlock 0020                                       start 0031  
                               _i2c1RdData 0048                         ??_FLASH_WriteBlock 0023  
                               _i2c1WrData 0079               _I2C1_SlaveRdInterruptHandler 0042  
             _I2C1_SlaveWrInterruptHandler 0040                   memory_initialize@ramBuff 00A0  
                  __end_of_TMR0_Initialize 03BF             ??_TMR0_DefaultInterruptHandler 0070  
            __end_of_OSCILLATOR_Initialize 0467                                      ?_main 0070  
                                    i1l111 0013                                      i1l114 0026  
                                    i1l118 002F                                      i1l119 002F  
                                    i1l304 0435                                      i1l307 0454  
                                    i1l271 0256                                      i1l352 0482  
                                    i1l281 0428                                      i1l346 044D  
                                    i1l370 0479                                      i1l355 047F  
                                    i1l443 039F                                      i1l436 0400  
                                    i1l349 0475                                      i1l373 0470  
                                    i1l294 041B                                      i1l446 03A7  
                                    i1l367 0446                                      i1l287 03D1  
                                    i1l376 0485                                      i1l448 03AA  
                                    i1l297 046B         __end_of_SensorBoardType_validation 03E2  
               _SensorBoardType_validation 03D2                                      _OSCEN 0891  
                                    _TMR0H 059D                                      _TMR0L 059C  
                                    u43_20 0430                                      u43_21 042F  
                                    _PORTA 000C                                      _PORTC 000E  
                                    u44_20 0416                                      u60_20 0220  
                                    u44_21 0415                                      u60_21 021F  
                                    u45_20 0423                                      u61_20 0230  
                                    u45_21 0422                                      u61_21 022F  
                                    u38_20 03D1                                      u62_20 0239  
                                    u46_20 039F                                      u38_21 03D0  
                                    u62_21 0238                                      u46_21 039E  
                                    u47_20 03A7                                      u63_20 000B  
                                    u47_21 03A6                                      u63_21 000A  
                                    u56_20 03FB                                      u64_20 000F  
                                    u56_21 03FA                                      u64_21 000E  
                                    u57_20 01F5                                      u65_20 0017  
                                    u57_21 01F4                                      u65_21 0016  
                                    _TRISA 0012                                      _TRISC 0014  
                                    u58_20 01FD                                      u66_20 001B  
                                    u58_21 01FC                                      u66_21 001A  
                                    u59_20 020D                                      u67_20 001F  
                                    u59_21 020C                                      u67_21 001E  
                                    u68_20 002A                                      u68_21 0029  
                                    u69_20 002E                                      u69_21 002D  
                ?_TMR0_SetInterruptHandler 0073                          ??_I2C1_Initialize 0073  
                         __end_of_TMR0_ISR 0401                             _WDT_Initialize 047A  
                               _i2cReadCnt 0078                             _i2c1SlaveState 0046  
                                    pclath 000A                                      status 0003  
                                    wtemp0 007E                            __initialization 00D0  
                             __end_of_main 037C                ?_INTERRUPT_InterruptManager 0070  
                                   ??_main 0078                         _I2C1_SlaveClearIrq 0480  
                   __end_of_WDT_Initialize 047D                        ?_I2C1_SlaveClearIrq 0070  
                FLASH_WriteBlock@writeAddr 0020                    ?_I2C1_SlaveReleaseClock 0070  
                                   _ANSELA 1F38                                     _ANSELC 1F4E  
                                   _T0CON0 059E                                     _T0CON1 059F  
                                   _RC0PPS 1F20                                     _RC1PPS 1F21  
                       _getSensorBoardType 0401                                     _ODCONA 1F3A  
                                   i1l1610 046D                                     _ODCONC 1F50  
                                   i1l1606 0483                                     i1l2182 0245  
                                   i1l1800 0416                                     i1l1802 0476  
                                   i1l1810 047D                                     i1l1660 03C5  
                                   i1l1900 0205                                     i1l1662 03CB  
                                   i1l1806 041C                                     i1l1910 0220  
                                   i1l1902 020D                                     i1l1808 0423  
                                   i1l1664 0467                                     i1l1920 0239  
                                   i1l1912 0224                                     i1l1904 0211  
                                   i1l1824 0395                                     i1l1666 044E  
                                   i1l1658 03BF                                     i1l1914 0228  
                                   i1l1906 0215                                     i1l1826 03A1  
                                   i1l1668 0453                                     i1l1780 0471  
                                   i1l1908 0218                                     i1l1924 023D  
                                   i1l1828 03A9                                     i1l1940 000B  
                                   i1l1790 0429                                     i1l1918 0231  
                                   i1l1926 0253                                     i1l1950 002A  
                                   i1l1942 000F                                     i1l1792 0430  
                                   i1l1784 0480                                     i1l1944 0017  
                                   i1l1786 0447                                     i1l1794 0440  
                                   i1l1890 01EA                                     i1l1946 001B  
                                   i1l1938 0006                                     i1l1892 01ED  
                                   i1l1884 03F2                                     i1l1948 001F  
                                   i1l1798 040F                                     i1l1894 01F5  
                                   i1l1886 03F4                                     i1l1896 01FD  
                                   i1l1888 03FB                                     i1l1898 0201  
                                   _INLVLA 1F3C                                     _INLVLC 1F52  
                                   _OSCFRQ 0893                                     _WDTCON 080C  
                              _i2cDataRead 0037                        ?_getSensorBoardType 0070  
                     ??_I2C1_SlaveClearIrq 0070                                     ___wmul 0324  
            FLASH_WriteWord@blockStartAddr 0030                        FLASH_WriteWord@word 002D  
                         ?_TMR0_Initialize 0070                                  ?_I2C1_Isr 0070  
                  FLASH_ReadWord@flashAddr 0073                       ??_getSensorBoardType 0073  
                          ?_WDT_Initialize 0070             __end_of_I2C1_SlaveReleaseClock 0480  
 TMR0_SetInterruptHandler@InterruptHandler 0073                     _I2C1_SlaveAddrCallBack 0429  
                        _SYSTEM_Initialize 03E2                    __end_of__initialization 00E3  
                       ?_SYSTEM_Initialize 0070                             __pcstackCOMMON 0070  
                      ??_SYSTEM_Initialize 0075                                  ?_TMR0_ISR 0070  
                         FLASH_WriteWord@i 0032                                 ??_I2C1_Isr 0071  
                        ?_I2C1_SlaveIsAddr 0070                          ?_I2C1_SlaveIsRead 0070  
              FLASH_WriteBlock@GIEBitValue 0028                         ??_I2C1_SlaveIsAddr 0070  
                       ??_I2C1_SlaveIsRead 0070                  __end_of_SYSTEM_Initialize 03F2  
                               __pbssBANK0 0037                                 __pbssBANK1 00A0  
                     memory_initialize@TAG 0035                        _I2C1_SlaveGetRxData 0483  
                    _I2C1_SlaveIsRxBufFull 0476                                 __pmaintext 0362  
         __end_of_TMR0_SetInterruptHandler 0461                                    ?___wmul 0073  
                               ??_TMR0_ISR 0071                                 __pintentry 0004  
                          _I2C1_Initialize 0436                       ?_I2C1_SlaveGetRxData 0070  
                           _FLASH_ReadWord 037C                ?_SensorBoardType_validation 0070  
                                  _NVMADRH 081B                                    _NVMADRL 081A  
                                  _NVMDATH 081D                                    _OSCTUNE 0892  
                                  _NVMDATL 081C                                    _NVMCON2 081F  
                                  _SSP1ADD 018D                                    _SLRCONA 1F3B  
                                  _SLRCONC 1F51                                    _SSP1BUF 018C  
                                  _SSP1MSK 018E                           _FLASH_EraseBlock 0346  
SensorBoardType_validation@SensorBoardType 0073                      ??_I2C1_SlaveGetRxData 0070  
                   __end_of_FLASH_ReadWord 0395                                    __ptext1 00E6  
                                  __ptext2 0324                                    __ptext3 02C3  
                                  __ptext4 0257                                    __ptext5 0346  
                                  __ptext6 037C                                    __ptext7 0401  
                                  __ptext8 03D2                                    __ptext9 03E2  
                        _memory_initialize 00E6             _I2C1_SlaveAddrInterruptHandler 003E  
                    _OSCILLATOR_Initialize 0461                         ?_memory_initialize 0070  
                 ??_PIN_MANAGER_Initialize 0073                   ??_I2C1_SlaveIsTxBufEmpty 0070  
                                  main@TAG 0036                           _default_in_flash 0040  
                                  clrloop0 0456                       end_of_initialization 00E3  
                      ??_memory_initialize 0033                                  _LED_timer 007A  
                   ?_I2C1_SlaveIsRxBufFull 0070            _I2C1_SlaveWrColInterruptHandler 003A  
                  __end_of_I2C1_Initialize 0440               __end_of_I2C1_SlaveRdCallBack 0429  
                FLASH_ReadWord@GIEBitValue 0075                  __end_of_memory_initialize 01EA  
                          ?_FLASH_ReadWord 0073                           ??_WDT_Initialize 0073  
                 _TMR0_SetInterruptHandler 045B                    ?_I2C1_SlaveAddrCallBack 0070  
                        FLASH_WriteBlock@i 0029                          ??_FLASH_WriteWord 0077  
                           __end_of___wmul 0346                              _i2c1SlaveAddr 0047  
                         _FLASH_WriteBlock 0257                     ?_OSCILLATOR_Initialize 0070  
           __end_of_I2C1_SlaveAddrCallBack 0436               __end_of_I2C1_SlaveSendTxData 0471  
                      start_initialization 00D0               __end_of_I2C1_SlaveWrCallBack 041C  
                 I2C1_SlaveSendTxData@data 0070                           ?_I2C1_Initialize 0070  
                                 ??___wmul 0077                FLASH_EraseBlock@GIEBitValue 0075  
                 __end_of_FLASH_EraseBlock 0362    __end_of_I2C1_SlaveDefRdInterruptHandler 03D2  
        ??_I2C1_SlaveDefRdInterruptHandler 0070           ?_I2C1_SlaveDefRdInterruptHandler 0070  
          _I2C1_SlaveDefRdInterruptHandler 03BF    __end_of_I2C1_SlaveDefWrInterruptHandler 046C  
        ??_I2C1_SlaveDefWrInterruptHandler 0071           ?_I2C1_SlaveDefWrInterruptHandler 0070  
          _I2C1_SlaveDefWrInterruptHandler 0467                                __pbssCOMMON 0078  
                                ___latbits 0000                              __pcstackBANK0 0020  
                     _I2C1_SlaveRdCallBack 041C                      _TMR0_InterruptHandler 0049  
                                __pnvBANK0 0049                     _PIN_MANAGER_Initialize 0301  
                   _MSSP1_InterruptHandler 0044                     _I2C1_SlaveIsTxBufEmpty 0440  
                 __end_of_default_in_flash 00D0                                   _I2C1_Isr 01EA  
             ??_INTERRUPT_InterruptManager 0073                   ??_I2C1_SlaveReleaseClock 0070  
                    ?_I2C1_SlaveRdCallBack 0070                    ??_I2C1_SlaveIsRxBufFull 0070  
                 FLASH_WriteWord@flashAddr 002A             FLASH_WriteBlock@blockStartAddr 0026  
                        ??_TMR0_Initialize 0075                             ___wmul@product 0020  
                                 _LATAbits 0018                                  clear_ram0 0455  
                                 _PIE0bits 0716                                   _PIE1bits 0717  
               ??_TMR0_SetInterruptHandler 0075                                   _PIR0bits 070C  
              __end_of_I2C1_SlaveGetRxData 0486                                   _PIR1bits 070D  
                FLASH_EraseBlock@startAddr 0073                       _I2C1_SlaveSendTxData 046C  
                         ??_FLASH_ReadWord 0075                   _default_in_flash_absaddr 0040  
                     _I2C1_SlaveWrCallBack 040F                                   _SSP1CON1 0190  
                                 _SSP1CON2 0191                                   _TMR0_ISR 03F2  
                                 _SSP1STAT 018F                          ___wmul@multiplier 0073  
         _I2C1_SlaveBusColInterruptHandler 003C                            _FLASH_WriteWord 02C3  
       _I2C1_SlaveDefWrColInterruptHandler 0000                   __end_of_FLASH_WriteBlock 02C3  
__end_of_I2C1_SlaveDefAddrInterruptHandler 0455        ??_I2C1_SlaveDefAddrInterruptHandler 0070  
       ?_I2C1_SlaveDefAddrInterruptHandler 0070          _I2C1_SlaveDefAddrInterruptHandler 044E  
                         _I2C1_SlaveIsAddr 0447                           _I2C1_SlaveIsRead 0471  
                    ?_I2C1_SlaveSendTxData 0070                      ?_I2C1_SlaveWrCallBack 0070  
                  ??_OSCILLATOR_Initialize 0073                   __p_default_in_flash_text 0040  
      _I2C1_SlaveDefBusColInterruptHandler 0000                     ??_I2C1_SlaveRdCallBack 0070  
                               _T0CON0bits 059E                                   __ptext10 047A  
                                 __ptext11 03AB                                   __ptext20 040F  
                                 __ptext12 045B                                   __ptext21 0467  
                                 __ptext13 0301                                   __ptext30 0480  
                                 __ptext22 046C                                   __ptext14 0461  
                                 __ptext31 0429                                   __ptext23 047D  
                                 __ptext15 0436                                   __ptext32 044E  
                                 __ptext24 041C                                   __ptext33 0483  
                                 __ptext25 03BF                                   __ptext17 03F2  
                                 __ptext26 0440                                   __ptext18 0395  
                                 __ptext27 0476                                   __ptext19 01EA  
                                 __ptext28 0471                                   __ptext29 0447  
                             _SSP1CON1bits 0190                               _SSP1CON2bits 0191  
                    FLASH_WriteWord@ramBuf 002C                      FLASH_WriteWord@offset 002F  
     __end_of_TMR0_DefaultInterruptHandler 03AB               _TMR0_DefaultInterruptHandler 0395  
               __end_of_I2C1_SlaveClearIrq 0483                                   int$flags 007E  
       __end_of_INTERRUPT_InterruptManager 0031                 _INTERRUPT_InterruptManager 0004  
                             _SSP1STATbits 018F                          ?_FLASH_EraseBlock 0073  
               __end_of_getSensorBoardType 040F                         ??_FLASH_EraseBlock 0075  
                               _INTCONbits 000B                    __end_of_FLASH_WriteWord 0301  
             ??_SensorBoardType_validation 0073                                _NVMCON1bits 081E  
                                 intlevel1 0000                     _I2C1_SlaveReleaseClock 047D  
                  ?_PIN_MANAGER_Initialize 0070                    ?_I2C1_SlaveIsTxBufEmpty 0070  
                   ??_I2C1_SlaveSendTxData 0070                     ??_I2C1_SlaveWrCallBack 0071  
            ?_TMR0_DefaultInterruptHandler 0070                                 _SSP1DATPPS 1EC6  
                               _SSP1CLKPPS 1EC5                            _TMR0_Initialize 03AB  
           __end_of_PIN_MANAGER_Initialize 0324             __end_of_I2C1_SlaveIsTxBufEmpty 0447  
            __end_of_I2C1_SlaveIsRxBufFull 047A  
