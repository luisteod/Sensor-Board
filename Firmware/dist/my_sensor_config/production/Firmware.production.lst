

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Mon Apr 17 10:26:12 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	16F15223
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	_default_in_flash_text,global,class=STRCODE,delta=2,noexec
     5                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    10                           	psect	clrtext,global,class=CODE,delta=2
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    14                           	psect	text1,local,class=CODE,merge=1,delta=2
    15                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    16                           	psect	text3,local,class=CODE,merge=1,delta=2
    17                           	psect	text4,local,class=CODE,merge=1,delta=2
    18                           	psect	text5,local,class=CODE,merge=1,delta=2
    19                           	psect	text6,local,class=CODE,merge=1,delta=2
    20                           	psect	text7,local,class=CODE,merge=1,delta=2
    21                           	psect	text8,local,class=CODE,merge=1,delta=2
    22                           	psect	text9,local,class=CODE,merge=1,delta=2
    23                           	psect	text10,local,class=CODE,merge=1,delta=2
    24                           	psect	text11,local,class=CODE,merge=1,delta=2
    25                           	psect	text12,local,class=CODE,merge=1,delta=2
    26                           	psect	text13,local,class=CODE,merge=1,delta=2
    27                           	psect	text14,local,class=CODE,merge=1,delta=2
    28                           	psect	text15,local,class=CODE,merge=1,delta=2
    29                           	psect	text16,local,class=CODE,merge=1,delta=2
    30                           	psect	intentry,global,class=CODE,delta=2
    31                           	psect	text18,local,class=CODE,merge=1,delta=2
    32                           	psect	text19,local,class=CODE,merge=1,delta=2
    33                           	psect	text20,local,class=CODE,merge=1,delta=2
    34                           	psect	text21,local,class=CODE,merge=1,delta=2
    35                           	psect	text22,local,class=CODE,merge=1,delta=2
    36                           	psect	text23,local,class=CODE,merge=1,inline,delta=2
    37                           	psect	text24,local,class=CODE,merge=1,inline,delta=2
    38                           	psect	text25,local,class=CODE,merge=1,delta=2
    39                           	psect	text26,local,class=CODE,merge=1,delta=2
    40                           	psect	text27,local,class=CODE,merge=1,inline,delta=2
    41                           	psect	text28,local,class=CODE,merge=1,inline,delta=2
    42                           	psect	text29,local,class=CODE,merge=1,inline,delta=2
    43                           	psect	text30,local,class=CODE,merge=1,inline,delta=2
    44                           	psect	text31,local,class=CODE,merge=1,inline,delta=2
    45                           	psect	text32,local,class=CODE,merge=1,delta=2
    46                           	psect	text33,local,class=CODE,merge=1,delta=2
    47                           	psect	text34,local,class=CODE,merge=1,inline,delta=2
    48                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    49                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    50                           	dabs	1,0x7E,2
    51     0000                     
    52                           ; Generated 19/07/2022 GMT
    53                           ; 
    54                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
    55                           ; All rights reserved.
    56                           ; 
    57                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    58                           ; 
    59                           ; Redistribution and use in source and binary forms, with or without modification, are
    60                           ; permitted provided that the following conditions are met:
    61                           ; 
    62                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    63                           ;        conditions and the following disclaimer.
    64                           ; 
    65                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    66                           ;        of conditions and the following disclaimer in the documentation and/or other
    67                           ;        materials provided with the distribution. Publication is not required when
    68                           ;        this file is used in an embedded application.
    69                           ; 
    70                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    71                           ;        software without specific prior written permission.
    72                           ; 
    73                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    74                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    75                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    76                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    77                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    78                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    79                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    80                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    81                           ; 
    82                           ; 
    83                           ; Code-generator required, PIC16F15223 Definitions
    84                           ; 
    85                           ; SFR Addresses
    86     0000                     	;# 
    87     0001                     	;# 
    88     0002                     	;# 
    89     0003                     	;# 
    90     0004                     	;# 
    91     0005                     	;# 
    92     0006                     	;# 
    93     0007                     	;# 
    94     0008                     	;# 
    95     0009                     	;# 
    96     000A                     	;# 
    97     000B                     	;# 
    98     000C                     	;# 
    99     000E                     	;# 
   100     0012                     	;# 
   101     0014                     	;# 
   102     0018                     	;# 
   103     001A                     	;# 
   104     009A                     	;# 
   105     009B                     	;# 
   106     009B                     	;# 
   107     009C                     	;# 
   108     009D                     	;# 
   109     009E                     	;# 
   110     009F                     	;# 
   111     010E                     	;# 
   112     010F                     	;# 
   113     0119                     	;# 
   114     011A                     	;# 
   115     011B                     	;# 
   116     011B                     	;# 
   117     011C                     	;# 
   118     011D                     	;# 
   119     011E                     	;# 
   120     011F                     	;# 
   121     018C                     	;# 
   122     018D                     	;# 
   123     018E                     	;# 
   124     018F                     	;# 
   125     0190                     	;# 
   126     0191                     	;# 
   127     0192                     	;# 
   128     020C                     	;# 
   129     020D                     	;# 
   130     020E                     	;# 
   131     020E                     	;# 
   132     020F                     	;# 
   133     020F                     	;# 
   134     0210                     	;# 
   135     0210                     	;# 
   136     0211                     	;# 
   137     0211                     	;# 
   138     028C                     	;# 
   139     028C                     	;# 
   140     028D                     	;# 
   141     028D                     	;# 
   142     028E                     	;# 
   143     028F                     	;# 
   144     0290                     	;# 
   145     0291                     	;# 
   146     030C                     	;# 
   147     030C                     	;# 
   148     030D                     	;# 
   149     030E                     	;# 
   150     030F                     	;# 
   151     0310                     	;# 
   152     0310                     	;# 
   153     0311                     	;# 
   154     0312                     	;# 
   155     0313                     	;# 
   156     0314                     	;# 
   157     0314                     	;# 
   158     0315                     	;# 
   159     0316                     	;# 
   160     0318                     	;# 
   161     0318                     	;# 
   162     0319                     	;# 
   163     031A                     	;# 
   164     059C                     	;# 
   165     059C                     	;# 
   166     059D                     	;# 
   167     059D                     	;# 
   168     059E                     	;# 
   169     059F                     	;# 
   170     070C                     	;# 
   171     070D                     	;# 
   172     070E                     	;# 
   173     0716                     	;# 
   174     0717                     	;# 
   175     0718                     	;# 
   176     080C                     	;# 
   177     0811                     	;# 
   178     0813                     	;# 
   179     0814                     	;# 
   180     081A                     	;# 
   181     081A                     	;# 
   182     081B                     	;# 
   183     081C                     	;# 
   184     081C                     	;# 
   185     081D                     	;# 
   186     081E                     	;# 
   187     081F                     	;# 
   188     088E                     	;# 
   189     0890                     	;# 
   190     0891                     	;# 
   191     0892                     	;# 
   192     0893                     	;# 
   193     090C                     	;# 
   194     1E8F                     	;# 
   195     1E90                     	;# 
   196     1E91                     	;# 
   197     1E92                     	;# 
   198     1E93                     	;# 
   199     1E9C                     	;# 
   200     1EA1                     	;# 
   201     1EA2                     	;# 
   202     1EC3                     	;# 
   203     1EC5                     	;# 
   204     1EC6                     	;# 
   205     1EC7                     	;# 
   206     1ECB                     	;# 
   207     1ECB                     	;# 
   208     1ECB                     	;# 
   209     1ECC                     	;# 
   210     1ECC                     	;# 
   211     1ECC                     	;# 
   212     1F10                     	;# 
   213     1F11                     	;# 
   214     1F12                     	;# 
   215     1F14                     	;# 
   216     1F15                     	;# 
   217     1F20                     	;# 
   218     1F21                     	;# 
   219     1F22                     	;# 
   220     1F23                     	;# 
   221     1F24                     	;# 
   222     1F25                     	;# 
   223     1F38                     	;# 
   224     1F39                     	;# 
   225     1F3A                     	;# 
   226     1F3B                     	;# 
   227     1F3C                     	;# 
   228     1F3D                     	;# 
   229     1F3E                     	;# 
   230     1F3F                     	;# 
   231     1F4E                     	;# 
   232     1F4F                     	;# 
   233     1F50                     	;# 
   234     1F51                     	;# 
   235     1F52                     	;# 
   236     1F53                     	;# 
   237     1F54                     	;# 
   238     1F55                     	;# 
   239     1FE4                     	;# 
   240     1FE5                     	;# 
   241     1FE6                     	;# 
   242     1FE7                     	;# 
   243     1FE8                     	;# 
   244     1FE8                     	;# 
   245     1FE9                     	;# 
   246     1FEA                     	;# 
   247     1FEB                     	;# 
   248     1FED                     	;# 
   249     1FEE                     	;# 
   250     1FEF                     	;# 
   251     0000                     	;# 
   252     0001                     	;# 
   253     0002                     	;# 
   254     0003                     	;# 
   255     0004                     	;# 
   256     0005                     	;# 
   257     0006                     	;# 
   258     0007                     	;# 
   259     0008                     	;# 
   260     0009                     	;# 
   261     000A                     	;# 
   262     000B                     	;# 
   263     000C                     	;# 
   264     000E                     	;# 
   265     0012                     	;# 
   266     0014                     	;# 
   267     0018                     	;# 
   268     001A                     	;# 
   269     009A                     	;# 
   270     009B                     	;# 
   271     009B                     	;# 
   272     009C                     	;# 
   273     009D                     	;# 
   274     009E                     	;# 
   275     009F                     	;# 
   276     010E                     	;# 
   277     010F                     	;# 
   278     0119                     	;# 
   279     011A                     	;# 
   280     011B                     	;# 
   281     011B                     	;# 
   282     011C                     	;# 
   283     011D                     	;# 
   284     011E                     	;# 
   285     011F                     	;# 
   286     018C                     	;# 
   287     018D                     	;# 
   288     018E                     	;# 
   289     018F                     	;# 
   290     0190                     	;# 
   291     0191                     	;# 
   292     0192                     	;# 
   293     020C                     	;# 
   294     020D                     	;# 
   295     020E                     	;# 
   296     020E                     	;# 
   297     020F                     	;# 
   298     020F                     	;# 
   299     0210                     	;# 
   300     0210                     	;# 
   301     0211                     	;# 
   302     0211                     	;# 
   303     028C                     	;# 
   304     028C                     	;# 
   305     028D                     	;# 
   306     028D                     	;# 
   307     028E                     	;# 
   308     028F                     	;# 
   309     0290                     	;# 
   310     0291                     	;# 
   311     030C                     	;# 
   312     030C                     	;# 
   313     030D                     	;# 
   314     030E                     	;# 
   315     030F                     	;# 
   316     0310                     	;# 
   317     0310                     	;# 
   318     0311                     	;# 
   319     0312                     	;# 
   320     0313                     	;# 
   321     0314                     	;# 
   322     0314                     	;# 
   323     0315                     	;# 
   324     0316                     	;# 
   325     0318                     	;# 
   326     0318                     	;# 
   327     0319                     	;# 
   328     031A                     	;# 
   329     059C                     	;# 
   330     059C                     	;# 
   331     059D                     	;# 
   332     059D                     	;# 
   333     059E                     	;# 
   334     059F                     	;# 
   335     070C                     	;# 
   336     070D                     	;# 
   337     070E                     	;# 
   338     0716                     	;# 
   339     0717                     	;# 
   340     0718                     	;# 
   341     080C                     	;# 
   342     0811                     	;# 
   343     0813                     	;# 
   344     0814                     	;# 
   345     081A                     	;# 
   346     081A                     	;# 
   347     081B                     	;# 
   348     081C                     	;# 
   349     081C                     	;# 
   350     081D                     	;# 
   351     081E                     	;# 
   352     081F                     	;# 
   353     088E                     	;# 
   354     0890                     	;# 
   355     0891                     	;# 
   356     0892                     	;# 
   357     0893                     	;# 
   358     090C                     	;# 
   359     1E8F                     	;# 
   360     1E90                     	;# 
   361     1E91                     	;# 
   362     1E92                     	;# 
   363     1E93                     	;# 
   364     1E9C                     	;# 
   365     1EA1                     	;# 
   366     1EA2                     	;# 
   367     1EC3                     	;# 
   368     1EC5                     	;# 
   369     1EC6                     	;# 
   370     1EC7                     	;# 
   371     1ECB                     	;# 
   372     1ECB                     	;# 
   373     1ECB                     	;# 
   374     1ECC                     	;# 
   375     1ECC                     	;# 
   376     1ECC                     	;# 
   377     1F10                     	;# 
   378     1F11                     	;# 
   379     1F12                     	;# 
   380     1F14                     	;# 
   381     1F15                     	;# 
   382     1F20                     	;# 
   383     1F21                     	;# 
   384     1F22                     	;# 
   385     1F23                     	;# 
   386     1F24                     	;# 
   387     1F25                     	;# 
   388     1F38                     	;# 
   389     1F39                     	;# 
   390     1F3A                     	;# 
   391     1F3B                     	;# 
   392     1F3C                     	;# 
   393     1F3D                     	;# 
   394     1F3E                     	;# 
   395     1F3F                     	;# 
   396     1F4E                     	;# 
   397     1F4F                     	;# 
   398     1F50                     	;# 
   399     1F51                     	;# 
   400     1F52                     	;# 
   401     1F53                     	;# 
   402     1F54                     	;# 
   403     1F55                     	;# 
   404     1FE4                     	;# 
   405     1FE5                     	;# 
   406     1FE6                     	;# 
   407     1FE7                     	;# 
   408     1FE8                     	;# 
   409     1FE8                     	;# 
   410     1FE9                     	;# 
   411     1FEA                     	;# 
   412     1FEB                     	;# 
   413     1FED                     	;# 
   414     1FEE                     	;# 
   415     1FEF                     	;# 
   416     0000                     	;# 
   417     0001                     	;# 
   418     0002                     	;# 
   419     0003                     	;# 
   420     0004                     	;# 
   421     0005                     	;# 
   422     0006                     	;# 
   423     0007                     	;# 
   424     0008                     	;# 
   425     0009                     	;# 
   426     000A                     	;# 
   427     000B                     	;# 
   428     000C                     	;# 
   429     000E                     	;# 
   430     0012                     	;# 
   431     0014                     	;# 
   432     0018                     	;# 
   433     001A                     	;# 
   434     009A                     	;# 
   435     009B                     	;# 
   436     009B                     	;# 
   437     009C                     	;# 
   438     009D                     	;# 
   439     009E                     	;# 
   440     009F                     	;# 
   441     010E                     	;# 
   442     010F                     	;# 
   443     0119                     	;# 
   444     011A                     	;# 
   445     011B                     	;# 
   446     011B                     	;# 
   447     011C                     	;# 
   448     011D                     	;# 
   449     011E                     	;# 
   450     011F                     	;# 
   451     018C                     	;# 
   452     018D                     	;# 
   453     018E                     	;# 
   454     018F                     	;# 
   455     0190                     	;# 
   456     0191                     	;# 
   457     0192                     	;# 
   458     020C                     	;# 
   459     020D                     	;# 
   460     020E                     	;# 
   461     020E                     	;# 
   462     020F                     	;# 
   463     020F                     	;# 
   464     0210                     	;# 
   465     0210                     	;# 
   466     0211                     	;# 
   467     0211                     	;# 
   468     028C                     	;# 
   469     028C                     	;# 
   470     028D                     	;# 
   471     028D                     	;# 
   472     028E                     	;# 
   473     028F                     	;# 
   474     0290                     	;# 
   475     0291                     	;# 
   476     030C                     	;# 
   477     030C                     	;# 
   478     030D                     	;# 
   479     030E                     	;# 
   480     030F                     	;# 
   481     0310                     	;# 
   482     0310                     	;# 
   483     0311                     	;# 
   484     0312                     	;# 
   485     0313                     	;# 
   486     0314                     	;# 
   487     0314                     	;# 
   488     0315                     	;# 
   489     0316                     	;# 
   490     0318                     	;# 
   491     0318                     	;# 
   492     0319                     	;# 
   493     031A                     	;# 
   494     059C                     	;# 
   495     059C                     	;# 
   496     059D                     	;# 
   497     059D                     	;# 
   498     059E                     	;# 
   499     059F                     	;# 
   500     070C                     	;# 
   501     070D                     	;# 
   502     070E                     	;# 
   503     0716                     	;# 
   504     0717                     	;# 
   505     0718                     	;# 
   506     080C                     	;# 
   507     0811                     	;# 
   508     0813                     	;# 
   509     0814                     	;# 
   510     081A                     	;# 
   511     081A                     	;# 
   512     081B                     	;# 
   513     081C                     	;# 
   514     081C                     	;# 
   515     081D                     	;# 
   516     081E                     	;# 
   517     081F                     	;# 
   518     088E                     	;# 
   519     0890                     	;# 
   520     0891                     	;# 
   521     0892                     	;# 
   522     0893                     	;# 
   523     090C                     	;# 
   524     1E8F                     	;# 
   525     1E90                     	;# 
   526     1E91                     	;# 
   527     1E92                     	;# 
   528     1E93                     	;# 
   529     1E9C                     	;# 
   530     1EA1                     	;# 
   531     1EA2                     	;# 
   532     1EC3                     	;# 
   533     1EC5                     	;# 
   534     1EC6                     	;# 
   535     1EC7                     	;# 
   536     1ECB                     	;# 
   537     1ECB                     	;# 
   538     1ECB                     	;# 
   539     1ECC                     	;# 
   540     1ECC                     	;# 
   541     1ECC                     	;# 
   542     1F10                     	;# 
   543     1F11                     	;# 
   544     1F12                     	;# 
   545     1F14                     	;# 
   546     1F15                     	;# 
   547     1F20                     	;# 
   548     1F21                     	;# 
   549     1F22                     	;# 
   550     1F23                     	;# 
   551     1F24                     	;# 
   552     1F25                     	;# 
   553     1F38                     	;# 
   554     1F39                     	;# 
   555     1F3A                     	;# 
   556     1F3B                     	;# 
   557     1F3C                     	;# 
   558     1F3D                     	;# 
   559     1F3E                     	;# 
   560     1F3F                     	;# 
   561     1F4E                     	;# 
   562     1F4F                     	;# 
   563     1F50                     	;# 
   564     1F51                     	;# 
   565     1F52                     	;# 
   566     1F53                     	;# 
   567     1F54                     	;# 
   568     1F55                     	;# 
   569     1FE4                     	;# 
   570     1FE5                     	;# 
   571     1FE6                     	;# 
   572     1FE7                     	;# 
   573     1FE8                     	;# 
   574     1FE8                     	;# 
   575     1FE9                     	;# 
   576     1FEA                     	;# 
   577     1FEB                     	;# 
   578     1FED                     	;# 
   579     1FEE                     	;# 
   580     1FEF                     	;# 
   581     0000                     	;# 
   582     0001                     	;# 
   583     0002                     	;# 
   584     0003                     	;# 
   585     0004                     	;# 
   586     0005                     	;# 
   587     0006                     	;# 
   588     0007                     	;# 
   589     0008                     	;# 
   590     0009                     	;# 
   591     000A                     	;# 
   592     000B                     	;# 
   593     000C                     	;# 
   594     000E                     	;# 
   595     0012                     	;# 
   596     0014                     	;# 
   597     0018                     	;# 
   598     001A                     	;# 
   599     009A                     	;# 
   600     009B                     	;# 
   601     009B                     	;# 
   602     009C                     	;# 
   603     009D                     	;# 
   604     009E                     	;# 
   605     009F                     	;# 
   606     010E                     	;# 
   607     010F                     	;# 
   608     0119                     	;# 
   609     011A                     	;# 
   610     011B                     	;# 
   611     011B                     	;# 
   612     011C                     	;# 
   613     011D                     	;# 
   614     011E                     	;# 
   615     011F                     	;# 
   616     018C                     	;# 
   617     018D                     	;# 
   618     018E                     	;# 
   619     018F                     	;# 
   620     0190                     	;# 
   621     0191                     	;# 
   622     0192                     	;# 
   623     020C                     	;# 
   624     020D                     	;# 
   625     020E                     	;# 
   626     020E                     	;# 
   627     020F                     	;# 
   628     020F                     	;# 
   629     0210                     	;# 
   630     0210                     	;# 
   631     0211                     	;# 
   632     0211                     	;# 
   633     028C                     	;# 
   634     028C                     	;# 
   635     028D                     	;# 
   636     028D                     	;# 
   637     028E                     	;# 
   638     028F                     	;# 
   639     0290                     	;# 
   640     0291                     	;# 
   641     030C                     	;# 
   642     030C                     	;# 
   643     030D                     	;# 
   644     030E                     	;# 
   645     030F                     	;# 
   646     0310                     	;# 
   647     0310                     	;# 
   648     0311                     	;# 
   649     0312                     	;# 
   650     0313                     	;# 
   651     0314                     	;# 
   652     0314                     	;# 
   653     0315                     	;# 
   654     0316                     	;# 
   655     0318                     	;# 
   656     0318                     	;# 
   657     0319                     	;# 
   658     031A                     	;# 
   659     059C                     	;# 
   660     059C                     	;# 
   661     059D                     	;# 
   662     059D                     	;# 
   663     059E                     	;# 
   664     059F                     	;# 
   665     070C                     	;# 
   666     070D                     	;# 
   667     070E                     	;# 
   668     0716                     	;# 
   669     0717                     	;# 
   670     0718                     	;# 
   671     080C                     	;# 
   672     0811                     	;# 
   673     0813                     	;# 
   674     0814                     	;# 
   675     081A                     	;# 
   676     081A                     	;# 
   677     081B                     	;# 
   678     081C                     	;# 
   679     081C                     	;# 
   680     081D                     	;# 
   681     081E                     	;# 
   682     081F                     	;# 
   683     088E                     	;# 
   684     0890                     	;# 
   685     0891                     	;# 
   686     0892                     	;# 
   687     0893                     	;# 
   688     090C                     	;# 
   689     1E8F                     	;# 
   690     1E90                     	;# 
   691     1E91                     	;# 
   692     1E92                     	;# 
   693     1E93                     	;# 
   694     1E9C                     	;# 
   695     1EA1                     	;# 
   696     1EA2                     	;# 
   697     1EC3                     	;# 
   698     1EC5                     	;# 
   699     1EC6                     	;# 
   700     1EC7                     	;# 
   701     1ECB                     	;# 
   702     1ECB                     	;# 
   703     1ECB                     	;# 
   704     1ECC                     	;# 
   705     1ECC                     	;# 
   706     1ECC                     	;# 
   707     1F10                     	;# 
   708     1F11                     	;# 
   709     1F12                     	;# 
   710     1F14                     	;# 
   711     1F15                     	;# 
   712     1F20                     	;# 
   713     1F21                     	;# 
   714     1F22                     	;# 
   715     1F23                     	;# 
   716     1F24                     	;# 
   717     1F25                     	;# 
   718     1F38                     	;# 
   719     1F39                     	;# 
   720     1F3A                     	;# 
   721     1F3B                     	;# 
   722     1F3C                     	;# 
   723     1F3D                     	;# 
   724     1F3E                     	;# 
   725     1F3F                     	;# 
   726     1F4E                     	;# 
   727     1F4F                     	;# 
   728     1F50                     	;# 
   729     1F51                     	;# 
   730     1F52                     	;# 
   731     1F53                     	;# 
   732     1F54                     	;# 
   733     1F55                     	;# 
   734     1FE4                     	;# 
   735     1FE5                     	;# 
   736     1FE6                     	;# 
   737     1FE7                     	;# 
   738     1FE8                     	;# 
   739     1FE8                     	;# 
   740     1FE9                     	;# 
   741     1FEA                     	;# 
   742     1FEB                     	;# 
   743     1FED                     	;# 
   744     1FEE                     	;# 
   745     1FEF                     	;# 
   746     0000                     	;# 
   747     0001                     	;# 
   748     0002                     	;# 
   749     0003                     	;# 
   750     0004                     	;# 
   751     0005                     	;# 
   752     0006                     	;# 
   753     0007                     	;# 
   754     0008                     	;# 
   755     0009                     	;# 
   756     000A                     	;# 
   757     000B                     	;# 
   758     000C                     	;# 
   759     000E                     	;# 
   760     0012                     	;# 
   761     0014                     	;# 
   762     0018                     	;# 
   763     001A                     	;# 
   764     009A                     	;# 
   765     009B                     	;# 
   766     009B                     	;# 
   767     009C                     	;# 
   768     009D                     	;# 
   769     009E                     	;# 
   770     009F                     	;# 
   771     010E                     	;# 
   772     010F                     	;# 
   773     0119                     	;# 
   774     011A                     	;# 
   775     011B                     	;# 
   776     011B                     	;# 
   777     011C                     	;# 
   778     011D                     	;# 
   779     011E                     	;# 
   780     011F                     	;# 
   781     018C                     	;# 
   782     018D                     	;# 
   783     018E                     	;# 
   784     018F                     	;# 
   785     0190                     	;# 
   786     0191                     	;# 
   787     0192                     	;# 
   788     020C                     	;# 
   789     020D                     	;# 
   790     020E                     	;# 
   791     020E                     	;# 
   792     020F                     	;# 
   793     020F                     	;# 
   794     0210                     	;# 
   795     0210                     	;# 
   796     0211                     	;# 
   797     0211                     	;# 
   798     028C                     	;# 
   799     028C                     	;# 
   800     028D                     	;# 
   801     028D                     	;# 
   802     028E                     	;# 
   803     028F                     	;# 
   804     0290                     	;# 
   805     0291                     	;# 
   806     030C                     	;# 
   807     030C                     	;# 
   808     030D                     	;# 
   809     030E                     	;# 
   810     030F                     	;# 
   811     0310                     	;# 
   812     0310                     	;# 
   813     0311                     	;# 
   814     0312                     	;# 
   815     0313                     	;# 
   816     0314                     	;# 
   817     0314                     	;# 
   818     0315                     	;# 
   819     0316                     	;# 
   820     0318                     	;# 
   821     0318                     	;# 
   822     0319                     	;# 
   823     031A                     	;# 
   824     059C                     	;# 
   825     059C                     	;# 
   826     059D                     	;# 
   827     059D                     	;# 
   828     059E                     	;# 
   829     059F                     	;# 
   830     070C                     	;# 
   831     070D                     	;# 
   832     070E                     	;# 
   833     0716                     	;# 
   834     0717                     	;# 
   835     0718                     	;# 
   836     080C                     	;# 
   837     0811                     	;# 
   838     0813                     	;# 
   839     0814                     	;# 
   840     081A                     	;# 
   841     081A                     	;# 
   842     081B                     	;# 
   843     081C                     	;# 
   844     081C                     	;# 
   845     081D                     	;# 
   846     081E                     	;# 
   847     081F                     	;# 
   848     088E                     	;# 
   849     0890                     	;# 
   850     0891                     	;# 
   851     0892                     	;# 
   852     0893                     	;# 
   853     090C                     	;# 
   854     1E8F                     	;# 
   855     1E90                     	;# 
   856     1E91                     	;# 
   857     1E92                     	;# 
   858     1E93                     	;# 
   859     1E9C                     	;# 
   860     1EA1                     	;# 
   861     1EA2                     	;# 
   862     1EC3                     	;# 
   863     1EC5                     	;# 
   864     1EC6                     	;# 
   865     1EC7                     	;# 
   866     1ECB                     	;# 
   867     1ECB                     	;# 
   868     1ECB                     	;# 
   869     1ECC                     	;# 
   870     1ECC                     	;# 
   871     1ECC                     	;# 
   872     1F10                     	;# 
   873     1F11                     	;# 
   874     1F12                     	;# 
   875     1F14                     	;# 
   876     1F15                     	;# 
   877     1F20                     	;# 
   878     1F21                     	;# 
   879     1F22                     	;# 
   880     1F23                     	;# 
   881     1F24                     	;# 
   882     1F25                     	;# 
   883     1F38                     	;# 
   884     1F39                     	;# 
   885     1F3A                     	;# 
   886     1F3B                     	;# 
   887     1F3C                     	;# 
   888     1F3D                     	;# 
   889     1F3E                     	;# 
   890     1F3F                     	;# 
   891     1F4E                     	;# 
   892     1F4F                     	;# 
   893     1F50                     	;# 
   894     1F51                     	;# 
   895     1F52                     	;# 
   896     1F53                     	;# 
   897     1F54                     	;# 
   898     1F55                     	;# 
   899     1FE4                     	;# 
   900     1FE5                     	;# 
   901     1FE6                     	;# 
   902     1FE7                     	;# 
   903     1FE8                     	;# 
   904     1FE8                     	;# 
   905     1FE9                     	;# 
   906     1FEA                     	;# 
   907     1FEB                     	;# 
   908     1FED                     	;# 
   909     1FEE                     	;# 
   910     1FEF                     	;# 
   911     0000                     	;# 
   912     0001                     	;# 
   913     0002                     	;# 
   914     0003                     	;# 
   915     0004                     	;# 
   916     0005                     	;# 
   917     0006                     	;# 
   918     0007                     	;# 
   919     0008                     	;# 
   920     0009                     	;# 
   921     000A                     	;# 
   922     000B                     	;# 
   923     000C                     	;# 
   924     000E                     	;# 
   925     0012                     	;# 
   926     0014                     	;# 
   927     0018                     	;# 
   928     001A                     	;# 
   929     009A                     	;# 
   930     009B                     	;# 
   931     009B                     	;# 
   932     009C                     	;# 
   933     009D                     	;# 
   934     009E                     	;# 
   935     009F                     	;# 
   936     010E                     	;# 
   937     010F                     	;# 
   938     0119                     	;# 
   939     011A                     	;# 
   940     011B                     	;# 
   941     011B                     	;# 
   942     011C                     	;# 
   943     011D                     	;# 
   944     011E                     	;# 
   945     011F                     	;# 
   946     018C                     	;# 
   947     018D                     	;# 
   948     018E                     	;# 
   949     018F                     	;# 
   950     0190                     	;# 
   951     0191                     	;# 
   952     0192                     	;# 
   953     020C                     	;# 
   954     020D                     	;# 
   955     020E                     	;# 
   956     020E                     	;# 
   957     020F                     	;# 
   958     020F                     	;# 
   959     0210                     	;# 
   960     0210                     	;# 
   961     0211                     	;# 
   962     0211                     	;# 
   963     028C                     	;# 
   964     028C                     	;# 
   965     028D                     	;# 
   966     028D                     	;# 
   967     028E                     	;# 
   968     028F                     	;# 
   969     0290                     	;# 
   970     0291                     	;# 
   971     030C                     	;# 
   972     030C                     	;# 
   973     030D                     	;# 
   974     030E                     	;# 
   975     030F                     	;# 
   976     0310                     	;# 
   977     0310                     	;# 
   978     0311                     	;# 
   979     0312                     	;# 
   980     0313                     	;# 
   981     0314                     	;# 
   982     0314                     	;# 
   983     0315                     	;# 
   984     0316                     	;# 
   985     0318                     	;# 
   986     0318                     	;# 
   987     0319                     	;# 
   988     031A                     	;# 
   989     059C                     	;# 
   990     059C                     	;# 
   991     059D                     	;# 
   992     059D                     	;# 
   993     059E                     	;# 
   994     059F                     	;# 
   995     070C                     	;# 
   996     070D                     	;# 
   997     070E                     	;# 
   998     0716                     	;# 
   999     0717                     	;# 
  1000     0718                     	;# 
  1001     080C                     	;# 
  1002     0811                     	;# 
  1003     0813                     	;# 
  1004     0814                     	;# 
  1005     081A                     	;# 
  1006     081A                     	;# 
  1007     081B                     	;# 
  1008     081C                     	;# 
  1009     081C                     	;# 
  1010     081D                     	;# 
  1011     081E                     	;# 
  1012     081F                     	;# 
  1013     088E                     	;# 
  1014     0890                     	;# 
  1015     0891                     	;# 
  1016     0892                     	;# 
  1017     0893                     	;# 
  1018     090C                     	;# 
  1019     1E8F                     	;# 
  1020     1E90                     	;# 
  1021     1E91                     	;# 
  1022     1E92                     	;# 
  1023     1E93                     	;# 
  1024     1E9C                     	;# 
  1025     1EA1                     	;# 
  1026     1EA2                     	;# 
  1027     1EC3                     	;# 
  1028     1EC5                     	;# 
  1029     1EC6                     	;# 
  1030     1EC7                     	;# 
  1031     1ECB                     	;# 
  1032     1ECB                     	;# 
  1033     1ECB                     	;# 
  1034     1ECC                     	;# 
  1035     1ECC                     	;# 
  1036     1ECC                     	;# 
  1037     1F10                     	;# 
  1038     1F11                     	;# 
  1039     1F12                     	;# 
  1040     1F14                     	;# 
  1041     1F15                     	;# 
  1042     1F20                     	;# 
  1043     1F21                     	;# 
  1044     1F22                     	;# 
  1045     1F23                     	;# 
  1046     1F24                     	;# 
  1047     1F25                     	;# 
  1048     1F38                     	;# 
  1049     1F39                     	;# 
  1050     1F3A                     	;# 
  1051     1F3B                     	;# 
  1052     1F3C                     	;# 
  1053     1F3D                     	;# 
  1054     1F3E                     	;# 
  1055     1F3F                     	;# 
  1056     1F4E                     	;# 
  1057     1F4F                     	;# 
  1058     1F50                     	;# 
  1059     1F51                     	;# 
  1060     1F52                     	;# 
  1061     1F53                     	;# 
  1062     1F54                     	;# 
  1063     1F55                     	;# 
  1064     1FE4                     	;# 
  1065     1FE5                     	;# 
  1066     1FE6                     	;# 
  1067     1FE7                     	;# 
  1068     1FE8                     	;# 
  1069     1FE8                     	;# 
  1070     1FE9                     	;# 
  1071     1FEA                     	;# 
  1072     1FEB                     	;# 
  1073     1FED                     	;# 
  1074     1FEE                     	;# 
  1075     1FEF                     	;# 
  1076     0000                     	;# 
  1077     0001                     	;# 
  1078     0002                     	;# 
  1079     0003                     	;# 
  1080     0004                     	;# 
  1081     0005                     	;# 
  1082     0006                     	;# 
  1083     0007                     	;# 
  1084     0008                     	;# 
  1085     0009                     	;# 
  1086     000A                     	;# 
  1087     000B                     	;# 
  1088     000C                     	;# 
  1089     000E                     	;# 
  1090     0012                     	;# 
  1091     0014                     	;# 
  1092     0018                     	;# 
  1093     001A                     	;# 
  1094     009A                     	;# 
  1095     009B                     	;# 
  1096     009B                     	;# 
  1097     009C                     	;# 
  1098     009D                     	;# 
  1099     009E                     	;# 
  1100     009F                     	;# 
  1101     010E                     	;# 
  1102     010F                     	;# 
  1103     0119                     	;# 
  1104     011A                     	;# 
  1105     011B                     	;# 
  1106     011B                     	;# 
  1107     011C                     	;# 
  1108     011D                     	;# 
  1109     011E                     	;# 
  1110     011F                     	;# 
  1111     018C                     	;# 
  1112     018D                     	;# 
  1113     018E                     	;# 
  1114     018F                     	;# 
  1115     0190                     	;# 
  1116     0191                     	;# 
  1117     0192                     	;# 
  1118     020C                     	;# 
  1119     020D                     	;# 
  1120     020E                     	;# 
  1121     020E                     	;# 
  1122     020F                     	;# 
  1123     020F                     	;# 
  1124     0210                     	;# 
  1125     0210                     	;# 
  1126     0211                     	;# 
  1127     0211                     	;# 
  1128     028C                     	;# 
  1129     028C                     	;# 
  1130     028D                     	;# 
  1131     028D                     	;# 
  1132     028E                     	;# 
  1133     028F                     	;# 
  1134     0290                     	;# 
  1135     0291                     	;# 
  1136     030C                     	;# 
  1137     030C                     	;# 
  1138     030D                     	;# 
  1139     030E                     	;# 
  1140     030F                     	;# 
  1141     0310                     	;# 
  1142     0310                     	;# 
  1143     0311                     	;# 
  1144     0312                     	;# 
  1145     0313                     	;# 
  1146     0314                     	;# 
  1147     0314                     	;# 
  1148     0315                     	;# 
  1149     0316                     	;# 
  1150     0318                     	;# 
  1151     0318                     	;# 
  1152     0319                     	;# 
  1153     031A                     	;# 
  1154     059C                     	;# 
  1155     059C                     	;# 
  1156     059D                     	;# 
  1157     059D                     	;# 
  1158     059E                     	;# 
  1159     059F                     	;# 
  1160     070C                     	;# 
  1161     070D                     	;# 
  1162     070E                     	;# 
  1163     0716                     	;# 
  1164     0717                     	;# 
  1165     0718                     	;# 
  1166     080C                     	;# 
  1167     0811                     	;# 
  1168     0813                     	;# 
  1169     0814                     	;# 
  1170     081A                     	;# 
  1171     081A                     	;# 
  1172     081B                     	;# 
  1173     081C                     	;# 
  1174     081C                     	;# 
  1175     081D                     	;# 
  1176     081E                     	;# 
  1177     081F                     	;# 
  1178     088E                     	;# 
  1179     0890                     	;# 
  1180     0891                     	;# 
  1181     0892                     	;# 
  1182     0893                     	;# 
  1183     090C                     	;# 
  1184     1E8F                     	;# 
  1185     1E90                     	;# 
  1186     1E91                     	;# 
  1187     1E92                     	;# 
  1188     1E93                     	;# 
  1189     1E9C                     	;# 
  1190     1EA1                     	;# 
  1191     1EA2                     	;# 
  1192     1EC3                     	;# 
  1193     1EC5                     	;# 
  1194     1EC6                     	;# 
  1195     1EC7                     	;# 
  1196     1ECB                     	;# 
  1197     1ECB                     	;# 
  1198     1ECB                     	;# 
  1199     1ECC                     	;# 
  1200     1ECC                     	;# 
  1201     1ECC                     	;# 
  1202     1F10                     	;# 
  1203     1F11                     	;# 
  1204     1F12                     	;# 
  1205     1F14                     	;# 
  1206     1F15                     	;# 
  1207     1F20                     	;# 
  1208     1F21                     	;# 
  1209     1F22                     	;# 
  1210     1F23                     	;# 
  1211     1F24                     	;# 
  1212     1F25                     	;# 
  1213     1F38                     	;# 
  1214     1F39                     	;# 
  1215     1F3A                     	;# 
  1216     1F3B                     	;# 
  1217     1F3C                     	;# 
  1218     1F3D                     	;# 
  1219     1F3E                     	;# 
  1220     1F3F                     	;# 
  1221     1F4E                     	;# 
  1222     1F4F                     	;# 
  1223     1F50                     	;# 
  1224     1F51                     	;# 
  1225     1F52                     	;# 
  1226     1F53                     	;# 
  1227     1F54                     	;# 
  1228     1F55                     	;# 
  1229     1FE4                     	;# 
  1230     1FE5                     	;# 
  1231     1FE6                     	;# 
  1232     1FE7                     	;# 
  1233     1FE8                     	;# 
  1234     1FE8                     	;# 
  1235     1FE9                     	;# 
  1236     1FEA                     	;# 
  1237     1FEB                     	;# 
  1238     1FED                     	;# 
  1239     1FEE                     	;# 
  1240     1FEF                     	;# 
  1241     0000                     	;# 
  1242     0001                     	;# 
  1243     0002                     	;# 
  1244     0003                     	;# 
  1245     0004                     	;# 
  1246     0005                     	;# 
  1247     0006                     	;# 
  1248     0007                     	;# 
  1249     0008                     	;# 
  1250     0009                     	;# 
  1251     000A                     	;# 
  1252     000B                     	;# 
  1253     000C                     	;# 
  1254     000E                     	;# 
  1255     0012                     	;# 
  1256     0014                     	;# 
  1257     0018                     	;# 
  1258     001A                     	;# 
  1259     009A                     	;# 
  1260     009B                     	;# 
  1261     009B                     	;# 
  1262     009C                     	;# 
  1263     009D                     	;# 
  1264     009E                     	;# 
  1265     009F                     	;# 
  1266     010E                     	;# 
  1267     010F                     	;# 
  1268     0119                     	;# 
  1269     011A                     	;# 
  1270     011B                     	;# 
  1271     011B                     	;# 
  1272     011C                     	;# 
  1273     011D                     	;# 
  1274     011E                     	;# 
  1275     011F                     	;# 
  1276     018C                     	;# 
  1277     018D                     	;# 
  1278     018E                     	;# 
  1279     018F                     	;# 
  1280     0190                     	;# 
  1281     0191                     	;# 
  1282     0192                     	;# 
  1283     020C                     	;# 
  1284     020D                     	;# 
  1285     020E                     	;# 
  1286     020E                     	;# 
  1287     020F                     	;# 
  1288     020F                     	;# 
  1289     0210                     	;# 
  1290     0210                     	;# 
  1291     0211                     	;# 
  1292     0211                     	;# 
  1293     028C                     	;# 
  1294     028C                     	;# 
  1295     028D                     	;# 
  1296     028D                     	;# 
  1297     028E                     	;# 
  1298     028F                     	;# 
  1299     0290                     	;# 
  1300     0291                     	;# 
  1301     030C                     	;# 
  1302     030C                     	;# 
  1303     030D                     	;# 
  1304     030E                     	;# 
  1305     030F                     	;# 
  1306     0310                     	;# 
  1307     0310                     	;# 
  1308     0311                     	;# 
  1309     0312                     	;# 
  1310     0313                     	;# 
  1311     0314                     	;# 
  1312     0314                     	;# 
  1313     0315                     	;# 
  1314     0316                     	;# 
  1315     0318                     	;# 
  1316     0318                     	;# 
  1317     0319                     	;# 
  1318     031A                     	;# 
  1319     059C                     	;# 
  1320     059C                     	;# 
  1321     059D                     	;# 
  1322     059D                     	;# 
  1323     059E                     	;# 
  1324     059F                     	;# 
  1325     070C                     	;# 
  1326     070D                     	;# 
  1327     070E                     	;# 
  1328     0716                     	;# 
  1329     0717                     	;# 
  1330     0718                     	;# 
  1331     080C                     	;# 
  1332     0811                     	;# 
  1333     0813                     	;# 
  1334     0814                     	;# 
  1335     081A                     	;# 
  1336     081A                     	;# 
  1337     081B                     	;# 
  1338     081C                     	;# 
  1339     081C                     	;# 
  1340     081D                     	;# 
  1341     081E                     	;# 
  1342     081F                     	;# 
  1343     088E                     	;# 
  1344     0890                     	;# 
  1345     0891                     	;# 
  1346     0892                     	;# 
  1347     0893                     	;# 
  1348     090C                     	;# 
  1349     1E8F                     	;# 
  1350     1E90                     	;# 
  1351     1E91                     	;# 
  1352     1E92                     	;# 
  1353     1E93                     	;# 
  1354     1E9C                     	;# 
  1355     1EA1                     	;# 
  1356     1EA2                     	;# 
  1357     1EC3                     	;# 
  1358     1EC5                     	;# 
  1359     1EC6                     	;# 
  1360     1EC7                     	;# 
  1361     1ECB                     	;# 
  1362     1ECB                     	;# 
  1363     1ECB                     	;# 
  1364     1ECC                     	;# 
  1365     1ECC                     	;# 
  1366     1ECC                     	;# 
  1367     1F10                     	;# 
  1368     1F11                     	;# 
  1369     1F12                     	;# 
  1370     1F14                     	;# 
  1371     1F15                     	;# 
  1372     1F20                     	;# 
  1373     1F21                     	;# 
  1374     1F22                     	;# 
  1375     1F23                     	;# 
  1376     1F24                     	;# 
  1377     1F25                     	;# 
  1378     1F38                     	;# 
  1379     1F39                     	;# 
  1380     1F3A                     	;# 
  1381     1F3B                     	;# 
  1382     1F3C                     	;# 
  1383     1F3D                     	;# 
  1384     1F3E                     	;# 
  1385     1F3F                     	;# 
  1386     1F4E                     	;# 
  1387     1F4F                     	;# 
  1388     1F50                     	;# 
  1389     1F51                     	;# 
  1390     1F52                     	;# 
  1391     1F53                     	;# 
  1392     1F54                     	;# 
  1393     1F55                     	;# 
  1394     1FE4                     	;# 
  1395     1FE5                     	;# 
  1396     1FE6                     	;# 
  1397     1FE7                     	;# 
  1398     1FE8                     	;# 
  1399     1FE8                     	;# 
  1400     1FE9                     	;# 
  1401     1FEA                     	;# 
  1402     1FEB                     	;# 
  1403     1FED                     	;# 
  1404     1FEE                     	;# 
  1405     1FEF                     	;# 
  1406     0000                     	;# 
  1407     0001                     	;# 
  1408     0002                     	;# 
  1409     0003                     	;# 
  1410     0004                     	;# 
  1411     0005                     	;# 
  1412     0006                     	;# 
  1413     0007                     	;# 
  1414     0008                     	;# 
  1415     0009                     	;# 
  1416     000A                     	;# 
  1417     000B                     	;# 
  1418     000C                     	;# 
  1419     000E                     	;# 
  1420     0012                     	;# 
  1421     0014                     	;# 
  1422     0018                     	;# 
  1423     001A                     	;# 
  1424     009A                     	;# 
  1425     009B                     	;# 
  1426     009B                     	;# 
  1427     009C                     	;# 
  1428     009D                     	;# 
  1429     009E                     	;# 
  1430     009F                     	;# 
  1431     010E                     	;# 
  1432     010F                     	;# 
  1433     0119                     	;# 
  1434     011A                     	;# 
  1435     011B                     	;# 
  1436     011B                     	;# 
  1437     011C                     	;# 
  1438     011D                     	;# 
  1439     011E                     	;# 
  1440     011F                     	;# 
  1441     018C                     	;# 
  1442     018D                     	;# 
  1443     018E                     	;# 
  1444     018F                     	;# 
  1445     0190                     	;# 
  1446     0191                     	;# 
  1447     0192                     	;# 
  1448     020C                     	;# 
  1449     020D                     	;# 
  1450     020E                     	;# 
  1451     020E                     	;# 
  1452     020F                     	;# 
  1453     020F                     	;# 
  1454     0210                     	;# 
  1455     0210                     	;# 
  1456     0211                     	;# 
  1457     0211                     	;# 
  1458     028C                     	;# 
  1459     028C                     	;# 
  1460     028D                     	;# 
  1461     028D                     	;# 
  1462     028E                     	;# 
  1463     028F                     	;# 
  1464     0290                     	;# 
  1465     0291                     	;# 
  1466     030C                     	;# 
  1467     030C                     	;# 
  1468     030D                     	;# 
  1469     030E                     	;# 
  1470     030F                     	;# 
  1471     0310                     	;# 
  1472     0310                     	;# 
  1473     0311                     	;# 
  1474     0312                     	;# 
  1475     0313                     	;# 
  1476     0314                     	;# 
  1477     0314                     	;# 
  1478     0315                     	;# 
  1479     0316                     	;# 
  1480     0318                     	;# 
  1481     0318                     	;# 
  1482     0319                     	;# 
  1483     031A                     	;# 
  1484     059C                     	;# 
  1485     059C                     	;# 
  1486     059D                     	;# 
  1487     059D                     	;# 
  1488     059E                     	;# 
  1489     059F                     	;# 
  1490     070C                     	;# 
  1491     070D                     	;# 
  1492     070E                     	;# 
  1493     0716                     	;# 
  1494     0717                     	;# 
  1495     0718                     	;# 
  1496     080C                     	;# 
  1497     0811                     	;# 
  1498     0813                     	;# 
  1499     0814                     	;# 
  1500     081A                     	;# 
  1501     081A                     	;# 
  1502     081B                     	;# 
  1503     081C                     	;# 
  1504     081C                     	;# 
  1505     081D                     	;# 
  1506     081E                     	;# 
  1507     081F                     	;# 
  1508     088E                     	;# 
  1509     0890                     	;# 
  1510     0891                     	;# 
  1511     0892                     	;# 
  1512     0893                     	;# 
  1513     090C                     	;# 
  1514     1E8F                     	;# 
  1515     1E90                     	;# 
  1516     1E91                     	;# 
  1517     1E92                     	;# 
  1518     1E93                     	;# 
  1519     1E9C                     	;# 
  1520     1EA1                     	;# 
  1521     1EA2                     	;# 
  1522     1EC3                     	;# 
  1523     1EC5                     	;# 
  1524     1EC6                     	;# 
  1525     1EC7                     	;# 
  1526     1ECB                     	;# 
  1527     1ECB                     	;# 
  1528     1ECB                     	;# 
  1529     1ECC                     	;# 
  1530     1ECC                     	;# 
  1531     1ECC                     	;# 
  1532     1F10                     	;# 
  1533     1F11                     	;# 
  1534     1F12                     	;# 
  1535     1F14                     	;# 
  1536     1F15                     	;# 
  1537     1F20                     	;# 
  1538     1F21                     	;# 
  1539     1F22                     	;# 
  1540     1F23                     	;# 
  1541     1F24                     	;# 
  1542     1F25                     	;# 
  1543     1F38                     	;# 
  1544     1F39                     	;# 
  1545     1F3A                     	;# 
  1546     1F3B                     	;# 
  1547     1F3C                     	;# 
  1548     1F3D                     	;# 
  1549     1F3E                     	;# 
  1550     1F3F                     	;# 
  1551     1F4E                     	;# 
  1552     1F4F                     	;# 
  1553     1F50                     	;# 
  1554     1F51                     	;# 
  1555     1F52                     	;# 
  1556     1F53                     	;# 
  1557     1F54                     	;# 
  1558     1F55                     	;# 
  1559     1FE4                     	;# 
  1560     1FE5                     	;# 
  1561     1FE6                     	;# 
  1562     1FE7                     	;# 
  1563     1FE8                     	;# 
  1564     1FE8                     	;# 
  1565     1FE9                     	;# 
  1566     1FEA                     	;# 
  1567     1FEB                     	;# 
  1568     1FED                     	;# 
  1569     1FEE                     	;# 
  1570     1FEF                     	;# 
  1571                           
  1572 ;; Function _I2C1_SlaveDefWrColInterruptHandler is unused but had its address taken
  1573     0000                     
  1574 ;; Function _I2C1_SlaveDefBusColInterruptHandler is unused but had its address taken
  1575     0040                     _default_in_flash_absaddr	set	64
  1576     0040                     _default_in_flash_absaddr	set	64
  1577                           
  1578                           	psect	_default_in_flash_text
  1579     0040                     __p_default_in_flash_text:
  1580     0040                     _default_in_flash:
  1581     0040  3401               	retlw	1
  1582     0041  3400               	retlw	0
  1583     0042  3401               	retlw	1
  1584     0043  3400               	retlw	0
  1585     0044  3401               	retlw	1
  1586     0045  3400               	retlw	0
  1587     0046  3401               	retlw	1
  1588     0047  3400               	retlw	0
  1589     0048  3401               	retlw	1
  1590     0049  3400               	retlw	0
  1591     004A  3401               	retlw	1
  1592     004B  3400               	retlw	0
  1593     004C  3402               	retlw	2
  1594     004D  3400               	retlw	0
  1595     004E  3402               	retlw	2
  1596     004F  3400               	retlw	0
  1597     0050  3402               	retlw	2
  1598     0051  3400               	retlw	0
  1599     0052  3402               	retlw	2
  1600     0053  3400               	retlw	0
  1601     0054  3402               	retlw	2
  1602     0055  3400               	retlw	0
  1603     0056  3402               	retlw	2
  1604     0057  3400               	retlw	0
  1605     0058  3403               	retlw	3
  1606     0059  3400               	retlw	0
  1607     005A  3403               	retlw	3
  1608     005B  3400               	retlw	0
  1609     005C  3403               	retlw	3
  1610     005D  3400               	retlw	0
  1611     005E  3403               	retlw	3
  1612     005F  3400               	retlw	0
  1613     0060  3403               	retlw	3
  1614     0061  3400               	retlw	0
  1615     0062  3403               	retlw	3
  1616     0063  3400               	retlw	0
  1617     0064  3404               	retlw	4
  1618     0065  3400               	retlw	0
  1619     0066  3404               	retlw	4
  1620     0067  3400               	retlw	0
  1621     0068  3404               	retlw	4
  1622     0069  3400               	retlw	0
  1623     006A  3404               	retlw	4
  1624     006B  3400               	retlw	0
  1625     006C  3404               	retlw	4
  1626     006D  3400               	retlw	0
  1627     006E  3404               	retlw	4
  1628     006F  3400               	retlw	0
  1629     0070  3405               	retlw	5
  1630     0071  3400               	retlw	0
  1631     0072  3405               	retlw	5
  1632     0073  3400               	retlw	0
  1633     0074  3405               	retlw	5
  1634     0075  3400               	retlw	0
  1635     0076  3405               	retlw	5
  1636     0077  3400               	retlw	0
  1637     0078  3405               	retlw	5
  1638     0079  3400               	retlw	0
  1639     007A  3405               	retlw	5
  1640     007B  3400               	retlw	0
  1641     007C  3406               	retlw	6
  1642     007D  3400               	retlw	0
  1643     007E  3406               	retlw	6
  1644     007F  3400               	retlw	0
  1645     0080  3406               	retlw	6
  1646     0081  3400               	retlw	0
  1647     0082  3406               	retlw	6
  1648     0083  3400               	retlw	0
  1649     0084  3406               	retlw	6
  1650     0085  3400               	retlw	0
  1651     0086  3406               	retlw	6
  1652     0087  3400               	retlw	0
  1653     0088  3407               	retlw	7
  1654     0089  3400               	retlw	0
  1655     008A  3407               	retlw	7
  1656     008B  3400               	retlw	0
  1657     008C  3407               	retlw	7
  1658     008D  3400               	retlw	0
  1659     008E  3407               	retlw	7
  1660     008F  3400               	retlw	0
  1661     0090  3407               	retlw	7
  1662     0091  3400               	retlw	0
  1663     0092  3407               	retlw	7
  1664     0093  3400               	retlw	0
  1665     0094  3408               	retlw	8
  1666     0095  3400               	retlw	0
  1667     0096  3408               	retlw	8
  1668     0097  3400               	retlw	0
  1669     0098  3408               	retlw	8
  1670     0099  3400               	retlw	0
  1671     009A  3408               	retlw	8
  1672     009B  3400               	retlw	0
  1673     009C  3408               	retlw	8
  1674     009D  3400               	retlw	0
  1675     009E  3408               	retlw	8
  1676     009F  3400               	retlw	0
  1677     00A0  3409               	retlw	9
  1678     00A1  3400               	retlw	0
  1679     00A2  3409               	retlw	9
  1680     00A3  3400               	retlw	0
  1681     00A4  3409               	retlw	9
  1682     00A5  3400               	retlw	0
  1683     00A6  3409               	retlw	9
  1684     00A7  3400               	retlw	0
  1685     00A8  3409               	retlw	9
  1686     00A9  3400               	retlw	0
  1687     00AA  3409               	retlw	9
  1688     00AB  3400               	retlw	0
  1689     00AC  340A               	retlw	10
  1690     00AD  3400               	retlw	0
  1691     00AE  340A               	retlw	10
  1692     00AF  3400               	retlw	0
  1693     00B0  340A               	retlw	10
  1694     00B1  3400               	retlw	0
  1695     00B2  340A               	retlw	10
  1696     00B3  3400               	retlw	0
  1697     00B4  340A               	retlw	10
  1698     00B5  3400               	retlw	0
  1699     00B6  340A               	retlw	10
  1700     00B7  3400               	retlw	0
  1701     00B8  340B               	retlw	11
  1702     00B9  3400               	retlw	0
  1703     00BA  340B               	retlw	11
  1704     00BB  3400               	retlw	0
  1705     00BC  340B               	retlw	11
  1706     00BD  3400               	retlw	0
  1707     00BE  340B               	retlw	11
  1708     00BF  3400               	retlw	0
  1709     00C0  340B               	retlw	11
  1710     00C1  3400               	retlw	0
  1711     00C2  340B               	retlw	11
  1712     00C3  3400               	retlw	0
  1713     00C4  340C               	retlw	12
  1714     00C5  3400               	retlw	0
  1715     00C6  340C               	retlw	12
  1716     00C7  3400               	retlw	0
  1717     00C8  340C               	retlw	12
  1718     00C9  3400               	retlw	0
  1719     00CA  340C               	retlw	12
  1720     00CB  3400               	retlw	0
  1721     00CC  340C               	retlw	12
  1722     00CD  3400               	retlw	0
  1723     00CE  340C               	retlw	12
  1724     00CF  3400               	retlw	0
  1725     00D0                     __end_of_default_in_flash:
  1726                           
  1727                           	psect	nvBANK0
  1728     004A                     __pnvBANK0:
  1729     004A                     _TMR0_InterruptHandler:
  1730     004A                     	ds	2
  1731     0018                     _LATAbits	set	24
  1732     000B                     _INTCONbits	set	11
  1733     0014                     _TRISC	set	20
  1734     0012                     _TRISA	set	18
  1735     001A                     _LATC	set	26
  1736     0018                     _LATA	set	24
  1737     000C                     _PORTA	set	12
  1738     000E                     _PORTC	set	14
  1739     018C                     _SSP1BUF	set	396
  1740     0191                     _SSP1CON2bits	set	401
  1741     018F                     _SSP1STATbits	set	399
  1742     018E                     _SSP1MSK	set	398
  1743     018D                     _SSP1ADD	set	397
  1744     0190                     _SSP1CON1bits	set	400
  1745     0191                     _SSP1CON2	set	401
  1746     0190                     _SSP1CON1	set	400
  1747     018F                     _SSP1STAT	set	399
  1748     059E                     _T0CON0bits	set	1438
  1749     059E                     _T0CON0	set	1438
  1750     059C                     _TMR0L	set	1436
  1751     059D                     _TMR0H	set	1437
  1752     059F                     _T0CON1	set	1439
  1753     070D                     _PIR1bits	set	1805
  1754     0717                     _PIE1bits	set	1815
  1755     070C                     _PIR0bits	set	1804
  1756     0716                     _PIE0bits	set	1814
  1757     080C                     _WDTCON	set	2060
  1758     081F                     _NVMCON2	set	2079
  1759     081C                     _NVMDATL	set	2076
  1760     081D                     _NVMDATH	set	2077
  1761     081E                     _NVMCON1bits	set	2078
  1762     081B                     _NVMADRH	set	2075
  1763     081A                     _NVMADRL	set	2074
  1764     0892                     _OSCTUNE	set	2194
  1765     0893                     _OSCFRQ	set	2195
  1766     0891                     _OSCEN	set	2193
  1767     1EC6                     _SSP1DATPPS	set	7878
  1768     1EC5                     _SSP1CLKPPS	set	7877
  1769     1F21                     _RC1PPS	set	7969
  1770     1F20                     _RC0PPS	set	7968
  1771     1F52                     _INLVLC	set	8018
  1772     1F3C                     _INLVLA	set	7996
  1773     1F51                     _SLRCONC	set	8017
  1774     1F3B                     _SLRCONA	set	7995
  1775     1F50                     _ODCONC	set	8016
  1776     1F3A                     _ODCONA	set	7994
  1777     1F4F                     _WPUC	set	8015
  1778     1F39                     _WPUA	set	7993
  1779     1F38                     _ANSELA	set	7992
  1780     1F4E                     _ANSELC	set	8014
  1781                           
  1782                           	psect	cinit
  1783     00D0                     start_initialization:	
  1784                           ; #config settings
  1785                           
  1786     00D0                     __initialization:
  1787                           
  1788                           ; Clear objects allocated to COMMON
  1789     00D0  01F8               	clrf	__pbssCOMMON& (0+127)
  1790     00D1  01F9               	clrf	(__pbssCOMMON+1)& (0+127)
  1791     00D2  01FA               	clrf	(__pbssCOMMON+2)& (0+127)
  1792                           
  1793                           ; Clear objects allocated to BANK0
  1794     00D3  3037               	movlw	low __pbssBANK0
  1795     00D4  0084               	movwf	4
  1796     00D5  3000               	movlw	high __pbssBANK0
  1797     00D6  0085               	movwf	5
  1798     00D7  3013               	movlw	19
  1799     00D8  3184  246E  3180   	fcall	clear_ram0
  1800                           
  1801                           ; Clear objects allocated to BANK1
  1802     00DB  30A0               	movlw	low __pbssBANK1
  1803     00DC  0084               	movwf	4
  1804     00DD  3000               	movlw	high __pbssBANK1
  1805     00DE  0085               	movwf	5
  1806     00DF  3040               	movlw	64
  1807     00E0  3184  246E  3180   	fcall	clear_ram0
  1808     00E3                     end_of_initialization:	
  1809                           ;End of C runtime variable initialization code
  1810                           
  1811     00E3                     __end_of__initialization:
  1812     00E3  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  1813     00E4  0140               	movlb	0
  1814     00E5  2B70               	ljmp	_main	;jump to C main() function
  1815                           
  1816                           	psect	bssCOMMON
  1817     0078                     __pbssCOMMON:
  1818     0078                     _i2cReadCnt:
  1819     0078                     	ds	1
  1820     0079                     _i2c1WrData:
  1821     0079                     	ds	1
  1822     007A                     _LED_timer:
  1823     007A                     	ds	1
  1824                           
  1825                           	psect	bssBANK0
  1826     0037                     __pbssBANK0:
  1827     0037                     _i2cDataRead:
  1828     0037                     	ds	3
  1829     003A                     _I2C1_SlaveWrColInterruptHandler:
  1830     003A                     	ds	2
  1831     003C                     _I2C1_SlaveBusColInterruptHandler:
  1832     003C                     	ds	2
  1833     003E                     _I2C1_SlaveAddrInterruptHandler:
  1834     003E                     	ds	2
  1835     0040                     _I2C1_SlaveWrInterruptHandler:
  1836     0040                     	ds	2
  1837     0042                     _I2C1_SlaveRdInterruptHandler:
  1838     0042                     	ds	2
  1839     0044                     _MSSP1_InterruptHandler:
  1840     0044                     	ds	2
  1841     0046                     _i2c1SlaveState:
  1842     0046                     	ds	1
  1843     0047                     _i2c1SlaveAddr:
  1844     0047                     	ds	1
  1845     0048                     _i2c1RdData:
  1846     0048                     	ds	1
  1847     0049                     _error_flag:
  1848     0049                     	ds	1
  1849                           
  1850                           	psect	bssBANK1
  1851     00A0                     __pbssBANK1:
  1852     00A0                     memory_initialize@ramBuff:
  1853     00A0                     	ds	64
  1854                           
  1855                           	psect	clrtext
  1856     046E                     clear_ram0:	
  1857                           ;	Called with FSR0 containing the base address, and
  1858                           ;	WREG with the size to clear
  1859                           
  1860     046E  0064               	clrwdt	;clear the watchdog before getting into this loop
  1861     046F                     clrloop0:
  1862     046F  0180               	clrf	0	;clear RAM location pointed to by FSR
  1863     0470  3101               	addfsr 0,1
  1864     0471  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  1865     0472  2C6F               	goto	clrloop0	;have we reached the end yet?
  1866     0473  3400               	retlw	0	;all done for this memory range, return
  1867                           
  1868                           	psect	cstackCOMMON
  1869     0070                     __pcstackCOMMON:
  1870     0070                     ?_TMR0_ISR:
  1871     0070                     ?_I2C1_Isr:	
  1872                           ; 1 bytes @ 0x0
  1873                           
  1874     0070                     ?_I2C1_SlaveDefWrInterruptHandler:	
  1875                           ; 1 bytes @ 0x0
  1876                           
  1877     0070                     ?_I2C1_SlaveDefRdInterruptHandler:	
  1878                           ; 1 bytes @ 0x0
  1879                           
  1880     0070                     ??_I2C1_SlaveDefRdInterruptHandler:	
  1881                           ; 1 bytes @ 0x0
  1882                           
  1883     0070                     ?_I2C1_SlaveDefAddrInterruptHandler:	
  1884                           ; 1 bytes @ 0x0
  1885                           
  1886     0070                     ??_I2C1_SlaveDefAddrInterruptHandler:	
  1887                           ; 1 bytes @ 0x0
  1888                           
  1889     0070                     ?_I2C1_SlaveGetRxData:	
  1890                           ; 1 bytes @ 0x0
  1891                           
  1892     0070                     ??_I2C1_SlaveGetRxData:	
  1893                           ; 1 bytes @ 0x0
  1894                           
  1895     0070                     ?_I2C1_SlaveSendTxData:	
  1896                           ; 1 bytes @ 0x0
  1897                           
  1898     0070                     ??_I2C1_SlaveSendTxData:	
  1899                           ; 1 bytes @ 0x0
  1900                           
  1901     0070                     ?_I2C1_SlaveIsRead:	
  1902                           ; 1 bytes @ 0x0
  1903                           
  1904     0070                     ??_I2C1_SlaveIsRead:	
  1905                           ; 1 bytes @ 0x0
  1906                           
  1907     0070                     ?_I2C1_SlaveClearIrq:	
  1908                           ; 1 bytes @ 0x0
  1909                           
  1910     0070                     ??_I2C1_SlaveClearIrq:	
  1911                           ; 1 bytes @ 0x0
  1912                           
  1913     0070                     ?_I2C1_SlaveIsAddr:	
  1914                           ; 1 bytes @ 0x0
  1915                           
  1916     0070                     ??_I2C1_SlaveIsAddr:	
  1917                           ; 1 bytes @ 0x0
  1918                           
  1919     0070                     ?_I2C1_SlaveAddrCallBack:	
  1920                           ; 1 bytes @ 0x0
  1921                           
  1922     0070                     ??_I2C1_SlaveAddrCallBack:	
  1923                           ; 1 bytes @ 0x0
  1924                           
  1925     0070                     ?_I2C1_SlaveIsTxBufEmpty:	
  1926                           ; 1 bytes @ 0x0
  1927                           
  1928     0070                     ??_I2C1_SlaveIsTxBufEmpty:	
  1929                           ; 1 bytes @ 0x0
  1930                           
  1931     0070                     ?_I2C1_SlaveWrCallBack:	
  1932                           ; 1 bytes @ 0x0
  1933                           
  1934     0070                     ?_I2C1_SlaveIsRxBufFull:	
  1935                           ; 1 bytes @ 0x0
  1936                           
  1937     0070                     ??_I2C1_SlaveIsRxBufFull:	
  1938                           ; 1 bytes @ 0x0
  1939                           
  1940     0070                     ?_I2C1_SlaveRdCallBack:	
  1941                           ; 1 bytes @ 0x0
  1942                           
  1943     0070                     ??_I2C1_SlaveRdCallBack:	
  1944                           ; 1 bytes @ 0x0
  1945                           
  1946     0070                     ?_I2C1_SlaveReleaseClock:	
  1947                           ; 1 bytes @ 0x0
  1948                           
  1949     0070                     ??_I2C1_SlaveReleaseClock:	
  1950                           ; 1 bytes @ 0x0
  1951                           
  1952     0070                     ?_TMR0_DefaultInterruptHandler:	
  1953                           ; 1 bytes @ 0x0
  1954                           
  1955     0070                     ??_TMR0_DefaultInterruptHandler:	
  1956                           ; 1 bytes @ 0x0
  1957                           
  1958     0070                     ?_OSCILLATOR_Initialize:	
  1959                           ; 1 bytes @ 0x0
  1960                           
  1961     0070                     ?_WDT_Initialize:	
  1962                           ; 1 bytes @ 0x0
  1963                           
  1964     0070                     ?_memory_initialize:	
  1965                           ; 1 bytes @ 0x0
  1966                           
  1967     0070                     ?_getSensorBoardType:	
  1968                           ; 1 bytes @ 0x0
  1969                           
  1970     0070                     ?_SensorBoardType_validation:	
  1971                           ; 1 bytes @ 0x0
  1972                           
  1973     0070                     ?_error_signal:	
  1974                           ; 1 bytes @ 0x0
  1975                           
  1976     0070                     ?_PIN_MANAGER_Initialize:	
  1977                           ; 1 bytes @ 0x0
  1978                           
  1979     0070                     ?_INTERRUPT_InterruptManager:	
  1980                           ; 1 bytes @ 0x0
  1981                           
  1982     0070                     ?_I2C1_Initialize:	
  1983                           ; 1 bytes @ 0x0
  1984                           
  1985     0070                     ?_TMR0_Initialize:	
  1986                           ; 1 bytes @ 0x0
  1987                           
  1988     0070                     ?_SYSTEM_Initialize:	
  1989                           ; 1 bytes @ 0x0
  1990                           
  1991     0070                     ?_main:	
  1992                           ; 1 bytes @ 0x0
  1993                           
  1994     0070                     I2C1_SlaveSendTxData@data:	
  1995                           ; 1 bytes @ 0x0
  1996                           
  1997                           
  1998                           ; 1 bytes @ 0x0
  1999     0070                     	ds	1
  2000     0071                     ??_TMR0_ISR:
  2001     0071                     ??_I2C1_Isr:	
  2002                           ; 1 bytes @ 0x1
  2003                           
  2004     0071                     ??_I2C1_SlaveDefWrInterruptHandler:	
  2005                           ; 1 bytes @ 0x1
  2006                           
  2007     0071                     ??_I2C1_SlaveWrCallBack:	
  2008                           ; 1 bytes @ 0x1
  2009                           
  2010                           
  2011                           ; 1 bytes @ 0x1
  2012     0071                     	ds	2
  2013     0073                     ?_TMR0_SetInterruptHandler:
  2014     0073                     ?_FLASH_EraseBlock:	
  2015                           ; 1 bytes @ 0x3
  2016                           
  2017     0073                     ??_OSCILLATOR_Initialize:	
  2018                           ; 1 bytes @ 0x3
  2019                           
  2020     0073                     ??_WDT_Initialize:	
  2021                           ; 1 bytes @ 0x3
  2022                           
  2023     0073                     ??_getSensorBoardType:	
  2024                           ; 1 bytes @ 0x3
  2025                           
  2026     0073                     ??_SensorBoardType_validation:	
  2027                           ; 1 bytes @ 0x3
  2028                           
  2029     0073                     ??_error_signal:	
  2030                           ; 1 bytes @ 0x3
  2031                           
  2032     0073                     ??_PIN_MANAGER_Initialize:	
  2033                           ; 1 bytes @ 0x3
  2034                           
  2035     0073                     ??_INTERRUPT_InterruptManager:	
  2036                           ; 1 bytes @ 0x3
  2037                           
  2038     0073                     ??_I2C1_Initialize:	
  2039                           ; 1 bytes @ 0x3
  2040                           
  2041     0073                     ?_FLASH_ReadWord:	
  2042                           ; 1 bytes @ 0x3
  2043                           
  2044     0073                     ?___wmul:	
  2045                           ; 2 bytes @ 0x3
  2046                           
  2047     0073                     SensorBoardType_validation@SensorBoardType:	
  2048                           ; 2 bytes @ 0x3
  2049                           
  2050     0073                     TMR0_SetInterruptHandler@InterruptHandler:	
  2051                           ; 1 bytes @ 0x3
  2052                           
  2053     0073                     FLASH_ReadWord@flashAddr:	
  2054                           ; 2 bytes @ 0x3
  2055                           
  2056     0073                     FLASH_EraseBlock@startAddr:	
  2057                           ; 2 bytes @ 0x3
  2058                           
  2059     0073                     ___wmul@multiplier:	
  2060                           ; 2 bytes @ 0x3
  2061                           
  2062                           
  2063                           ; 2 bytes @ 0x3
  2064     0073                     	ds	2
  2065     0075                     ??_FLASH_ReadWord:
  2066     0075                     ??_TMR0_SetInterruptHandler:	
  2067                           ; 1 bytes @ 0x5
  2068                           
  2069     0075                     ??_FLASH_EraseBlock:	
  2070                           ; 1 bytes @ 0x5
  2071                           
  2072     0075                     ??_TMR0_Initialize:	
  2073                           ; 1 bytes @ 0x5
  2074                           
  2075     0075                     ??_SYSTEM_Initialize:	
  2076                           ; 1 bytes @ 0x5
  2077                           
  2078     0075                     FLASH_ReadWord@GIEBitValue:	
  2079                           ; 1 bytes @ 0x5
  2080                           
  2081     0075                     FLASH_EraseBlock@GIEBitValue:	
  2082                           ; 1 bytes @ 0x5
  2083                           
  2084     0075                     ___wmul@multiplicand:	
  2085                           ; 1 bytes @ 0x5
  2086                           
  2087                           
  2088                           ; 2 bytes @ 0x5
  2089     0075                     	ds	2
  2090     0077                     ??_FLASH_WriteWord:
  2091     0077                     ??___wmul:	
  2092                           ; 1 bytes @ 0x7
  2093                           
  2094                           
  2095                           ; 1 bytes @ 0x7
  2096     0077                     	ds	1
  2097     0078                     ??_main:
  2098                           
  2099                           	psect	cstackBANK0
  2100     0020                     __pcstackBANK0:	
  2101                           ; 1 bytes @ 0x8
  2102                           
  2103     0020                     ?_FLASH_WriteBlock:
  2104     0020                     FLASH_WriteBlock@writeAddr:	
  2105                           ; 1 bytes @ 0x0
  2106                           
  2107     0020                     ___wmul@product:	
  2108                           ; 2 bytes @ 0x0
  2109                           
  2110                           
  2111                           ; 2 bytes @ 0x0
  2112     0020                     	ds	2
  2113     0022                     FLASH_WriteBlock@flashWordArray:
  2114                           
  2115                           ; 1 bytes @ 0x2
  2116     0022                     	ds	1
  2117     0023                     ??_FLASH_WriteBlock:
  2118                           
  2119                           ; 1 bytes @ 0x3
  2120     0023                     	ds	3
  2121     0026                     FLASH_WriteBlock@blockStartAddr:
  2122                           
  2123                           ; 2 bytes @ 0x6
  2124     0026                     	ds	2
  2125     0028                     FLASH_WriteBlock@GIEBitValue:
  2126                           
  2127                           ; 1 bytes @ 0x8
  2128     0028                     	ds	1
  2129     0029                     FLASH_WriteBlock@i:
  2130                           
  2131                           ; 1 bytes @ 0x9
  2132     0029                     	ds	1
  2133     002A                     ?_FLASH_WriteWord:
  2134     002A                     FLASH_WriteWord@flashAddr:	
  2135                           ; 1 bytes @ 0xA
  2136                           
  2137                           
  2138                           ; 2 bytes @ 0xA
  2139     002A                     	ds	2
  2140     002C                     FLASH_WriteWord@ramBuf:
  2141                           
  2142                           ; 1 bytes @ 0xC
  2143     002C                     	ds	1
  2144     002D                     FLASH_WriteWord@word:
  2145                           
  2146                           ; 2 bytes @ 0xD
  2147     002D                     	ds	2
  2148     002F                     FLASH_WriteWord@offset:
  2149                           
  2150                           ; 1 bytes @ 0xF
  2151     002F                     	ds	1
  2152     0030                     FLASH_WriteWord@blockStartAddr:
  2153                           
  2154                           ; 2 bytes @ 0x10
  2155     0030                     	ds	2
  2156     0032                     FLASH_WriteWord@i:
  2157                           
  2158                           ; 1 bytes @ 0x12
  2159     0032                     	ds	1
  2160     0033                     ??_memory_initialize:
  2161                           
  2162                           ; 1 bytes @ 0x13
  2163     0033                     	ds	2
  2164     0035                     memory_initialize@TAG:
  2165                           
  2166                           ; 1 bytes @ 0x15
  2167     0035                     	ds	1
  2168     0036                     main@TAG:
  2169                           
  2170                           ; 1 bytes @ 0x16
  2171     0036                     	ds	1
  2172                           
  2173                           	psect	maintext
  2174     0370                     __pmaintext:	
  2175 ;;
  2176 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  2177 ;;
  2178 ;; *************** function _main *****************
  2179 ;; Defined at:
  2180 ;;		line 49 in file "main.c"
  2181 ;; Parameters:    Size  Location     Type
  2182 ;;		None
  2183 ;; Auto vars:     Size  Location     Type
  2184 ;;  TAG             1   22[BANK0 ] unsigned char 
  2185 ;; Return value:  Size  Location     Type
  2186 ;;                  1    wreg      void 
  2187 ;; Registers used:
  2188 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2189 ;; Tracked objects:
  2190 ;;		On entry : B3F/0
  2191 ;;		On exit  : 0/0
  2192 ;;		Unchanged: 0/0
  2193 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2194 ;;      Params:         0       0       0       0
  2195 ;;      Locals:         0       1       0       0
  2196 ;;      Temps:          0       0       0       0
  2197 ;;      Totals:         0       1       0       0
  2198 ;;Total ram usage:        1 bytes
  2199 ;; Hardware stack levels required when called: 9
  2200 ;; This function calls:
  2201 ;;		_SYSTEM_Initialize
  2202 ;;		_SensorBoardType_validation
  2203 ;;		_error_signal
  2204 ;;		_getSensorBoardType
  2205 ;;		_memory_initialize
  2206 ;; This function is called by:
  2207 ;;		Startup code after reset
  2208 ;; This function uses a non-reentrant model
  2209 ;;
  2210                           
  2211     0370                     _main:	
  2212                           ;psect for function _main
  2213                           
  2214     0370                     l2213:	
  2215                           ;incstack = 0
  2216                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2217                           
  2218                           
  2219                           ;main.c: 52:     SYSTEM_Initialize();
  2220     0370  3183  23FB  3183   	fcall	_SYSTEM_Initialize
  2221                           
  2222                           ;main.c: 54:     uint8_t TAG = getSensorBoardType();
  2223     0373  3184  241A  3183   	fcall	_getSensorBoardType
  2224     0376  0140               	movlb	0	; select bank0
  2225     0377  00B6               	movwf	main@TAG
  2226                           
  2227                           ;main.c: 56:     if(SensorBoardType_validation(TAG+50)){
  2228     0378  0836               	movf	main@TAG,w
  2229     0379  3E32               	addlw	50
  2230     037A  3183  23EB  3183   	fcall	_SensorBoardType_validation
  2231     037D  3A00               	xorlw	0
  2232     037E  1903               	skipnz
  2233     037F  2B81               	goto	u881
  2234     0380  2B82               	goto	u880
  2235     0381                     u881:
  2236     0381  2B88               	goto	l2217
  2237     0382                     u880:
  2238     0382                     l2215:
  2239                           
  2240                           ;main.c: 58:         memory_initialize(TAG);
  2241     0382  0140               	movlb	0	; select bank0
  2242     0383  0836               	movf	main@TAG,w
  2243     0384  3180  20E6  3183   	fcall	_memory_initialize
  2244                           
  2245                           ;main.c: 59:     }
  2246     0387  2B8B               	goto	l2219
  2247     0388                     l2217:
  2248                           
  2249                           ;main.c: 61:         error_signal();
  2250     0388  3184  248F  3183   	fcall	_error_signal
  2251     038B                     l2219:
  2252                           
  2253                           ;main.c: 75:     (INTCONbits.GIE = 1);
  2254     038B  178B               	bsf	11,7	;volatile
  2255     038C                     l2221:
  2256                           
  2257                           ;main.c: 78:     (INTCONbits.PEIE = 1);
  2258     038C  170B               	bsf	11,6	;volatile
  2259     038D                     l592:	
  2260                           ;main.c: 86:     while (1)
  2261                           
  2262     038D                     l593:	
  2263                           ;main.c: 87:     {;main.c: 92:     }
  2264                           
  2265     038D  2B8D               	goto	l592
  2266     038E  2831               	ljmp	start
  2267     038F                     __end_of_main:
  2268                           
  2269                           	psect	text1
  2270     00E6                     __ptext1:	
  2271 ;; *************** function _memory_initialize *****************
  2272 ;; Defined at:
  2273 ;;		line 4 in file "flash_memory_filling.c"
  2274 ;; Parameters:    Size  Location     Type
  2275 ;;  TAG             1    wreg     unsigned char 
  2276 ;; Auto vars:     Size  Location     Type
  2277 ;;  TAG             1   21[BANK0 ] unsigned char 
  2278 ;; Return value:  Size  Location     Type
  2279 ;;                  1    wreg      void 
  2280 ;; Registers used:
  2281 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2282 ;; Tracked objects:
  2283 ;;		On entry : 0/0
  2284 ;;		On exit  : 0/0
  2285 ;;		Unchanged: 0/0
  2286 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2287 ;;      Params:         0       0       0       0
  2288 ;;      Locals:         0       1       0       0
  2289 ;;      Temps:          0       2       0       0
  2290 ;;      Totals:         0       3       0       0
  2291 ;;Total ram usage:        3 bytes
  2292 ;; Hardware stack levels used: 1
  2293 ;; Hardware stack levels required when called: 8
  2294 ;; This function calls:
  2295 ;;		_FLASH_ReadWord
  2296 ;;		_FLASH_WriteWord
  2297 ;;		___wmul
  2298 ;; This function is called by:
  2299 ;;		_main
  2300 ;; This function uses a non-reentrant model
  2301 ;;
  2302                           
  2303     00E6                     _memory_initialize:	
  2304                           ;psect for function _memory_initialize
  2305                           
  2306                           
  2307                           ;incstack = 0
  2308                           ; Regs used in _memory_initialize: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2309                           ;memory_initialize@TAG stored from wreg
  2310     00E6  0140               	movlb	0	; select bank0
  2311     00E7  00B5               	movwf	memory_initialize@TAG
  2312     00E8                     l2197:
  2313                           
  2314                           ;flash_memory_filling.c: 4: void memory_initialize(uint8_t TAG);flash_memory_filling.c: 
      +                          5: {;flash_memory_filling.c: 7:     static uint16_t ramBuff[32];;flash_memory_filling.c:
      +                           9:     if(FLASH_ReadWord(0x780) != 0x55)
  2315     00E8  3080               	movlw	128
  2316     00E9  00F3               	movwf	FLASH_ReadWord@flashAddr
  2317     00EA  3007               	movlw	7
  2318     00EB  00F4               	movwf	FLASH_ReadWord@flashAddr+1
  2319     00EC  3183  23AB  3180   	fcall	_FLASH_ReadWord
  2320     00EF  3055               	movlw	85
  2321     00F0  0673               	xorwf	?_FLASH_ReadWord,w
  2322     00F1  0474               	iorwf	?_FLASH_ReadWord+1,w
  2323     00F2  1903               	btfsc	3,2
  2324     00F3  28F5               	goto	u871
  2325     00F4  28F6               	goto	u870
  2326     00F5                     u871:
  2327     00F5  29E9               	goto	l28
  2328     00F6                     u870:
  2329     00F6                     l2199:
  2330                           
  2331                           ;flash_memory_filling.c: 10:     {;flash_memory_filling.c: 11:         FLASH_WriteWord(0
      +                          x780, ramBuff, 0x55);
  2332     00F6  3080               	movlw	128
  2333     00F7  0140               	movlb	0	; select bank0
  2334     00F8  00AA               	movwf	FLASH_WriteWord@flashAddr
  2335     00F9  3007               	movlw	7
  2336     00FA  00AB               	movwf	FLASH_WriteWord@flashAddr+1
  2337     00FB  30A0               	movlw	(low (memory_initialize@ramBuff| 0))& (0+255)
  2338     00FC  00AC               	movwf	FLASH_WriteWord@ramBuf
  2339     00FD  3055               	movlw	85
  2340     00FE  00AD               	movwf	FLASH_WriteWord@word
  2341     00FF  3000               	movlw	0
  2342     0100  00AE               	movwf	FLASH_WriteWord@word+1
  2343     0101  3182  22C3  3180   	fcall	_FLASH_WriteWord
  2344                           
  2345                           ;flash_memory_filling.c: 12:         FLASH_WriteWord(0x780 + 1, ramBuff, 0x00 );
  2346     0104  3081               	movlw	129
  2347     0105  0140               	movlb	0	; select bank0
  2348     0106  00AA               	movwf	FLASH_WriteWord@flashAddr
  2349     0107  3007               	movlw	7
  2350     0108  00AB               	movwf	FLASH_WriteWord@flashAddr+1
  2351     0109  30A0               	movlw	(low (memory_initialize@ramBuff| 0))& (0+255)
  2352     010A  00AC               	movwf	FLASH_WriteWord@ramBuf
  2353     010B  3000               	movlw	0
  2354     010C  00AD               	movwf	FLASH_WriteWord@word
  2355     010D  00AE               	movwf	FLASH_WriteWord@word+1
  2356     010E  3182  22C3  3180   	fcall	_FLASH_WriteWord
  2357     0111                     l2201:
  2358                           
  2359                           ;flash_memory_filling.c: 13:         FLASH_WriteWord(0x780 + 2, ramBuff, (uint16_t)defau
      +                          lt_in_flash[TAG - 1][0]);
  2360     0111  3082               	movlw	130
  2361     0112  0140               	movlb	0	; select bank0
  2362     0113  00AA               	movwf	FLASH_WriteWord@flashAddr
  2363     0114  3007               	movlw	7
  2364     0115  00AB               	movwf	FLASH_WriteWord@flashAddr+1
  2365     0116  30A0               	movlw	(low (memory_initialize@ramBuff| 0))& (0+255)
  2366     0117  00AC               	movwf	FLASH_WriteWord@ramBuf
  2367     0118  0835               	movf	memory_initialize@TAG,w
  2368     0119  00B3               	movwf	??_memory_initialize
  2369     011A  01B4               	clrf	??_memory_initialize+1
  2370     011B  0833               	movf	??_memory_initialize,w
  2371     011C  00F3               	movwf	___wmul@multiplier
  2372     011D  0834               	movf	??_memory_initialize+1,w
  2373     011E  00F4               	movwf	___wmul@multiplier+1
  2374     011F  300C               	movlw	12
  2375     0120  00F5               	movwf	___wmul@multiplicand
  2376     0121  3000               	movlw	0
  2377     0122  00F6               	movwf	___wmul@multiplicand+1
  2378     0123  3183  234E  3180   	fcall	___wmul
  2379     0126  3034               	movlw	52
  2380     0127  0773               	addwf	?___wmul,w
  2381     0128  0084               	movwf	4
  2382     0129  3000               	movlw	0
  2383     012A  3D74               	addwfc	?___wmul+1,w
  2384     012B  3880               	iorlw	128
  2385     012C  0085               	movwf	5
  2386     012D  3F00               	moviw [0]fsr0
  2387     012E  0140               	movlb	0	; select bank0
  2388     012F  00AD               	movwf	FLASH_WriteWord@word
  2389     0130  3F01               	moviw [1]fsr0
  2390     0131  00AE               	movwf	FLASH_WriteWord@word+1
  2391     0132  3182  22C3  3180   	fcall	_FLASH_WriteWord
  2392     0135                     l2203:
  2393                           
  2394                           ;flash_memory_filling.c: 14:         FLASH_WriteWord(0x780 + 3, ramBuff, (uint16_t)defau
      +                          lt_in_flash[TAG - 1][1]);
  2395     0135  3083               	movlw	131
  2396     0136  0140               	movlb	0	; select bank0
  2397     0137  00AA               	movwf	FLASH_WriteWord@flashAddr
  2398     0138  3007               	movlw	7
  2399     0139  00AB               	movwf	FLASH_WriteWord@flashAddr+1
  2400     013A  30A0               	movlw	(low (memory_initialize@ramBuff| 0))& (0+255)
  2401     013B  00AC               	movwf	FLASH_WriteWord@ramBuf
  2402     013C  0835               	movf	memory_initialize@TAG,w
  2403     013D  00B3               	movwf	??_memory_initialize
  2404     013E  01B4               	clrf	??_memory_initialize+1
  2405     013F  0833               	movf	??_memory_initialize,w
  2406     0140  00F3               	movwf	___wmul@multiplier
  2407     0141  0834               	movf	??_memory_initialize+1,w
  2408     0142  00F4               	movwf	___wmul@multiplier+1
  2409     0143  300C               	movlw	12
  2410     0144  00F5               	movwf	___wmul@multiplicand
  2411     0145  3000               	movlw	0
  2412     0146  00F6               	movwf	___wmul@multiplicand+1
  2413     0147  3183  234E  3180   	fcall	___wmul
  2414     014A  3036               	movlw	54
  2415     014B  0773               	addwf	?___wmul,w
  2416     014C  0084               	movwf	4
  2417     014D  3000               	movlw	0
  2418     014E  3D74               	addwfc	?___wmul+1,w
  2419     014F  3880               	iorlw	128
  2420     0150  0085               	movwf	5
  2421     0151  3F00               	moviw [0]fsr0
  2422     0152  0140               	movlb	0	; select bank0
  2423     0153  00AD               	movwf	FLASH_WriteWord@word
  2424     0154  3F01               	moviw [1]fsr0
  2425     0155  00AE               	movwf	FLASH_WriteWord@word+1
  2426     0156  3182  22C3  3180   	fcall	_FLASH_WriteWord
  2427     0159                     l2205:
  2428                           
  2429                           ;flash_memory_filling.c: 15:         FLASH_WriteWord(0x780 + 4, ramBuff, (uint16_t)defau
      +                          lt_in_flash[TAG - 1][2]);
  2430     0159  3084               	movlw	132
  2431     015A  0140               	movlb	0	; select bank0
  2432     015B  00AA               	movwf	FLASH_WriteWord@flashAddr
  2433     015C  3007               	movlw	7
  2434     015D  00AB               	movwf	FLASH_WriteWord@flashAddr+1
  2435     015E  30A0               	movlw	(low (memory_initialize@ramBuff| 0))& (0+255)
  2436     015F  00AC               	movwf	FLASH_WriteWord@ramBuf
  2437     0160  0835               	movf	memory_initialize@TAG,w
  2438     0161  00B3               	movwf	??_memory_initialize
  2439     0162  01B4               	clrf	??_memory_initialize+1
  2440     0163  0833               	movf	??_memory_initialize,w
  2441     0164  00F3               	movwf	___wmul@multiplier
  2442     0165  0834               	movf	??_memory_initialize+1,w
  2443     0166  00F4               	movwf	___wmul@multiplier+1
  2444     0167  300C               	movlw	12
  2445     0168  00F5               	movwf	___wmul@multiplicand
  2446     0169  3000               	movlw	0
  2447     016A  00F6               	movwf	___wmul@multiplicand+1
  2448     016B  3183  234E  3180   	fcall	___wmul
  2449     016E  3038               	movlw	56
  2450     016F  0773               	addwf	?___wmul,w
  2451     0170  0084               	movwf	4
  2452     0171  3000               	movlw	0
  2453     0172  3D74               	addwfc	?___wmul+1,w
  2454     0173  3880               	iorlw	128
  2455     0174  0085               	movwf	5
  2456     0175  3F00               	moviw [0]fsr0
  2457     0176  0140               	movlb	0	; select bank0
  2458     0177  00AD               	movwf	FLASH_WriteWord@word
  2459     0178  3F01               	moviw [1]fsr0
  2460     0179  00AE               	movwf	FLASH_WriteWord@word+1
  2461     017A  3182  22C3  3180   	fcall	_FLASH_WriteWord
  2462     017D                     l2207:
  2463                           
  2464                           ;flash_memory_filling.c: 16:         FLASH_WriteWord(0x780 + 5, ramBuff, (uint16_t)defau
      +                          lt_in_flash[TAG - 1][3]);
  2465     017D  3085               	movlw	133
  2466     017E  0140               	movlb	0	; select bank0
  2467     017F  00AA               	movwf	FLASH_WriteWord@flashAddr
  2468     0180  3007               	movlw	7
  2469     0181  00AB               	movwf	FLASH_WriteWord@flashAddr+1
  2470     0182  30A0               	movlw	(low (memory_initialize@ramBuff| 0))& (0+255)
  2471     0183  00AC               	movwf	FLASH_WriteWord@ramBuf
  2472     0184  0835               	movf	memory_initialize@TAG,w
  2473     0185  00B3               	movwf	??_memory_initialize
  2474     0186  01B4               	clrf	??_memory_initialize+1
  2475     0187  0833               	movf	??_memory_initialize,w
  2476     0188  00F3               	movwf	___wmul@multiplier
  2477     0189  0834               	movf	??_memory_initialize+1,w
  2478     018A  00F4               	movwf	___wmul@multiplier+1
  2479     018B  300C               	movlw	12
  2480     018C  00F5               	movwf	___wmul@multiplicand
  2481     018D  3000               	movlw	0
  2482     018E  00F6               	movwf	___wmul@multiplicand+1
  2483     018F  3183  234E  3180   	fcall	___wmul
  2484     0192  303A               	movlw	58
  2485     0193  0773               	addwf	?___wmul,w
  2486     0194  0084               	movwf	4
  2487     0195  3000               	movlw	0
  2488     0196  3D74               	addwfc	?___wmul+1,w
  2489     0197  3880               	iorlw	128
  2490     0198  0085               	movwf	5
  2491     0199  3F00               	moviw [0]fsr0
  2492     019A  0140               	movlb	0	; select bank0
  2493     019B  00AD               	movwf	FLASH_WriteWord@word
  2494     019C  3F01               	moviw [1]fsr0
  2495     019D  00AE               	movwf	FLASH_WriteWord@word+1
  2496     019E  3182  22C3  3180   	fcall	_FLASH_WriteWord
  2497     01A1                     l2209:
  2498                           
  2499                           ;flash_memory_filling.c: 17:         FLASH_WriteWord(0x780 + 6, ramBuff, (uint16_t)defau
      +                          lt_in_flash[TAG - 1][4]);
  2500     01A1  3086               	movlw	134
  2501     01A2  0140               	movlb	0	; select bank0
  2502     01A3  00AA               	movwf	FLASH_WriteWord@flashAddr
  2503     01A4  3007               	movlw	7
  2504     01A5  00AB               	movwf	FLASH_WriteWord@flashAddr+1
  2505     01A6  30A0               	movlw	(low (memory_initialize@ramBuff| 0))& (0+255)
  2506     01A7  00AC               	movwf	FLASH_WriteWord@ramBuf
  2507     01A8  0835               	movf	memory_initialize@TAG,w
  2508     01A9  00B3               	movwf	??_memory_initialize
  2509     01AA  01B4               	clrf	??_memory_initialize+1
  2510     01AB  0833               	movf	??_memory_initialize,w
  2511     01AC  00F3               	movwf	___wmul@multiplier
  2512     01AD  0834               	movf	??_memory_initialize+1,w
  2513     01AE  00F4               	movwf	___wmul@multiplier+1
  2514     01AF  300C               	movlw	12
  2515     01B0  00F5               	movwf	___wmul@multiplicand
  2516     01B1  3000               	movlw	0
  2517     01B2  00F6               	movwf	___wmul@multiplicand+1
  2518     01B3  3183  234E  3180   	fcall	___wmul
  2519     01B6  303C               	movlw	60
  2520     01B7  0773               	addwf	?___wmul,w
  2521     01B8  0084               	movwf	4
  2522     01B9  3000               	movlw	0
  2523     01BA  3D74               	addwfc	?___wmul+1,w
  2524     01BB  3880               	iorlw	128
  2525     01BC  0085               	movwf	5
  2526     01BD  3F00               	moviw [0]fsr0
  2527     01BE  0140               	movlb	0	; select bank0
  2528     01BF  00AD               	movwf	FLASH_WriteWord@word
  2529     01C0  3F01               	moviw [1]fsr0
  2530     01C1  00AE               	movwf	FLASH_WriteWord@word+1
  2531     01C2  3182  22C3  3180   	fcall	_FLASH_WriteWord
  2532     01C5                     l2211:
  2533                           
  2534                           ;flash_memory_filling.c: 18:         FLASH_WriteWord(0x780 + 7, ramBuff, (uint16_t)defau
      +                          lt_in_flash[TAG - 1][5]);
  2535     01C5  3087               	movlw	135
  2536     01C6  0140               	movlb	0	; select bank0
  2537     01C7  00AA               	movwf	FLASH_WriteWord@flashAddr
  2538     01C8  3007               	movlw	7
  2539     01C9  00AB               	movwf	FLASH_WriteWord@flashAddr+1
  2540     01CA  30A0               	movlw	(low (memory_initialize@ramBuff| 0))& (0+255)
  2541     01CB  00AC               	movwf	FLASH_WriteWord@ramBuf
  2542     01CC  0835               	movf	memory_initialize@TAG,w
  2543     01CD  00B3               	movwf	??_memory_initialize
  2544     01CE  01B4               	clrf	??_memory_initialize+1
  2545     01CF  0833               	movf	??_memory_initialize,w
  2546     01D0  00F3               	movwf	___wmul@multiplier
  2547     01D1  0834               	movf	??_memory_initialize+1,w
  2548     01D2  00F4               	movwf	___wmul@multiplier+1
  2549     01D3  300C               	movlw	12
  2550     01D4  00F5               	movwf	___wmul@multiplicand
  2551     01D5  3000               	movlw	0
  2552     01D6  00F6               	movwf	___wmul@multiplicand+1
  2553     01D7  3183  234E  3180   	fcall	___wmul
  2554     01DA  303E               	movlw	62
  2555     01DB  0773               	addwf	?___wmul,w
  2556     01DC  0084               	movwf	4
  2557     01DD  3000               	movlw	0
  2558     01DE  3D74               	addwfc	?___wmul+1,w
  2559     01DF  3880               	iorlw	128
  2560     01E0  0085               	movwf	5
  2561     01E1  3F00               	moviw [0]fsr0
  2562     01E2  0140               	movlb	0	; select bank0
  2563     01E3  00AD               	movwf	FLASH_WriteWord@word
  2564     01E4  3F01               	moviw [1]fsr0
  2565     01E5  00AE               	movwf	FLASH_WriteWord@word+1
  2566     01E6  3182  22C3  3180   	fcall	_FLASH_WriteWord
  2567     01E9                     l28:
  2568     01E9  0008               	return
  2569     01EA                     __end_of_memory_initialize:
  2570                           
  2571                           	psect	text2
  2572     034E                     __ptext2:	
  2573 ;; *************** function ___wmul *****************
  2574 ;; Defined at:
  2575 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\Umul16.c"
  2576 ;; Parameters:    Size  Location     Type
  2577 ;;  multiplier      2    3[COMMON] unsigned int 
  2578 ;;  multiplicand    2    5[COMMON] unsigned int 
  2579 ;; Auto vars:     Size  Location     Type
  2580 ;;  product         2    0[BANK0 ] unsigned int 
  2581 ;; Return value:  Size  Location     Type
  2582 ;;                  2    3[COMMON] unsigned int 
  2583 ;; Registers used:
  2584 ;;		wreg, status,2, status,0
  2585 ;; Tracked objects:
  2586 ;;		On entry : 0/0
  2587 ;;		On exit  : 0/0
  2588 ;;		Unchanged: 0/0
  2589 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2590 ;;      Params:         4       0       0       0
  2591 ;;      Locals:         0       2       0       0
  2592 ;;      Temps:          0       0       0       0
  2593 ;;      Totals:         4       2       0       0
  2594 ;;Total ram usage:        6 bytes
  2595 ;; Hardware stack levels used: 1
  2596 ;; Hardware stack levels required when called: 5
  2597 ;; This function calls:
  2598 ;;		Nothing
  2599 ;; This function is called by:
  2600 ;;		_memory_initialize
  2601 ;; This function uses a non-reentrant model
  2602 ;;
  2603                           
  2604     034E                     ___wmul:	
  2605                           ;psect for function ___wmul
  2606                           
  2607     034E                     l2183:	
  2608                           ;incstack = 0
  2609                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  2610                           
  2611     034E  0140               	movlb	0	; select bank0
  2612     034F  01A0               	clrf	___wmul@product
  2613     0350  01A1               	clrf	___wmul@product+1
  2614     0351                     l2185:
  2615     0351  1C73               	btfss	___wmul@multiplier,0
  2616     0352  2B54               	goto	u831
  2617     0353  2B55               	goto	u830
  2618     0354                     u831:
  2619     0354  2B5A               	goto	l663
  2620     0355                     u830:
  2621     0355                     l2187:
  2622     0355  0875               	movf	___wmul@multiplicand,w
  2623     0356  0140               	movlb	0	; select bank0
  2624     0357  07A0               	addwf	___wmul@product,f
  2625     0358  0876               	movf	___wmul@multiplicand+1,w
  2626     0359  3DA1               	addwfc	___wmul@product+1,f
  2627     035A                     l663:
  2628     035A  3001               	movlw	1
  2629     035B                     u845:
  2630     035B  35F5               	lslf	___wmul@multiplicand,f
  2631     035C  0DF6               	rlf	___wmul@multiplicand+1,f
  2632     035D  0B89               	decfsz	9,f
  2633     035E  2B5B               	goto	u845
  2634     035F                     l2189:
  2635     035F  3001               	movlw	1
  2636     0360                     u855:
  2637     0360  36F4               	lsrf	___wmul@multiplier+1,f
  2638     0361  0CF3               	rrf	___wmul@multiplier,f
  2639     0362  0B89               	decfsz	9,f
  2640     0363  2B60               	goto	u855
  2641     0364                     l2191:
  2642     0364  0873               	movf	___wmul@multiplier,w
  2643     0365  0474               	iorwf	___wmul@multiplier+1,w
  2644     0366  1D03               	btfss	3,2
  2645     0367  2B69               	goto	u861
  2646     0368  2B6A               	goto	u860
  2647     0369                     u861:
  2648     0369  2B51               	goto	l2185
  2649     036A                     u860:
  2650     036A                     l2193:
  2651     036A  0140               	movlb	0	; select bank0
  2652     036B  0821               	movf	___wmul@product+1,w
  2653     036C  00F4               	movwf	?___wmul+1
  2654     036D  0820               	movf	___wmul@product,w
  2655     036E  00F3               	movwf	?___wmul
  2656     036F                     l665:
  2657     036F  0008               	return
  2658     0370                     __end_of___wmul:
  2659                           
  2660                           	psect	text3
  2661     02C3                     __ptext3:	
  2662 ;; *************** function _FLASH_WriteWord *****************
  2663 ;; Defined at:
  2664 ;;		line 75 in file "mcc_generated_files/memory.c"
  2665 ;; Parameters:    Size  Location     Type
  2666 ;;  flashAddr       2   10[BANK0 ] unsigned short 
  2667 ;;  ramBuf          1   12[BANK0 ] PTR unsigned short 
  2668 ;;		 -> memory_initialize@ramBuff(64), 
  2669 ;;  word            2   13[BANK0 ] unsigned short 
  2670 ;; Auto vars:     Size  Location     Type
  2671 ;;  blockStartAd    2   16[BANK0 ] unsigned short 
  2672 ;;  i               1   18[BANK0 ] unsigned char 
  2673 ;;  offset          1   15[BANK0 ] unsigned char 
  2674 ;; Return value:  Size  Location     Type
  2675 ;;                  1    wreg      void 
  2676 ;; Registers used:
  2677 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2678 ;; Tracked objects:
  2679 ;;		On entry : 0/0
  2680 ;;		On exit  : 0/0
  2681 ;;		Unchanged: 0/0
  2682 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2683 ;;      Params:         0       5       0       0
  2684 ;;      Locals:         0       4       0       0
  2685 ;;      Temps:          1       0       0       0
  2686 ;;      Totals:         1       9       0       0
  2687 ;;Total ram usage:       10 bytes
  2688 ;; Hardware stack levels used: 1
  2689 ;; Hardware stack levels required when called: 7
  2690 ;; This function calls:
  2691 ;;		_FLASH_ReadWord
  2692 ;;		_FLASH_WriteBlock
  2693 ;; This function is called by:
  2694 ;;		_memory_initialize
  2695 ;; This function uses a non-reentrant model
  2696 ;;
  2697                           
  2698     02C3                     _FLASH_WriteWord:	
  2699                           ;psect for function _FLASH_WriteWord
  2700                           
  2701     02C3                     l2165:	
  2702                           ;incstack = 0
  2703                           ; Regs used in _FLASH_WriteWord: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2704                           
  2705                           
  2706                           ;mcc_generated_files/memory.c: 75: void FLASH_WriteWord(uint16_t flashAddr, uint16_t *ra
      +                          mBuf, uint16_t word);mcc_generated_files/memory.c: 76: {;mcc_generated_files/memory.c: 7
      +                          7:     uint16_t blockStartAddr = (uint16_t)(flashAddr & ((0x800 -1) ^ (32 -1)));
  2707     02C3  30E0               	movlw	224
  2708     02C4  0140               	movlb	0	; select bank0
  2709     02C5  052A               	andwf	FLASH_WriteWord@flashAddr,w
  2710     02C6  00B0               	movwf	FLASH_WriteWord@blockStartAddr
  2711     02C7  3007               	movlw	7
  2712     02C8  052B               	andwf	FLASH_WriteWord@flashAddr+1,w
  2713     02C9  00B1               	movwf	FLASH_WriteWord@blockStartAddr+1
  2714     02CA                     l2167:
  2715                           
  2716                           ;mcc_generated_files/memory.c: 78:     uint8_t offset = (uint8_t)(flashAddr & (32 -1));
  2717     02CA  082A               	movf	FLASH_WriteWord@flashAddr,w
  2718     02CB  391F               	andlw	31
  2719     02CC  00AF               	movwf	FLASH_WriteWord@offset
  2720                           
  2721                           ;mcc_generated_files/memory.c: 79:     uint8_t i;;mcc_generated_files/memory.c: 82:     
      +                          for (i=0; i<32; i++)
  2722     02CD  01B2               	clrf	FLASH_WriteWord@i
  2723     02CE                     l2173:
  2724                           
  2725                           ;mcc_generated_files/memory.c: 83:     {;mcc_generated_files/memory.c: 84:         ramBu
      +                          f[i] = FLASH_ReadWord((blockStartAddr+i));
  2726     02CE  0832               	movf	FLASH_WriteWord@i,w
  2727     02CF  0730               	addwf	FLASH_WriteWord@blockStartAddr,w
  2728     02D0  00F3               	movwf	FLASH_ReadWord@flashAddr
  2729     02D1  0831               	movf	FLASH_WriteWord@blockStartAddr+1,w
  2730     02D2  1803               	skipnc
  2731     02D3  0A31               	incf	FLASH_WriteWord@blockStartAddr+1,w
  2732     02D4  00F4               	movwf	FLASH_ReadWord@flashAddr+1
  2733     02D5  3183  23AB  3182   	fcall	_FLASH_ReadWord
  2734     02D8  0140               	movlb	0	; select bank0
  2735     02D9  3532               	lslf	FLASH_WriteWord@i,w
  2736     02DA  072C               	addwf	FLASH_WriteWord@ramBuf,w
  2737     02DB  00F7               	movwf	??_FLASH_WriteWord
  2738     02DC  0877               	movf	??_FLASH_WriteWord,w
  2739     02DD  0086               	movwf	6
  2740     02DE  0187               	clrf	7
  2741     02DF  0873               	movf	?_FLASH_ReadWord,w
  2742     02E0  3FC0               	movwi [0]fsr1
  2743     02E1  0874               	movf	?_FLASH_ReadWord+1,w
  2744     02E2  3FC1               	movwi [1]fsr1
  2745     02E3                     l2175:
  2746                           
  2747                           ;mcc_generated_files/memory.c: 85:     }
  2748     02E3  3001               	movlw	1
  2749     02E4  00F7               	movwf	??_FLASH_WriteWord
  2750     02E5  0877               	movf	??_FLASH_WriteWord,w
  2751     02E6  07B2               	addwf	FLASH_WriteWord@i,f
  2752     02E7                     l2177:
  2753     02E7  3020               	movlw	32
  2754     02E8  0232               	subwf	FLASH_WriteWord@i,w
  2755     02E9  1C03               	skipc
  2756     02EA  2AEC               	goto	u821
  2757     02EB  2AED               	goto	u820
  2758     02EC                     u821:
  2759     02EC  2ACE               	goto	l2173
  2760     02ED                     u820:
  2761     02ED                     l2179:
  2762                           
  2763                           ;mcc_generated_files/memory.c: 88:     ramBuf[offset] = word;
  2764     02ED  352F               	lslf	FLASH_WriteWord@offset,w
  2765     02EE  072C               	addwf	FLASH_WriteWord@ramBuf,w
  2766     02EF  00F7               	movwf	??_FLASH_WriteWord
  2767     02F0  0877               	movf	??_FLASH_WriteWord,w
  2768     02F1  0086               	movwf	6
  2769     02F2  0187               	clrf	7
  2770     02F3  082D               	movf	FLASH_WriteWord@word,w
  2771     02F4  3FC0               	movwi [0]fsr1
  2772     02F5  082E               	movf	FLASH_WriteWord@word+1,w
  2773     02F6  3FC1               	movwi [1]fsr1
  2774     02F7                     l2181:
  2775                           
  2776                           ;mcc_generated_files/memory.c: 91:     FLASH_WriteBlock(blockStartAddr, ramBuf);
  2777     02F7  0831               	movf	FLASH_WriteWord@blockStartAddr+1,w
  2778     02F8  00A1               	movwf	FLASH_WriteBlock@writeAddr+1
  2779     02F9  0830               	movf	FLASH_WriteWord@blockStartAddr,w
  2780     02FA  00A0               	movwf	FLASH_WriteBlock@writeAddr
  2781     02FB  082C               	movf	FLASH_WriteWord@ramBuf,w
  2782     02FC  00A2               	movwf	FLASH_WriteBlock@flashWordArray
  2783     02FD  3182  2257  3182   	fcall	_FLASH_WriteBlock
  2784     0300                     l495:
  2785     0300  0008               	return
  2786     0301                     __end_of_FLASH_WriteWord:
  2787                           
  2788                           	psect	text4
  2789     0257                     __ptext4:	
  2790 ;; *************** function _FLASH_WriteBlock *****************
  2791 ;; Defined at:
  2792 ;;		line 94 in file "mcc_generated_files/memory.c"
  2793 ;; Parameters:    Size  Location     Type
  2794 ;;  writeAddr       2    0[BANK0 ] unsigned short 
  2795 ;;  flashWordArr    1    2[BANK0 ] PTR unsigned short 
  2796 ;;		 -> memory_initialize@ramBuff(64), 
  2797 ;; Auto vars:     Size  Location     Type
  2798 ;;  blockStartAd    2    6[BANK0 ] unsigned short 
  2799 ;;  i               1    9[BANK0 ] unsigned char 
  2800 ;;  GIEBitValue     1    8[BANK0 ] unsigned char 
  2801 ;; Return value:  Size  Location     Type
  2802 ;;                  1    wreg      char 
  2803 ;; Registers used:
  2804 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2805 ;; Tracked objects:
  2806 ;;		On entry : 0/0
  2807 ;;		On exit  : 0/0
  2808 ;;		Unchanged: 0/0
  2809 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2810 ;;      Params:         0       3       0       0
  2811 ;;      Locals:         0       4       0       0
  2812 ;;      Temps:          0       3       0       0
  2813 ;;      Totals:         0      10       0       0
  2814 ;;Total ram usage:       10 bytes
  2815 ;; Hardware stack levels used: 1
  2816 ;; Hardware stack levels required when called: 6
  2817 ;; This function calls:
  2818 ;;		_FLASH_EraseBlock
  2819 ;; This function is called by:
  2820 ;;		_FLASH_WriteWord
  2821 ;; This function uses a non-reentrant model
  2822 ;;
  2823                           
  2824     0257                     _FLASH_WriteBlock:	
  2825                           ;psect for function _FLASH_WriteBlock
  2826                           
  2827     0257                     l2115:	
  2828                           ;incstack = 0
  2829                           ; Regs used in _FLASH_WriteBlock: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2830                           
  2831                           
  2832                           ;mcc_generated_files/memory.c: 94: int8_t FLASH_WriteBlock(uint16_t writeAddr, uint16_t 
      +                          *flashWordArray);mcc_generated_files/memory.c: 95: {;mcc_generated_files/memory.c: 96:  
      +                             uint16_t blockStartAddr = (uint16_t )(writeAddr & ((0x800 -1) ^ (32 -1)));
  2833     0257  30E0               	movlw	224
  2834     0258  0140               	movlb	0	; select bank0
  2835     0259  0520               	andwf	FLASH_WriteBlock@writeAddr,w
  2836     025A  00A6               	movwf	FLASH_WriteBlock@blockStartAddr
  2837     025B  3007               	movlw	7
  2838     025C  0521               	andwf	FLASH_WriteBlock@writeAddr+1,w
  2839     025D  00A7               	movwf	FLASH_WriteBlock@blockStartAddr+1
  2840     025E                     l2117:
  2841                           
  2842                           ;mcc_generated_files/memory.c: 97:     uint8_t GIEBitValue = INTCONbits.GIE;
  2843     025E  3000               	movlw	0
  2844     025F  1B8B               	btfsc	11,7	;volatile
  2845     0260  3001               	movlw	1
  2846     0261  00A8               	movwf	FLASH_WriteBlock@GIEBitValue
  2847     0262                     l2119:
  2848                           
  2849                           ;mcc_generated_files/memory.c: 98:     uint8_t i;;mcc_generated_files/memory.c: 102:    
      +                           if( writeAddr != blockStartAddr )
  2850     0262  0827               	movf	FLASH_WriteBlock@blockStartAddr+1,w
  2851     0263  0621               	xorwf	FLASH_WriteBlock@writeAddr+1,w
  2852     0264  1D03               	skipz
  2853     0265  2A68               	goto	u795
  2854     0266  0826               	movf	FLASH_WriteBlock@blockStartAddr,w
  2855     0267  0620               	xorwf	FLASH_WriteBlock@writeAddr,w
  2856     0268                     u795:
  2857     0268  1903               	skipnz
  2858     0269  2A6B               	goto	u791
  2859     026A  2A6C               	goto	u790
  2860     026B                     u791:
  2861     026B  2A6D               	goto	l498
  2862     026C                     u790:
  2863     026C  2AC2               	goto	l499
  2864     026D                     l498:	
  2865                           ;mcc_generated_files/memory.c: 105:     }
  2866                           
  2867                           
  2868                           ;mcc_generated_files/memory.c: 107:     INTCONbits.GIE = 0;
  2869     026D  138B               	bcf	11,7	;volatile
  2870     026E                     l2123:
  2871                           
  2872                           ;mcc_generated_files/memory.c: 110:     FLASH_EraseBlock(writeAddr);
  2873     026E  0821               	movf	FLASH_WriteBlock@writeAddr+1,w
  2874     026F  00F4               	movwf	FLASH_EraseBlock@startAddr+1
  2875     0270  0820               	movf	FLASH_WriteBlock@writeAddr,w
  2876     0271  00F3               	movwf	FLASH_EraseBlock@startAddr
  2877     0272  3183  238F  3182   	fcall	_FLASH_EraseBlock
  2878     0275                     l2125:
  2879                           
  2880                           ;mcc_generated_files/memory.c: 113:     NVMCON1bits.NVMREGS = 0;
  2881     0275  0150               	movlb	16	; select bank16
  2882     0276  131E               	bcf	30,6	;volsfr
  2883     0277                     l2127:
  2884                           
  2885                           ;mcc_generated_files/memory.c: 114:     NVMCON1bits.WREN = 1;
  2886     0277  151E               	bsf	30,2	;volsfr
  2887     0278                     l2129:
  2888                           
  2889                           ;mcc_generated_files/memory.c: 115:     NVMCON1bits.LWLO = 1;
  2890     0278  169E               	bsf	30,5	;volsfr
  2891     0279                     l2131:
  2892                           
  2893                           ;mcc_generated_files/memory.c: 117:     for (i=0; i<32; i++)
  2894     0279  0140               	movlb	0	; select bank0
  2895     027A  01A9               	clrf	FLASH_WriteBlock@i
  2896     027B                     l2137:
  2897                           
  2898                           ;mcc_generated_files/memory.c: 118:     {;mcc_generated_files/memory.c: 120:         NVM
      +                          ADRL = (writeAddr & 0xFF);
  2899     027B  0820               	movf	FLASH_WriteBlock@writeAddr,w
  2900     027C  0150               	movlb	16	; select bank16
  2901     027D  009A               	movwf	26	;volatile
  2902     027E                     l2139:
  2903                           
  2904                           ;mcc_generated_files/memory.c: 122:         NVMADRH = ((writeAddr & 0xFF00) >> 8);
  2905     027E  0140               	movlb	0	; select bank0
  2906     027F  0821               	movf	FLASH_WriteBlock@writeAddr+1,w
  2907     0280  0150               	movlb	16	; select bank16
  2908     0281  009B               	movwf	27	;volatile
  2909     0282                     l2141:
  2910                           
  2911                           ;mcc_generated_files/memory.c: 125:         NVMDATL = flashWordArray[i];
  2912     0282  0140               	movlb	0	; select bank0
  2913     0283  3529               	lslf	FLASH_WriteBlock@i,w
  2914     0284  0722               	addwf	FLASH_WriteBlock@flashWordArray,w
  2915     0285  00A3               	movwf	??_FLASH_WriteBlock
  2916     0286  0823               	movf	??_FLASH_WriteBlock,w
  2917     0287  0086               	movwf	6
  2918     0288  0187               	clrf	7
  2919     0289  0801               	movf	1,w
  2920     028A  0150               	movlb	16	; select bank16
  2921     028B  009C               	movwf	28	;volatile
  2922     028C                     l2143:
  2923                           
  2924                           ;mcc_generated_files/memory.c: 126:         NVMDATH = ((flashWordArray[i] & 0xFF00) >> 8
      +                          );
  2925     028C  0140               	movlb	0	; select bank0
  2926     028D  3529               	lslf	FLASH_WriteBlock@i,w
  2927     028E  0722               	addwf	FLASH_WriteBlock@flashWordArray,w
  2928     028F  00A3               	movwf	??_FLASH_WriteBlock
  2929     0290  0823               	movf	??_FLASH_WriteBlock,w
  2930     0291  0086               	movwf	6
  2931     0292  0187               	clrf	7
  2932     0293  3F40               	moviw [0]fsr1
  2933     0294  00A4               	movwf	??_FLASH_WriteBlock+1
  2934     0295  3F41               	moviw [1]fsr1
  2935     0296  00A5               	movwf	??_FLASH_WriteBlock+2
  2936     0297  0825               	movf	??_FLASH_WriteBlock+2,w
  2937     0298  0150               	movlb	16	; select bank16
  2938     0299  009D               	movwf	29	;volatile
  2939     029A                     l2145:
  2940                           
  2941                           ;mcc_generated_files/memory.c: 128:         if(i == (32 -1))
  2942     029A  301F               	movlw	31
  2943     029B  0140               	movlb	0	; select bank0
  2944     029C  0629               	xorwf	FLASH_WriteBlock@i,w
  2945     029D  1D03               	btfss	3,2
  2946     029E  2AA0               	goto	u801
  2947     029F  2AA1               	goto	u800
  2948     02A0                     u801:
  2949     02A0  2AA3               	goto	l2149
  2950     02A1                     u800:
  2951     02A1                     l2147:
  2952                           
  2953                           ;mcc_generated_files/memory.c: 129:         {;mcc_generated_files/memory.c: 131:        
      +                               NVMCON1bits.LWLO = 0;
  2954     02A1  0150               	movlb	16	; select bank16
  2955     02A2  129E               	bcf	30,5	;volsfr
  2956     02A3                     l2149:
  2957                           
  2958                           ;mcc_generated_files/memory.c: 134:         NVMCON2 = 0x55;
  2959     02A3  3055               	movlw	85
  2960     02A4  0150               	movlb	16	; select bank16
  2961     02A5  009F               	movwf	31	;volsfr
  2962                           
  2963                           ;mcc_generated_files/memory.c: 135:         NVMCON2 = 0xAA;
  2964     02A6  30AA               	movlw	170
  2965     02A7  009F               	movwf	31	;volsfr
  2966     02A8                     l2151:
  2967                           
  2968                           ;mcc_generated_files/memory.c: 136:         NVMCON1bits.WR = 1;
  2969     02A8  149E               	bsf	30,1	;volsfr
  2970     02A9                     l2153:
  2971                           
  2972                           ;mcc_generated_files/memory.c: 137:         __nop();
  2973     02A9  0000               	nop
  2974     02AA                     l2155:
  2975                           
  2976                           ;mcc_generated_files/memory.c: 138:         __nop();
  2977     02AA  0000               	nop
  2978                           
  2979                           ;mcc_generated_files/memory.c: 140:      writeAddr++;
  2980     02AB  3001               	movlw	1
  2981     02AC  0140               	movlb	0	; select bank0
  2982     02AD  07A0               	addwf	FLASH_WriteBlock@writeAddr,f
  2983     02AE  3000               	movlw	0
  2984     02AF  3DA1               	addwfc	FLASH_WriteBlock@writeAddr+1,f
  2985     02B0                     l2157:
  2986                           
  2987                           ;mcc_generated_files/memory.c: 141:     }
  2988     02B0  3001               	movlw	1
  2989     02B1  00A3               	movwf	??_FLASH_WriteBlock
  2990     02B2  0823               	movf	??_FLASH_WriteBlock,w
  2991     02B3  07A9               	addwf	FLASH_WriteBlock@i,f
  2992     02B4                     l2159:
  2993     02B4  3020               	movlw	32
  2994     02B5  0229               	subwf	FLASH_WriteBlock@i,w
  2995     02B6  1C03               	skipc
  2996     02B7  2AB9               	goto	u811
  2997     02B8  2ABA               	goto	u810
  2998     02B9                     u811:
  2999     02B9  2A7B               	goto	l2137
  3000     02BA                     u810:
  3001     02BA                     l501:
  3002                           
  3003                           ;mcc_generated_files/memory.c: 143:     NVMCON1bits.WREN = 0;
  3004     02BA  0150               	movlb	16	; select bank16
  3005     02BB  111E               	bcf	30,2	;volsfr
  3006     02BC                     l2161:
  3007                           
  3008                           ;mcc_generated_files/memory.c: 144:     INTCONbits.GIE = GIEBitValue;
  3009     02BC  0140               	movlb	0	; select bank0
  3010     02BD  0C28               	rrf	FLASH_WriteBlock@GIEBitValue,w
  3011     02BE  1C03               	skipc
  3012     02BF  138B               	bcf	11,7	;volatile
  3013     02C0  1803               	skipnc
  3014     02C1  178B               	bsf	11,7	;volatile
  3015     02C2                     l499:
  3016     02C2  0008               	return
  3017     02C3                     __end_of_FLASH_WriteBlock:
  3018                           
  3019                           	psect	text5
  3020     038F                     __ptext5:	
  3021 ;; *************** function _FLASH_EraseBlock *****************
  3022 ;; Defined at:
  3023 ;;		line 149 in file "mcc_generated_files/memory.c"
  3024 ;; Parameters:    Size  Location     Type
  3025 ;;  startAddr       2    3[COMMON] unsigned short 
  3026 ;; Auto vars:     Size  Location     Type
  3027 ;;  GIEBitValue     1    5[COMMON] unsigned char 
  3028 ;; Return value:  Size  Location     Type
  3029 ;;                  1    wreg      void 
  3030 ;; Registers used:
  3031 ;;		wreg, status,2, status,0
  3032 ;; Tracked objects:
  3033 ;;		On entry : 0/0
  3034 ;;		On exit  : 0/0
  3035 ;;		Unchanged: 0/0
  3036 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3037 ;;      Params:         2       0       0       0
  3038 ;;      Locals:         1       0       0       0
  3039 ;;      Temps:          0       0       0       0
  3040 ;;      Totals:         3       0       0       0
  3041 ;;Total ram usage:        3 bytes
  3042 ;; Hardware stack levels used: 1
  3043 ;; Hardware stack levels required when called: 5
  3044 ;; This function calls:
  3045 ;;		Nothing
  3046 ;; This function is called by:
  3047 ;;		_FLASH_WriteBlock
  3048 ;; This function uses a non-reentrant model
  3049 ;;
  3050                           
  3051     038F                     _FLASH_EraseBlock:	
  3052                           ;psect for function _FLASH_EraseBlock
  3053                           
  3054     038F                     l2069:	
  3055                           ;incstack = 0
  3056                           ; Regs used in _FLASH_EraseBlock: [wreg+status,2+status,0]
  3057                           
  3058                           
  3059                           ;mcc_generated_files/memory.c: 149: void FLASH_EraseBlock(uint16_t startAddr);mcc_genera
      +                          ted_files/memory.c: 150: {;mcc_generated_files/memory.c: 151:     uint8_t GIEBitValue = 
      +                          INTCONbits.GIE;
  3060     038F  3000               	movlw	0
  3061     0390  1B8B               	btfsc	11,7	;volatile
  3062     0391  3001               	movlw	1
  3063     0392  00F5               	movwf	FLASH_EraseBlock@GIEBitValue
  3064     0393                     l2071:
  3065                           
  3066                           ;mcc_generated_files/memory.c: 154:     INTCONbits.GIE = 0;
  3067     0393  138B               	bcf	11,7	;volatile
  3068     0394                     l2073:
  3069                           
  3070                           ;mcc_generated_files/memory.c: 156:     NVMADRL = (startAddr & 0xFF);
  3071     0394  0873               	movf	FLASH_EraseBlock@startAddr,w
  3072     0395  0150               	movlb	16	; select bank16
  3073     0396  009A               	movwf	26	;volatile
  3074     0397                     l2075:
  3075                           
  3076                           ;mcc_generated_files/memory.c: 158:     NVMADRH = ((startAddr & 0xFF00) >> 8);
  3077     0397  0874               	movf	FLASH_EraseBlock@startAddr+1,w
  3078     0398  009B               	movwf	27	;volatile
  3079     0399                     l2077:
  3080                           
  3081                           ;mcc_generated_files/memory.c: 161:     NVMCON1bits.NVMREGS = 0;
  3082     0399  131E               	bcf	30,6	;volsfr
  3083     039A                     l2079:
  3084                           
  3085                           ;mcc_generated_files/memory.c: 162:     NVMCON1bits.FREE = 1;
  3086     039A  161E               	bsf	30,4	;volsfr
  3087     039B                     l2081:
  3088                           
  3089                           ;mcc_generated_files/memory.c: 163:     NVMCON1bits.WREN = 1;
  3090     039B  151E               	bsf	30,2	;volsfr
  3091                           
  3092                           ;mcc_generated_files/memory.c: 166:     NVMCON2 = 0x55;
  3093     039C  3055               	movlw	85
  3094     039D  009F               	movwf	31	;volsfr
  3095                           
  3096                           ;mcc_generated_files/memory.c: 167:     NVMCON2 = 0xAA;
  3097     039E  30AA               	movlw	170
  3098     039F  009F               	movwf	31	;volsfr
  3099     03A0                     l2083:
  3100                           
  3101                           ;mcc_generated_files/memory.c: 168:     NVMCON1bits.WR = 1;
  3102     03A0  149E               	bsf	30,1	;volsfr
  3103     03A1                     l2085:
  3104                           
  3105                           ;mcc_generated_files/memory.c: 169:     __nop();
  3106     03A1  0000               	nop
  3107     03A2                     l2087:
  3108                           
  3109                           ;mcc_generated_files/memory.c: 170:     __nop();
  3110     03A2  0000               	nop
  3111     03A3                     l2089:
  3112                           
  3113                           ;mcc_generated_files/memory.c: 172:     NVMCON1bits.WREN = 0;
  3114     03A3  0150               	movlb	16	; select bank16
  3115     03A4  111E               	bcf	30,2	;volsfr
  3116     03A5                     l2091:
  3117                           
  3118                           ;mcc_generated_files/memory.c: 173:     INTCONbits.GIE = GIEBitValue;
  3119     03A5  0C75               	rrf	FLASH_EraseBlock@GIEBitValue,w
  3120     03A6  1C03               	skipc
  3121     03A7  138B               	bcf	11,7	;volatile
  3122     03A8  1803               	skipnc
  3123     03A9  178B               	bsf	11,7	;volatile
  3124     03AA                     l505:
  3125     03AA  0008               	return
  3126     03AB                     __end_of_FLASH_EraseBlock:
  3127                           
  3128                           	psect	text6
  3129     03AB                     __ptext6:	
  3130 ;; *************** function _FLASH_ReadWord *****************
  3131 ;; Defined at:
  3132 ;;		line 58 in file "mcc_generated_files/memory.c"
  3133 ;; Parameters:    Size  Location     Type
  3134 ;;  flashAddr       2    3[COMMON] unsigned short 
  3135 ;; Auto vars:     Size  Location     Type
  3136 ;;  GIEBitValue     1    5[COMMON] unsigned char 
  3137 ;; Return value:  Size  Location     Type
  3138 ;;                  2    3[COMMON] unsigned short 
  3139 ;; Registers used:
  3140 ;;		wreg, status,2, status,0
  3141 ;; Tracked objects:
  3142 ;;		On entry : 0/0
  3143 ;;		On exit  : 0/0
  3144 ;;		Unchanged: 0/0
  3145 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3146 ;;      Params:         2       0       0       0
  3147 ;;      Locals:         1       0       0       0
  3148 ;;      Temps:          0       0       0       0
  3149 ;;      Totals:         3       0       0       0
  3150 ;;Total ram usage:        3 bytes
  3151 ;; Hardware stack levels used: 1
  3152 ;; Hardware stack levels required when called: 5
  3153 ;; This function calls:
  3154 ;;		Nothing
  3155 ;; This function is called by:
  3156 ;;		_memory_initialize
  3157 ;;		_FLASH_WriteWord
  3158 ;; This function uses a non-reentrant model
  3159 ;;
  3160                           
  3161     03AB                     _FLASH_ReadWord:	
  3162                           ;psect for function _FLASH_ReadWord
  3163                           
  3164     03AB                     l2093:	
  3165                           ;incstack = 0
  3166                           ; Regs used in _FLASH_ReadWord: [wreg+status,2+status,0]
  3167                           
  3168                           
  3169                           ;mcc_generated_files/memory.c: 58: uint16_t FLASH_ReadWord(uint16_t flashAddr);mcc_gener
      +                          ated_files/memory.c: 59: {;mcc_generated_files/memory.c: 60:     uint8_t GIEBitValue = I
      +                          NTCONbits.GIE;
  3170     03AB  3000               	movlw	0
  3171     03AC  1B8B               	btfsc	11,7	;volatile
  3172     03AD  3001               	movlw	1
  3173     03AE  00F5               	movwf	FLASH_ReadWord@GIEBitValue
  3174     03AF                     l2095:
  3175                           
  3176                           ;mcc_generated_files/memory.c: 62:     INTCONbits.GIE = 0;
  3177     03AF  138B               	bcf	11,7	;volatile
  3178     03B0                     l2097:
  3179                           
  3180                           ;mcc_generated_files/memory.c: 63:     NVMADRL = (flashAddr & 0x00FF);
  3181     03B0  0873               	movf	FLASH_ReadWord@flashAddr,w
  3182     03B1  0150               	movlb	16	; select bank16
  3183     03B2  009A               	movwf	26	;volatile
  3184     03B3                     l2099:
  3185                           
  3186                           ;mcc_generated_files/memory.c: 64:     NVMADRH = ((flashAddr & 0xFF00) >> 8);
  3187     03B3  0874               	movf	FLASH_ReadWord@flashAddr+1,w
  3188     03B4  009B               	movwf	27	;volatile
  3189     03B5                     l2101:
  3190                           
  3191                           ;mcc_generated_files/memory.c: 66:     NVMCON1bits.NVMREGS = 0;
  3192     03B5  131E               	bcf	30,6	;volsfr
  3193     03B6                     l2103:
  3194                           
  3195                           ;mcc_generated_files/memory.c: 67:     NVMCON1bits.RD = 1;
  3196     03B6  141E               	bsf	30,0	;volsfr
  3197     03B7                     l2105:
  3198                           
  3199                           ;mcc_generated_files/memory.c: 68:     __nop();
  3200     03B7  0000               	nop
  3201     03B8                     l2107:
  3202                           
  3203                           ;mcc_generated_files/memory.c: 69:     __nop();
  3204     03B8  0000               	nop
  3205     03B9                     l2109:
  3206                           
  3207                           ;mcc_generated_files/memory.c: 70:     INTCONbits.GIE = GIEBitValue;
  3208     03B9  0C75               	rrf	FLASH_ReadWord@GIEBitValue,w
  3209     03BA  1C03               	skipc
  3210     03BB  138B               	bcf	11,7	;volatile
  3211     03BC  1803               	skipnc
  3212     03BD  178B               	bsf	11,7	;volatile
  3213     03BE                     l2111:
  3214                           
  3215                           ;mcc_generated_files/memory.c: 72:     return ((uint16_t)((NVMDATH << 8) | NVMDATL));
  3216     03BE  0150               	movlb	16	; select bank16
  3217     03BF  081D               	movf	29,w	;volatile
  3218     03C0  00F4               	movwf	?_FLASH_ReadWord+1
  3219     03C1  081C               	movf	28,w	;volatile
  3220     03C2  00F3               	movwf	?_FLASH_ReadWord
  3221     03C3                     l490:
  3222     03C3  0008               	return
  3223     03C4                     __end_of_FLASH_ReadWord:
  3224                           
  3225                           	psect	text7
  3226     041A                     __ptext7:	
  3227 ;; *************** function _getSensorBoardType *****************
  3228 ;; Defined at:
  3229 ;;		line 35 in file "sensor.c"
  3230 ;; Parameters:    Size  Location     Type
  3231 ;;		None
  3232 ;; Auto vars:     Size  Location     Type
  3233 ;;		None
  3234 ;; Return value:  Size  Location     Type
  3235 ;;                  1    wreg      unsigned char 
  3236 ;; Registers used:
  3237 ;;		wreg, status,2, status,0
  3238 ;; Tracked objects:
  3239 ;;		On entry : 0/0
  3240 ;;		On exit  : 0/0
  3241 ;;		Unchanged: 0/0
  3242 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3243 ;;      Params:         0       0       0       0
  3244 ;;      Locals:         0       0       0       0
  3245 ;;      Temps:          2       0       0       0
  3246 ;;      Totals:         2       0       0       0
  3247 ;;Total ram usage:        2 bytes
  3248 ;; Hardware stack levels used: 1
  3249 ;; Hardware stack levels required when called: 5
  3250 ;; This function calls:
  3251 ;;		Nothing
  3252 ;; This function is called by:
  3253 ;;		_main
  3254 ;; This function uses a non-reentrant model
  3255 ;;
  3256                           
  3257     041A                     _getSensorBoardType:	
  3258                           ;psect for function _getSensorBoardType
  3259                           
  3260     041A                     l1915:	
  3261                           ;incstack = 0
  3262                           ; Regs used in _getSensorBoardType: [wreg+status,2+status,0]
  3263                           
  3264                           
  3265                           ;sensor.c: 37:     return (((PORTC & 0x3C)) >>2 | (PORTA & 0x30));
  3266     041A  3030               	movlw	48
  3267     041B  0140               	movlb	0	; select bank0
  3268     041C  050C               	andwf	12,w	;volatile
  3269     041D  00F3               	movwf	??_getSensorBoardType
  3270     041E  080E               	movf	14,w	;volatile
  3271     041F  00F4               	movwf	??_getSensorBoardType+1
  3272     0420  3002               	movlw	2
  3273     0421                     u595:
  3274     0421  36F4               	lsrf	??_getSensorBoardType+1,f
  3275     0422  0B89               	decfsz	9,f
  3276     0423  2C21               	goto	u595
  3277     0424  0874               	movf	??_getSensorBoardType+1,w
  3278     0425  390F               	andlw	15
  3279     0426  0473               	iorwf	??_getSensorBoardType,w
  3280     0427                     l39:
  3281     0427  0008               	return
  3282     0428                     __end_of_getSensorBoardType:
  3283                           
  3284                           	psect	text8
  3285     048F                     __ptext8:	
  3286 ;; *************** function _error_signal *****************
  3287 ;; Defined at:
  3288 ;;		line 53 in file "sensor.c"
  3289 ;; Parameters:    Size  Location     Type
  3290 ;;		None
  3291 ;; Auto vars:     Size  Location     Type
  3292 ;;		None
  3293 ;; Return value:  Size  Location     Type
  3294 ;;                  1    wreg      void 
  3295 ;; Registers used:
  3296 ;;		None
  3297 ;; Tracked objects:
  3298 ;;		On entry : 0/0
  3299 ;;		On exit  : 0/0
  3300 ;;		Unchanged: 0/0
  3301 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3302 ;;      Params:         0       0       0       0
  3303 ;;      Locals:         0       0       0       0
  3304 ;;      Temps:          0       0       0       0
  3305 ;;      Totals:         0       0       0       0
  3306 ;;Total ram usage:        0 bytes
  3307 ;; Hardware stack levels used: 1
  3308 ;; Hardware stack levels required when called: 5
  3309 ;; This function calls:
  3310 ;;		Nothing
  3311 ;; This function is called by:
  3312 ;;		_main
  3313 ;; This function uses a non-reentrant model
  3314 ;;
  3315                           
  3316     048F                     _error_signal:	
  3317                           ;psect for function _error_signal
  3318                           
  3319     048F                     l1931:	
  3320                           ;incstack = 0
  3321                           ; Regs used in _error_signal: []
  3322                           
  3323                           
  3324                           ;sensor.c: 55:     error_flag = 1;
  3325     048F  0140               	movlb	0	; select bank0
  3326     0490  01C9               	clrf	_error_flag
  3327     0491  0AC9               	incf	_error_flag,f
  3328     0492                     l47:
  3329     0492  0008               	return
  3330     0493                     __end_of_error_signal:
  3331                           
  3332                           	psect	text9
  3333     03EB                     __ptext9:	
  3334 ;; *************** function _SensorBoardType_validation *****************
  3335 ;; Defined at:
  3336 ;;		line 40 in file "sensor.c"
  3337 ;; Parameters:    Size  Location     Type
  3338 ;;  SensorBoardT    1    wreg     unsigned char 
  3339 ;; Auto vars:     Size  Location     Type
  3340 ;;  SensorBoardT    1    3[COMMON] unsigned char 
  3341 ;; Return value:  Size  Location     Type
  3342 ;;                  1    wreg      unsigned char 
  3343 ;; Registers used:
  3344 ;;		wreg, status,2, status,0
  3345 ;; Tracked objects:
  3346 ;;		On entry : 0/0
  3347 ;;		On exit  : 0/0
  3348 ;;		Unchanged: 0/0
  3349 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3350 ;;      Params:         0       0       0       0
  3351 ;;      Locals:         1       0       0       0
  3352 ;;      Temps:          0       0       0       0
  3353 ;;      Totals:         1       0       0       0
  3354 ;;Total ram usage:        1 bytes
  3355 ;; Hardware stack levels used: 1
  3356 ;; Hardware stack levels required when called: 5
  3357 ;; This function calls:
  3358 ;;		Nothing
  3359 ;; This function is called by:
  3360 ;;		_main
  3361 ;; This function uses a non-reentrant model
  3362 ;;
  3363                           
  3364     03EB                     _SensorBoardType_validation:	
  3365                           ;psect for function _SensorBoardType_validation
  3366                           
  3367                           
  3368                           ;incstack = 0
  3369                           ; Regs used in _SensorBoardType_validation: [wreg+status,2+status,0]
  3370                           ;SensorBoardType_validation@SensorBoardType stored from wreg
  3371     03EB  00F3               	movwf	SensorBoardType_validation@SensorBoardType
  3372     03EC                     l1919:
  3373                           
  3374                           ;sensor.c: 40: uint8_t SensorBoardType_validation (uint8_t SensorBoardType);sensor.c: 41
      +                          : {;sensor.c: 42:     if(SensorBoardType>=1)
  3375     03EC  0873               	movf	SensorBoardType_validation@SensorBoardType,w
  3376     03ED  1903               	btfsc	3,2
  3377     03EE  2BF0               	goto	u601
  3378     03EF  2BF1               	goto	u600
  3379     03F0                     u601:
  3380     03F0  2BF9               	goto	l1927
  3381     03F1                     u600:
  3382     03F1                     l1921:
  3383                           
  3384                           ;sensor.c: 43:     {;sensor.c: 44:         if(SensorBoardType<=12)
  3385     03F1  300D               	movlw	13
  3386     03F2  0273               	subwf	SensorBoardType_validation@SensorBoardType,w
  3387     03F3  1803               	skipnc
  3388     03F4  2BF6               	goto	u611
  3389     03F5  2BF7               	goto	u610
  3390     03F6                     u611:
  3391     03F6  2BF9               	goto	l1927
  3392     03F7                     u610:
  3393     03F7                     l1923:
  3394                           
  3395                           ;sensor.c: 45:         {;sensor.c: 46:             return(1);
  3396     03F7  3001               	movlw	1
  3397     03F8  2BFA               	goto	l44
  3398     03F9                     l1927:
  3399                           
  3400                           ;sensor.c: 50:     return(0);
  3401     03F9  3000               	movlw	0
  3402     03FA                     l44:
  3403     03FA  0008               	return
  3404     03FB                     __end_of_SensorBoardType_validation:
  3405                           
  3406                           	psect	text10
  3407     03FB                     __ptext10:	
  3408 ;; *************** function _SYSTEM_Initialize *****************
  3409 ;; Defined at:
  3410 ;;		line 50 in file "mcc_generated_files/mcc.c"
  3411 ;; Parameters:    Size  Location     Type
  3412 ;;		None
  3413 ;; Auto vars:     Size  Location     Type
  3414 ;;		None
  3415 ;; Return value:  Size  Location     Type
  3416 ;;                  1    wreg      void 
  3417 ;; Registers used:
  3418 ;;		wreg, status,2, status,0, pclath, cstack
  3419 ;; Tracked objects:
  3420 ;;		On entry : 0/0
  3421 ;;		On exit  : 0/0
  3422 ;;		Unchanged: 0/0
  3423 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3424 ;;      Params:         0       0       0       0
  3425 ;;      Locals:         0       0       0       0
  3426 ;;      Temps:          0       0       0       0
  3427 ;;      Totals:         0       0       0       0
  3428 ;;Total ram usage:        0 bytes
  3429 ;; Hardware stack levels used: 1
  3430 ;; Hardware stack levels required when called: 7
  3431 ;; This function calls:
  3432 ;;		_I2C1_Initialize
  3433 ;;		_OSCILLATOR_Initialize
  3434 ;;		_PIN_MANAGER_Initialize
  3435 ;;		_TMR0_Initialize
  3436 ;;		_WDT_Initialize
  3437 ;; This function is called by:
  3438 ;;		_main
  3439 ;; This function uses a non-reentrant model
  3440 ;;
  3441                           
  3442     03FB                     _SYSTEM_Initialize:	
  3443                           ;psect for function _SYSTEM_Initialize
  3444                           
  3445     03FB                     l1981:	
  3446                           ;incstack = 0
  3447                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  3448                           
  3449                           
  3450                           ;mcc_generated_files/mcc.c: 53:     I2C1_Initialize();
  3451     03FB  3184  244F  3183   	fcall	_I2C1_Initialize
  3452                           
  3453                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
  3454     03FE  3183  232B  3183   	fcall	_PIN_MANAGER_Initialize
  3455                           
  3456                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
  3457     0401  3184  247A  3183   	fcall	_OSCILLATOR_Initialize
  3458     0404                     l1983:
  3459                           
  3460                           ;mcc_generated_files/mcc.c: 56:     WDT_Initialize();
  3461     0404  3184  2497  3183   	fcall	_WDT_Initialize
  3462     0407                     l1985:
  3463                           
  3464                           ;mcc_generated_files/mcc.c: 57:     TMR0_Initialize();
  3465     0407  3183  23C4  3183   	fcall	_TMR0_Initialize
  3466     040A                     l549:
  3467     040A  0008               	return
  3468     040B                     __end_of_SYSTEM_Initialize:
  3469                           
  3470                           	psect	text11
  3471     0497                     __ptext11:	
  3472 ;; *************** function _WDT_Initialize *****************
  3473 ;; Defined at:
  3474 ;;		line 70 in file "mcc_generated_files/mcc.c"
  3475 ;; Parameters:    Size  Location     Type
  3476 ;;		None
  3477 ;; Auto vars:     Size  Location     Type
  3478 ;;		None
  3479 ;; Return value:  Size  Location     Type
  3480 ;;                  1    wreg      void 
  3481 ;; Registers used:
  3482 ;;		status,2
  3483 ;; Tracked objects:
  3484 ;;		On entry : 0/0
  3485 ;;		On exit  : 0/0
  3486 ;;		Unchanged: 0/0
  3487 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3488 ;;      Params:         0       0       0       0
  3489 ;;      Locals:         0       0       0       0
  3490 ;;      Temps:          0       0       0       0
  3491 ;;      Totals:         0       0       0       0
  3492 ;;Total ram usage:        0 bytes
  3493 ;; Hardware stack levels used: 1
  3494 ;; Hardware stack levels required when called: 5
  3495 ;; This function calls:
  3496 ;;		Nothing
  3497 ;; This function is called by:
  3498 ;;		_SYSTEM_Initialize
  3499 ;; This function uses a non-reentrant model
  3500 ;;
  3501                           
  3502     0497                     _WDT_Initialize:	
  3503                           ;psect for function _WDT_Initialize
  3504                           
  3505     0497                     l1883:	
  3506                           ;incstack = 0
  3507                           ; Regs used in _WDT_Initialize: [status,2]
  3508                           
  3509                           
  3510                           ;mcc_generated_files/mcc.c: 73:     WDTCON = 0x00;
  3511     0497  0150               	movlb	16	; select bank16
  3512     0498  018C               	clrf	12	;volatile
  3513     0499                     l555:
  3514     0499  0008               	return
  3515     049A                     __end_of_WDT_Initialize:
  3516                           
  3517                           	psect	text12
  3518     03C4                     __ptext12:	
  3519 ;; *************** function _TMR0_Initialize *****************
  3520 ;; Defined at:
  3521 ;;		line 71 in file "mcc_generated_files/tmr0.c"
  3522 ;; Parameters:    Size  Location     Type
  3523 ;;		None
  3524 ;; Auto vars:     Size  Location     Type
  3525 ;;		None
  3526 ;; Return value:  Size  Location     Type
  3527 ;;                  1    wreg      void 
  3528 ;; Registers used:
  3529 ;;		wreg, status,2, status,0, pclath, cstack
  3530 ;; Tracked objects:
  3531 ;;		On entry : 0/0
  3532 ;;		On exit  : 0/0
  3533 ;;		Unchanged: 0/0
  3534 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3535 ;;      Params:         0       0       0       0
  3536 ;;      Locals:         0       0       0       0
  3537 ;;      Temps:          0       0       0       0
  3538 ;;      Totals:         0       0       0       0
  3539 ;;Total ram usage:        0 bytes
  3540 ;; Hardware stack levels used: 1
  3541 ;; Hardware stack levels required when called: 6
  3542 ;; This function calls:
  3543 ;;		_TMR0_SetInterruptHandler
  3544 ;; This function is called by:
  3545 ;;		_SYSTEM_Initialize
  3546 ;; This function uses a non-reentrant model
  3547 ;;
  3548                           
  3549     03C4                     _TMR0_Initialize:	
  3550                           ;psect for function _TMR0_Initialize
  3551                           
  3552     03C4                     l1851:	
  3553                           ;incstack = 0
  3554                           ; Regs used in _TMR0_Initialize: [wreg+status,2+status,0+pclath+cstack]
  3555                           
  3556                           
  3557                           ;mcc_generated_files/tmr0.c: 76:     T0CON1 = 0x69;
  3558     03C4  3069               	movlw	105
  3559     03C5  014B               	movlb	11	; select bank11
  3560     03C6  009F               	movwf	31	;volatile
  3561                           
  3562                           ;mcc_generated_files/tmr0.c: 79:     TMR0H = 0x9B;
  3563     03C7  309B               	movlw	155
  3564     03C8  009D               	movwf	29	;volatile
  3565     03C9                     l1853:
  3566                           
  3567                           ;mcc_generated_files/tmr0.c: 82:     TMR0L = 0x00;
  3568     03C9  019C               	clrf	28	;volatile
  3569     03CA                     l1855:
  3570                           
  3571                           ;mcc_generated_files/tmr0.c: 85:     PIR0bits.TMR0IF = 0;
  3572     03CA  014E               	movlb	14	; select bank14
  3573     03CB  128C               	bcf	12,5	;volatile
  3574     03CC                     l1857:
  3575                           
  3576                           ;mcc_generated_files/tmr0.c: 88:     PIE0bits.TMR0IE = 1;
  3577     03CC  1696               	bsf	22,5	;volatile
  3578     03CD                     l1859:
  3579                           
  3580                           ;mcc_generated_files/tmr0.c: 91:     TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandl
      +                          er);
  3581     03CD  3001               	movlw	low _TMR0_DefaultInterruptHandler
  3582     03CE  00F3               	movwf	TMR0_SetInterruptHandler@InterruptHandler
  3583     03CF  3003               	movlw	high _TMR0_DefaultInterruptHandler
  3584     03D0  00F4               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1
  3585     03D1  3184  2474  3183   	fcall	_TMR0_SetInterruptHandler
  3586     03D4                     l1861:
  3587                           
  3588                           ;mcc_generated_files/tmr0.c: 94:     T0CON0 = 0x80;
  3589     03D4  3080               	movlw	128
  3590     03D5  014B               	movlb	11	; select bank11
  3591     03D6  009E               	movwf	30	;volatile
  3592     03D7                     l428:
  3593     03D7  0008               	return
  3594     03D8                     __end_of_TMR0_Initialize:
  3595                           
  3596                           	psect	text13
  3597     0474                     __ptext13:	
  3598 ;; *************** function _TMR0_SetInterruptHandler *****************
  3599 ;; Defined at:
  3600 ;;		line 146 in file "mcc_generated_files/tmr0.c"
  3601 ;; Parameters:    Size  Location     Type
  3602 ;;  InterruptHan    2    3[COMMON] PTR FTN()void 
  3603 ;;		 -> TMR0_DefaultInterruptHandler(1), 
  3604 ;; Auto vars:     Size  Location     Type
  3605 ;;		None
  3606 ;; Return value:  Size  Location     Type
  3607 ;;                  1    wreg      void 
  3608 ;; Registers used:
  3609 ;;		wreg
  3610 ;; Tracked objects:
  3611 ;;		On entry : 0/0
  3612 ;;		On exit  : 0/0
  3613 ;;		Unchanged: 0/0
  3614 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3615 ;;      Params:         2       0       0       0
  3616 ;;      Locals:         0       0       0       0
  3617 ;;      Temps:          0       0       0       0
  3618 ;;      Totals:         2       0       0       0
  3619 ;;Total ram usage:        2 bytes
  3620 ;; Hardware stack levels used: 1
  3621 ;; Hardware stack levels required when called: 5
  3622 ;; This function calls:
  3623 ;;		Nothing
  3624 ;; This function is called by:
  3625 ;;		_TMR0_Initialize
  3626 ;; This function uses a non-reentrant model
  3627 ;;
  3628                           
  3629     0474                     _TMR0_SetInterruptHandler:	
  3630                           ;psect for function _TMR0_SetInterruptHandler
  3631                           
  3632     0474                     l1709:	
  3633                           ;incstack = 0
  3634                           ; Regs used in _TMR0_SetInterruptHandler: [wreg]
  3635                           
  3636                           
  3637                           ;mcc_generated_files/tmr0.c: 147:     TMR0_InterruptHandler = InterruptHandler;
  3638     0474  0874               	movf	TMR0_SetInterruptHandler@InterruptHandler+1,w
  3639     0475  0140               	movlb	0	; select bank0
  3640     0476  00CB               	movwf	_TMR0_InterruptHandler+1
  3641     0477  0873               	movf	TMR0_SetInterruptHandler@InterruptHandler,w
  3642     0478  00CA               	movwf	_TMR0_InterruptHandler
  3643     0479                     l450:
  3644     0479  0008               	return
  3645     047A                     __end_of_TMR0_SetInterruptHandler:
  3646                           
  3647                           	psect	text14
  3648     032B                     __ptext14:	
  3649 ;; *************** function _PIN_MANAGER_Initialize *****************
  3650 ;; Defined at:
  3651 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  3652 ;; Parameters:    Size  Location     Type
  3653 ;;		None
  3654 ;; Auto vars:     Size  Location     Type
  3655 ;;		None
  3656 ;; Return value:  Size  Location     Type
  3657 ;;                  1    wreg      void 
  3658 ;; Registers used:
  3659 ;;		wreg, status,2
  3660 ;; Tracked objects:
  3661 ;;		On entry : 0/0
  3662 ;;		On exit  : 0/0
  3663 ;;		Unchanged: 0/0
  3664 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3665 ;;      Params:         0       0       0       0
  3666 ;;      Locals:         0       0       0       0
  3667 ;;      Temps:          0       0       0       0
  3668 ;;      Totals:         0       0       0       0
  3669 ;;Total ram usage:        0 bytes
  3670 ;; Hardware stack levels used: 1
  3671 ;; Hardware stack levels required when called: 5
  3672 ;; This function calls:
  3673 ;;		Nothing
  3674 ;; This function is called by:
  3675 ;;		_SYSTEM_Initialize
  3676 ;; This function uses a non-reentrant model
  3677 ;;
  3678                           
  3679     032B                     _PIN_MANAGER_Initialize:	
  3680                           ;psect for function _PIN_MANAGER_Initialize
  3681                           
  3682     032B                     l1779:	
  3683                           ;incstack = 0
  3684                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  3685                           
  3686                           
  3687                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
  3688     032B  0140               	movlb	0	; select bank0
  3689     032C  0198               	clrf	24	;volatile
  3690                           
  3691                           ;mcc_generated_files/pin_manager.c: 61:     LATC = 0x00;
  3692     032D  019A               	clrf	26	;volatile
  3693     032E                     l1781:
  3694                           
  3695                           ;mcc_generated_files/pin_manager.c: 66:     TRISA = 0x3B;
  3696     032E  303B               	movlw	59
  3697     032F  0092               	movwf	18	;volatile
  3698     0330                     l1783:
  3699                           
  3700                           ;mcc_generated_files/pin_manager.c: 67:     TRISC = 0x3F;
  3701     0330  303F               	movlw	63
  3702     0331  0094               	movwf	20	;volatile
  3703                           
  3704                           ;mcc_generated_files/pin_manager.c: 72:     ANSELC = 0x00;
  3705     0332  017E               	movlb	62	; select bank62
  3706     0333  01CE               	clrf	78	;volatile
  3707     0334                     l1785:
  3708                           
  3709                           ;mcc_generated_files/pin_manager.c: 73:     ANSELA = 0x07;
  3710     0334  3007               	movlw	7
  3711     0335  00B8               	movwf	56	;volatile
  3712     0336                     l1787:
  3713                           
  3714                           ;mcc_generated_files/pin_manager.c: 78:     WPUA = 0x00;
  3715     0336  01B9               	clrf	57	;volatile
  3716     0337                     l1789:
  3717                           
  3718                           ;mcc_generated_files/pin_manager.c: 79:     WPUC = 0x00;
  3719     0337  01CF               	clrf	79	;volatile
  3720     0338                     l1791:
  3721                           
  3722                           ;mcc_generated_files/pin_manager.c: 84:     ODCONA = 0x00;
  3723     0338  01BA               	clrf	58	;volatile
  3724     0339                     l1793:
  3725                           
  3726                           ;mcc_generated_files/pin_manager.c: 85:     ODCONC = 0x00;
  3727     0339  01D0               	clrf	80	;volatile
  3728     033A                     l1795:
  3729                           
  3730                           ;mcc_generated_files/pin_manager.c: 90:     SLRCONA = 0x37;
  3731     033A  3037               	movlw	55
  3732     033B  00BB               	movwf	59	;volatile
  3733     033C                     l1797:
  3734                           
  3735                           ;mcc_generated_files/pin_manager.c: 91:     SLRCONC = 0x3F;
  3736     033C  303F               	movlw	63
  3737     033D  00D1               	movwf	81	;volatile
  3738     033E                     l1799:
  3739                           
  3740                           ;mcc_generated_files/pin_manager.c: 96:     INLVLA = 0x3F;
  3741     033E  303F               	movlw	63
  3742     033F  00BC               	movwf	60	;volatile
  3743     0340                     l1801:
  3744                           
  3745                           ;mcc_generated_files/pin_manager.c: 97:     INLVLC = 0x3F;
  3746     0340  303F               	movlw	63
  3747     0341  00D2               	movwf	82	;volatile
  3748     0342                     l1803:
  3749                           
  3750                           ;mcc_generated_files/pin_manager.c: 106:     RC0PPS = 0x07;
  3751     0342  3007               	movlw	7
  3752     0343  00A0               	movwf	32	;volatile
  3753     0344                     l1805:
  3754                           
  3755                           ;mcc_generated_files/pin_manager.c: 107:     SSP1CLKPPS = 0x10;
  3756     0344  3010               	movlw	16
  3757     0345  017D               	movlb	61	; select bank61
  3758     0346  00C5               	movwf	69	;volatile
  3759     0347                     l1807:
  3760                           
  3761                           ;mcc_generated_files/pin_manager.c: 108:     RC1PPS = 0x08;
  3762     0347  3008               	movlw	8
  3763     0348  017E               	movlb	62	; select bank62
  3764     0349  00A1               	movwf	33	;volatile
  3765     034A                     l1809:
  3766                           
  3767                           ;mcc_generated_files/pin_manager.c: 109:     SSP1DATPPS = 0x11;
  3768     034A  3011               	movlw	17
  3769     034B  017D               	movlb	61	; select bank61
  3770     034C  00C6               	movwf	70	;volatile
  3771     034D                     l86:
  3772     034D  0008               	return
  3773     034E                     __end_of_PIN_MANAGER_Initialize:
  3774                           
  3775                           	psect	text15
  3776     047A                     __ptext15:	
  3777 ;; *************** function _OSCILLATOR_Initialize *****************
  3778 ;; Defined at:
  3779 ;;		line 60 in file "mcc_generated_files/mcc.c"
  3780 ;; Parameters:    Size  Location     Type
  3781 ;;		None
  3782 ;; Auto vars:     Size  Location     Type
  3783 ;;		None
  3784 ;; Return value:  Size  Location     Type
  3785 ;;                  1    wreg      void 
  3786 ;; Registers used:
  3787 ;;		wreg, status,2
  3788 ;; Tracked objects:
  3789 ;;		On entry : 0/0
  3790 ;;		On exit  : 0/0
  3791 ;;		Unchanged: 0/0
  3792 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3793 ;;      Params:         0       0       0       0
  3794 ;;      Locals:         0       0       0       0
  3795 ;;      Temps:          0       0       0       0
  3796 ;;      Totals:         0       0       0       0
  3797 ;;Total ram usage:        0 bytes
  3798 ;; Hardware stack levels used: 1
  3799 ;; Hardware stack levels required when called: 5
  3800 ;; This function calls:
  3801 ;;		Nothing
  3802 ;; This function is called by:
  3803 ;;		_SYSTEM_Initialize
  3804 ;; This function uses a non-reentrant model
  3805 ;;
  3806                           
  3807     047A                     _OSCILLATOR_Initialize:	
  3808                           ;psect for function _OSCILLATOR_Initialize
  3809                           
  3810     047A                     l1877:	
  3811                           ;incstack = 0
  3812                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  3813                           
  3814                           
  3815                           ;mcc_generated_files/mcc.c: 63:     OSCEN = 0x00;
  3816     047A  0151               	movlb	17	; select bank17
  3817     047B  0191               	clrf	17	;volatile
  3818     047C                     l1879:
  3819                           
  3820                           ;mcc_generated_files/mcc.c: 65:     OSCFRQ = 0x03;
  3821     047C  3003               	movlw	3
  3822     047D  0093               	movwf	19	;volatile
  3823     047E                     l1881:
  3824                           
  3825                           ;mcc_generated_files/mcc.c: 67:     OSCTUNE = 0x00;
  3826     047E  0192               	clrf	18	;volatile
  3827     047F                     l552:
  3828     047F  0008               	return
  3829     0480                     __end_of_OSCILLATOR_Initialize:
  3830                           
  3831                           	psect	text16
  3832     044F                     __ptext16:	
  3833 ;; *************** function _I2C1_Initialize *****************
  3834 ;; Defined at:
  3835 ;;		line 113 in file "mcc_generated_files/i2c1_slave.c"
  3836 ;; Parameters:    Size  Location     Type
  3837 ;;		None
  3838 ;; Auto vars:     Size  Location     Type
  3839 ;;		None
  3840 ;; Return value:  Size  Location     Type
  3841 ;;                  1    wreg      void 
  3842 ;; Registers used:
  3843 ;;		wreg, status,2, status,0
  3844 ;; Tracked objects:
  3845 ;;		On entry : 0/0
  3846 ;;		On exit  : 0/0
  3847 ;;		Unchanged: 0/0
  3848 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3849 ;;      Params:         0       0       0       0
  3850 ;;      Locals:         0       0       0       0
  3851 ;;      Temps:          1       0       0       0
  3852 ;;      Totals:         1       0       0       0
  3853 ;;Total ram usage:        1 bytes
  3854 ;; Hardware stack levels used: 1
  3855 ;; Hardware stack levels required when called: 5
  3856 ;; This function calls:
  3857 ;;		Nothing
  3858 ;; This function is called by:
  3859 ;;		_SYSTEM_Initialize
  3860 ;;		_I2C1_Enable
  3861 ;; This function uses a non-reentrant model
  3862 ;;
  3863                           
  3864     044F                     _I2C1_Initialize:	
  3865                           ;psect for function _I2C1_Initialize
  3866                           
  3867     044F                     l1811:	
  3868                           ;incstack = 0
  3869                           ; Regs used in _I2C1_Initialize: [wreg+status,2+status,0]
  3870                           
  3871                           
  3872                           ;mcc_generated_files/i2c1_slave.c: 115:     SSP1STAT = 0x40;
  3873     044F  3040               	movlw	64
  3874     0450  0143               	movlb	3	; select bank3
  3875     0451  008F               	movwf	15	;volatile
  3876     0452                     l1813:
  3877                           
  3878                           ;mcc_generated_files/i2c1_slave.c: 116:     SSP1CON1 |= 0x06;
  3879     0452  3006               	movlw	6
  3880     0453  00F3               	movwf	??_I2C1_Initialize
  3881     0454  0873               	movf	??_I2C1_Initialize,w
  3882     0455  0490               	iorwf	16,f	;volatile
  3883     0456                     l1815:
  3884                           
  3885                           ;mcc_generated_files/i2c1_slave.c: 117:     SSP1CON2 = 0x00;
  3886     0456  0191               	clrf	17	;volatile
  3887     0457                     l1817:
  3888                           
  3889                           ;mcc_generated_files/i2c1_slave.c: 118:     SSP1CON1bits.SSPEN = 0;
  3890     0457  1290               	bcf	16,5	;volatile
  3891     0458                     l237:
  3892     0458  0008               	return
  3893     0459                     __end_of_I2C1_Initialize:
  3894                           
  3895                           	psect	intentry
  3896     0004                     __pintentry:	
  3897 ;; *************** function _INTERRUPT_InterruptManager *****************
  3898 ;; Defined at:
  3899 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  3900 ;; Parameters:    Size  Location     Type
  3901 ;;		None
  3902 ;; Auto vars:     Size  Location     Type
  3903 ;;		None
  3904 ;; Return value:  Size  Location     Type
  3905 ;;                  1    wreg      void 
  3906 ;; Registers used:
  3907 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3908 ;; Tracked objects:
  3909 ;;		On entry : 0/0
  3910 ;;		On exit  : 0/0
  3911 ;;		Unchanged: 0/0
  3912 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3913 ;;      Params:         0       0       0       0
  3914 ;;      Locals:         0       0       0       0
  3915 ;;      Temps:          0       0       0       0
  3916 ;;      Totals:         0       0       0       0
  3917 ;;Total ram usage:        0 bytes
  3918 ;; Hardware stack levels used: 1
  3919 ;; Hardware stack levels required when called: 4
  3920 ;; This function calls:
  3921 ;;		NULL
  3922 ;;		_I2C1_Isr
  3923 ;;		_TMR0_ISR
  3924 ;; This function is called by:
  3925 ;;		Interrupt level 1
  3926 ;; This function uses a non-reentrant model
  3927 ;;
  3928                           
  3929     0004                     _INTERRUPT_InterruptManager:
  3930                           
  3931                           ;incstack = 0
  3932     0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
  3933                           
  3934                           ; Regs used in _INTERRUPT_InterruptManager: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3935     0005  3180               	pagesel	$
  3936     0006                     i1l1987:
  3937                           
  3938                           ;mcc_generated_files/interrupt_manager.c: 55:     if(PIE0bits.TMR0IE == 1 && PIR0bits.TM
      +                          R0IF == 1)
  3939     0006  014E               	movlb	14	; select bank14
  3940     0007  1E96               	btfss	22,5	;volatile
  3941     0008  280A               	goto	u69_21
  3942     0009  280B               	goto	u69_20
  3943     000A                     u69_21:
  3944     000A  2813               	goto	i1l120
  3945     000B                     u69_20:
  3946     000B                     i1l1989:
  3947     000B  1E8C               	btfss	12,5	;volatile
  3948     000C  280E               	goto	u70_21
  3949     000D  280F               	goto	u70_20
  3950     000E                     u70_21:
  3951     000E  2813               	goto	i1l120
  3952     000F                     u70_20:
  3953     000F                     i1l1991:
  3954                           
  3955                           ;mcc_generated_files/interrupt_manager.c: 56:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 57:         TMR0_ISR();
  3956     000F  3184  240B  3180   	fcall	_TMR0_ISR
  3957                           
  3958                           ;mcc_generated_files/interrupt_manager.c: 58:     }
  3959     0012  282F               	goto	i1l128
  3960     0013                     i1l120:	
  3961                           ;mcc_generated_files/interrupt_manager.c: 59:     else if(INTCONbits.PEIE == 1)
  3962                           
  3963     0013  1F0B               	btfss	11,6	;volatile
  3964     0014  2816               	goto	u71_21
  3965     0015  2817               	goto	u71_20
  3966     0016                     u71_21:
  3967     0016  282F               	goto	i1l128
  3968     0017                     u71_20:
  3969     0017                     i1l1993:
  3970                           
  3971                           ;mcc_generated_files/interrupt_manager.c: 60:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 61:         if(PIE1bits.BCL1IE == 1 && PIR1bits.BCL1IF == 1)
  3972     0017  1D17               	btfss	23,2	;volatile
  3973     0018  281A               	goto	u72_21
  3974     0019  281B               	goto	u72_20
  3975     001A                     u72_21:
  3976     001A  2826               	goto	i1l123
  3977     001B                     u72_20:
  3978     001B                     i1l1995:
  3979     001B  1D0D               	btfss	13,2	;volatile
  3980     001C  281E               	goto	u73_21
  3981     001D  281F               	goto	u73_20
  3982     001E                     u73_21:
  3983     001E  2826               	goto	i1l123
  3984     001F                     u73_20:
  3985     001F                     i1l1997:
  3986                           
  3987                           ;mcc_generated_files/interrupt_manager.c: 62:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 63:             MSSP1_InterruptHandler();
  3988     001F  0140               	movlb	0	; select bank0
  3989     0020  0845               	movf	_MSSP1_InterruptHandler+1,w
  3990     0021  008A               	movwf	10
  3991     0022  0844               	movf	_MSSP1_InterruptHandler,w
  3992     0023  000A               	callw
  3993     0024  3180               	pagesel	$
  3994                           
  3995                           ;mcc_generated_files/interrupt_manager.c: 64:         }
  3996     0025  282F               	goto	i1l128
  3997     0026                     i1l123:	
  3998                           ;mcc_generated_files/interrupt_manager.c: 65:         else if(PIE1bits.SSP1IE == 1 && PI
      +                          R1bits.SSP1IF == 1)
  3999                           
  4000     0026  1C97               	btfss	23,1	;volatile
  4001     0027  2829               	goto	u74_21
  4002     0028  282A               	goto	u74_20
  4003     0029                     u74_21:
  4004     0029  282F               	goto	i1l127
  4005     002A                     u74_20:
  4006     002A                     i1l1999:
  4007     002A  1C8D               	btfss	13,1	;volatile
  4008     002B  282D               	goto	u75_21
  4009     002C  282E               	goto	u75_20
  4010     002D                     u75_21:
  4011     002D  282F               	goto	i1l127
  4012     002E                     u75_20:
  4013     002E  281F               	goto	i1l1997
  4014     002F                     i1l127:	
  4015                           ;mcc_generated_files/interrupt_manager.c: 76:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 78:     }
  4016                           
  4017     002F                     i1l128:
  4018     002F  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  4019     0030  0009               	retfie
  4020     0031                     __end_of_INTERRUPT_InterruptManager:
  4021                           
  4022                           	psect	text18
  4023     040B                     __ptext18:	
  4024 ;; *************** function _TMR0_ISR *****************
  4025 ;; Defined at:
  4026 ;;		line 131 in file "mcc_generated_files/tmr0.c"
  4027 ;; Parameters:    Size  Location     Type
  4028 ;;		None
  4029 ;; Auto vars:     Size  Location     Type
  4030 ;;		None
  4031 ;; Return value:  Size  Location     Type
  4032 ;;                  1    wreg      void 
  4033 ;; Registers used:
  4034 ;;		wreg, status,2, status,0, pclath, cstack
  4035 ;; Tracked objects:
  4036 ;;		On entry : 0/0
  4037 ;;		On exit  : 0/0
  4038 ;;		Unchanged: 0/0
  4039 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4040 ;;      Params:         0       0       0       0
  4041 ;;      Locals:         0       0       0       0
  4042 ;;      Temps:          0       0       0       0
  4043 ;;      Totals:         0       0       0       0
  4044 ;;Total ram usage:        0 bytes
  4045 ;; Hardware stack levels used: 1
  4046 ;; Hardware stack levels required when called: 1
  4047 ;; This function calls:
  4048 ;;		NULL
  4049 ;;		_TMR0_DefaultInterruptHandler
  4050 ;; This function is called by:
  4051 ;;		_INTERRUPT_InterruptManager
  4052 ;; This function uses a non-reentrant model
  4053 ;;
  4054                           
  4055     040B                     _TMR0_ISR:	
  4056                           ;psect for function _TMR0_ISR
  4057                           
  4058     040B                     i1l1933:	
  4059                           ;incstack = 0
  4060                           ; Regs used in _TMR0_ISR: [wreg+status,2+status,0+pclath+cstack]
  4061                           
  4062                           
  4063                           ;mcc_generated_files/tmr0.c: 134:     PIR0bits.TMR0IF = 0;
  4064     040B  014E               	movlb	14	; select bank14
  4065     040C  128C               	bcf	12,5	;volatile
  4066     040D                     i1l1935:
  4067                           
  4068                           ;mcc_generated_files/tmr0.c: 136:     if(TMR0_InterruptHandler)
  4069     040D  0140               	movlb	0	; select bank0
  4070     040E  084A               	movf	_TMR0_InterruptHandler,w
  4071     040F  044B               	iorwf	_TMR0_InterruptHandler+1,w
  4072     0410  1903               	btfsc	3,2
  4073     0411  2C13               	goto	u62_21
  4074     0412  2C14               	goto	u62_20
  4075     0413                     u62_21:
  4076     0413  2C19               	goto	i1l447
  4077     0414                     u62_20:
  4078     0414                     i1l1937:
  4079                           
  4080                           ;mcc_generated_files/tmr0.c: 137:     {;mcc_generated_files/tmr0.c: 138:         TMR0_In
      +                          terruptHandler();
  4081     0414  084B               	movf	_TMR0_InterruptHandler+1,w
  4082     0415  008A               	movwf	10
  4083     0416  084A               	movf	_TMR0_InterruptHandler,w
  4084     0417  000A               	callw
  4085     0418  3184               	pagesel	$
  4086     0419                     i1l447:
  4087     0419  0008               	return
  4088     041A                     __end_of_TMR0_ISR:
  4089                           
  4090                           	psect	text19
  4091     0301                     __ptext19:	
  4092 ;; *************** function _TMR0_DefaultInterruptHandler *****************
  4093 ;; Defined at:
  4094 ;;		line 152 in file "mcc_generated_files/tmr0.c"
  4095 ;; Parameters:    Size  Location     Type
  4096 ;;		None
  4097 ;; Auto vars:     Size  Location     Type
  4098 ;;		None
  4099 ;; Return value:  Size  Location     Type
  4100 ;;                  1    wreg      void 
  4101 ;; Registers used:
  4102 ;;		wreg, status,2, status,0
  4103 ;; Tracked objects:
  4104 ;;		On entry : 0/0
  4105 ;;		On exit  : 0/0
  4106 ;;		Unchanged: 0/0
  4107 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4108 ;;      Params:         0       0       0       0
  4109 ;;      Locals:         0       0       0       0
  4110 ;;      Temps:          1       0       0       0
  4111 ;;      Totals:         1       0       0       0
  4112 ;;Total ram usage:        1 bytes
  4113 ;; Hardware stack levels used: 1
  4114 ;; This function calls:
  4115 ;;		Nothing
  4116 ;; This function is called by:
  4117 ;;		_TMR0_Initialize
  4118 ;;		_TMR0_ISR
  4119 ;; This function uses a non-reentrant model
  4120 ;;
  4121                           
  4122     0301                     _TMR0_DefaultInterruptHandler:	
  4123                           ;psect for function _TMR0_DefaultInterruptHandler
  4124                           
  4125     0301                     i1l1863:	
  4126                           ;incstack = 0
  4127                           ; Regs used in _TMR0_DefaultInterruptHandler: [wreg+status,2+status,0]
  4128                           
  4129                           
  4130                           ;mcc_generated_files/tmr0.c: 156:     LED_timer++;
  4131     0301  3001               	movlw	1
  4132     0302  00F0               	movwf	??_TMR0_DefaultInterruptHandler
  4133     0303  0870               	movf	??_TMR0_DefaultInterruptHandler,w
  4134     0304  07FA               	addwf	_LED_timer,f
  4135                           
  4136                           ;mcc_generated_files/tmr0.c: 159:     if(error_flag == 1)
  4137     0305  0140               	movlb	0	; select bank0
  4138     0306  0349               	decf	_error_flag,w
  4139     0307  1D03               	btfss	3,2
  4140     0308  2B0A               	goto	u49_21
  4141     0309  2B0B               	goto	u49_20
  4142     030A                     u49_21:
  4143     030A  2B1B               	goto	i1l1871
  4144     030B                     u49_20:
  4145     030B                     i1l1865:
  4146                           
  4147                           ;mcc_generated_files/tmr0.c: 160:     {;mcc_generated_files/tmr0.c: 161:         if(LED_
      +                          timer == 5)
  4148     030B  3005               	movlw	5
  4149     030C  067A               	xorwf	_LED_timer,w
  4150     030D  1D03               	btfss	3,2
  4151     030E  2B10               	goto	u50_21
  4152     030F  2B11               	goto	u50_20
  4153     0310                     u50_21:
  4154     0310  2B12               	goto	i1l1867
  4155     0311                     u50_20:
  4156     0311                     i1l455:	
  4157                           ;mcc_generated_files/tmr0.c: 162:         {;mcc_generated_files/tmr0.c: 163:            
      +                           do { LATAbits.LATA2 = 1; } while(0);
  4158                           
  4159     0311  1518               	bsf	24,2	;volatile
  4160     0312                     i1l1867:
  4161                           
  4162                           ;mcc_generated_files/tmr0.c: 165:         if(LED_timer == 10)
  4163     0312  300A               	movlw	10
  4164     0313  067A               	xorwf	_LED_timer,w
  4165     0314  1D03               	btfss	3,2
  4166     0315  2B17               	goto	u51_21
  4167     0316  2B18               	goto	u51_20
  4168     0317                     u51_21:
  4169     0317  2B2A               	goto	i1l467
  4170     0318                     u51_20:
  4171     0318                     i1l458:	
  4172                           ;mcc_generated_files/tmr0.c: 166:         {;mcc_generated_files/tmr0.c: 167:            
      +                           do { LATAbits.LATA2 = 0; } while(0);
  4173                           
  4174     0318  1118               	bcf	24,2	;volatile
  4175     0319                     i1l1869:
  4176                           
  4177                           ;mcc_generated_files/tmr0.c: 168:             LED_timer = 0;
  4178     0319  01FA               	clrf	_LED_timer
  4179     031A  2B2A               	goto	i1l467
  4180     031B                     i1l1871:
  4181                           
  4182                           ;mcc_generated_files/tmr0.c: 171:         if(LED_timer == 50)
  4183     031B  3032               	movlw	50
  4184     031C  067A               	xorwf	_LED_timer,w
  4185     031D  1D03               	btfss	3,2
  4186     031E  2B20               	goto	u52_21
  4187     031F  2B21               	goto	u52_20
  4188     0320                     u52_21:
  4189     0320  2B22               	goto	i1l1873
  4190     0321                     u52_20:
  4191     0321                     i1l462:	
  4192                           ;mcc_generated_files/tmr0.c: 172:         {;mcc_generated_files/tmr0.c: 173:            
      +                           do { LATAbits.LATA2 = 1; } while(0);
  4193                           
  4194     0321  1518               	bsf	24,2	;volatile
  4195     0322                     i1l1873:
  4196                           
  4197                           ;mcc_generated_files/tmr0.c: 175:         if(LED_timer == 100)
  4198     0322  3064               	movlw	100
  4199     0323  067A               	xorwf	_LED_timer,w
  4200     0324  1D03               	btfss	3,2
  4201     0325  2B27               	goto	u53_21
  4202     0326  2B28               	goto	u53_20
  4203     0327                     u53_21:
  4204     0327  2B2A               	goto	i1l467
  4205     0328                     u53_20:
  4206     0328                     i1l465:	
  4207                           ;mcc_generated_files/tmr0.c: 176:         {;mcc_generated_files/tmr0.c: 177:            
      +                           do { LATAbits.LATA2 = 0; } while(0);
  4208                           
  4209     0328  1118               	bcf	24,2	;volatile
  4210     0329  2B19               	goto	i1l1869
  4211     032A                     i1l467:
  4212     032A  0008               	return
  4213     032B                     __end_of_TMR0_DefaultInterruptHandler:
  4214                           
  4215                           	psect	text20
  4216     01EA                     __ptext20:	
  4217 ;; *************** function _I2C1_Isr *****************
  4218 ;; Defined at:
  4219 ;;		line 170 in file "mcc_generated_files/i2c1_slave.c"
  4220 ;; Parameters:    Size  Location     Type
  4221 ;;		None
  4222 ;; Auto vars:     Size  Location     Type
  4223 ;;		None
  4224 ;; Return value:  Size  Location     Type
  4225 ;;                  1    wreg      void 
  4226 ;; Registers used:
  4227 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4228 ;; Tracked objects:
  4229 ;;		On entry : 0/0
  4230 ;;		On exit  : 0/0
  4231 ;;		Unchanged: 0/0
  4232 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4233 ;;      Params:         0       0       0       0
  4234 ;;      Locals:         0       0       0       0
  4235 ;;      Temps:          2       0       0       0
  4236 ;;      Totals:         2       0       0       0
  4237 ;;Total ram usage:        2 bytes
  4238 ;; Hardware stack levels used: 1
  4239 ;; Hardware stack levels required when called: 3
  4240 ;; This function calls:
  4241 ;;		_I2C1_SlaveAddrCallBack
  4242 ;;		_I2C1_SlaveClearIrq
  4243 ;;		_I2C1_SlaveIsAddr
  4244 ;;		_I2C1_SlaveIsRead
  4245 ;;		_I2C1_SlaveIsRxBufFull
  4246 ;;		_I2C1_SlaveIsTxBufEmpty
  4247 ;;		_I2C1_SlaveRdCallBack
  4248 ;;		_I2C1_SlaveReleaseClock
  4249 ;;		_I2C1_SlaveWrCallBack
  4250 ;; This function is called by:
  4251 ;;		_I2C1_Open
  4252 ;;		_INTERRUPT_InterruptManager
  4253 ;; This function uses a non-reentrant model
  4254 ;;
  4255                           
  4256     01EA                     _I2C1_Isr:	
  4257                           ;psect for function _I2C1_Isr
  4258                           
  4259     01EA                     i1l1939:	
  4260                           ;incstack = 0
  4261                           ; Regs used in _I2C1_Isr: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4262                           
  4263                           
  4264                           ;mcc_generated_files/i2c1_slave.c: 172:     I2C1_SlaveClearIrq();
  4265     01EA  3184  249D  3181   	fcall	_I2C1_SlaveClearIrq
  4266     01ED                     i1l1941:
  4267                           
  4268                           ;mcc_generated_files/i2c1_slave.c: 174:     if(I2C1_SlaveIsAddr())
  4269     01ED  3184  2460  3181   	fcall	_I2C1_SlaveIsAddr
  4270     01F0  3A00               	xorlw	0
  4271     01F1  1903               	skipnz
  4272     01F2  29F4               	goto	u63_21
  4273     01F3  29F5               	goto	u63_20
  4274     01F4                     u63_21:
  4275     01F4  2A05               	goto	i1l1949
  4276     01F5                     u63_20:
  4277     01F5                     i1l1943:
  4278                           
  4279                           ;mcc_generated_files/i2c1_slave.c: 175:     {;mcc_generated_files/i2c1_slave.c: 176:    
      +                               if(I2C1_SlaveIsRead())
  4280     01F5  3184  248A  3181   	fcall	_I2C1_SlaveIsRead
  4281     01F8  3A00               	xorlw	0
  4282     01F9  1903               	skipnz
  4283     01FA  29FC               	goto	u64_21
  4284     01FB  29FD               	goto	u64_20
  4285     01FC                     u64_21:
  4286     01FC  2A01               	goto	i1l1947
  4287     01FD                     u64_20:
  4288     01FD                     i1l1945:
  4289                           
  4290                           ;mcc_generated_files/i2c1_slave.c: 177:         {;mcc_generated_files/i2c1_slave.c: 178:
      +                                       i2c1SlaveState = I2C1_ADDR_TX;
  4291     01FD  3001               	movlw	1
  4292     01FE  0140               	movlb	0	; select bank0
  4293     01FF  00C6               	movwf	_i2c1SlaveState	;volatile
  4294                           
  4295                           ;mcc_generated_files/i2c1_slave.c: 179:         }
  4296     0200  2A3D               	goto	i1l1973
  4297     0201                     i1l1947:
  4298                           
  4299                           ;mcc_generated_files/i2c1_slave.c: 181:         {;mcc_generated_files/i2c1_slave.c: 182:
      +                                       i2c1SlaveState = I2C1_ADDR_RX;
  4300     0201  3002               	movlw	2
  4301     0202  0140               	movlb	0	; select bank0
  4302     0203  00C6               	movwf	_i2c1SlaveState	;volatile
  4303     0204  2A3D               	goto	i1l1973
  4304     0205                     i1l1949:
  4305                           
  4306                           ;mcc_generated_files/i2c1_slave.c: 186:     {;mcc_generated_files/i2c1_slave.c: 187:    
      +                               if(I2C1_SlaveIsRead())
  4307     0205  3184  248A  3181   	fcall	_I2C1_SlaveIsRead
  4308     0208  3A00               	xorlw	0
  4309     0209  1903               	skipnz
  4310     020A  2A0C               	goto	u65_21
  4311     020B  2A0D               	goto	u65_20
  4312     020C                     u65_21:
  4313     020C  2A11               	goto	i1l1953
  4314     020D                     u65_20:
  4315     020D                     i1l1951:
  4316                           
  4317                           ;mcc_generated_files/i2c1_slave.c: 188:         {;mcc_generated_files/i2c1_slave.c: 189:
      +                                       i2c1SlaveState = I2C1_DATA_TX;
  4318     020D  3003               	movlw	3
  4319     020E  0140               	movlb	0	; select bank0
  4320     020F  00C6               	movwf	_i2c1SlaveState	;volatile
  4321                           
  4322                           ;mcc_generated_files/i2c1_slave.c: 190:         }
  4323     0210  2A3D               	goto	i1l1973
  4324     0211                     i1l1953:
  4325                           
  4326                           ;mcc_generated_files/i2c1_slave.c: 192:         {;mcc_generated_files/i2c1_slave.c: 193:
      +                                       i2c1SlaveState = I2C1_DATA_RX;
  4327     0211  3004               	movlw	4
  4328     0212  0140               	movlb	0	; select bank0
  4329     0213  00C6               	movwf	_i2c1SlaveState	;volatile
  4330     0214  2A3D               	goto	i1l1973
  4331     0215                     i1l1955:
  4332                           
  4333                           ;mcc_generated_files/i2c1_slave.c: 200:             I2C1_SlaveAddrCallBack();
  4334     0215  3184  2442  3181   	fcall	_I2C1_SlaveAddrCallBack
  4335     0218                     i1l1957:
  4336                           
  4337                           ;mcc_generated_files/i2c1_slave.c: 201:             if(I2C1_SlaveIsTxBufEmpty())
  4338     0218  3184  2459  3181   	fcall	_I2C1_SlaveIsTxBufEmpty
  4339     021B  3A00               	xorlw	0
  4340     021C  1903               	skipnz
  4341     021D  2A1F               	goto	u66_21
  4342     021E  2A20               	goto	u66_20
  4343     021F                     u66_21:
  4344     021F  2A53               	goto	i1l1975
  4345     0220                     u66_20:
  4346     0220                     i1l1959:
  4347                           
  4348                           ;mcc_generated_files/i2c1_slave.c: 202:             {;mcc_generated_files/i2c1_slave.c: 
      +                          203:                 I2C1_SlaveWrCallBack();
  4349     0220  3184  2428  3181   	fcall	_I2C1_SlaveWrCallBack
  4350     0223  2A53               	goto	i1l1975
  4351     0224                     i1l1961:
  4352                           
  4353                           ;mcc_generated_files/i2c1_slave.c: 207:             I2C1_SlaveAddrCallBack();
  4354     0224  3184  2442  3181   	fcall	_I2C1_SlaveAddrCallBack
  4355                           
  4356                           ;mcc_generated_files/i2c1_slave.c: 208:             break;
  4357     0227  2A53               	goto	i1l1975
  4358     0228                     i1l1963:
  4359                           
  4360                           ;mcc_generated_files/i2c1_slave.c: 210:             if(I2C1_SlaveIsTxBufEmpty())
  4361     0228  3184  2459  3181   	fcall	_I2C1_SlaveIsTxBufEmpty
  4362     022B  3A00               	xorlw	0
  4363     022C  1903               	skipnz
  4364     022D  2A2F               	goto	u67_21
  4365     022E  2A30               	goto	u67_20
  4366     022F                     u67_21:
  4367     022F  2A53               	goto	i1l1975
  4368     0230                     u67_20:
  4369     0230  2A20               	goto	i1l1959
  4370     0231                     i1l1967:
  4371                           
  4372                           ;mcc_generated_files/i2c1_slave.c: 216:             if(I2C1_SlaveIsRxBufFull())
  4373     0231  3184  2493  3181   	fcall	_I2C1_SlaveIsRxBufFull
  4374     0234  3A00               	xorlw	0
  4375     0235  1903               	skipnz
  4376     0236  2A38               	goto	u68_21
  4377     0237  2A39               	goto	u68_20
  4378     0238                     u68_21:
  4379     0238  2A53               	goto	i1l1975
  4380     0239                     u68_20:
  4381     0239                     i1l1969:
  4382                           
  4383                           ;mcc_generated_files/i2c1_slave.c: 217:             {;mcc_generated_files/i2c1_slave.c: 
      +                          218:                 I2C1_SlaveRdCallBack();
  4384     0239  3184  2435  3181   	fcall	_I2C1_SlaveRdCallBack
  4385     023C  2A53               	goto	i1l1975
  4386     023D                     i1l1973:
  4387     023D  0846               	movf	_i2c1SlaveState,w	;volatile
  4388     023E  00F1               	movwf	??_I2C1_Isr
  4389     023F  01F2               	clrf	??_I2C1_Isr+1
  4390                           
  4391                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4392                           ; Switch size 1, requested type "simple"
  4393                           ; Number of cases is 1, Range of values is 0 to 0
  4394                           ; switch strategies available:
  4395                           ; Name         Instructions Cycles
  4396                           ; simple_byte            4     3 (average)
  4397                           ; direct_byte            8     6 (fixed)
  4398                           ; jumptable            260     6 (fixed)
  4399                           ;	Chosen strategy is simple_byte
  4400     0240  0872               	movf	??_I2C1_Isr+1,w
  4401     0241  3A00               	xorlw	0	; case 0
  4402     0242  1903               	skipnz
  4403     0243  2A45               	goto	i1l2243
  4404     0244  2A53               	goto	i1l1975
  4405     0245                     i1l2243:
  4406                           
  4407                           ; Switch size 1, requested type "simple"
  4408                           ; Number of cases is 4, Range of values is 1 to 4
  4409                           ; switch strategies available:
  4410                           ; Name         Instructions Cycles
  4411                           ; simple_byte           13     7 (average)
  4412                           ; direct_byte           17     9 (fixed)
  4413                           ; jumptable            263     9 (fixed)
  4414                           ;	Chosen strategy is simple_byte
  4415     0245  0871               	movf	??_I2C1_Isr,w
  4416     0246  3A01               	xorlw	1	; case 1
  4417     0247  1903               	skipnz
  4418     0248  2A15               	goto	i1l1955
  4419     0249  3A03               	xorlw	3	; case 2
  4420     024A  1903               	skipnz
  4421     024B  2A24               	goto	i1l1961
  4422     024C  3A01               	xorlw	1	; case 3
  4423     024D  1903               	skipnz
  4424     024E  2A28               	goto	i1l1963
  4425     024F  3A07               	xorlw	7	; case 4
  4426     0250  1903               	skipnz
  4427     0251  2A31               	goto	i1l1967
  4428     0252  2A53               	goto	i1l1975
  4429     0253                     i1l1975:
  4430                           
  4431                           ;mcc_generated_files/i2c1_slave.c: 224:     I2C1_SlaveReleaseClock();
  4432     0253  3184  249A  3181   	fcall	_I2C1_SlaveReleaseClock
  4433     0256                     i1l280:
  4434     0256  0008               	return
  4435     0257                     __end_of_I2C1_Isr:
  4436                           
  4437                           	psect	text21
  4438     0428                     __ptext21:	
  4439 ;; *************** function _I2C1_SlaveWrCallBack *****************
  4440 ;; Defined at:
  4441 ;;		line 263 in file "mcc_generated_files/i2c1_slave.c"
  4442 ;; Parameters:    Size  Location     Type
  4443 ;;		None
  4444 ;; Auto vars:     Size  Location     Type
  4445 ;;		None
  4446 ;; Return value:  Size  Location     Type
  4447 ;;                  1    wreg      void 
  4448 ;; Registers used:
  4449 ;;		wreg, status,2, status,0, pclath, cstack
  4450 ;; Tracked objects:
  4451 ;;		On entry : 0/0
  4452 ;;		On exit  : 0/0
  4453 ;;		Unchanged: 0/0
  4454 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4455 ;;      Params:         0       0       0       0
  4456 ;;      Locals:         0       0       0       0
  4457 ;;      Temps:          0       0       0       0
  4458 ;;      Totals:         0       0       0       0
  4459 ;;Total ram usage:        0 bytes
  4460 ;; Hardware stack levels used: 1
  4461 ;; Hardware stack levels required when called: 2
  4462 ;; This function calls:
  4463 ;;		NULL
  4464 ;;		_I2C1_SlaveDefWrInterruptHandler
  4465 ;; This function is called by:
  4466 ;;		_I2C1_Isr
  4467 ;; This function uses a non-reentrant model
  4468 ;;
  4469                           
  4470     0428                     _I2C1_SlaveWrCallBack:	
  4471                           ;psect for function _I2C1_SlaveWrCallBack
  4472                           
  4473     0428                     i1l1837:	
  4474                           ;incstack = 0
  4475                           ; Regs used in _I2C1_SlaveWrCallBack: [wreg+status,2+status,0+pclath+cstack]
  4476                           
  4477                           
  4478                           ;mcc_generated_files/i2c1_slave.c: 265:     if (I2C1_SlaveWrInterruptHandler)
  4479     0428  0140               	movlb	0	; select bank0
  4480     0429  0840               	movf	_I2C1_SlaveWrInterruptHandler,w
  4481     042A  0441               	iorwf	_I2C1_SlaveWrInterruptHandler+1,w
  4482     042B  1903               	btfsc	3,2
  4483     042C  2C2E               	goto	u47_21
  4484     042D  2C2F               	goto	u47_20
  4485     042E                     u47_21:
  4486     042E  2C34               	goto	i1l303
  4487     042F                     u47_20:
  4488     042F                     i1l1839:
  4489                           
  4490                           ;mcc_generated_files/i2c1_slave.c: 266:     {;mcc_generated_files/i2c1_slave.c: 267:    
      +                               I2C1_SlaveWrInterruptHandler();
  4491     042F  0841               	movf	_I2C1_SlaveWrInterruptHandler+1,w
  4492     0430  008A               	movwf	10
  4493     0431  0840               	movf	_I2C1_SlaveWrInterruptHandler,w
  4494     0432  000A               	callw
  4495     0433  3184               	pagesel	$
  4496     0434                     i1l303:
  4497     0434  0008               	return
  4498     0435                     __end_of_I2C1_SlaveWrCallBack:
  4499                           
  4500                           	psect	text22
  4501     0480                     __ptext22:	
  4502 ;; *************** function _I2C1_SlaveDefWrInterruptHandler *****************
  4503 ;; Defined at:
  4504 ;;		line 271 in file "mcc_generated_files/i2c1_slave.c"
  4505 ;; Parameters:    Size  Location     Type
  4506 ;;		None
  4507 ;; Auto vars:     Size  Location     Type
  4508 ;;		None
  4509 ;; Return value:  Size  Location     Type
  4510 ;;                  1    wreg      void 
  4511 ;; Registers used:
  4512 ;;		wreg, status,2, status,0, pclath, cstack
  4513 ;; Tracked objects:
  4514 ;;		On entry : 0/0
  4515 ;;		On exit  : 0/0
  4516 ;;		Unchanged: 0/0
  4517 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4518 ;;      Params:         0       0       0       0
  4519 ;;      Locals:         0       0       0       0
  4520 ;;      Temps:          0       0       0       0
  4521 ;;      Totals:         0       0       0       0
  4522 ;;Total ram usage:        0 bytes
  4523 ;; Hardware stack levels used: 1
  4524 ;; Hardware stack levels required when called: 1
  4525 ;; This function calls:
  4526 ;;		_I2C1_SlaveSendTxData
  4527 ;; This function is called by:
  4528 ;;		_I2C1_Open
  4529 ;;		_I2C1_SlaveWrCallBack
  4530 ;; This function uses a non-reentrant model
  4531 ;;
  4532                           
  4533     0480                     _I2C1_SlaveDefWrInterruptHandler:	
  4534                           ;psect for function _I2C1_SlaveDefWrInterruptHandler
  4535                           
  4536     0480                     i1l1703:	
  4537                           ;incstack = 0
  4538                           ; Regs used in _I2C1_SlaveDefWrInterruptHandler: [wreg+status,2+status,0+pclath+cstack]
  4539                           
  4540                           
  4541                           ;mcc_generated_files/i2c1_slave.c: 272:     I2C1_SlaveSendTxData(i2c1WrData);
  4542     0480  0879               	movf	_i2c1WrData,w	;volatile
  4543     0481  3184  2485  3184   	fcall	_I2C1_SlaveSendTxData
  4544     0484                     i1l306:
  4545     0484  0008               	return
  4546     0485                     __end_of_I2C1_SlaveDefWrInterruptHandler:
  4547                           
  4548                           	psect	text23
  4549     0485                     __ptext23:	
  4550 ;; *************** function _I2C1_SlaveSendTxData *****************
  4551 ;; Defined at:
  4552 ;;		line 407 in file "mcc_generated_files/i2c1_slave.c"
  4553 ;; Parameters:    Size  Location     Type
  4554 ;;  data            1    wreg     unsigned char 
  4555 ;; Auto vars:     Size  Location     Type
  4556 ;;  data            1    0[COMMON] unsigned char 
  4557 ;; Return value:  Size  Location     Type
  4558 ;;                  1    wreg      void 
  4559 ;; Registers used:
  4560 ;;		wreg
  4561 ;; Tracked objects:
  4562 ;;		On entry : 0/0
  4563 ;;		On exit  : 0/0
  4564 ;;		Unchanged: 0/0
  4565 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4566 ;;      Params:         0       0       0       0
  4567 ;;      Locals:         1       0       0       0
  4568 ;;      Temps:          0       0       0       0
  4569 ;;      Totals:         1       0       0       0
  4570 ;;Total ram usage:        1 bytes
  4571 ;; Hardware stack levels used: 1
  4572 ;; This function calls:
  4573 ;;		Nothing
  4574 ;; This function is called by:
  4575 ;;		_I2C1_SlaveDefWrInterruptHandler
  4576 ;;		_I2C1_Write
  4577 ;; This function uses a non-reentrant model
  4578 ;;
  4579                           
  4580     0485                     _I2C1_SlaveSendTxData:	
  4581                           ;psect for function _I2C1_SlaveSendTxData
  4582                           
  4583                           
  4584                           ;incstack = 0
  4585                           ; Regs used in _I2C1_SlaveSendTxData: [wreg]
  4586                           ;I2C1_SlaveSendTxData@data stored from wreg
  4587     0485  00F0               	movwf	I2C1_SlaveSendTxData@data
  4588     0486                     i1l1649:
  4589                           
  4590                           ;mcc_generated_files/i2c1_slave.c: 407: static __attribute__((inline)) void I2C1_SlaveSe
      +                          ndTxData(uint8_t data);mcc_generated_files/i2c1_slave.c: 408: {;mcc_generated_files/i2c1
      +                          _slave.c: 409:     SSP1BUF = data;
  4591     0486  0870               	movf	I2C1_SlaveSendTxData@data,w
  4592     0487  0143               	movlb	3	; select bank3
  4593     0488  008C               	movwf	12	;volatile
  4594     0489                     i1l382:
  4595     0489  0008               	return
  4596     048A                     __end_of_I2C1_SlaveSendTxData:
  4597                           
  4598                           	psect	text24
  4599     049A                     __ptext24:	
  4600 ;; *************** function _I2C1_SlaveReleaseClock *****************
  4601 ;; Defined at:
  4602 ;;		line 377 in file "mcc_generated_files/i2c1_slave.c"
  4603 ;; Parameters:    Size  Location     Type
  4604 ;;		None
  4605 ;; Auto vars:     Size  Location     Type
  4606 ;;		None
  4607 ;; Return value:  Size  Location     Type
  4608 ;;                  1    wreg      void 
  4609 ;; Registers used:
  4610 ;;		None
  4611 ;; Tracked objects:
  4612 ;;		On entry : 0/0
  4613 ;;		On exit  : 0/0
  4614 ;;		Unchanged: 0/0
  4615 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4616 ;;      Params:         0       0       0       0
  4617 ;;      Locals:         0       0       0       0
  4618 ;;      Temps:          0       0       0       0
  4619 ;;      Totals:         0       0       0       0
  4620 ;;Total ram usage:        0 bytes
  4621 ;; Hardware stack levels used: 1
  4622 ;; This function calls:
  4623 ;;		Nothing
  4624 ;; This function is called by:
  4625 ;;		_I2C1_Isr
  4626 ;; This function uses a non-reentrant model
  4627 ;;
  4628                           
  4629     049A                     _I2C1_SlaveReleaseClock:	
  4630                           ;psect for function _I2C1_SlaveReleaseClock
  4631                           
  4632     049A                     i1l1849:	
  4633                           ;incstack = 0
  4634                           ; Regs used in _I2C1_SlaveReleaseClock: []
  4635                           
  4636                           
  4637                           ;mcc_generated_files/i2c1_slave.c: 379:     SSP1CON1bits.CKP = 1;
  4638     049A  0143               	movlb	3	; select bank3
  4639     049B  1610               	bsf	16,4	;volatile
  4640     049C                     i1l364:
  4641     049C  0008               	return
  4642     049D                     __end_of_I2C1_SlaveReleaseClock:
  4643                           
  4644                           	psect	text25
  4645     0435                     __ptext25:	
  4646 ;; *************** function _I2C1_SlaveRdCallBack *****************
  4647 ;; Defined at:
  4648 ;;		line 238 in file "mcc_generated_files/i2c1_slave.c"
  4649 ;; Parameters:    Size  Location     Type
  4650 ;;		None
  4651 ;; Auto vars:     Size  Location     Type
  4652 ;;		None
  4653 ;; Return value:  Size  Location     Type
  4654 ;;                  1    wreg      void 
  4655 ;; Registers used:
  4656 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4657 ;; Tracked objects:
  4658 ;;		On entry : 0/0
  4659 ;;		On exit  : 0/0
  4660 ;;		Unchanged: 0/0
  4661 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4662 ;;      Params:         0       0       0       0
  4663 ;;      Locals:         0       0       0       0
  4664 ;;      Temps:          0       0       0       0
  4665 ;;      Totals:         0       0       0       0
  4666 ;;Total ram usage:        0 bytes
  4667 ;; Hardware stack levels used: 1
  4668 ;; Hardware stack levels required when called: 2
  4669 ;; This function calls:
  4670 ;;		NULL
  4671 ;;		_I2C1_SlaveDefRdInterruptHandler
  4672 ;; This function is called by:
  4673 ;;		_I2C1_Isr
  4674 ;; This function uses a non-reentrant model
  4675 ;;
  4676                           
  4677     0435                     _I2C1_SlaveRdCallBack:	
  4678                           ;psect for function _I2C1_SlaveRdCallBack
  4679                           
  4680     0435                     i1l1845:	
  4681                           ;incstack = 0
  4682                           ; Regs used in _I2C1_SlaveRdCallBack: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4683                           
  4684                           
  4685                           ;mcc_generated_files/i2c1_slave.c: 240:     if (I2C1_SlaveRdInterruptHandler)
  4686     0435  0140               	movlb	0	; select bank0
  4687     0436  0842               	movf	_I2C1_SlaveRdInterruptHandler,w
  4688     0437  0443               	iorwf	_I2C1_SlaveRdInterruptHandler+1,w
  4689     0438  1903               	btfsc	3,2
  4690     0439  2C3B               	goto	u48_21
  4691     043A  2C3C               	goto	u48_20
  4692     043B                     u48_21:
  4693     043B  2C41               	goto	i1l290
  4694     043C                     u48_20:
  4695     043C                     i1l1847:
  4696                           
  4697                           ;mcc_generated_files/i2c1_slave.c: 241:     {;mcc_generated_files/i2c1_slave.c: 243:    
      +                               I2C1_SlaveRdInterruptHandler();
  4698     043C  0843               	movf	_I2C1_SlaveRdInterruptHandler+1,w
  4699     043D  008A               	movwf	10
  4700     043E  0842               	movf	_I2C1_SlaveRdInterruptHandler,w
  4701     043F  000A               	callw
  4702     0440  3184               	pagesel	$
  4703     0441                     i1l290:
  4704     0441  0008               	return
  4705     0442                     __end_of_I2C1_SlaveRdCallBack:
  4706                           
  4707                           	psect	text26
  4708     03D8                     __ptext26:	
  4709 ;; *************** function _I2C1_SlaveDefRdInterruptHandler *****************
  4710 ;; Defined at:
  4711 ;;		line 248 in file "mcc_generated_files/i2c1_slave.c"
  4712 ;; Parameters:    Size  Location     Type
  4713 ;;		None
  4714 ;; Auto vars:     Size  Location     Type
  4715 ;;		None
  4716 ;; Return value:  Size  Location     Type
  4717 ;;                  1    wreg      void 
  4718 ;; Registers used:
  4719 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4720 ;; Tracked objects:
  4721 ;;		On entry : 0/0
  4722 ;;		On exit  : 0/0
  4723 ;;		Unchanged: 0/0
  4724 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4725 ;;      Params:         0       0       0       0
  4726 ;;      Locals:         0       0       0       0
  4727 ;;      Temps:          0       0       0       0
  4728 ;;      Totals:         0       0       0       0
  4729 ;;Total ram usage:        0 bytes
  4730 ;; Hardware stack levels used: 1
  4731 ;; Hardware stack levels required when called: 1
  4732 ;; This function calls:
  4733 ;;		_I2C1_SlaveGetRxData
  4734 ;; This function is called by:
  4735 ;;		_I2C1_Open
  4736 ;;		_I2C1_SlaveRdCallBack
  4737 ;; This function uses a non-reentrant model
  4738 ;;
  4739                           
  4740     03D8                     _I2C1_SlaveDefRdInterruptHandler:	
  4741                           ;psect for function _I2C1_SlaveDefRdInterruptHandler
  4742                           
  4743     03D8                     i1l1697:	
  4744                           ;incstack = 0
  4745                           ; Regs used in _I2C1_SlaveDefRdInterruptHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pcl
      +                          ath+cstack]
  4746                           
  4747                           
  4748                           ;mcc_generated_files/i2c1_slave.c: 250:     i2c1RdData = I2C1_SlaveGetRxData();
  4749     03D8  3184  24A0  3183   	fcall	_I2C1_SlaveGetRxData
  4750     03DB  0140               	movlb	0	; select bank0
  4751     03DC  00C8               	movwf	_i2c1RdData	;volatile
  4752                           
  4753                           ;mcc_generated_files/i2c1_slave.c: 252:     while(i2cReadCnt < 3)
  4754     03DD  2BE4               	goto	i1l1701
  4755     03DE                     i1l1699:
  4756                           
  4757                           ;mcc_generated_files/i2c1_slave.c: 253:     {;mcc_generated_files/i2c1_slave.c: 254:    
      +                               i2cDataRead[i2cReadCnt] = i2c1RdData;
  4758     03DE  0878               	movf	_i2cReadCnt,w
  4759     03DF  3E37               	addlw	(low (_i2cDataRead| 0))& (0+255)
  4760     03E0  0086               	movwf	6
  4761     03E1  0187               	clrf	7
  4762     03E2  0848               	movf	_i2c1RdData,w	;volatile
  4763     03E3  0081               	movwf	1
  4764     03E4                     i1l1701:
  4765                           
  4766                           ;mcc_generated_files/i2c1_slave.c: 252:     while(i2cReadCnt < 3)
  4767     03E4  3003               	movlw	3
  4768     03E5  0278               	subwf	_i2cReadCnt,w	;volatile
  4769     03E6  1C03               	skipc
  4770     03E7  2BE9               	goto	u41_21
  4771     03E8  2BEA               	goto	u41_20
  4772     03E9                     u41_21:
  4773     03E9  2BDE               	goto	i1l1699
  4774     03EA                     u41_20:
  4775     03EA                     i1l296:
  4776     03EA  0008               	return
  4777     03EB                     __end_of_I2C1_SlaveDefRdInterruptHandler:
  4778                           
  4779                           	psect	text27
  4780     0459                     __ptext27:	
  4781 ;; *************** function _I2C1_SlaveIsTxBufEmpty *****************
  4782 ;; Defined at:
  4783 ;;		line 397 in file "mcc_generated_files/i2c1_slave.c"
  4784 ;; Parameters:    Size  Location     Type
  4785 ;;		None
  4786 ;; Auto vars:     Size  Location     Type
  4787 ;;		None
  4788 ;; Return value:  Size  Location     Type
  4789 ;;                  1    wreg      _Bool 
  4790 ;; Registers used:
  4791 ;;		wreg, status,0
  4792 ;; Tracked objects:
  4793 ;;		On entry : 0/0
  4794 ;;		On exit  : 0/0
  4795 ;;		Unchanged: 0/0
  4796 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4797 ;;      Params:         0       0       0       0
  4798 ;;      Locals:         0       0       0       0
  4799 ;;      Temps:          0       0       0       0
  4800 ;;      Totals:         0       0       0       0
  4801 ;;Total ram usage:        0 bytes
  4802 ;; Hardware stack levels used: 1
  4803 ;; This function calls:
  4804 ;;		Nothing
  4805 ;; This function is called by:
  4806 ;;		_I2C1_Isr
  4807 ;; This function uses a non-reentrant model
  4808 ;;
  4809                           
  4810     0459                     _I2C1_SlaveIsTxBufEmpty:	
  4811                           ;psect for function _I2C1_SlaveIsTxBufEmpty
  4812                           
  4813     0459                     i1l1833:	
  4814                           ;incstack = 0
  4815                           ; Regs used in _I2C1_SlaveIsTxBufEmpty: [wreg+status,0]
  4816                           
  4817                           
  4818                           ;mcc_generated_files/i2c1_slave.c: 399:     return !SSP1STATbits.BF;
  4819     0459  1003               	clrc
  4820     045A  0143               	movlb	3	; select bank3
  4821     045B  1C0F               	btfss	15,0	;volatile
  4822     045C  1403               	setc
  4823     045D  3000               	movlw	0
  4824     045E  3D09               	addwfc	9,w
  4825     045F                     i1l376:
  4826     045F  0008               	return
  4827     0460                     __end_of_I2C1_SlaveIsTxBufEmpty:
  4828                           
  4829                           	psect	text28
  4830     0493                     __ptext28:	
  4831 ;; *************** function _I2C1_SlaveIsRxBufFull *****************
  4832 ;; Defined at:
  4833 ;;		line 402 in file "mcc_generated_files/i2c1_slave.c"
  4834 ;; Parameters:    Size  Location     Type
  4835 ;;		None
  4836 ;; Auto vars:     Size  Location     Type
  4837 ;;		None
  4838 ;; Return value:  Size  Location     Type
  4839 ;;                  1    wreg      _Bool 
  4840 ;; Registers used:
  4841 ;;		wreg, status,2, status,0
  4842 ;; Tracked objects:
  4843 ;;		On entry : 0/0
  4844 ;;		On exit  : 0/0
  4845 ;;		Unchanged: 0/0
  4846 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4847 ;;      Params:         0       0       0       0
  4848 ;;      Locals:         0       0       0       0
  4849 ;;      Temps:          0       0       0       0
  4850 ;;      Totals:         0       0       0       0
  4851 ;;Total ram usage:        0 bytes
  4852 ;; Hardware stack levels used: 1
  4853 ;; This function calls:
  4854 ;;		Nothing
  4855 ;; This function is called by:
  4856 ;;		_I2C1_Isr
  4857 ;; This function uses a non-reentrant model
  4858 ;;
  4859                           
  4860     0493                     _I2C1_SlaveIsRxBufFull:	
  4861                           ;psect for function _I2C1_SlaveIsRxBufFull
  4862                           
  4863     0493                     i1l1841:	
  4864                           ;incstack = 0
  4865                           ; Regs used in _I2C1_SlaveIsRxBufFull: [wreg+status,2+status,0]
  4866                           
  4867                           
  4868                           ;mcc_generated_files/i2c1_slave.c: 404:     return SSP1STATbits.BF;
  4869     0493  0143               	movlb	3	; select bank3
  4870     0494  080F               	movf	15,w	;volatile
  4871     0495  3901               	andlw	1
  4872     0496                     i1l379:
  4873     0496  0008               	return
  4874     0497                     __end_of_I2C1_SlaveIsRxBufFull:
  4875                           
  4876                           	psect	text29
  4877     048A                     __ptext29:	
  4878 ;; *************** function _I2C1_SlaveIsRead *****************
  4879 ;; Defined at:
  4880 ;;		line 367 in file "mcc_generated_files/i2c1_slave.c"
  4881 ;; Parameters:    Size  Location     Type
  4882 ;;		None
  4883 ;; Auto vars:     Size  Location     Type
  4884 ;;		None
  4885 ;; Return value:  Size  Location     Type
  4886 ;;                  1    wreg      _Bool 
  4887 ;; Registers used:
  4888 ;;		wreg, status,2, status,0
  4889 ;; Tracked objects:
  4890 ;;		On entry : 0/0
  4891 ;;		On exit  : 0/0
  4892 ;;		Unchanged: 0/0
  4893 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4894 ;;      Params:         0       0       0       0
  4895 ;;      Locals:         0       0       0       0
  4896 ;;      Temps:          0       0       0       0
  4897 ;;      Totals:         0       0       0       0
  4898 ;;Total ram usage:        0 bytes
  4899 ;; Hardware stack levels used: 1
  4900 ;; This function calls:
  4901 ;;		Nothing
  4902 ;; This function is called by:
  4903 ;;		_I2C1_Isr
  4904 ;;		_I2C1_IsRead
  4905 ;; This function uses a non-reentrant model
  4906 ;;
  4907                           
  4908     048A                     _I2C1_SlaveIsRead:	
  4909                           ;psect for function _I2C1_SlaveIsRead
  4910                           
  4911     048A                     i1l1819:	
  4912                           ;incstack = 0
  4913                           ; Regs used in _I2C1_SlaveIsRead: [wreg+status,2+status,0]
  4914                           
  4915                           
  4916                           ;mcc_generated_files/i2c1_slave.c: 369:     return (SSP1STATbits.R_nW);
  4917     048A  0143               	movlb	3	; select bank3
  4918     048B  0C0F               	rrf	15,w	;volatile
  4919     048C  0C89               	rrf	9,f
  4920     048D  3901               	andlw	1
  4921     048E                     i1l358:
  4922     048E  0008               	return
  4923     048F                     __end_of_I2C1_SlaveIsRead:
  4924                           
  4925                           	psect	text30
  4926     0460                     __ptext30:	
  4927 ;; *************** function _I2C1_SlaveIsAddr *****************
  4928 ;; Defined at:
  4929 ;;		line 362 in file "mcc_generated_files/i2c1_slave.c"
  4930 ;; Parameters:    Size  Location     Type
  4931 ;;		None
  4932 ;; Auto vars:     Size  Location     Type
  4933 ;;		None
  4934 ;; Return value:  Size  Location     Type
  4935 ;;                  1    wreg      _Bool 
  4936 ;; Registers used:
  4937 ;;		wreg, status,0
  4938 ;; Tracked objects:
  4939 ;;		On entry : 0/0
  4940 ;;		On exit  : 0/0
  4941 ;;		Unchanged: 0/0
  4942 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4943 ;;      Params:         0       0       0       0
  4944 ;;      Locals:         0       0       0       0
  4945 ;;      Temps:          0       0       0       0
  4946 ;;      Totals:         0       0       0       0
  4947 ;;Total ram usage:        0 bytes
  4948 ;; Hardware stack levels used: 1
  4949 ;; This function calls:
  4950 ;;		Nothing
  4951 ;; This function is called by:
  4952 ;;		_I2C1_Isr
  4953 ;; This function uses a non-reentrant model
  4954 ;;
  4955                           
  4956     0460                     _I2C1_SlaveIsAddr:	
  4957                           ;psect for function _I2C1_SlaveIsAddr
  4958                           
  4959     0460                     i1l1825:	
  4960                           ;incstack = 0
  4961                           ; Regs used in _I2C1_SlaveIsAddr: [wreg+status,0]
  4962                           
  4963                           
  4964                           ;mcc_generated_files/i2c1_slave.c: 364:     return !(SSP1STATbits.D_nA);
  4965     0460  1003               	clrc
  4966     0461  0143               	movlb	3	; select bank3
  4967     0462  1E8F               	btfss	15,5	;volatile
  4968     0463  1403               	setc
  4969     0464  3000               	movlw	0
  4970     0465  3D09               	addwfc	9,w
  4971     0466                     i1l355:
  4972     0466  0008               	return
  4973     0467                     __end_of_I2C1_SlaveIsAddr:
  4974                           
  4975                           	psect	text31
  4976     049D                     __ptext31:	
  4977 ;; *************** function _I2C1_SlaveClearIrq *****************
  4978 ;; Defined at:
  4979 ;;		line 372 in file "mcc_generated_files/i2c1_slave.c"
  4980 ;; Parameters:    Size  Location     Type
  4981 ;;		None
  4982 ;; Auto vars:     Size  Location     Type
  4983 ;;		None
  4984 ;; Return value:  Size  Location     Type
  4985 ;;                  1    wreg      void 
  4986 ;; Registers used:
  4987 ;;		None
  4988 ;; Tracked objects:
  4989 ;;		On entry : 0/0
  4990 ;;		On exit  : 0/0
  4991 ;;		Unchanged: 0/0
  4992 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4993 ;;      Params:         0       0       0       0
  4994 ;;      Locals:         0       0       0       0
  4995 ;;      Temps:          0       0       0       0
  4996 ;;      Totals:         0       0       0       0
  4997 ;;Total ram usage:        0 bytes
  4998 ;; Hardware stack levels used: 1
  4999 ;; This function calls:
  5000 ;;		Nothing
  5001 ;; This function is called by:
  5002 ;;		_I2C1_Isr
  5003 ;; This function uses a non-reentrant model
  5004 ;;
  5005                           
  5006     049D                     _I2C1_SlaveClearIrq:	
  5007                           ;psect for function _I2C1_SlaveClearIrq
  5008                           
  5009     049D                     i1l1823:	
  5010                           ;incstack = 0
  5011                           ; Regs used in _I2C1_SlaveClearIrq: []
  5012                           
  5013                           
  5014                           ;mcc_generated_files/i2c1_slave.c: 374:     PIR1bits.SSP1IF = 0;
  5015     049D  014E               	movlb	14	; select bank14
  5016     049E  108D               	bcf	13,1	;volatile
  5017     049F                     i1l361:
  5018     049F  0008               	return
  5019     04A0                     __end_of_I2C1_SlaveClearIrq:
  5020                           
  5021                           	psect	text32
  5022     0442                     __ptext32:	
  5023 ;; *************** function _I2C1_SlaveAddrCallBack *****************
  5024 ;; Defined at:
  5025 ;;		line 280 in file "mcc_generated_files/i2c1_slave.c"
  5026 ;; Parameters:    Size  Location     Type
  5027 ;;		None
  5028 ;; Auto vars:     Size  Location     Type
  5029 ;;		None
  5030 ;; Return value:  Size  Location     Type
  5031 ;;                  1    wreg      void 
  5032 ;; Registers used:
  5033 ;;		wreg, status,2, status,0, pclath, cstack
  5034 ;; Tracked objects:
  5035 ;;		On entry : 0/0
  5036 ;;		On exit  : 0/0
  5037 ;;		Unchanged: 0/0
  5038 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5039 ;;      Params:         0       0       0       0
  5040 ;;      Locals:         0       0       0       0
  5041 ;;      Temps:          0       0       0       0
  5042 ;;      Totals:         0       0       0       0
  5043 ;;Total ram usage:        0 bytes
  5044 ;; Hardware stack levels used: 1
  5045 ;; Hardware stack levels required when called: 2
  5046 ;; This function calls:
  5047 ;;		NULL
  5048 ;;		_I2C1_SlaveDefAddrInterruptHandler
  5049 ;; This function is called by:
  5050 ;;		_I2C1_Isr
  5051 ;; This function uses a non-reentrant model
  5052 ;;
  5053                           
  5054     0442                     _I2C1_SlaveAddrCallBack:	
  5055                           ;psect for function _I2C1_SlaveAddrCallBack
  5056                           
  5057     0442                     i1l1829:	
  5058                           ;incstack = 0
  5059                           ; Regs used in _I2C1_SlaveAddrCallBack: [wreg+status,2+status,0+pclath+cstack]
  5060                           
  5061                           
  5062                           ;mcc_generated_files/i2c1_slave.c: 282:     if (I2C1_SlaveAddrInterruptHandler) {
  5063     0442  0140               	movlb	0	; select bank0
  5064     0443  083E               	movf	_I2C1_SlaveAddrInterruptHandler,w
  5065     0444  043F               	iorwf	_I2C1_SlaveAddrInterruptHandler+1,w
  5066     0445  1903               	btfsc	3,2
  5067     0446  2C48               	goto	u46_21
  5068     0447  2C49               	goto	u46_20
  5069     0448                     u46_21:
  5070     0448  2C4E               	goto	i1l313
  5071     0449                     u46_20:
  5072     0449                     i1l1831:
  5073                           
  5074                           ;mcc_generated_files/i2c1_slave.c: 283:         I2C1_SlaveAddrInterruptHandler();
  5075     0449  083F               	movf	_I2C1_SlaveAddrInterruptHandler+1,w
  5076     044A  008A               	movwf	10
  5077     044B  083E               	movf	_I2C1_SlaveAddrInterruptHandler,w
  5078     044C  000A               	callw
  5079     044D  3184               	pagesel	$
  5080     044E                     i1l313:
  5081     044E  0008               	return
  5082     044F                     __end_of_I2C1_SlaveAddrCallBack:
  5083                           
  5084                           	psect	text33
  5085     0467                     __ptext33:	
  5086 ;; *************** function _I2C1_SlaveDefAddrInterruptHandler *****************
  5087 ;; Defined at:
  5088 ;;		line 288 in file "mcc_generated_files/i2c1_slave.c"
  5089 ;; Parameters:    Size  Location     Type
  5090 ;;		None
  5091 ;; Auto vars:     Size  Location     Type
  5092 ;;		None
  5093 ;; Return value:  Size  Location     Type
  5094 ;;                  1    wreg      void 
  5095 ;; Registers used:
  5096 ;;		wreg, status,2, pclath, cstack
  5097 ;; Tracked objects:
  5098 ;;		On entry : 0/0
  5099 ;;		On exit  : 0/0
  5100 ;;		Unchanged: 0/0
  5101 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5102 ;;      Params:         0       0       0       0
  5103 ;;      Locals:         0       0       0       0
  5104 ;;      Temps:          0       0       0       0
  5105 ;;      Totals:         0       0       0       0
  5106 ;;Total ram usage:        0 bytes
  5107 ;; Hardware stack levels used: 1
  5108 ;; Hardware stack levels required when called: 1
  5109 ;; This function calls:
  5110 ;;		_I2C1_SlaveGetRxData
  5111 ;; This function is called by:
  5112 ;;		_I2C1_Open
  5113 ;;		_I2C1_SlaveAddrCallBack
  5114 ;; This function uses a non-reentrant model
  5115 ;;
  5116                           
  5117     0467                     _I2C1_SlaveDefAddrInterruptHandler:	
  5118                           ;psect for function _I2C1_SlaveDefAddrInterruptHandler
  5119                           
  5120     0467                     i1l1705:	
  5121                           ;incstack = 0
  5122                           ; Regs used in _I2C1_SlaveDefAddrInterruptHandler: [wreg+status,2+pclath+cstack]
  5123                           
  5124                           
  5125                           ;mcc_generated_files/i2c1_slave.c: 289:     i2c1SlaveAddr = I2C1_SlaveGetRxData();
  5126     0467  3184  24A0  3184   	fcall	_I2C1_SlaveGetRxData
  5127     046A  0140               	movlb	0	; select bank0
  5128     046B  00C7               	movwf	_i2c1SlaveAddr	;volatile
  5129     046C                     i1l1707:
  5130                           
  5131                           ;mcc_generated_files/i2c1_slave.c: 291:     i2cReadCnt = 0;
  5132     046C  01F8               	clrf	_i2cReadCnt	;volatile
  5133     046D                     i1l316:
  5134     046D  0008               	return
  5135     046E                     __end_of_I2C1_SlaveDefAddrInterruptHandler:
  5136                           
  5137                           	psect	text34
  5138     04A0                     __ptext34:	
  5139 ;; *************** function _I2C1_SlaveGetRxData *****************
  5140 ;; Defined at:
  5141 ;;		line 412 in file "mcc_generated_files/i2c1_slave.c"
  5142 ;; Parameters:    Size  Location     Type
  5143 ;;		None
  5144 ;; Auto vars:     Size  Location     Type
  5145 ;;		None
  5146 ;; Return value:  Size  Location     Type
  5147 ;;                  1    wreg      unsigned char 
  5148 ;; Registers used:
  5149 ;;		wreg
  5150 ;; Tracked objects:
  5151 ;;		On entry : 0/0
  5152 ;;		On exit  : 0/0
  5153 ;;		Unchanged: 0/0
  5154 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5155 ;;      Params:         0       0       0       0
  5156 ;;      Locals:         0       0       0       0
  5157 ;;      Temps:          0       0       0       0
  5158 ;;      Totals:         0       0       0       0
  5159 ;;Total ram usage:        0 bytes
  5160 ;; Hardware stack levels used: 1
  5161 ;; This function calls:
  5162 ;;		Nothing
  5163 ;; This function is called by:
  5164 ;;		_I2C1_SlaveDefRdInterruptHandler
  5165 ;;		_I2C1_SlaveDefAddrInterruptHandler
  5166 ;;		_I2C1_Read
  5167 ;; This function uses a non-reentrant model
  5168 ;;
  5169                           
  5170     04A0                     _I2C1_SlaveGetRxData:	
  5171                           ;psect for function _I2C1_SlaveGetRxData
  5172                           
  5173     04A0                     i1l1645:	
  5174                           ;incstack = 0
  5175                           ; Regs used in _I2C1_SlaveGetRxData: [wreg]
  5176                           
  5177                           
  5178                           ;mcc_generated_files/i2c1_slave.c: 414:     return SSP1BUF;
  5179     04A0  0143               	movlb	3	; select bank3
  5180     04A1  080C               	movf	12,w	;volatile
  5181     04A2                     i1l385:
  5182     04A2  0008               	return
  5183     04A3                     __end_of_I2C1_SlaveGetRxData:
  5184     007E                     btemp	set	126	;btemp
  5185     007E                     int$flags	set	126
  5186     007E                     wtemp0	set	126
  5187                           
  5188                           	psect	idloc
  5189                           
  5190                           ;Config register IDLOC0 @ 0x8000
  5191                           ;	unspecified, using default values
  5192     8000                     	org	32768
  5193     8000  3FFF               	dw	16383
  5194                           
  5195                           ;Config register IDLOC1 @ 0x8001
  5196                           ;	unspecified, using default values
  5197     8001                     	org	32769
  5198     8001  3FFF               	dw	16383
  5199                           
  5200                           ;Config register IDLOC2 @ 0x8002
  5201                           ;	unspecified, using default values
  5202     8002                     	org	32770
  5203     8002  3FFF               	dw	16383
  5204                           
  5205                           ;Config register IDLOC3 @ 0x8003
  5206                           ;	unspecified, using default values
  5207     8003                     	org	32771
  5208     8003  3FFF               	dw	16383
  5209                           
  5210                           	psect	config
  5211                           
  5212                           ;Config register CONFIG1 @ 0x8007
  5213                           ;	External Oscillator Mode Selection bits
  5214                           ;	FEXTOSC = OFF, Oscillator not enabled
  5215                           ;	Power-up Default Value for COSC bits
  5216                           ;	RSTOSC = HFINTOSC_32MHZ, HFINTOSC (32 MHz)
  5217                           ;	Clock Out Enable bit
  5218                           ;	CLKOUTEN = OFF, CLKOUT function is disabled; I/O function on RA4
  5219                           ;	VDD Range Analog Calibration Selection bit
  5220                           ;	VDDAR = HI, Internal analog systems are calibrated for operation between VDD = 2.3V - 
      +                          5.5V
  5221     8007                     	org	32775
  5222     8007  3FCD               	dw	16333
  5223                           
  5224                           ;Config register CONFIG2 @ 0x8008
  5225                           ;	Master Clear Enable bit
  5226                           ;	MCLRE = EXTMCLR, If LVP = 0, MCLR pin is MCLR; If LVP = 1, RA3 pin function is MCLR
  5227                           ;	Power-up Timer Selection bits
  5228                           ;	PWRTS = PWRT_OFF, PWRT is disabled
  5229                           ;	WDT Operating Mode bits
  5230                           ;	WDTE = OFF, WDT disabled; SEN is ignored
  5231                           ;	Brown-out Reset Enable bits
  5232                           ;	BOREN = ON, Brown-out Reset Enabled, SBOREN bit is ignored
  5233                           ;	Brown-out Reset Voltage Selection bit
  5234                           ;	BORV = LO, Brown-out Reset Voltage (VBOR) set to 1.9V
  5235                           ;	PPSLOCKED One-Way Set Enable bit
  5236                           ;	PPS1WAY = ON, The PPSLOCKED bit can be set once after an unlocking sequence is execute
      +                          d; once PPSLOCKED is set, all future changes to PPS registers are prevented
  5237                           ;	Stack Overflow/Underflow Reset Enable bit
  5238                           ;	STVREN = ON, Stack Overflow or Underflow will cause a reset
  5239     8008                     	org	32776
  5240     8008  3FE7               	dw	16359
  5241                           
  5242                           ;Config register CONFIG3 @ 0x8009
  5243                           ;	unspecified, using default values
  5244     8009                     	org	32777
  5245     8009  3FFF               	dw	16383
  5246                           
  5247                           ;Config register CONFIG4 @ 0x800A
  5248                           ;	Boot Block Size Selection bits
  5249                           ;	BBSIZE = BB512, 512 words boot block size
  5250                           ;	Boot Block Enable bit
  5251                           ;	BBEN = OFF, Boot Block is disabled
  5252                           ;	SAF Enable bit
  5253                           ;	SAFEN = ON, SAF is enabled
  5254                           ;	Application Block Write Protection bit
  5255                           ;	WRTAPP = OFF, Application Block is not write-protected
  5256                           ;	Boot Block Write Protection bit
  5257                           ;	WRTB = OFF, Boot Block is not write-protected
  5258                           ;	Configuration Registers Write Protection bit
  5259                           ;	WRTC = OFF, Configuration Registers are not write-protected
  5260                           ;	Storage Area Flash (SAF) Write Protection bit
  5261                           ;	WRTSAF = OFF, SAF is not write-protected
  5262                           ;	Low Voltage Programming Enable bit
  5263                           ;	LVP = ON, Low Voltage programming enabled. MCLR/Vpp pin function is MCLR. MCLRE Config
      +                          uration bit is ignored.
  5264     800A                     	org	32778
  5265     800A  3FEF               	dw	16367
  5266                           
  5267                           ;Config register CONFIG5 @ 0x800B
  5268                           ;	User Program Flash Memory Code Protection bit
  5269                           ;	CP = OFF, User Program Flash Memory code protection is disabled
  5270     800B                     	org	32779
  5271     800B  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         86
    Persistent  34
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      11
    BANK0            80     23      44
    BANK1            80      0      64
    BANK2            80      0       0

Pointer List with Targets:

    FLASH_WriteBlock@flashWordArray	PTR unsigned short  size(1) Largest target is 64
		 -> memory_initialize@ramBuff(BANK1[64]), 

    FLASH_WriteWord@ramBuf	PTR unsigned short  size(1) Largest target is 64
		 -> memory_initialize@ramBuff(BANK1[64]), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_DefaultInterruptHandler(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_DefaultInterruptHandler(), NULL(), 

    I2C1_SlaveBusColInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), I2C1_SlaveDefBusColInterruptHandler(), 

    I2C1_SlaveWrColInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), I2C1_SlaveDefWrColInterruptHandler(), 

    I2C1_SlaveAddrInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), I2C1_SlaveDefAddrInterruptHandler(), 

    I2C1_SlaveWrInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), I2C1_SlaveDefWrInterruptHandler(), 

    I2C1_SlaveRdInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), I2C1_SlaveDefRdInterruptHandler(), 

    MSSP1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), I2C1_Isr(), 


Critical Paths under _main in COMMON

    _memory_initialize->_FLASH_WriteWord
    _FLASH_WriteWord->___wmul
    _FLASH_WriteBlock->_FLASH_EraseBlock
    _TMR0_Initialize->_TMR0_SetInterruptHandler

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _INTERRUPT_InterruptManager->_I2C1_Isr
    _TMR0_ISR->_TMR0_DefaultInterruptHandler
    _I2C1_SlaveDefWrInterruptHandler->_I2C1_SlaveSendTxData

Critical Paths under _main in BANK0

    _main->_memory_initialize
    _memory_initialize->_FLASH_WriteWord
    _FLASH_WriteWord->_FLASH_WriteBlock

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0    5551
                                             22 BANK0      1     1      0
                  _SYSTEM_Initialize
         _SensorBoardType_validation
                       _error_signal
                 _getSensorBoardType
                  _memory_initialize
 ---------------------------------------------------------------------------------
 (1) _memory_initialize                                    3     3      0    5344
                                             19 BANK0      3     3      0
                     _FLASH_ReadWord
                    _FLASH_WriteWord
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4    1216
                                              3 COMMON     4     0      4
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _FLASH_WriteWord                                     10     5      5    3666
                                              7 COMMON     1     1      0
                                             10 BANK0      9     4      5
                     _FLASH_ReadWord
                   _FLASH_WriteBlock
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (3) _FLASH_WriteBlock                                    10     7      3     815
                                              0 BANK0     10     7      3
                   _FLASH_EraseBlock
 ---------------------------------------------------------------------------------
 (4) _FLASH_EraseBlock                                     3     1      2     186
                                              3 COMMON     3     1      2
 ---------------------------------------------------------------------------------
 (3) _FLASH_ReadWord                                       3     1      2     276
                                              3 COMMON     3     1      2
 ---------------------------------------------------------------------------------
 (1) _getSensorBoardType                                   2     2      0       0
                                              3 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _error_signal                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SensorBoardType_validation                           1     1      0      44
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0      98
                    _I2C1_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR0_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      0     0      0      98
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR0_SetInterruptHandler                             2     0      2      98
                                              3 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C1_Initialize                                      1     1      0       0
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _INTERRUPT_InterruptManager                           0     0      0      22
                                NULL *
                           _I2C1_Isr *
                           _TMR0_ISR
 ---------------------------------------------------------------------------------
 (6) _TMR0_ISR                                             0     0      0       0
                                NULL *
       _TMR0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (7) _TMR0_DefaultInterruptHandler                         1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (6) _I2C1_Isr                                             2     2      0      22
                                              1 COMMON     2     2      0
             _I2C1_SlaveAddrCallBack
                 _I2C1_SlaveClearIrq
                   _I2C1_SlaveIsAddr
                   _I2C1_SlaveIsRead
              _I2C1_SlaveIsRxBufFull
             _I2C1_SlaveIsTxBufEmpty
               _I2C1_SlaveRdCallBack
             _I2C1_SlaveReleaseClock
               _I2C1_SlaveWrCallBack
 ---------------------------------------------------------------------------------
 (7) _I2C1_SlaveWrCallBack                                 0     0      0      22
                                NULL *
    _I2C1_SlaveDefWrInterruptHandler *
 ---------------------------------------------------------------------------------
 (8) _I2C1_SlaveDefWrInterruptHandler                      0     0      0      22
               _I2C1_SlaveSendTxData
 ---------------------------------------------------------------------------------
 (9) _I2C1_SlaveSendTxData                                 1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (7) _I2C1_SlaveReleaseClock                               0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C1_SlaveRdCallBack                                 0     0      0       0
                                NULL *
    _I2C1_SlaveDefRdInterruptHandler *
 ---------------------------------------------------------------------------------
 (8) _I2C1_SlaveDefRdInterruptHandler                      0     0      0       0
                _I2C1_SlaveGetRxData
 ---------------------------------------------------------------------------------
 (7) _I2C1_SlaveIsTxBufEmpty                               0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C1_SlaveIsRxBufFull                                0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C1_SlaveIsRead                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C1_SlaveIsAddr                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C1_SlaveClearIrq                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C1_SlaveAddrCallBack                               0     0      0       0
                                NULL *
  _I2C1_SlaveDefAddrInterruptHandler *
 ---------------------------------------------------------------------------------
 (8) _I2C1_SlaveDefAddrInterruptHandler                    0     0      0       0
                _I2C1_SlaveGetRxData
 ---------------------------------------------------------------------------------
 (9) _I2C1_SlaveGetRxData                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (7) NULL(Fake)                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _I2C1_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
     _WDT_Initialize
   _SensorBoardType_validation
   _error_signal
   _getSensorBoardType
   _memory_initialize
     _FLASH_ReadWord
     _FLASH_WriteWord
       _FLASH_ReadWord
       _FLASH_WriteBlock
         _FLASH_EraseBlock
       ___wmul (ARG)
     ___wmul

 _INTERRUPT_InterruptManager (ROOT)
   NULL(Fake) *
   _I2C1_Isr *
     _I2C1_SlaveAddrCallBack
       NULL(Fake) *
       _I2C1_SlaveDefAddrInterruptHandler *
         _I2C1_SlaveGetRxData
     _I2C1_SlaveClearIrq
     _I2C1_SlaveIsAddr
     _I2C1_SlaveIsRead
     _I2C1_SlaveIsRxBufFull
     _I2C1_SlaveIsTxBufEmpty
     _I2C1_SlaveRdCallBack
       NULL(Fake) *
       _I2C1_SlaveDefRdInterruptHandler *
         _I2C1_SlaveGetRxData
     _I2C1_SlaveReleaseClock
     _I2C1_SlaveWrCallBack
       NULL(Fake) *
       _I2C1_SlaveDefWrInterruptHandler *
         _I2C1_SlaveSendTxData
   _TMR0_ISR *
     NULL(Fake) *
     _TMR0_DefaultInterruptHandler *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM              F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      8       B       2       78.6%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     17      2C       5       55.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0      40       7       80.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
ABS                  0      0      77      10        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
DATA                 0      0      77      11        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%
BITSFR32             0      0       0      33        0.0%
SFR32                0      0       0      33        0.0%
BITSFR33             0      0       0      34        0.0%
SFR33                0      0       0      34        0.0%
BITSFR34             0      0       0      35        0.0%
SFR34                0      0       0      35        0.0%
BITSFR35             0      0       0      36        0.0%
SFR35                0      0       0      36        0.0%
BITSFR36             0      0       0      37        0.0%
SFR36                0      0       0      37        0.0%
BITSFR37             0      0       0      38        0.0%
SFR37                0      0       0      38        0.0%
BITSFR38             0      0       0      39        0.0%
SFR38                0      0       0      39        0.0%
BITSFR39             0      0       0      40        0.0%
SFR39                0      0       0      40        0.0%
BITSFR40             0      0       0      41        0.0%
SFR40                0      0       0      41        0.0%
BITSFR41             0      0       0      42        0.0%
SFR41                0      0       0      42        0.0%
BITSFR42             0      0       0      43        0.0%
SFR42                0      0       0      43        0.0%
BITSFR43             0      0       0      44        0.0%
SFR43                0      0       0      44        0.0%
BITSFR44             0      0       0      45        0.0%
SFR44                0      0       0      45        0.0%
BITSFR45             0      0       0      46        0.0%
SFR45                0      0       0      46        0.0%
BITSFR46             0      0       0      47        0.0%
SFR46                0      0       0      47        0.0%
BITSFR47             0      0       0      48        0.0%
SFR47                0      0       0      48        0.0%
BITSFR48             0      0       0      49        0.0%
SFR48                0      0       0      49        0.0%
BITSFR49             0      0       0      50        0.0%
SFR49                0      0       0      50        0.0%
BITSFR50             0      0       0      51        0.0%
SFR50                0      0       0      51        0.0%
BITSFR51             0      0       0      52        0.0%
SFR51                0      0       0      52        0.0%
BITSFR52             0      0       0      53        0.0%
SFR52                0      0       0      53        0.0%
BITSFR53             0      0       0      54        0.0%
SFR53                0      0       0      54        0.0%
BITSFR54             0      0       0      55        0.0%
SFR54                0      0       0      55        0.0%
BITSFR55             0      0       0      56        0.0%
SFR55                0      0       0      56        0.0%
BITSFR56             0      0       0      57        0.0%
SFR56                0      0       0      57        0.0%
BITSFR57             0      0       0      58        0.0%
SFR57                0      0       0      58        0.0%
BITSFR58             0      0       0      59        0.0%
SFR58                0      0       0      59        0.0%
BITSFR59             0      0       0      60        0.0%
SFR59                0      0       0      60        0.0%
BITSFR60             0      0       0      61        0.0%
SFR60                0      0       0      61        0.0%
BITSFR61             0      0       0      62        0.0%
SFR61                0      0       0      62        0.0%
BITSFR62             0      0       0      63        0.0%
SFR62                0      0       0      63        0.0%
BITSFR63             0      0       0      64        0.0%
SFR63                0      0       0      64        0.0%


Microchip Technology PIC Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Mon Apr 17 10:26:12 2023

                 ??_I2C1_SlaveAddrCallBack 0070                                         l44 03FA  
                                       l28 01E9                                         l47 0492  
                                       l39 0427                                         l86 034D  
                      ___wmul@multiplicand 0075                                        l237 0458  
                                      l501 02BA                                        l505 03AA  
                                      l450 0479                                        l428 03D7  
                                      l552 047F                                        l490 03C3  
                                      l555 0499                                        l549 040A  
                                      l495 0300                                        l663 035A  
                                      l592 038D                                        l665 036F  
                                      l593 038D                                        l498 026D  
                                      l499 02C2                                        u600 03F1  
                                      u601 03F0                                        u610 03F7  
                 __end_of_I2C1_SlaveIsAddr 0467                                        u611 03F6  
                                      u800 02A1                                        u801 02A0  
                                      u810 02BA                                        u811 02B9  
                                      u820 02ED                                        u821 02EC  
                                      u830 0355                                        u831 0354  
                                      u595 0421                                        u860 036A  
                                      u861 0369                                        u845 035B  
                                      u790 026C                                        u870 00F6  
                                      u791 026B                                        u855 0360  
                                      u871 00F5                                        u880 0382  
                                      u881 0381                                        u795 0268  
                 __end_of_I2C1_SlaveIsRead 048F                                        wreg 0009  
                         ?_FLASH_WriteWord 002A             FLASH_WriteBlock@flashWordArray 0022  
                                     l2101 03B5                                       l2111 03BE  
                                     l2103 03B6                                       l2105 03B7  
                                     l2201 0111                                       l2107 03B8  
                                     l2131 0279                                       l2123 026E  
                                     l2115 0257                                       l2211 01C5  
                                     l2203 0135                                       l2109 03B9  
                                     l2141 0282                                       l2125 0275  
                                     l2117 025E                                       l2205 0159  
                                     l2221 038C                                       l2213 0370  
                                     l2071 0393                                       l2151 02A8  
                                     l2143 028C                                       l2127 0277  
                                     l2119 0262                                       l2207 017D  
                                     l2215 0382                                       l2081 039B  
                                     l2073 0394                                       l2161 02BC  
                                     l2153 02A9                                       l2145 029A  
                                     l2137 027B                                       l2129 0278  
                                     l2209 01A1                                       l2217 0388  
                                     l2091 03A5                                       l2083 03A0  
                                     l2075 0397                                       l2155 02AA  
                                     l2147 02A1                                       l2139 027E  
                                     l2219 038B                                       l2093 03AB  
                                     l2085 03A1                                       l2077 0399  
                                     l2069 038F                                       l2157 02B0  
                                     l2149 02A3                                       l2181 02F7  
                                     l2173 02CE                                       l2165 02C3  
                                     l2095 03AF                                       l2087 03A2  
                                     l2079 039A                                       l2159 02B4  
                                     l2175 02E3                                       l2167 02CA  
                                     l2191 0364                                       l2183 034E  
                                     l1801 0340                                       l2097 03B0  
                                     l2089 03A3                                       l2177 02E7  
                                     l2193 036A                                       l2185 0351  
                         __end_of_I2C1_Isr 0257                                       l1811 044F  
                                     l1803 0342                                       l2099 03B3  
                                     l2179 02ED                                       l2187 0355  
                                     l1813 0452                                       l1805 0344  
                                     l1709 0474                                       l2189 035F  
                                     l2197 00E8                                       l1815 0456  
                                     l1807 0347                                       l2199 00F6  
                                     l1817 0457                                       l1809 034A  
                                     l1921 03F1                                       l1851 03C4  
                                     l1923 03F7                                       l1931 048F  
                                     l1915 041A                                       l1781 032E  
                                     l1861 03D4                                       l1853 03C9  
                                     l1791 0338                                       l1783 0330  
                                     l1855 03CA                                       l1927 03F9  
                                     l1919 03EC                                       l1881 047E  
                                     l1793 0339                                       l1785 0334  
                                     l1857 03CC                                       l1795 033A  
                                     l1787 0336                                       l1779 032B  
                                     l1859 03CD                                       l1883 0497  
                                     l1877 047A                                       l1797 033C  
                                     l1789 0337                                       l1981 03FB  
                                     l1879 047C                                       l1799 033E  
                                     l1983 0404                                       l1985 0407  
                                     _LATA 0018                                       _LATC 001A  
                                     _WPUA 1F39                                       _WPUC 1F4F  
                                     _main 0370                                       fsr0h 0005  
                                     fsr1h 0007                                       indf0 0000  
                                     fsr0l 0004                                       indf1 0001  
                                     fsr1l 0006                                       btemp 007E  
                        ?_FLASH_WriteBlock 0020                                       start 0031  
                               _i2c1RdData 0048                         ??_FLASH_WriteBlock 0023  
                               _i2c1WrData 0079               _I2C1_SlaveRdInterruptHandler 0042  
             _I2C1_SlaveWrInterruptHandler 0040                   memory_initialize@ramBuff 00A0  
                  __end_of_TMR0_Initialize 03D8             ??_TMR0_DefaultInterruptHandler 0070  
            __end_of_OSCILLATOR_Initialize 0480                                      ?_main 0070  
                                    i1l120 0013                                      i1l123 0026  
                                    i1l303 0434                                      i1l127 002F  
                                    i1l128 002F                                      i1l313 044E  
                                    i1l306 0484                                      i1l316 046D  
                                    i1l280 0256                                      i1l361 049F  
                                    i1l290 0441                                      i1l355 0466  
                                    i1l364 049C                                      i1l358 048E  
                                    i1l382 0489                                      i1l462 0321  
                                    i1l455 0311                                      i1l447 0419  
                                    i1l376 045F                                      i1l296 03EA  
                                    i1l385 04A2                                      i1l465 0328  
                                    i1l458 0318                                      i1l379 0496  
                                    i1l467 032A         __end_of_SensorBoardType_validation 03FB  
               _SensorBoardType_validation 03EB                                      _OSCEN 0891  
                                    u41_20 03EA                                      _TMR0H 059D  
                                    u41_21 03E9                                      _TMR0L 059C  
                                    u50_20 0311                                      u50_21 0310  
                                    u51_20 0318                                      u51_21 0317  
                                    _PORTA 000C                                      _PORTC 000E  
                                    u52_20 0321                                      u52_21 0320  
                                    u53_20 0328                                      u53_21 0327  
                                    u46_20 0449                                      u62_20 0414  
                                    u70_20 000F                                      u46_21 0448  
                                    u62_21 0413                                      u70_21 000E  
                                    u47_20 042F                                      u63_20 01F5  
                                    u71_20 0017                                      u47_21 042E  
                                    u63_21 01F4                                      u71_21 0016  
                                    u48_20 043C                                      u64_20 01FD  
                                    u72_20 001B                                      u48_21 043B  
                                    u64_21 01FC                                      u72_21 001A  
                                    u65_20 020D                                      u49_20 030B  
                                    u73_20 001F                                      u65_21 020C  
                                    u49_21 030A                                      u73_21 001E  
                                    _TRISA 0012                                      _TRISC 0014  
                                    u66_20 0220                                      u74_20 002A  
                                    u66_21 021F                                      u74_21 0029  
                                    u67_20 0230                                      u75_20 002E  
                                    u67_21 022F                                      u75_21 002D  
                                    u68_20 0239                                      u68_21 0238  
                                    u69_20 000B                                      u69_21 000A  
                ?_TMR0_SetInterruptHandler 0073                          ??_I2C1_Initialize 0073  
                         __end_of_TMR0_ISR 041A                             _WDT_Initialize 0497  
                               _i2cReadCnt 0078                             _i2c1SlaveState 0046  
                                    pclath 000A                                      status 0003  
                                    wtemp0 007E                            __initialization 00D0  
                             __end_of_main 038F                ?_INTERRUPT_InterruptManager 0070  
                                   ??_main 0078                         _I2C1_SlaveClearIrq 049D  
                   __end_of_WDT_Initialize 049A                        ?_I2C1_SlaveClearIrq 0070  
                FLASH_WriteBlock@writeAddr 0020                    ?_I2C1_SlaveReleaseClock 0070  
                                   _ANSELA 1F38                                     _ANSELC 1F4E  
                                   _T0CON0 059E                                     _T0CON1 059F  
                                   _RC0PPS 1F20                                     _RC1PPS 1F21  
                       _getSensorBoardType 041A                                     _ODCONA 1F3A  
                                   i1l2243 0245                                     _ODCONC 1F50  
                                   i1l1701 03E4                                     i1l1703 0480  
                                   i1l1705 0467                                     i1l1707 046C  
                                   i1l1645 04A0                                     i1l1831 0449  
                                   i1l1823 049D                                     i1l1825 0460  
                                   i1l1841 0493                                     i1l1833 0459  
                                   i1l1649 0486                                     i1l1819 048A  
                                   i1l1829 0442                                     i1l1845 0435  
                                   i1l1837 0428                                     i1l1941 01ED  
                                   i1l1933 040B                                     i1l1847 043C  
                                   i1l1839 042F                                     i1l1951 020D  
                                   i1l1943 01F5                                     i1l1871 031B  
                                   i1l1863 0301                                     i1l1935 040D  
                                   i1l1697 03D8                                     i1l1849 049A  
                                   i1l1961 0224                                     i1l1953 0211  
                                   i1l1945 01FD                                     i1l1873 0322  
                                   i1l1865 030B                                     i1l1937 0414  
                                   i1l1699 03DE                                     i1l1963 0228  
                                   i1l1955 0215                                     i1l1947 0201  
                                   i1l1939 01EA                                     i1l1867 0312  
                                   i1l1957 0218                                     i1l1973 023D  
                                   i1l1949 0205                                     i1l1869 0319  
                                   i1l1967 0231                                     i1l1959 0220  
                                   i1l1975 0253                                     i1l1991 000F  
                                   i1l1969 0239                                     i1l1993 0017  
                                   i1l1995 001B                                     i1l1987 0006  
                                   i1l1997 001F                                     i1l1989 000B  
                                   i1l1999 002A                                     _INLVLA 1F3C  
                                   _INLVLC 1F52                                     _OSCFRQ 0893  
                                   _WDTCON 080C                                _i2cDataRead 0037  
                      ?_getSensorBoardType 0070                       ??_I2C1_SlaveClearIrq 0070  
                            ?_error_signal 0070                                     ___wmul 034E  
            FLASH_WriteWord@blockStartAddr 0030                        FLASH_WriteWord@word 002D  
                         ?_TMR0_Initialize 0070                                  ?_I2C1_Isr 0070  
                  FLASH_ReadWord@flashAddr 0073                       ??_getSensorBoardType 0073  
                          ?_WDT_Initialize 0070             __end_of_I2C1_SlaveReleaseClock 049D  
 TMR0_SetInterruptHandler@InterruptHandler 0073                     _I2C1_SlaveAddrCallBack 0442  
                        _SYSTEM_Initialize 03FB                    __end_of__initialization 00E3  
                       ?_SYSTEM_Initialize 0070                             ??_error_signal 0073  
                           __pcstackCOMMON 0070                        ??_SYSTEM_Initialize 0075  
                                ?_TMR0_ISR 0070                           FLASH_WriteWord@i 0032  
                               ??_I2C1_Isr 0071                          ?_I2C1_SlaveIsAddr 0070  
                        ?_I2C1_SlaveIsRead 0070                FLASH_WriteBlock@GIEBitValue 0028  
                       ??_I2C1_SlaveIsAddr 0070                         ??_I2C1_SlaveIsRead 0070  
                __end_of_SYSTEM_Initialize 040B                                 __pbssBANK0 0037  
                               __pbssBANK1 00A0                       memory_initialize@TAG 0035  
                      _I2C1_SlaveGetRxData 04A0                      _I2C1_SlaveIsRxBufFull 0493  
                               __pmaintext 0370           __end_of_TMR0_SetInterruptHandler 047A  
                                  ?___wmul 0073                                 ??_TMR0_ISR 0071  
                               __pintentry 0004                            _I2C1_Initialize 044F  
                     ?_I2C1_SlaveGetRxData 0070                             _FLASH_ReadWord 03AB  
              ?_SensorBoardType_validation 0070                                    _NVMADRH 081B  
                                  _NVMADRL 081A                                    _NVMDATH 081D  
                                  _OSCTUNE 0892                                    _NVMDATL 081C  
                                  _NVMCON2 081F                                    _SSP1ADD 018D  
                                  _SLRCONA 1F3B                                    _SLRCONC 1F51  
                                  _SSP1BUF 018C                                    _SSP1MSK 018E  
                         _FLASH_EraseBlock 038F  SensorBoardType_validation@SensorBoardType 0073  
                    ??_I2C1_SlaveGetRxData 0070                     __end_of_FLASH_ReadWord 03C4  
                               _error_flag 0049                                    __ptext1 00E6  
                                  __ptext2 034E                                    __ptext3 02C3  
                                  __ptext4 0257                                    __ptext5 038F  
                                  __ptext6 03AB                                    __ptext7 041A  
                                  __ptext8 048F                                    __ptext9 03EB  
                        _memory_initialize 00E6             _I2C1_SlaveAddrInterruptHandler 003E  
                    _OSCILLATOR_Initialize 047A                         ?_memory_initialize 0070  
                 ??_PIN_MANAGER_Initialize 0073                   ??_I2C1_SlaveIsTxBufEmpty 0070  
                                  main@TAG 0036                       __end_of_error_signal 0493  
                         _default_in_flash 0040                                    clrloop0 046F  
                     end_of_initialization 00E3                        ??_memory_initialize 0033  
                                _LED_timer 007A                     ?_I2C1_SlaveIsRxBufFull 0070  
          _I2C1_SlaveWrColInterruptHandler 003A                    __end_of_I2C1_Initialize 0459  
             __end_of_I2C1_SlaveRdCallBack 0442                  FLASH_ReadWord@GIEBitValue 0075  
                __end_of_memory_initialize 01EA                            ?_FLASH_ReadWord 0073  
                         ??_WDT_Initialize 0073                   _TMR0_SetInterruptHandler 0474  
                  ?_I2C1_SlaveAddrCallBack 0070                          FLASH_WriteBlock@i 0029  
                        ??_FLASH_WriteWord 0077                             __end_of___wmul 0370  
                            _i2c1SlaveAddr 0047                           _FLASH_WriteBlock 0257  
                   ?_OSCILLATOR_Initialize 0070             __end_of_I2C1_SlaveAddrCallBack 044F  
             __end_of_I2C1_SlaveSendTxData 048A                        start_initialization 00D0  
             __end_of_I2C1_SlaveWrCallBack 0435                   I2C1_SlaveSendTxData@data 0070  
                         ?_I2C1_Initialize 0070                                   ??___wmul 0077  
              FLASH_EraseBlock@GIEBitValue 0075                   __end_of_FLASH_EraseBlock 03AB  
  __end_of_I2C1_SlaveDefRdInterruptHandler 03EB          ??_I2C1_SlaveDefRdInterruptHandler 0070  
         ?_I2C1_SlaveDefRdInterruptHandler 0070            _I2C1_SlaveDefRdInterruptHandler 03D8  
  __end_of_I2C1_SlaveDefWrInterruptHandler 0485          ??_I2C1_SlaveDefWrInterruptHandler 0071  
         ?_I2C1_SlaveDefWrInterruptHandler 0070            _I2C1_SlaveDefWrInterruptHandler 0480  
                              __pbssCOMMON 0078                                  ___latbits 0000  
                            __pcstackBANK0 0020                       _I2C1_SlaveRdCallBack 0435  
                    _TMR0_InterruptHandler 004A                                  __pnvBANK0 004A  
                   _PIN_MANAGER_Initialize 032B                     _MSSP1_InterruptHandler 0044  
                   _I2C1_SlaveIsTxBufEmpty 0459                               _error_signal 048F  
                 __end_of_default_in_flash 00D0                                   _I2C1_Isr 01EA  
             ??_INTERRUPT_InterruptManager 0073                   ??_I2C1_SlaveReleaseClock 0070  
                    ?_I2C1_SlaveRdCallBack 0070                    ??_I2C1_SlaveIsRxBufFull 0070  
                 FLASH_WriteWord@flashAddr 002A             FLASH_WriteBlock@blockStartAddr 0026  
                        ??_TMR0_Initialize 0075                             ___wmul@product 0020  
                                 _LATAbits 0018                                  clear_ram0 046E  
                                 _PIE0bits 0716                                   _PIE1bits 0717  
               ??_TMR0_SetInterruptHandler 0075                                   _PIR0bits 070C  
              __end_of_I2C1_SlaveGetRxData 04A3                                   _PIR1bits 070D  
                FLASH_EraseBlock@startAddr 0073                       _I2C1_SlaveSendTxData 0485  
                         ??_FLASH_ReadWord 0075                   _default_in_flash_absaddr 0040  
                     _I2C1_SlaveWrCallBack 0428                                   _SSP1CON1 0190  
                                 _SSP1CON2 0191                                   _TMR0_ISR 040B  
                                 _SSP1STAT 018F                          ___wmul@multiplier 0073  
         _I2C1_SlaveBusColInterruptHandler 003C                            _FLASH_WriteWord 02C3  
       _I2C1_SlaveDefWrColInterruptHandler 0000                   __end_of_FLASH_WriteBlock 02C3  
__end_of_I2C1_SlaveDefAddrInterruptHandler 046E        ??_I2C1_SlaveDefAddrInterruptHandler 0070  
       ?_I2C1_SlaveDefAddrInterruptHandler 0070          _I2C1_SlaveDefAddrInterruptHandler 0467  
                         _I2C1_SlaveIsAddr 0460                           _I2C1_SlaveIsRead 048A  
                    ?_I2C1_SlaveSendTxData 0070                      ?_I2C1_SlaveWrCallBack 0070  
                  ??_OSCILLATOR_Initialize 0073                   __p_default_in_flash_text 0040  
      _I2C1_SlaveDefBusColInterruptHandler 0000                     ??_I2C1_SlaveRdCallBack 0070  
                               _T0CON0bits 059E                                   __ptext10 03FB  
                                 __ptext11 0497                                   __ptext20 01EA  
                                 __ptext12 03C4                                   __ptext21 0428  
                                 __ptext13 0474                                   __ptext30 0460  
                                 __ptext22 0480                                   __ptext14 032B  
                                 __ptext31 049D                                   __ptext23 0485  
                                 __ptext15 047A                                   __ptext32 0442  
                                 __ptext24 049A                                   __ptext16 044F  
                                 __ptext33 0467                                   __ptext25 0435  
                                 __ptext34 04A0                                   __ptext26 03D8  
                                 __ptext18 040B                                   __ptext27 0459  
                                 __ptext19 0301                                   __ptext28 0493  
                                 __ptext29 048A                               _SSP1CON1bits 0190  
                             _SSP1CON2bits 0191                      FLASH_WriteWord@ramBuf 002C  
                    FLASH_WriteWord@offset 002F       __end_of_TMR0_DefaultInterruptHandler 032B  
             _TMR0_DefaultInterruptHandler 0301                 __end_of_I2C1_SlaveClearIrq 04A0  
                                 int$flags 007E         __end_of_INTERRUPT_InterruptManager 0031  
               _INTERRUPT_InterruptManager 0004                               _SSP1STATbits 018F  
                        ?_FLASH_EraseBlock 0073                 __end_of_getSensorBoardType 0428  
                       ??_FLASH_EraseBlock 0075                                 _INTCONbits 000B  
                  __end_of_FLASH_WriteWord 0301               ??_SensorBoardType_validation 0073  
                              _NVMCON1bits 081E                                   intlevel1 0000  
                   _I2C1_SlaveReleaseClock 049A                    ?_PIN_MANAGER_Initialize 0070  
                  ?_I2C1_SlaveIsTxBufEmpty 0070                     ??_I2C1_SlaveSendTxData 0070  
                   ??_I2C1_SlaveWrCallBack 0071              ?_TMR0_DefaultInterruptHandler 0070  
                               _SSP1DATPPS 1EC6                                 _SSP1CLKPPS 1EC5  
                          _TMR0_Initialize 03C4             __end_of_PIN_MANAGER_Initialize 034E  
           __end_of_I2C1_SlaveIsTxBufEmpty 0460              __end_of_I2C1_SlaveIsRxBufFull 0497  
