

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Fri Apr 21 15:30:46 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	16F15223
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	_default_in_flash_text,global,class=STRCODE,delta=2,noexec
     5                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    10                           	psect	clrtext,global,class=CODE,delta=2
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    14                           	psect	text1,local,class=CODE,merge=1,delta=2
    15                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    16                           	psect	text3,local,class=CODE,merge=1,delta=2
    17                           	psect	text4,local,class=CODE,merge=1,delta=2
    18                           	psect	text5,local,class=CODE,merge=1,delta=2
    19                           	psect	text6,local,class=CODE,merge=1,delta=2
    20                           	psect	text7,local,class=CODE,merge=1,delta=2
    21                           	psect	text8,local,class=CODE,merge=1,delta=2
    22                           	psect	text9,local,class=CODE,merge=1,delta=2
    23                           	psect	text10,local,class=CODE,merge=1,delta=2
    24                           	psect	text11,local,class=CODE,merge=1,delta=2
    25                           	psect	text12,local,class=CODE,merge=1,delta=2
    26                           	psect	text13,local,class=CODE,merge=1,delta=2
    27                           	psect	text14,local,class=CODE,merge=1,delta=2
    28                           	psect	text15,local,class=CODE,merge=1,delta=2
    29                           	psect	text16,local,class=CODE,merge=1,delta=2
    30                           	psect	text17,local,class=CODE,merge=1,delta=2
    31                           	psect	text18,local,class=CODE,merge=1,delta=2
    32                           	psect	text19,local,class=CODE,merge=1,delta=2
    33                           	psect	text20,local,class=CODE,merge=1,inline,delta=2
    34                           	psect	text21,local,class=CODE,merge=1,inline,delta=2
    35                           	psect	text22,local,class=CODE,merge=1,delta=2
    36                           	psect	text23,local,class=CODE,merge=1,delta=2
    37                           	psect	text24,local,class=CODE,merge=1,delta=2
    38                           	psect	text25,local,class=CODE,merge=1,delta=2
    39                           	psect	text26,local,class=CODE,merge=1,inline,delta=2
    40                           	psect	text27,local,class=CODE,merge=1,inline,delta=2
    41                           	psect	intentry,global,class=CODE,delta=2
    42                           	psect	text29,local,class=CODE,merge=1,delta=2
    43                           	psect	text30,local,class=CODE,merge=1,delta=2
    44                           	psect	text31,local,class=CODE,merge=1,delta=2
    45                           	psect	text32,local,class=CODE,merge=1,delta=2
    46                           	psect	text33,local,class=CODE,merge=1,delta=2
    47                           	psect	text34,local,class=CODE,merge=1,inline,delta=2
    48                           	psect	text35,local,class=CODE,merge=1,inline,delta=2
    49                           	psect	text36,local,class=CODE,merge=1,delta=2
    50                           	psect	text37,local,class=CODE,merge=1,delta=2
    51                           	psect	text38,local,class=CODE,merge=1,delta=2
    52                           	psect	text39,local,class=CODE,merge=1,inline,delta=2
    53                           	psect	text40,local,class=CODE,merge=1,inline,delta=2
    54                           	psect	text41,local,class=CODE,merge=1,inline,delta=2
    55                           	psect	text42,local,class=CODE,merge=1,inline,delta=2
    56                           	psect	text43,local,class=CODE,merge=1,inline,delta=2
    57                           	psect	text44,local,class=CODE,merge=1,delta=2
    58                           	psect	text45,local,class=CODE,merge=1,delta=2
    59                           	psect	text46,local,class=CODE,merge=1,inline,delta=2
    60                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    61                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    62                           	dabs	1,0x7E,2
    63     0000                     
    64                           ; Generated 19/07/2022 GMT
    65                           ; 
    66                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
    67                           ; All rights reserved.
    68                           ; 
    69                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    70                           ; 
    71                           ; Redistribution and use in source and binary forms, with or without modification, are
    72                           ; permitted provided that the following conditions are met:
    73                           ; 
    74                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    75                           ;        conditions and the following disclaimer.
    76                           ; 
    77                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    78                           ;        of conditions and the following disclaimer in the documentation and/or other
    79                           ;        materials provided with the distribution. Publication is not required when
    80                           ;        this file is used in an embedded application.
    81                           ; 
    82                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    83                           ;        software without specific prior written permission.
    84                           ; 
    85                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    86                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    87                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    88                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    89                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    90                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    91                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    92                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    93                           ; 
    94                           ; 
    95                           ; Code-generator required, PIC16F15223 Definitions
    96                           ; 
    97                           ; SFR Addresses
    98     0000                     	;# 
    99     0001                     	;# 
   100     0002                     	;# 
   101     0003                     	;# 
   102     0004                     	;# 
   103     0005                     	;# 
   104     0006                     	;# 
   105     0007                     	;# 
   106     0008                     	;# 
   107     0009                     	;# 
   108     000A                     	;# 
   109     000B                     	;# 
   110     000C                     	;# 
   111     000E                     	;# 
   112     0012                     	;# 
   113     0014                     	;# 
   114     0018                     	;# 
   115     001A                     	;# 
   116     009A                     	;# 
   117     009B                     	;# 
   118     009B                     	;# 
   119     009C                     	;# 
   120     009D                     	;# 
   121     009E                     	;# 
   122     009F                     	;# 
   123     010E                     	;# 
   124     010F                     	;# 
   125     0119                     	;# 
   126     011A                     	;# 
   127     011B                     	;# 
   128     011B                     	;# 
   129     011C                     	;# 
   130     011D                     	;# 
   131     011E                     	;# 
   132     011F                     	;# 
   133     018C                     	;# 
   134     018D                     	;# 
   135     018E                     	;# 
   136     018F                     	;# 
   137     0190                     	;# 
   138     0191                     	;# 
   139     0192                     	;# 
   140     020C                     	;# 
   141     020D                     	;# 
   142     020E                     	;# 
   143     020E                     	;# 
   144     020F                     	;# 
   145     020F                     	;# 
   146     0210                     	;# 
   147     0210                     	;# 
   148     0211                     	;# 
   149     0211                     	;# 
   150     028C                     	;# 
   151     028C                     	;# 
   152     028D                     	;# 
   153     028D                     	;# 
   154     028E                     	;# 
   155     028F                     	;# 
   156     0290                     	;# 
   157     0291                     	;# 
   158     030C                     	;# 
   159     030C                     	;# 
   160     030D                     	;# 
   161     030E                     	;# 
   162     030F                     	;# 
   163     0310                     	;# 
   164     0310                     	;# 
   165     0311                     	;# 
   166     0312                     	;# 
   167     0313                     	;# 
   168     0314                     	;# 
   169     0314                     	;# 
   170     0315                     	;# 
   171     0316                     	;# 
   172     0318                     	;# 
   173     0318                     	;# 
   174     0319                     	;# 
   175     031A                     	;# 
   176     059C                     	;# 
   177     059C                     	;# 
   178     059D                     	;# 
   179     059D                     	;# 
   180     059E                     	;# 
   181     059F                     	;# 
   182     070C                     	;# 
   183     070D                     	;# 
   184     070E                     	;# 
   185     0716                     	;# 
   186     0717                     	;# 
   187     0718                     	;# 
   188     080C                     	;# 
   189     0811                     	;# 
   190     0813                     	;# 
   191     0814                     	;# 
   192     081A                     	;# 
   193     081A                     	;# 
   194     081B                     	;# 
   195     081C                     	;# 
   196     081C                     	;# 
   197     081D                     	;# 
   198     081E                     	;# 
   199     081F                     	;# 
   200     088E                     	;# 
   201     0890                     	;# 
   202     0891                     	;# 
   203     0892                     	;# 
   204     0893                     	;# 
   205     090C                     	;# 
   206     1E8F                     	;# 
   207     1E90                     	;# 
   208     1E91                     	;# 
   209     1E92                     	;# 
   210     1E93                     	;# 
   211     1E9C                     	;# 
   212     1EA1                     	;# 
   213     1EA2                     	;# 
   214     1EC3                     	;# 
   215     1EC5                     	;# 
   216     1EC6                     	;# 
   217     1EC7                     	;# 
   218     1ECB                     	;# 
   219     1ECB                     	;# 
   220     1ECB                     	;# 
   221     1ECC                     	;# 
   222     1ECC                     	;# 
   223     1ECC                     	;# 
   224     1F10                     	;# 
   225     1F11                     	;# 
   226     1F12                     	;# 
   227     1F14                     	;# 
   228     1F15                     	;# 
   229     1F20                     	;# 
   230     1F21                     	;# 
   231     1F22                     	;# 
   232     1F23                     	;# 
   233     1F24                     	;# 
   234     1F25                     	;# 
   235     1F38                     	;# 
   236     1F39                     	;# 
   237     1F3A                     	;# 
   238     1F3B                     	;# 
   239     1F3C                     	;# 
   240     1F3D                     	;# 
   241     1F3E                     	;# 
   242     1F3F                     	;# 
   243     1F4E                     	;# 
   244     1F4F                     	;# 
   245     1F50                     	;# 
   246     1F51                     	;# 
   247     1F52                     	;# 
   248     1F53                     	;# 
   249     1F54                     	;# 
   250     1F55                     	;# 
   251     1FE4                     	;# 
   252     1FE5                     	;# 
   253     1FE6                     	;# 
   254     1FE7                     	;# 
   255     1FE8                     	;# 
   256     1FE8                     	;# 
   257     1FE9                     	;# 
   258     1FEA                     	;# 
   259     1FEB                     	;# 
   260     1FED                     	;# 
   261     1FEE                     	;# 
   262     1FEF                     	;# 
   263     0000                     	;# 
   264     0001                     	;# 
   265     0002                     	;# 
   266     0003                     	;# 
   267     0004                     	;# 
   268     0005                     	;# 
   269     0006                     	;# 
   270     0007                     	;# 
   271     0008                     	;# 
   272     0009                     	;# 
   273     000A                     	;# 
   274     000B                     	;# 
   275     000C                     	;# 
   276     000E                     	;# 
   277     0012                     	;# 
   278     0014                     	;# 
   279     0018                     	;# 
   280     001A                     	;# 
   281     009A                     	;# 
   282     009B                     	;# 
   283     009B                     	;# 
   284     009C                     	;# 
   285     009D                     	;# 
   286     009E                     	;# 
   287     009F                     	;# 
   288     010E                     	;# 
   289     010F                     	;# 
   290     0119                     	;# 
   291     011A                     	;# 
   292     011B                     	;# 
   293     011B                     	;# 
   294     011C                     	;# 
   295     011D                     	;# 
   296     011E                     	;# 
   297     011F                     	;# 
   298     018C                     	;# 
   299     018D                     	;# 
   300     018E                     	;# 
   301     018F                     	;# 
   302     0190                     	;# 
   303     0191                     	;# 
   304     0192                     	;# 
   305     020C                     	;# 
   306     020D                     	;# 
   307     020E                     	;# 
   308     020E                     	;# 
   309     020F                     	;# 
   310     020F                     	;# 
   311     0210                     	;# 
   312     0210                     	;# 
   313     0211                     	;# 
   314     0211                     	;# 
   315     028C                     	;# 
   316     028C                     	;# 
   317     028D                     	;# 
   318     028D                     	;# 
   319     028E                     	;# 
   320     028F                     	;# 
   321     0290                     	;# 
   322     0291                     	;# 
   323     030C                     	;# 
   324     030C                     	;# 
   325     030D                     	;# 
   326     030E                     	;# 
   327     030F                     	;# 
   328     0310                     	;# 
   329     0310                     	;# 
   330     0311                     	;# 
   331     0312                     	;# 
   332     0313                     	;# 
   333     0314                     	;# 
   334     0314                     	;# 
   335     0315                     	;# 
   336     0316                     	;# 
   337     0318                     	;# 
   338     0318                     	;# 
   339     0319                     	;# 
   340     031A                     	;# 
   341     059C                     	;# 
   342     059C                     	;# 
   343     059D                     	;# 
   344     059D                     	;# 
   345     059E                     	;# 
   346     059F                     	;# 
   347     070C                     	;# 
   348     070D                     	;# 
   349     070E                     	;# 
   350     0716                     	;# 
   351     0717                     	;# 
   352     0718                     	;# 
   353     080C                     	;# 
   354     0811                     	;# 
   355     0813                     	;# 
   356     0814                     	;# 
   357     081A                     	;# 
   358     081A                     	;# 
   359     081B                     	;# 
   360     081C                     	;# 
   361     081C                     	;# 
   362     081D                     	;# 
   363     081E                     	;# 
   364     081F                     	;# 
   365     088E                     	;# 
   366     0890                     	;# 
   367     0891                     	;# 
   368     0892                     	;# 
   369     0893                     	;# 
   370     090C                     	;# 
   371     1E8F                     	;# 
   372     1E90                     	;# 
   373     1E91                     	;# 
   374     1E92                     	;# 
   375     1E93                     	;# 
   376     1E9C                     	;# 
   377     1EA1                     	;# 
   378     1EA2                     	;# 
   379     1EC3                     	;# 
   380     1EC5                     	;# 
   381     1EC6                     	;# 
   382     1EC7                     	;# 
   383     1ECB                     	;# 
   384     1ECB                     	;# 
   385     1ECB                     	;# 
   386     1ECC                     	;# 
   387     1ECC                     	;# 
   388     1ECC                     	;# 
   389     1F10                     	;# 
   390     1F11                     	;# 
   391     1F12                     	;# 
   392     1F14                     	;# 
   393     1F15                     	;# 
   394     1F20                     	;# 
   395     1F21                     	;# 
   396     1F22                     	;# 
   397     1F23                     	;# 
   398     1F24                     	;# 
   399     1F25                     	;# 
   400     1F38                     	;# 
   401     1F39                     	;# 
   402     1F3A                     	;# 
   403     1F3B                     	;# 
   404     1F3C                     	;# 
   405     1F3D                     	;# 
   406     1F3E                     	;# 
   407     1F3F                     	;# 
   408     1F4E                     	;# 
   409     1F4F                     	;# 
   410     1F50                     	;# 
   411     1F51                     	;# 
   412     1F52                     	;# 
   413     1F53                     	;# 
   414     1F54                     	;# 
   415     1F55                     	;# 
   416     1FE4                     	;# 
   417     1FE5                     	;# 
   418     1FE6                     	;# 
   419     1FE7                     	;# 
   420     1FE8                     	;# 
   421     1FE8                     	;# 
   422     1FE9                     	;# 
   423     1FEA                     	;# 
   424     1FEB                     	;# 
   425     1FED                     	;# 
   426     1FEE                     	;# 
   427     1FEF                     	;# 
   428     0000                     	;# 
   429     0001                     	;# 
   430     0002                     	;# 
   431     0003                     	;# 
   432     0004                     	;# 
   433     0005                     	;# 
   434     0006                     	;# 
   435     0007                     	;# 
   436     0008                     	;# 
   437     0009                     	;# 
   438     000A                     	;# 
   439     000B                     	;# 
   440     000C                     	;# 
   441     000E                     	;# 
   442     0012                     	;# 
   443     0014                     	;# 
   444     0018                     	;# 
   445     001A                     	;# 
   446     009A                     	;# 
   447     009B                     	;# 
   448     009B                     	;# 
   449     009C                     	;# 
   450     009D                     	;# 
   451     009E                     	;# 
   452     009F                     	;# 
   453     010E                     	;# 
   454     010F                     	;# 
   455     0119                     	;# 
   456     011A                     	;# 
   457     011B                     	;# 
   458     011B                     	;# 
   459     011C                     	;# 
   460     011D                     	;# 
   461     011E                     	;# 
   462     011F                     	;# 
   463     018C                     	;# 
   464     018D                     	;# 
   465     018E                     	;# 
   466     018F                     	;# 
   467     0190                     	;# 
   468     0191                     	;# 
   469     0192                     	;# 
   470     020C                     	;# 
   471     020D                     	;# 
   472     020E                     	;# 
   473     020E                     	;# 
   474     020F                     	;# 
   475     020F                     	;# 
   476     0210                     	;# 
   477     0210                     	;# 
   478     0211                     	;# 
   479     0211                     	;# 
   480     028C                     	;# 
   481     028C                     	;# 
   482     028D                     	;# 
   483     028D                     	;# 
   484     028E                     	;# 
   485     028F                     	;# 
   486     0290                     	;# 
   487     0291                     	;# 
   488     030C                     	;# 
   489     030C                     	;# 
   490     030D                     	;# 
   491     030E                     	;# 
   492     030F                     	;# 
   493     0310                     	;# 
   494     0310                     	;# 
   495     0311                     	;# 
   496     0312                     	;# 
   497     0313                     	;# 
   498     0314                     	;# 
   499     0314                     	;# 
   500     0315                     	;# 
   501     0316                     	;# 
   502     0318                     	;# 
   503     0318                     	;# 
   504     0319                     	;# 
   505     031A                     	;# 
   506     059C                     	;# 
   507     059C                     	;# 
   508     059D                     	;# 
   509     059D                     	;# 
   510     059E                     	;# 
   511     059F                     	;# 
   512     070C                     	;# 
   513     070D                     	;# 
   514     070E                     	;# 
   515     0716                     	;# 
   516     0717                     	;# 
   517     0718                     	;# 
   518     080C                     	;# 
   519     0811                     	;# 
   520     0813                     	;# 
   521     0814                     	;# 
   522     081A                     	;# 
   523     081A                     	;# 
   524     081B                     	;# 
   525     081C                     	;# 
   526     081C                     	;# 
   527     081D                     	;# 
   528     081E                     	;# 
   529     081F                     	;# 
   530     088E                     	;# 
   531     0890                     	;# 
   532     0891                     	;# 
   533     0892                     	;# 
   534     0893                     	;# 
   535     090C                     	;# 
   536     1E8F                     	;# 
   537     1E90                     	;# 
   538     1E91                     	;# 
   539     1E92                     	;# 
   540     1E93                     	;# 
   541     1E9C                     	;# 
   542     1EA1                     	;# 
   543     1EA2                     	;# 
   544     1EC3                     	;# 
   545     1EC5                     	;# 
   546     1EC6                     	;# 
   547     1EC7                     	;# 
   548     1ECB                     	;# 
   549     1ECB                     	;# 
   550     1ECB                     	;# 
   551     1ECC                     	;# 
   552     1ECC                     	;# 
   553     1ECC                     	;# 
   554     1F10                     	;# 
   555     1F11                     	;# 
   556     1F12                     	;# 
   557     1F14                     	;# 
   558     1F15                     	;# 
   559     1F20                     	;# 
   560     1F21                     	;# 
   561     1F22                     	;# 
   562     1F23                     	;# 
   563     1F24                     	;# 
   564     1F25                     	;# 
   565     1F38                     	;# 
   566     1F39                     	;# 
   567     1F3A                     	;# 
   568     1F3B                     	;# 
   569     1F3C                     	;# 
   570     1F3D                     	;# 
   571     1F3E                     	;# 
   572     1F3F                     	;# 
   573     1F4E                     	;# 
   574     1F4F                     	;# 
   575     1F50                     	;# 
   576     1F51                     	;# 
   577     1F52                     	;# 
   578     1F53                     	;# 
   579     1F54                     	;# 
   580     1F55                     	;# 
   581     1FE4                     	;# 
   582     1FE5                     	;# 
   583     1FE6                     	;# 
   584     1FE7                     	;# 
   585     1FE8                     	;# 
   586     1FE8                     	;# 
   587     1FE9                     	;# 
   588     1FEA                     	;# 
   589     1FEB                     	;# 
   590     1FED                     	;# 
   591     1FEE                     	;# 
   592     1FEF                     	;# 
   593     0000                     	;# 
   594     0001                     	;# 
   595     0002                     	;# 
   596     0003                     	;# 
   597     0004                     	;# 
   598     0005                     	;# 
   599     0006                     	;# 
   600     0007                     	;# 
   601     0008                     	;# 
   602     0009                     	;# 
   603     000A                     	;# 
   604     000B                     	;# 
   605     000C                     	;# 
   606     000E                     	;# 
   607     0012                     	;# 
   608     0014                     	;# 
   609     0018                     	;# 
   610     001A                     	;# 
   611     009A                     	;# 
   612     009B                     	;# 
   613     009B                     	;# 
   614     009C                     	;# 
   615     009D                     	;# 
   616     009E                     	;# 
   617     009F                     	;# 
   618     010E                     	;# 
   619     010F                     	;# 
   620     0119                     	;# 
   621     011A                     	;# 
   622     011B                     	;# 
   623     011B                     	;# 
   624     011C                     	;# 
   625     011D                     	;# 
   626     011E                     	;# 
   627     011F                     	;# 
   628     018C                     	;# 
   629     018D                     	;# 
   630     018E                     	;# 
   631     018F                     	;# 
   632     0190                     	;# 
   633     0191                     	;# 
   634     0192                     	;# 
   635     020C                     	;# 
   636     020D                     	;# 
   637     020E                     	;# 
   638     020E                     	;# 
   639     020F                     	;# 
   640     020F                     	;# 
   641     0210                     	;# 
   642     0210                     	;# 
   643     0211                     	;# 
   644     0211                     	;# 
   645     028C                     	;# 
   646     028C                     	;# 
   647     028D                     	;# 
   648     028D                     	;# 
   649     028E                     	;# 
   650     028F                     	;# 
   651     0290                     	;# 
   652     0291                     	;# 
   653     030C                     	;# 
   654     030C                     	;# 
   655     030D                     	;# 
   656     030E                     	;# 
   657     030F                     	;# 
   658     0310                     	;# 
   659     0310                     	;# 
   660     0311                     	;# 
   661     0312                     	;# 
   662     0313                     	;# 
   663     0314                     	;# 
   664     0314                     	;# 
   665     0315                     	;# 
   666     0316                     	;# 
   667     0318                     	;# 
   668     0318                     	;# 
   669     0319                     	;# 
   670     031A                     	;# 
   671     059C                     	;# 
   672     059C                     	;# 
   673     059D                     	;# 
   674     059D                     	;# 
   675     059E                     	;# 
   676     059F                     	;# 
   677     070C                     	;# 
   678     070D                     	;# 
   679     070E                     	;# 
   680     0716                     	;# 
   681     0717                     	;# 
   682     0718                     	;# 
   683     080C                     	;# 
   684     0811                     	;# 
   685     0813                     	;# 
   686     0814                     	;# 
   687     081A                     	;# 
   688     081A                     	;# 
   689     081B                     	;# 
   690     081C                     	;# 
   691     081C                     	;# 
   692     081D                     	;# 
   693     081E                     	;# 
   694     081F                     	;# 
   695     088E                     	;# 
   696     0890                     	;# 
   697     0891                     	;# 
   698     0892                     	;# 
   699     0893                     	;# 
   700     090C                     	;# 
   701     1E8F                     	;# 
   702     1E90                     	;# 
   703     1E91                     	;# 
   704     1E92                     	;# 
   705     1E93                     	;# 
   706     1E9C                     	;# 
   707     1EA1                     	;# 
   708     1EA2                     	;# 
   709     1EC3                     	;# 
   710     1EC5                     	;# 
   711     1EC6                     	;# 
   712     1EC7                     	;# 
   713     1ECB                     	;# 
   714     1ECB                     	;# 
   715     1ECB                     	;# 
   716     1ECC                     	;# 
   717     1ECC                     	;# 
   718     1ECC                     	;# 
   719     1F10                     	;# 
   720     1F11                     	;# 
   721     1F12                     	;# 
   722     1F14                     	;# 
   723     1F15                     	;# 
   724     1F20                     	;# 
   725     1F21                     	;# 
   726     1F22                     	;# 
   727     1F23                     	;# 
   728     1F24                     	;# 
   729     1F25                     	;# 
   730     1F38                     	;# 
   731     1F39                     	;# 
   732     1F3A                     	;# 
   733     1F3B                     	;# 
   734     1F3C                     	;# 
   735     1F3D                     	;# 
   736     1F3E                     	;# 
   737     1F3F                     	;# 
   738     1F4E                     	;# 
   739     1F4F                     	;# 
   740     1F50                     	;# 
   741     1F51                     	;# 
   742     1F52                     	;# 
   743     1F53                     	;# 
   744     1F54                     	;# 
   745     1F55                     	;# 
   746     1FE4                     	;# 
   747     1FE5                     	;# 
   748     1FE6                     	;# 
   749     1FE7                     	;# 
   750     1FE8                     	;# 
   751     1FE8                     	;# 
   752     1FE9                     	;# 
   753     1FEA                     	;# 
   754     1FEB                     	;# 
   755     1FED                     	;# 
   756     1FEE                     	;# 
   757     1FEF                     	;# 
   758     0000                     	;# 
   759     0001                     	;# 
   760     0002                     	;# 
   761     0003                     	;# 
   762     0004                     	;# 
   763     0005                     	;# 
   764     0006                     	;# 
   765     0007                     	;# 
   766     0008                     	;# 
   767     0009                     	;# 
   768     000A                     	;# 
   769     000B                     	;# 
   770     000C                     	;# 
   771     000E                     	;# 
   772     0012                     	;# 
   773     0014                     	;# 
   774     0018                     	;# 
   775     001A                     	;# 
   776     009A                     	;# 
   777     009B                     	;# 
   778     009B                     	;# 
   779     009C                     	;# 
   780     009D                     	;# 
   781     009E                     	;# 
   782     009F                     	;# 
   783     010E                     	;# 
   784     010F                     	;# 
   785     0119                     	;# 
   786     011A                     	;# 
   787     011B                     	;# 
   788     011B                     	;# 
   789     011C                     	;# 
   790     011D                     	;# 
   791     011E                     	;# 
   792     011F                     	;# 
   793     018C                     	;# 
   794     018D                     	;# 
   795     018E                     	;# 
   796     018F                     	;# 
   797     0190                     	;# 
   798     0191                     	;# 
   799     0192                     	;# 
   800     020C                     	;# 
   801     020D                     	;# 
   802     020E                     	;# 
   803     020E                     	;# 
   804     020F                     	;# 
   805     020F                     	;# 
   806     0210                     	;# 
   807     0210                     	;# 
   808     0211                     	;# 
   809     0211                     	;# 
   810     028C                     	;# 
   811     028C                     	;# 
   812     028D                     	;# 
   813     028D                     	;# 
   814     028E                     	;# 
   815     028F                     	;# 
   816     0290                     	;# 
   817     0291                     	;# 
   818     030C                     	;# 
   819     030C                     	;# 
   820     030D                     	;# 
   821     030E                     	;# 
   822     030F                     	;# 
   823     0310                     	;# 
   824     0310                     	;# 
   825     0311                     	;# 
   826     0312                     	;# 
   827     0313                     	;# 
   828     0314                     	;# 
   829     0314                     	;# 
   830     0315                     	;# 
   831     0316                     	;# 
   832     0318                     	;# 
   833     0318                     	;# 
   834     0319                     	;# 
   835     031A                     	;# 
   836     059C                     	;# 
   837     059C                     	;# 
   838     059D                     	;# 
   839     059D                     	;# 
   840     059E                     	;# 
   841     059F                     	;# 
   842     070C                     	;# 
   843     070D                     	;# 
   844     070E                     	;# 
   845     0716                     	;# 
   846     0717                     	;# 
   847     0718                     	;# 
   848     080C                     	;# 
   849     0811                     	;# 
   850     0813                     	;# 
   851     0814                     	;# 
   852     081A                     	;# 
   853     081A                     	;# 
   854     081B                     	;# 
   855     081C                     	;# 
   856     081C                     	;# 
   857     081D                     	;# 
   858     081E                     	;# 
   859     081F                     	;# 
   860     088E                     	;# 
   861     0890                     	;# 
   862     0891                     	;# 
   863     0892                     	;# 
   864     0893                     	;# 
   865     090C                     	;# 
   866     1E8F                     	;# 
   867     1E90                     	;# 
   868     1E91                     	;# 
   869     1E92                     	;# 
   870     1E93                     	;# 
   871     1E9C                     	;# 
   872     1EA1                     	;# 
   873     1EA2                     	;# 
   874     1EC3                     	;# 
   875     1EC5                     	;# 
   876     1EC6                     	;# 
   877     1EC7                     	;# 
   878     1ECB                     	;# 
   879     1ECB                     	;# 
   880     1ECB                     	;# 
   881     1ECC                     	;# 
   882     1ECC                     	;# 
   883     1ECC                     	;# 
   884     1F10                     	;# 
   885     1F11                     	;# 
   886     1F12                     	;# 
   887     1F14                     	;# 
   888     1F15                     	;# 
   889     1F20                     	;# 
   890     1F21                     	;# 
   891     1F22                     	;# 
   892     1F23                     	;# 
   893     1F24                     	;# 
   894     1F25                     	;# 
   895     1F38                     	;# 
   896     1F39                     	;# 
   897     1F3A                     	;# 
   898     1F3B                     	;# 
   899     1F3C                     	;# 
   900     1F3D                     	;# 
   901     1F3E                     	;# 
   902     1F3F                     	;# 
   903     1F4E                     	;# 
   904     1F4F                     	;# 
   905     1F50                     	;# 
   906     1F51                     	;# 
   907     1F52                     	;# 
   908     1F53                     	;# 
   909     1F54                     	;# 
   910     1F55                     	;# 
   911     1FE4                     	;# 
   912     1FE5                     	;# 
   913     1FE6                     	;# 
   914     1FE7                     	;# 
   915     1FE8                     	;# 
   916     1FE8                     	;# 
   917     1FE9                     	;# 
   918     1FEA                     	;# 
   919     1FEB                     	;# 
   920     1FED                     	;# 
   921     1FEE                     	;# 
   922     1FEF                     	;# 
   923     0000                     	;# 
   924     0001                     	;# 
   925     0002                     	;# 
   926     0003                     	;# 
   927     0004                     	;# 
   928     0005                     	;# 
   929     0006                     	;# 
   930     0007                     	;# 
   931     0008                     	;# 
   932     0009                     	;# 
   933     000A                     	;# 
   934     000B                     	;# 
   935     000C                     	;# 
   936     000E                     	;# 
   937     0012                     	;# 
   938     0014                     	;# 
   939     0018                     	;# 
   940     001A                     	;# 
   941     009A                     	;# 
   942     009B                     	;# 
   943     009B                     	;# 
   944     009C                     	;# 
   945     009D                     	;# 
   946     009E                     	;# 
   947     009F                     	;# 
   948     010E                     	;# 
   949     010F                     	;# 
   950     0119                     	;# 
   951     011A                     	;# 
   952     011B                     	;# 
   953     011B                     	;# 
   954     011C                     	;# 
   955     011D                     	;# 
   956     011E                     	;# 
   957     011F                     	;# 
   958     018C                     	;# 
   959     018D                     	;# 
   960     018E                     	;# 
   961     018F                     	;# 
   962     0190                     	;# 
   963     0191                     	;# 
   964     0192                     	;# 
   965     020C                     	;# 
   966     020D                     	;# 
   967     020E                     	;# 
   968     020E                     	;# 
   969     020F                     	;# 
   970     020F                     	;# 
   971     0210                     	;# 
   972     0210                     	;# 
   973     0211                     	;# 
   974     0211                     	;# 
   975     028C                     	;# 
   976     028C                     	;# 
   977     028D                     	;# 
   978     028D                     	;# 
   979     028E                     	;# 
   980     028F                     	;# 
   981     0290                     	;# 
   982     0291                     	;# 
   983     030C                     	;# 
   984     030C                     	;# 
   985     030D                     	;# 
   986     030E                     	;# 
   987     030F                     	;# 
   988     0310                     	;# 
   989     0310                     	;# 
   990     0311                     	;# 
   991     0312                     	;# 
   992     0313                     	;# 
   993     0314                     	;# 
   994     0314                     	;# 
   995     0315                     	;# 
   996     0316                     	;# 
   997     0318                     	;# 
   998     0318                     	;# 
   999     0319                     	;# 
  1000     031A                     	;# 
  1001     059C                     	;# 
  1002     059C                     	;# 
  1003     059D                     	;# 
  1004     059D                     	;# 
  1005     059E                     	;# 
  1006     059F                     	;# 
  1007     070C                     	;# 
  1008     070D                     	;# 
  1009     070E                     	;# 
  1010     0716                     	;# 
  1011     0717                     	;# 
  1012     0718                     	;# 
  1013     080C                     	;# 
  1014     0811                     	;# 
  1015     0813                     	;# 
  1016     0814                     	;# 
  1017     081A                     	;# 
  1018     081A                     	;# 
  1019     081B                     	;# 
  1020     081C                     	;# 
  1021     081C                     	;# 
  1022     081D                     	;# 
  1023     081E                     	;# 
  1024     081F                     	;# 
  1025     088E                     	;# 
  1026     0890                     	;# 
  1027     0891                     	;# 
  1028     0892                     	;# 
  1029     0893                     	;# 
  1030     090C                     	;# 
  1031     1E8F                     	;# 
  1032     1E90                     	;# 
  1033     1E91                     	;# 
  1034     1E92                     	;# 
  1035     1E93                     	;# 
  1036     1E9C                     	;# 
  1037     1EA1                     	;# 
  1038     1EA2                     	;# 
  1039     1EC3                     	;# 
  1040     1EC5                     	;# 
  1041     1EC6                     	;# 
  1042     1EC7                     	;# 
  1043     1ECB                     	;# 
  1044     1ECB                     	;# 
  1045     1ECB                     	;# 
  1046     1ECC                     	;# 
  1047     1ECC                     	;# 
  1048     1ECC                     	;# 
  1049     1F10                     	;# 
  1050     1F11                     	;# 
  1051     1F12                     	;# 
  1052     1F14                     	;# 
  1053     1F15                     	;# 
  1054     1F20                     	;# 
  1055     1F21                     	;# 
  1056     1F22                     	;# 
  1057     1F23                     	;# 
  1058     1F24                     	;# 
  1059     1F25                     	;# 
  1060     1F38                     	;# 
  1061     1F39                     	;# 
  1062     1F3A                     	;# 
  1063     1F3B                     	;# 
  1064     1F3C                     	;# 
  1065     1F3D                     	;# 
  1066     1F3E                     	;# 
  1067     1F3F                     	;# 
  1068     1F4E                     	;# 
  1069     1F4F                     	;# 
  1070     1F50                     	;# 
  1071     1F51                     	;# 
  1072     1F52                     	;# 
  1073     1F53                     	;# 
  1074     1F54                     	;# 
  1075     1F55                     	;# 
  1076     1FE4                     	;# 
  1077     1FE5                     	;# 
  1078     1FE6                     	;# 
  1079     1FE7                     	;# 
  1080     1FE8                     	;# 
  1081     1FE8                     	;# 
  1082     1FE9                     	;# 
  1083     1FEA                     	;# 
  1084     1FEB                     	;# 
  1085     1FED                     	;# 
  1086     1FEE                     	;# 
  1087     1FEF                     	;# 
  1088     0000                     	;# 
  1089     0001                     	;# 
  1090     0002                     	;# 
  1091     0003                     	;# 
  1092     0004                     	;# 
  1093     0005                     	;# 
  1094     0006                     	;# 
  1095     0007                     	;# 
  1096     0008                     	;# 
  1097     0009                     	;# 
  1098     000A                     	;# 
  1099     000B                     	;# 
  1100     000C                     	;# 
  1101     000E                     	;# 
  1102     0012                     	;# 
  1103     0014                     	;# 
  1104     0018                     	;# 
  1105     001A                     	;# 
  1106     009A                     	;# 
  1107     009B                     	;# 
  1108     009B                     	;# 
  1109     009C                     	;# 
  1110     009D                     	;# 
  1111     009E                     	;# 
  1112     009F                     	;# 
  1113     010E                     	;# 
  1114     010F                     	;# 
  1115     0119                     	;# 
  1116     011A                     	;# 
  1117     011B                     	;# 
  1118     011B                     	;# 
  1119     011C                     	;# 
  1120     011D                     	;# 
  1121     011E                     	;# 
  1122     011F                     	;# 
  1123     018C                     	;# 
  1124     018D                     	;# 
  1125     018E                     	;# 
  1126     018F                     	;# 
  1127     0190                     	;# 
  1128     0191                     	;# 
  1129     0192                     	;# 
  1130     020C                     	;# 
  1131     020D                     	;# 
  1132     020E                     	;# 
  1133     020E                     	;# 
  1134     020F                     	;# 
  1135     020F                     	;# 
  1136     0210                     	;# 
  1137     0210                     	;# 
  1138     0211                     	;# 
  1139     0211                     	;# 
  1140     028C                     	;# 
  1141     028C                     	;# 
  1142     028D                     	;# 
  1143     028D                     	;# 
  1144     028E                     	;# 
  1145     028F                     	;# 
  1146     0290                     	;# 
  1147     0291                     	;# 
  1148     030C                     	;# 
  1149     030C                     	;# 
  1150     030D                     	;# 
  1151     030E                     	;# 
  1152     030F                     	;# 
  1153     0310                     	;# 
  1154     0310                     	;# 
  1155     0311                     	;# 
  1156     0312                     	;# 
  1157     0313                     	;# 
  1158     0314                     	;# 
  1159     0314                     	;# 
  1160     0315                     	;# 
  1161     0316                     	;# 
  1162     0318                     	;# 
  1163     0318                     	;# 
  1164     0319                     	;# 
  1165     031A                     	;# 
  1166     059C                     	;# 
  1167     059C                     	;# 
  1168     059D                     	;# 
  1169     059D                     	;# 
  1170     059E                     	;# 
  1171     059F                     	;# 
  1172     070C                     	;# 
  1173     070D                     	;# 
  1174     070E                     	;# 
  1175     0716                     	;# 
  1176     0717                     	;# 
  1177     0718                     	;# 
  1178     080C                     	;# 
  1179     0811                     	;# 
  1180     0813                     	;# 
  1181     0814                     	;# 
  1182     081A                     	;# 
  1183     081A                     	;# 
  1184     081B                     	;# 
  1185     081C                     	;# 
  1186     081C                     	;# 
  1187     081D                     	;# 
  1188     081E                     	;# 
  1189     081F                     	;# 
  1190     088E                     	;# 
  1191     0890                     	;# 
  1192     0891                     	;# 
  1193     0892                     	;# 
  1194     0893                     	;# 
  1195     090C                     	;# 
  1196     1E8F                     	;# 
  1197     1E90                     	;# 
  1198     1E91                     	;# 
  1199     1E92                     	;# 
  1200     1E93                     	;# 
  1201     1E9C                     	;# 
  1202     1EA1                     	;# 
  1203     1EA2                     	;# 
  1204     1EC3                     	;# 
  1205     1EC5                     	;# 
  1206     1EC6                     	;# 
  1207     1EC7                     	;# 
  1208     1ECB                     	;# 
  1209     1ECB                     	;# 
  1210     1ECB                     	;# 
  1211     1ECC                     	;# 
  1212     1ECC                     	;# 
  1213     1ECC                     	;# 
  1214     1F10                     	;# 
  1215     1F11                     	;# 
  1216     1F12                     	;# 
  1217     1F14                     	;# 
  1218     1F15                     	;# 
  1219     1F20                     	;# 
  1220     1F21                     	;# 
  1221     1F22                     	;# 
  1222     1F23                     	;# 
  1223     1F24                     	;# 
  1224     1F25                     	;# 
  1225     1F38                     	;# 
  1226     1F39                     	;# 
  1227     1F3A                     	;# 
  1228     1F3B                     	;# 
  1229     1F3C                     	;# 
  1230     1F3D                     	;# 
  1231     1F3E                     	;# 
  1232     1F3F                     	;# 
  1233     1F4E                     	;# 
  1234     1F4F                     	;# 
  1235     1F50                     	;# 
  1236     1F51                     	;# 
  1237     1F52                     	;# 
  1238     1F53                     	;# 
  1239     1F54                     	;# 
  1240     1F55                     	;# 
  1241     1FE4                     	;# 
  1242     1FE5                     	;# 
  1243     1FE6                     	;# 
  1244     1FE7                     	;# 
  1245     1FE8                     	;# 
  1246     1FE8                     	;# 
  1247     1FE9                     	;# 
  1248     1FEA                     	;# 
  1249     1FEB                     	;# 
  1250     1FED                     	;# 
  1251     1FEE                     	;# 
  1252     1FEF                     	;# 
  1253     0000                     	;# 
  1254     0001                     	;# 
  1255     0002                     	;# 
  1256     0003                     	;# 
  1257     0004                     	;# 
  1258     0005                     	;# 
  1259     0006                     	;# 
  1260     0007                     	;# 
  1261     0008                     	;# 
  1262     0009                     	;# 
  1263     000A                     	;# 
  1264     000B                     	;# 
  1265     000C                     	;# 
  1266     000E                     	;# 
  1267     0012                     	;# 
  1268     0014                     	;# 
  1269     0018                     	;# 
  1270     001A                     	;# 
  1271     009A                     	;# 
  1272     009B                     	;# 
  1273     009B                     	;# 
  1274     009C                     	;# 
  1275     009D                     	;# 
  1276     009E                     	;# 
  1277     009F                     	;# 
  1278     010E                     	;# 
  1279     010F                     	;# 
  1280     0119                     	;# 
  1281     011A                     	;# 
  1282     011B                     	;# 
  1283     011B                     	;# 
  1284     011C                     	;# 
  1285     011D                     	;# 
  1286     011E                     	;# 
  1287     011F                     	;# 
  1288     018C                     	;# 
  1289     018D                     	;# 
  1290     018E                     	;# 
  1291     018F                     	;# 
  1292     0190                     	;# 
  1293     0191                     	;# 
  1294     0192                     	;# 
  1295     020C                     	;# 
  1296     020D                     	;# 
  1297     020E                     	;# 
  1298     020E                     	;# 
  1299     020F                     	;# 
  1300     020F                     	;# 
  1301     0210                     	;# 
  1302     0210                     	;# 
  1303     0211                     	;# 
  1304     0211                     	;# 
  1305     028C                     	;# 
  1306     028C                     	;# 
  1307     028D                     	;# 
  1308     028D                     	;# 
  1309     028E                     	;# 
  1310     028F                     	;# 
  1311     0290                     	;# 
  1312     0291                     	;# 
  1313     030C                     	;# 
  1314     030C                     	;# 
  1315     030D                     	;# 
  1316     030E                     	;# 
  1317     030F                     	;# 
  1318     0310                     	;# 
  1319     0310                     	;# 
  1320     0311                     	;# 
  1321     0312                     	;# 
  1322     0313                     	;# 
  1323     0314                     	;# 
  1324     0314                     	;# 
  1325     0315                     	;# 
  1326     0316                     	;# 
  1327     0318                     	;# 
  1328     0318                     	;# 
  1329     0319                     	;# 
  1330     031A                     	;# 
  1331     059C                     	;# 
  1332     059C                     	;# 
  1333     059D                     	;# 
  1334     059D                     	;# 
  1335     059E                     	;# 
  1336     059F                     	;# 
  1337     070C                     	;# 
  1338     070D                     	;# 
  1339     070E                     	;# 
  1340     0716                     	;# 
  1341     0717                     	;# 
  1342     0718                     	;# 
  1343     080C                     	;# 
  1344     0811                     	;# 
  1345     0813                     	;# 
  1346     0814                     	;# 
  1347     081A                     	;# 
  1348     081A                     	;# 
  1349     081B                     	;# 
  1350     081C                     	;# 
  1351     081C                     	;# 
  1352     081D                     	;# 
  1353     081E                     	;# 
  1354     081F                     	;# 
  1355     088E                     	;# 
  1356     0890                     	;# 
  1357     0891                     	;# 
  1358     0892                     	;# 
  1359     0893                     	;# 
  1360     090C                     	;# 
  1361     1E8F                     	;# 
  1362     1E90                     	;# 
  1363     1E91                     	;# 
  1364     1E92                     	;# 
  1365     1E93                     	;# 
  1366     1E9C                     	;# 
  1367     1EA1                     	;# 
  1368     1EA2                     	;# 
  1369     1EC3                     	;# 
  1370     1EC5                     	;# 
  1371     1EC6                     	;# 
  1372     1EC7                     	;# 
  1373     1ECB                     	;# 
  1374     1ECB                     	;# 
  1375     1ECB                     	;# 
  1376     1ECC                     	;# 
  1377     1ECC                     	;# 
  1378     1ECC                     	;# 
  1379     1F10                     	;# 
  1380     1F11                     	;# 
  1381     1F12                     	;# 
  1382     1F14                     	;# 
  1383     1F15                     	;# 
  1384     1F20                     	;# 
  1385     1F21                     	;# 
  1386     1F22                     	;# 
  1387     1F23                     	;# 
  1388     1F24                     	;# 
  1389     1F25                     	;# 
  1390     1F38                     	;# 
  1391     1F39                     	;# 
  1392     1F3A                     	;# 
  1393     1F3B                     	;# 
  1394     1F3C                     	;# 
  1395     1F3D                     	;# 
  1396     1F3E                     	;# 
  1397     1F3F                     	;# 
  1398     1F4E                     	;# 
  1399     1F4F                     	;# 
  1400     1F50                     	;# 
  1401     1F51                     	;# 
  1402     1F52                     	;# 
  1403     1F53                     	;# 
  1404     1F54                     	;# 
  1405     1F55                     	;# 
  1406     1FE4                     	;# 
  1407     1FE5                     	;# 
  1408     1FE6                     	;# 
  1409     1FE7                     	;# 
  1410     1FE8                     	;# 
  1411     1FE8                     	;# 
  1412     1FE9                     	;# 
  1413     1FEA                     	;# 
  1414     1FEB                     	;# 
  1415     1FED                     	;# 
  1416     1FEE                     	;# 
  1417     1FEF                     	;# 
  1418     0000                     	;# 
  1419     0001                     	;# 
  1420     0002                     	;# 
  1421     0003                     	;# 
  1422     0004                     	;# 
  1423     0005                     	;# 
  1424     0006                     	;# 
  1425     0007                     	;# 
  1426     0008                     	;# 
  1427     0009                     	;# 
  1428     000A                     	;# 
  1429     000B                     	;# 
  1430     000C                     	;# 
  1431     000E                     	;# 
  1432     0012                     	;# 
  1433     0014                     	;# 
  1434     0018                     	;# 
  1435     001A                     	;# 
  1436     009A                     	;# 
  1437     009B                     	;# 
  1438     009B                     	;# 
  1439     009C                     	;# 
  1440     009D                     	;# 
  1441     009E                     	;# 
  1442     009F                     	;# 
  1443     010E                     	;# 
  1444     010F                     	;# 
  1445     0119                     	;# 
  1446     011A                     	;# 
  1447     011B                     	;# 
  1448     011B                     	;# 
  1449     011C                     	;# 
  1450     011D                     	;# 
  1451     011E                     	;# 
  1452     011F                     	;# 
  1453     018C                     	;# 
  1454     018D                     	;# 
  1455     018E                     	;# 
  1456     018F                     	;# 
  1457     0190                     	;# 
  1458     0191                     	;# 
  1459     0192                     	;# 
  1460     020C                     	;# 
  1461     020D                     	;# 
  1462     020E                     	;# 
  1463     020E                     	;# 
  1464     020F                     	;# 
  1465     020F                     	;# 
  1466     0210                     	;# 
  1467     0210                     	;# 
  1468     0211                     	;# 
  1469     0211                     	;# 
  1470     028C                     	;# 
  1471     028C                     	;# 
  1472     028D                     	;# 
  1473     028D                     	;# 
  1474     028E                     	;# 
  1475     028F                     	;# 
  1476     0290                     	;# 
  1477     0291                     	;# 
  1478     030C                     	;# 
  1479     030C                     	;# 
  1480     030D                     	;# 
  1481     030E                     	;# 
  1482     030F                     	;# 
  1483     0310                     	;# 
  1484     0310                     	;# 
  1485     0311                     	;# 
  1486     0312                     	;# 
  1487     0313                     	;# 
  1488     0314                     	;# 
  1489     0314                     	;# 
  1490     0315                     	;# 
  1491     0316                     	;# 
  1492     0318                     	;# 
  1493     0318                     	;# 
  1494     0319                     	;# 
  1495     031A                     	;# 
  1496     059C                     	;# 
  1497     059C                     	;# 
  1498     059D                     	;# 
  1499     059D                     	;# 
  1500     059E                     	;# 
  1501     059F                     	;# 
  1502     070C                     	;# 
  1503     070D                     	;# 
  1504     070E                     	;# 
  1505     0716                     	;# 
  1506     0717                     	;# 
  1507     0718                     	;# 
  1508     080C                     	;# 
  1509     0811                     	;# 
  1510     0813                     	;# 
  1511     0814                     	;# 
  1512     081A                     	;# 
  1513     081A                     	;# 
  1514     081B                     	;# 
  1515     081C                     	;# 
  1516     081C                     	;# 
  1517     081D                     	;# 
  1518     081E                     	;# 
  1519     081F                     	;# 
  1520     088E                     	;# 
  1521     0890                     	;# 
  1522     0891                     	;# 
  1523     0892                     	;# 
  1524     0893                     	;# 
  1525     090C                     	;# 
  1526     1E8F                     	;# 
  1527     1E90                     	;# 
  1528     1E91                     	;# 
  1529     1E92                     	;# 
  1530     1E93                     	;# 
  1531     1E9C                     	;# 
  1532     1EA1                     	;# 
  1533     1EA2                     	;# 
  1534     1EC3                     	;# 
  1535     1EC5                     	;# 
  1536     1EC6                     	;# 
  1537     1EC7                     	;# 
  1538     1ECB                     	;# 
  1539     1ECB                     	;# 
  1540     1ECB                     	;# 
  1541     1ECC                     	;# 
  1542     1ECC                     	;# 
  1543     1ECC                     	;# 
  1544     1F10                     	;# 
  1545     1F11                     	;# 
  1546     1F12                     	;# 
  1547     1F14                     	;# 
  1548     1F15                     	;# 
  1549     1F20                     	;# 
  1550     1F21                     	;# 
  1551     1F22                     	;# 
  1552     1F23                     	;# 
  1553     1F24                     	;# 
  1554     1F25                     	;# 
  1555     1F38                     	;# 
  1556     1F39                     	;# 
  1557     1F3A                     	;# 
  1558     1F3B                     	;# 
  1559     1F3C                     	;# 
  1560     1F3D                     	;# 
  1561     1F3E                     	;# 
  1562     1F3F                     	;# 
  1563     1F4E                     	;# 
  1564     1F4F                     	;# 
  1565     1F50                     	;# 
  1566     1F51                     	;# 
  1567     1F52                     	;# 
  1568     1F53                     	;# 
  1569     1F54                     	;# 
  1570     1F55                     	;# 
  1571     1FE4                     	;# 
  1572     1FE5                     	;# 
  1573     1FE6                     	;# 
  1574     1FE7                     	;# 
  1575     1FE8                     	;# 
  1576     1FE8                     	;# 
  1577     1FE9                     	;# 
  1578     1FEA                     	;# 
  1579     1FEB                     	;# 
  1580     1FED                     	;# 
  1581     1FEE                     	;# 
  1582     1FEF                     	;# 
  1583                           
  1584 ;; Function _I2C1_SlaveDefWrColInterruptHandler is unused but had its address taken
  1585     0000                     
  1586 ;; Function _I2C1_SlaveDefBusColInterruptHandler is unused but had its address taken
  1587     0040                     _default_in_flash_absaddr	set	64
  1588     0040                     _default_in_flash_absaddr	set	64
  1589                           
  1590                           	psect	_default_in_flash_text
  1591     0040                     __p_default_in_flash_text:
  1592     0040                     _default_in_flash:
  1593     0040  3401               	retlw	1
  1594     0041  3400               	retlw	0
  1595     0042  3401               	retlw	1
  1596     0043  3400               	retlw	0
  1597     0044  3401               	retlw	1
  1598     0045  3400               	retlw	0
  1599     0046  3401               	retlw	1
  1600     0047  3400               	retlw	0
  1601     0048  3401               	retlw	1
  1602     0049  3400               	retlw	0
  1603     004A  3401               	retlw	1
  1604     004B  3400               	retlw	0
  1605     004C  3402               	retlw	2
  1606     004D  3400               	retlw	0
  1607     004E  3402               	retlw	2
  1608     004F  3400               	retlw	0
  1609     0050  3402               	retlw	2
  1610     0051  3400               	retlw	0
  1611     0052  3402               	retlw	2
  1612     0053  3400               	retlw	0
  1613     0054  3402               	retlw	2
  1614     0055  3400               	retlw	0
  1615     0056  3402               	retlw	2
  1616     0057  3400               	retlw	0
  1617     0058  3403               	retlw	3
  1618     0059  3400               	retlw	0
  1619     005A  3403               	retlw	3
  1620     005B  3400               	retlw	0
  1621     005C  3403               	retlw	3
  1622     005D  3400               	retlw	0
  1623     005E  3403               	retlw	3
  1624     005F  3400               	retlw	0
  1625     0060  3403               	retlw	3
  1626     0061  3400               	retlw	0
  1627     0062  3403               	retlw	3
  1628     0063  3400               	retlw	0
  1629     0064  3404               	retlw	4
  1630     0065  3400               	retlw	0
  1631     0066  3404               	retlw	4
  1632     0067  3400               	retlw	0
  1633     0068  3404               	retlw	4
  1634     0069  3400               	retlw	0
  1635     006A  3404               	retlw	4
  1636     006B  3400               	retlw	0
  1637     006C  3404               	retlw	4
  1638     006D  3400               	retlw	0
  1639     006E  3404               	retlw	4
  1640     006F  3400               	retlw	0
  1641     0070  3405               	retlw	5
  1642     0071  3400               	retlw	0
  1643     0072  3405               	retlw	5
  1644     0073  3400               	retlw	0
  1645     0074  3405               	retlw	5
  1646     0075  3400               	retlw	0
  1647     0076  3405               	retlw	5
  1648     0077  3400               	retlw	0
  1649     0078  3405               	retlw	5
  1650     0079  3400               	retlw	0
  1651     007A  3405               	retlw	5
  1652     007B  3400               	retlw	0
  1653     007C  3406               	retlw	6
  1654     007D  3400               	retlw	0
  1655     007E  3406               	retlw	6
  1656     007F  3400               	retlw	0
  1657     0080  3406               	retlw	6
  1658     0081  3400               	retlw	0
  1659     0082  3406               	retlw	6
  1660     0083  3400               	retlw	0
  1661     0084  3406               	retlw	6
  1662     0085  3400               	retlw	0
  1663     0086  3406               	retlw	6
  1664     0087  3400               	retlw	0
  1665     0088  3407               	retlw	7
  1666     0089  3400               	retlw	0
  1667     008A  3407               	retlw	7
  1668     008B  3400               	retlw	0
  1669     008C  3407               	retlw	7
  1670     008D  3400               	retlw	0
  1671     008E  3407               	retlw	7
  1672     008F  3400               	retlw	0
  1673     0090  3407               	retlw	7
  1674     0091  3400               	retlw	0
  1675     0092  3407               	retlw	7
  1676     0093  3400               	retlw	0
  1677     0094  3408               	retlw	8
  1678     0095  3400               	retlw	0
  1679     0096  3408               	retlw	8
  1680     0097  3400               	retlw	0
  1681     0098  3408               	retlw	8
  1682     0099  3400               	retlw	0
  1683     009A  3408               	retlw	8
  1684     009B  3400               	retlw	0
  1685     009C  3408               	retlw	8
  1686     009D  3400               	retlw	0
  1687     009E  3408               	retlw	8
  1688     009F  3400               	retlw	0
  1689     00A0  3409               	retlw	9
  1690     00A1  3400               	retlw	0
  1691     00A2  3409               	retlw	9
  1692     00A3  3400               	retlw	0
  1693     00A4  3409               	retlw	9
  1694     00A5  3400               	retlw	0
  1695     00A6  3409               	retlw	9
  1696     00A7  3400               	retlw	0
  1697     00A8  3409               	retlw	9
  1698     00A9  3400               	retlw	0
  1699     00AA  3409               	retlw	9
  1700     00AB  3400               	retlw	0
  1701     00AC  340A               	retlw	10
  1702     00AD  3400               	retlw	0
  1703     00AE  340A               	retlw	10
  1704     00AF  3400               	retlw	0
  1705     00B0  340A               	retlw	10
  1706     00B1  3400               	retlw	0
  1707     00B2  340A               	retlw	10
  1708     00B3  3400               	retlw	0
  1709     00B4  340A               	retlw	10
  1710     00B5  3400               	retlw	0
  1711     00B6  340A               	retlw	10
  1712     00B7  3400               	retlw	0
  1713     00B8  340B               	retlw	11
  1714     00B9  3400               	retlw	0
  1715     00BA  340B               	retlw	11
  1716     00BB  3400               	retlw	0
  1717     00BC  340B               	retlw	11
  1718     00BD  3400               	retlw	0
  1719     00BE  340B               	retlw	11
  1720     00BF  3400               	retlw	0
  1721     00C0  340B               	retlw	11
  1722     00C1  3400               	retlw	0
  1723     00C2  340B               	retlw	11
  1724     00C3  3400               	retlw	0
  1725     00C4  340C               	retlw	12
  1726     00C5  3400               	retlw	0
  1727     00C6  340C               	retlw	12
  1728     00C7  3400               	retlw	0
  1729     00C8  340C               	retlw	12
  1730     00C9  3400               	retlw	0
  1731     00CA  340C               	retlw	12
  1732     00CB  3400               	retlw	0
  1733     00CC  340C               	retlw	12
  1734     00CD  3400               	retlw	0
  1735     00CE  340C               	retlw	12
  1736     00CF  3400               	retlw	0
  1737     00D0                     __end_of_default_in_flash:
  1738                           
  1739                           	psect	nvBANK0
  1740     0050                     __pnvBANK0:
  1741     0050                     _TMR0_InterruptHandler:
  1742     0050                     	ds	2
  1743     0018                     _LATAbits	set	24
  1744     000B                     _INTCONbits	set	11
  1745     0014                     _TRISC	set	20
  1746     0012                     _TRISA	set	18
  1747     001A                     _LATC	set	26
  1748     0018                     _LATA	set	24
  1749     000C                     _PORTA	set	12
  1750     000E                     _PORTC	set	14
  1751     018C                     _SSP1BUF	set	396
  1752     0191                     _SSP1CON2bits	set	401
  1753     018F                     _SSP1STATbits	set	399
  1754     018E                     _SSP1MSK	set	398
  1755     018D                     _SSP1ADD	set	397
  1756     0190                     _SSP1CON1bits	set	400
  1757     0191                     _SSP1CON2	set	401
  1758     0190                     _SSP1CON1	set	400
  1759     018F                     _SSP1STAT	set	399
  1760     059E                     _T0CON0bits	set	1438
  1761     059E                     _T0CON0	set	1438
  1762     059C                     _TMR0L	set	1436
  1763     059D                     _TMR0H	set	1437
  1764     059F                     _T0CON1	set	1439
  1765     070D                     _PIR1bits	set	1805
  1766     0717                     _PIE1bits	set	1815
  1767     070C                     _PIR0bits	set	1804
  1768     0716                     _PIE0bits	set	1814
  1769     080C                     _WDTCON	set	2060
  1770     081F                     _NVMCON2	set	2079
  1771     081C                     _NVMDATL	set	2076
  1772     081D                     _NVMDATH	set	2077
  1773     081E                     _NVMCON1bits	set	2078
  1774     081B                     _NVMADRH	set	2075
  1775     081A                     _NVMADRL	set	2074
  1776     0892                     _OSCTUNE	set	2194
  1777     0893                     _OSCFRQ	set	2195
  1778     0891                     _OSCEN	set	2193
  1779     1EC6                     _SSP1DATPPS	set	7878
  1780     1EC5                     _SSP1CLKPPS	set	7877
  1781     1F21                     _RC1PPS	set	7969
  1782     1F20                     _RC0PPS	set	7968
  1783     1F52                     _INLVLC	set	8018
  1784     1F3C                     _INLVLA	set	7996
  1785     1F51                     _SLRCONC	set	8017
  1786     1F3B                     _SLRCONA	set	7995
  1787     1F50                     _ODCONC	set	8016
  1788     1F3A                     _ODCONA	set	7994
  1789     1F4F                     _WPUC	set	8015
  1790     1F39                     _WPUA	set	7993
  1791     1F38                     _ANSELA	set	7992
  1792     1F4E                     _ANSELC	set	8014
  1793                           
  1794                           	psect	cinit
  1795     00D0                     start_initialization:	
  1796                           ; #config settings
  1797                           
  1798     00D0                     __initialization:
  1799                           
  1800                           ; Clear objects allocated to COMMON
  1801     00D0  01F8               	clrf	__pbssCOMMON& (0+127)
  1802     00D1  01F9               	clrf	(__pbssCOMMON+1)& (0+127)
  1803     00D2  01FA               	clrf	(__pbssCOMMON+2)& (0+127)
  1804                           
  1805                           ; Clear objects allocated to BANK0
  1806     00D3  3020               	movlw	low __pbssBANK0
  1807     00D4  0084               	movwf	4
  1808     00D5  3000               	movlw	high __pbssBANK0
  1809     00D6  0085               	movwf	5
  1810     00D7  3019               	movlw	25
  1811     00D8  3184  24C3  3180   	fcall	clear_ram0
  1812                           
  1813                           ; Clear objects allocated to BANK1
  1814     00DB  30A0               	movlw	low __pbssBANK1
  1815     00DC  0084               	movwf	4
  1816     00DD  3000               	movlw	high __pbssBANK1
  1817     00DE  0085               	movwf	5
  1818     00DF  3040               	movlw	64
  1819     00E0  3184  24C3  3180   	fcall	clear_ram0
  1820     00E3                     end_of_initialization:	
  1821                           ;End of C runtime variable initialization code
  1822                           
  1823     00E3                     __end_of__initialization:
  1824     00E3  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  1825     00E4  0140               	movlb	0
  1826     00E5  2BA9               	ljmp	_main	;jump to C main() function
  1827                           
  1828                           	psect	bssCOMMON
  1829     0078                     __pbssCOMMON:
  1830     0078                     _i2c1WrData:
  1831     0078                     	ds	1
  1832     0079                     _i2cReadCnt@i2c1_slave$F749:
  1833     0079                     	ds	1
  1834     007A                     _LED_timer:
  1835     007A                     	ds	1
  1836                           
  1837                           	psect	bssBANK0
  1838     0020                     __pbssBANK0:
  1839     0020                     _i2cDataRead:
  1840     0020                     	ds	3
  1841     0023                     data_recv_handler@ramBuff:
  1842     0023                     	ds	2
  1843     0025                     _I2C1_SlaveWrColInterruptHandler:
  1844     0025                     	ds	2
  1845     0027                     _I2C1_SlaveBusColInterruptHandler:
  1846     0027                     	ds	2
  1847     0029                     _I2C1_SlaveAddrInterruptHandler:
  1848     0029                     	ds	2
  1849     002B                     _I2C1_SlaveWrInterruptHandler:
  1850     002B                     	ds	2
  1851     002D                     _I2C1_SlaveRdInterruptHandler:
  1852     002D                     	ds	2
  1853     002F                     _MSSP1_InterruptHandler:
  1854     002F                     	ds	2
  1855     0031                     _i2cReadCnt@i2c1_slave$F1132:
  1856     0031                     	ds	1
  1857     0032                     _i2cReadCnt@i2c1_slave$F1095:
  1858     0032                     	ds	1
  1859     0033                     _i2c1SlaveState:
  1860     0033                     	ds	1
  1861     0034                     _i2c1SlaveAddr:
  1862     0034                     	ds	1
  1863     0035                     _i2c1RdData:
  1864     0035                     	ds	1
  1865     0036                     _i2cReadCnt@i2c1_slave$F179:
  1866     0036                     	ds	1
  1867     0037                     _error_flag:
  1868     0037                     	ds	1
  1869     0038                     _i2cReadCnt:
  1870     0038                     	ds	1
  1871                           
  1872                           	psect	bssBANK1
  1873     00A0                     __pbssBANK1:
  1874     00A0                     memory_initialize@ramBuff:
  1875     00A0                     	ds	64
  1876                           
  1877                           	psect	clrtext
  1878     04C3                     clear_ram0:	
  1879                           ;	Called with FSR0 containing the base address, and
  1880                           ;	WREG with the size to clear
  1881                           
  1882     04C3  0064               	clrwdt	;clear the watchdog before getting into this loop
  1883     04C4                     clrloop0:
  1884     04C4  0180               	clrf	0	;clear RAM location pointed to by FSR
  1885     04C5  3101               	addfsr 0,1
  1886     04C6  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  1887     04C7  2CC4               	goto	clrloop0	;have we reached the end yet?
  1888     04C8  3400               	retlw	0	;all done for this memory range, return
  1889                           
  1890                           	psect	cstackCOMMON
  1891     0070                     __pcstackCOMMON:
  1892     0070                     ?_TMR0_ISR:
  1893     0070                     ?_I2C1_SlaveOpen:	
  1894                           ; 1 bytes @ 0x0
  1895                           
  1896     0070                     ?_I2C1_SlaveSetSlaveAddr:	
  1897                           ; 1 bytes @ 0x0
  1898                           
  1899     0070                     ?_I2C1_SlaveSetSlaveMask:	
  1900                           ; 1 bytes @ 0x0
  1901                           
  1902     0070                     ?_I2C1_Isr:	
  1903                           ; 1 bytes @ 0x0
  1904                           
  1905     0070                     ?_I2C1_SlaveDefWrInterruptHandler:	
  1906                           ; 1 bytes @ 0x0
  1907                           
  1908     0070                     ?_I2C1_SlaveDefRdInterruptHandler:	
  1909                           ; 1 bytes @ 0x0
  1910                           
  1911     0070                     ??_I2C1_SlaveDefRdInterruptHandler:	
  1912                           ; 1 bytes @ 0x0
  1913                           
  1914     0070                     ?_I2C1_SlaveDefAddrInterruptHandler:	
  1915                           ; 1 bytes @ 0x0
  1916                           
  1917     0070                     ??_I2C1_SlaveDefAddrInterruptHandler:	
  1918                           ; 1 bytes @ 0x0
  1919                           
  1920     0070                     ?_I2C1_SlaveEnableIrq:	
  1921                           ; 1 bytes @ 0x0
  1922                           
  1923     0070                     ?_I2C1_SlaveGetRxData:	
  1924                           ; 1 bytes @ 0x0
  1925                           
  1926     0070                     ??_I2C1_SlaveGetRxData:	
  1927                           ; 1 bytes @ 0x0
  1928                           
  1929     0070                     ?_I2C1_SlaveSendTxData:	
  1930                           ; 1 bytes @ 0x0
  1931                           
  1932     0070                     ??_I2C1_SlaveSendTxData:	
  1933                           ; 1 bytes @ 0x0
  1934                           
  1935     0070                     ?_I2C1_SlaveIsRead:	
  1936                           ; 1 bytes @ 0x0
  1937                           
  1938     0070                     ??_I2C1_SlaveIsRead:	
  1939                           ; 1 bytes @ 0x0
  1940                           
  1941     0070                     ?_I2C1_SlaveClearIrq:	
  1942                           ; 1 bytes @ 0x0
  1943                           
  1944     0070                     ??_I2C1_SlaveClearIrq:	
  1945                           ; 1 bytes @ 0x0
  1946                           
  1947     0070                     ?_I2C1_SlaveIsAddr:	
  1948                           ; 1 bytes @ 0x0
  1949                           
  1950     0070                     ??_I2C1_SlaveIsAddr:	
  1951                           ; 1 bytes @ 0x0
  1952                           
  1953     0070                     ?_I2C1_SlaveAddrCallBack:	
  1954                           ; 1 bytes @ 0x0
  1955                           
  1956     0070                     ??_I2C1_SlaveAddrCallBack:	
  1957                           ; 1 bytes @ 0x0
  1958                           
  1959     0070                     ?_I2C1_SlaveIsTxBufEmpty:	
  1960                           ; 1 bytes @ 0x0
  1961                           
  1962     0070                     ??_I2C1_SlaveIsTxBufEmpty:	
  1963                           ; 1 bytes @ 0x0
  1964                           
  1965     0070                     ?_I2C1_SlaveWrCallBack:	
  1966                           ; 1 bytes @ 0x0
  1967                           
  1968     0070                     ?_I2C1_SlaveIsRxBufFull:	
  1969                           ; 1 bytes @ 0x0
  1970                           
  1971     0070                     ??_I2C1_SlaveIsRxBufFull:	
  1972                           ; 1 bytes @ 0x0
  1973                           
  1974     0070                     ?_I2C1_SlaveRdCallBack:	
  1975                           ; 1 bytes @ 0x0
  1976                           
  1977     0070                     ??_I2C1_SlaveRdCallBack:	
  1978                           ; 1 bytes @ 0x0
  1979                           
  1980     0070                     ?_I2C1_SlaveReleaseClock:	
  1981                           ; 1 bytes @ 0x0
  1982                           
  1983     0070                     ??_I2C1_SlaveReleaseClock:	
  1984                           ; 1 bytes @ 0x0
  1985                           
  1986     0070                     ?_TMR0_DefaultInterruptHandler:	
  1987                           ; 1 bytes @ 0x0
  1988                           
  1989     0070                     ??_TMR0_DefaultInterruptHandler:	
  1990                           ; 1 bytes @ 0x0
  1991                           
  1992     0070                     ?_OSCILLATOR_Initialize:	
  1993                           ; 1 bytes @ 0x0
  1994                           
  1995     0070                     ?_WDT_Initialize:	
  1996                           ; 1 bytes @ 0x0
  1997                           
  1998     0070                     ?_memory_initialize:	
  1999                           ; 1 bytes @ 0x0
  2000                           
  2001     0070                     ?_data_recv_handler:	
  2002                           ; 1 bytes @ 0x0
  2003                           
  2004     0070                     ??_data_recv_handler:	
  2005                           ; 1 bytes @ 0x0
  2006                           
  2007     0070                     ?_getSensorBoardType:	
  2008                           ; 1 bytes @ 0x0
  2009                           
  2010     0070                     ?_SensorBoardType_validation:	
  2011                           ; 1 bytes @ 0x0
  2012                           
  2013     0070                     ?_error_signal:	
  2014                           ; 1 bytes @ 0x0
  2015                           
  2016     0070                     ?_PIN_MANAGER_Initialize:	
  2017                           ; 1 bytes @ 0x0
  2018                           
  2019     0070                     ?_INTERRUPT_InterruptManager:	
  2020                           ; 1 bytes @ 0x0
  2021                           
  2022     0070                     ?_I2C1_Initialize:	
  2023                           ; 1 bytes @ 0x0
  2024                           
  2025     0070                     ?_I2C1_Open:	
  2026                           ; 1 bytes @ 0x0
  2027                           
  2028     0070                     ?_TMR0_Initialize:	
  2029                           ; 1 bytes @ 0x0
  2030                           
  2031     0070                     ?_SYSTEM_Initialize:	
  2032                           ; 1 bytes @ 0x0
  2033                           
  2034     0070                     ?_main:	
  2035                           ; 1 bytes @ 0x0
  2036                           
  2037     0070                     I2C1_SlaveSendTxData@data:	
  2038                           ; 1 bytes @ 0x0
  2039                           
  2040                           
  2041                           ; 1 bytes @ 0x0
  2042     0070                     	ds	1
  2043     0071                     ??_TMR0_ISR:
  2044     0071                     ??_I2C1_Isr:	
  2045                           ; 1 bytes @ 0x1
  2046                           
  2047     0071                     ??_I2C1_SlaveDefWrInterruptHandler:	
  2048                           ; 1 bytes @ 0x1
  2049                           
  2050     0071                     ??_I2C1_SlaveWrCallBack:	
  2051                           ; 1 bytes @ 0x1
  2052                           
  2053                           
  2054                           ; 1 bytes @ 0x1
  2055     0071                     	ds	2
  2056     0073                     ??_I2C1_SlaveOpen:
  2057     0073                     ??_I2C1_SlaveSetSlaveAddr:	
  2058                           ; 1 bytes @ 0x3
  2059                           
  2060     0073                     ??_I2C1_SlaveSetSlaveMask:	
  2061                           ; 1 bytes @ 0x3
  2062                           
  2063     0073                     ?_I2C1_SlaveSetIsrHandler:	
  2064                           ; 1 bytes @ 0x3
  2065                           
  2066     0073                     ?_I2C1_SlaveSetBusColIntHandler:	
  2067                           ; 1 bytes @ 0x3
  2068                           
  2069     0073                     ?_I2C1_SlaveSetWriteIntHandler:	
  2070                           ; 1 bytes @ 0x3
  2071                           
  2072     0073                     ?_I2C1_SlaveSetReadIntHandler:	
  2073                           ; 1 bytes @ 0x3
  2074                           
  2075     0073                     ?_I2C1_SlaveSetAddrIntHandler:	
  2076                           ; 1 bytes @ 0x3
  2077                           
  2078     0073                     ?_I2C1_SlaveSetWrColIntHandler:	
  2079                           ; 1 bytes @ 0x3
  2080                           
  2081     0073                     ??_I2C1_SlaveEnableIrq:	
  2082                           ; 1 bytes @ 0x3
  2083                           
  2084     0073                     ?_TMR0_SetInterruptHandler:	
  2085                           ; 1 bytes @ 0x3
  2086                           
  2087     0073                     ?_FLASH_EraseBlock:	
  2088                           ; 1 bytes @ 0x3
  2089                           
  2090     0073                     ??_OSCILLATOR_Initialize:	
  2091                           ; 1 bytes @ 0x3
  2092                           
  2093     0073                     ??_WDT_Initialize:	
  2094                           ; 1 bytes @ 0x3
  2095                           
  2096     0073                     ??_getSensorBoardType:	
  2097                           ; 1 bytes @ 0x3
  2098                           
  2099     0073                     ??_SensorBoardType_validation:	
  2100                           ; 1 bytes @ 0x3
  2101                           
  2102     0073                     ??_error_signal:	
  2103                           ; 1 bytes @ 0x3
  2104                           
  2105     0073                     ??_PIN_MANAGER_Initialize:	
  2106                           ; 1 bytes @ 0x3
  2107                           
  2108     0073                     ??_INTERRUPT_InterruptManager:	
  2109                           ; 1 bytes @ 0x3
  2110                           
  2111     0073                     ??_I2C1_Initialize:	
  2112                           ; 1 bytes @ 0x3
  2113                           
  2114     0073                     ?_FLASH_ReadWord:	
  2115                           ; 1 bytes @ 0x3
  2116                           
  2117     0073                     ?___wmul:	
  2118                           ; 2 bytes @ 0x3
  2119                           
  2120     0073                     SensorBoardType_validation@SensorBoardType:	
  2121                           ; 2 bytes @ 0x3
  2122                           
  2123     0073                     I2C1_SlaveSetSlaveAddr@slaveAddr:	
  2124                           ; 1 bytes @ 0x3
  2125                           
  2126     0073                     I2C1_SlaveSetSlaveMask@maskAddr:	
  2127                           ; 1 bytes @ 0x3
  2128                           
  2129     0073                     I2C1_SlaveSetIsrHandler@handler:	
  2130                           ; 1 bytes @ 0x3
  2131                           
  2132     0073                     I2C1_SlaveSetReadIntHandler@handler:	
  2133                           ; 2 bytes @ 0x3
  2134                           
  2135     0073                     I2C1_SlaveSetWriteIntHandler@handler:	
  2136                           ; 2 bytes @ 0x3
  2137                           
  2138     0073                     I2C1_SlaveSetAddrIntHandler@handler:	
  2139                           ; 2 bytes @ 0x3
  2140                           
  2141     0073                     I2C1_SlaveSetWrColIntHandler@handler:	
  2142                           ; 2 bytes @ 0x3
  2143                           
  2144     0073                     I2C1_SlaveSetBusColIntHandler@handler:	
  2145                           ; 2 bytes @ 0x3
  2146                           
  2147     0073                     TMR0_SetInterruptHandler@InterruptHandler:	
  2148                           ; 2 bytes @ 0x3
  2149                           
  2150     0073                     FLASH_ReadWord@flashAddr:	
  2151                           ; 2 bytes @ 0x3
  2152                           
  2153     0073                     FLASH_EraseBlock@startAddr:	
  2154                           ; 2 bytes @ 0x3
  2155                           
  2156     0073                     ___wmul@multiplier:	
  2157                           ; 2 bytes @ 0x3
  2158                           
  2159                           
  2160                           ; 2 bytes @ 0x3
  2161     0073                     	ds	2
  2162     0075                     ??_FLASH_ReadWord:
  2163     0075                     ??_I2C1_SlaveSetIsrHandler:	
  2164                           ; 1 bytes @ 0x5
  2165                           
  2166     0075                     ??_I2C1_SlaveSetBusColIntHandler:	
  2167                           ; 1 bytes @ 0x5
  2168                           
  2169     0075                     ??_I2C1_SlaveSetWriteIntHandler:	
  2170                           ; 1 bytes @ 0x5
  2171                           
  2172     0075                     ??_I2C1_SlaveSetReadIntHandler:	
  2173                           ; 1 bytes @ 0x5
  2174                           
  2175     0075                     ??_I2C1_SlaveSetAddrIntHandler:	
  2176                           ; 1 bytes @ 0x5
  2177                           
  2178     0075                     ??_I2C1_SlaveSetWrColIntHandler:	
  2179                           ; 1 bytes @ 0x5
  2180                           
  2181     0075                     ??_TMR0_SetInterruptHandler:	
  2182                           ; 1 bytes @ 0x5
  2183                           
  2184     0075                     ??_FLASH_EraseBlock:	
  2185                           ; 1 bytes @ 0x5
  2186                           
  2187     0075                     ??_I2C1_Open:	
  2188                           ; 1 bytes @ 0x5
  2189                           
  2190     0075                     ??_TMR0_Initialize:	
  2191                           ; 1 bytes @ 0x5
  2192                           
  2193     0075                     ??_SYSTEM_Initialize:	
  2194                           ; 1 bytes @ 0x5
  2195                           
  2196     0075                     FLASH_ReadWord@GIEBitValue:	
  2197                           ; 1 bytes @ 0x5
  2198                           
  2199     0075                     FLASH_EraseBlock@GIEBitValue:	
  2200                           ; 1 bytes @ 0x5
  2201                           
  2202     0075                     ___wmul@multiplicand:	
  2203                           ; 1 bytes @ 0x5
  2204                           
  2205                           
  2206                           ; 2 bytes @ 0x5
  2207     0075                     	ds	2
  2208     0077                     ??_FLASH_WriteWord:
  2209     0077                     ??___wmul:	
  2210                           ; 1 bytes @ 0x7
  2211                           
  2212                           
  2213                           ; 1 bytes @ 0x7
  2214     0077                     	ds	1
  2215     0078                     ??_main:
  2216                           
  2217                           	psect	cstackBANK0
  2218     0039                     __pcstackBANK0:	
  2219                           ; 1 bytes @ 0x8
  2220                           
  2221     0039                     ?_FLASH_WriteBlock:
  2222     0039                     FLASH_WriteBlock@writeAddr:	
  2223                           ; 1 bytes @ 0x0
  2224                           
  2225     0039                     ___wmul@product:	
  2226                           ; 2 bytes @ 0x0
  2227                           
  2228                           
  2229                           ; 2 bytes @ 0x0
  2230     0039                     	ds	2
  2231     003B                     FLASH_WriteBlock@flashWordArray:
  2232                           
  2233                           ; 1 bytes @ 0x2
  2234     003B                     	ds	1
  2235     003C                     ??_FLASH_WriteBlock:
  2236                           
  2237                           ; 1 bytes @ 0x3
  2238     003C                     	ds	3
  2239     003F                     FLASH_WriteBlock@blockStartAddr:
  2240                           
  2241                           ; 2 bytes @ 0x6
  2242     003F                     	ds	2
  2243     0041                     FLASH_WriteBlock@GIEBitValue:
  2244                           
  2245                           ; 1 bytes @ 0x8
  2246     0041                     	ds	1
  2247     0042                     FLASH_WriteBlock@i:
  2248                           
  2249                           ; 1 bytes @ 0x9
  2250     0042                     	ds	1
  2251     0043                     ?_FLASH_WriteWord:
  2252     0043                     FLASH_WriteWord@flashAddr:	
  2253                           ; 1 bytes @ 0xA
  2254                           
  2255                           
  2256                           ; 2 bytes @ 0xA
  2257     0043                     	ds	2
  2258     0045                     FLASH_WriteWord@ramBuf:
  2259                           
  2260                           ; 1 bytes @ 0xC
  2261     0045                     	ds	1
  2262     0046                     FLASH_WriteWord@word:
  2263                           
  2264                           ; 2 bytes @ 0xD
  2265     0046                     	ds	2
  2266     0048                     FLASH_WriteWord@offset:
  2267                           
  2268                           ; 1 bytes @ 0xF
  2269     0048                     	ds	1
  2270     0049                     FLASH_WriteWord@blockStartAddr:
  2271                           
  2272                           ; 2 bytes @ 0x10
  2273     0049                     	ds	2
  2274     004B                     FLASH_WriteWord@i:
  2275                           
  2276                           ; 1 bytes @ 0x12
  2277     004B                     	ds	1
  2278     004C                     ??_memory_initialize:
  2279                           
  2280                           ; 1 bytes @ 0x13
  2281     004C                     	ds	2
  2282     004E                     memory_initialize@TAG:
  2283                           
  2284                           ; 1 bytes @ 0x15
  2285     004E                     	ds	1
  2286     004F                     main@TAG:
  2287                           
  2288                           ; 1 bytes @ 0x16
  2289     004F                     	ds	1
  2290                           
  2291                           	psect	maintext
  2292     03A9                     __pmaintext:	
  2293 ;;
  2294 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  2295 ;;
  2296 ;; *************** function _main *****************
  2297 ;; Defined at:
  2298 ;;		line 49 in file "main.c"
  2299 ;; Parameters:    Size  Location     Type
  2300 ;;		None
  2301 ;; Auto vars:     Size  Location     Type
  2302 ;;  TAG             1   22[BANK0 ] unsigned char 
  2303 ;; Return value:  Size  Location     Type
  2304 ;;                  1    wreg      void 
  2305 ;; Registers used:
  2306 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2307 ;; Tracked objects:
  2308 ;;		On entry : B3F/0
  2309 ;;		On exit  : 0/0
  2310 ;;		Unchanged: 0/0
  2311 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2312 ;;      Params:         0       0       0       0
  2313 ;;      Locals:         0       1       0       0
  2314 ;;      Temps:          0       0       0       0
  2315 ;;      Totals:         0       1       0       0
  2316 ;;Total ram usage:        1 bytes
  2317 ;; Hardware stack levels required when called: 9
  2318 ;; This function calls:
  2319 ;;		_I2C1_Open
  2320 ;;		_SYSTEM_Initialize
  2321 ;;		_SensorBoardType_validation
  2322 ;;		_error_signal
  2323 ;;		_getSensorBoardType
  2324 ;;		_memory_initialize
  2325 ;; This function is called by:
  2326 ;;		Startup code after reset
  2327 ;; This function uses a non-reentrant model
  2328 ;;
  2329                           
  2330     03A9                     _main:	
  2331                           ;psect for function _main
  2332                           
  2333     03A9                     l2292:	
  2334                           ;incstack = 0
  2335                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2336                           
  2337                           
  2338                           ;main.c: 52:     SYSTEM_Initialize();
  2339     03A9  3184  244F  3183   	fcall	_SYSTEM_Initialize
  2340                           
  2341                           ;main.c: 54:     uint8_t TAG = getSensorBoardType();
  2342     03AC  3184  246E  3183   	fcall	_getSensorBoardType
  2343     03AF  0140               	movlb	0	; select bank0
  2344     03B0  00CF               	movwf	main@TAG
  2345                           
  2346                           ;main.c: 56:     if(SensorBoardType_validation(TAG)){
  2347     03B1  084F               	movf	main@TAG,w
  2348     03B2  3184  243F  3183   	fcall	_SensorBoardType_validation
  2349     03B5  3A00               	xorlw	0
  2350     03B6  1903               	skipnz
  2351     03B7  2BB9               	goto	u911
  2352     03B8  2BBA               	goto	u910
  2353     03B9                     u911:
  2354     03B9  2BC0               	goto	l2296
  2355     03BA                     u910:
  2356     03BA                     l2294:
  2357                           
  2358                           ;main.c: 58:         memory_initialize(TAG);
  2359     03BA  0140               	movlb	0	; select bank0
  2360     03BB  084F               	movf	main@TAG,w
  2361     03BC  3180  20E6  3183   	fcall	_memory_initialize
  2362                           
  2363                           ;main.c: 59:     }
  2364     03BF  2BC3               	goto	l2298
  2365     03C0                     l2296:
  2366                           
  2367                           ;main.c: 61:         error_signal();
  2368     03C0  3185  2512  3183   	fcall	_error_signal
  2369     03C3                     l2298:
  2370                           
  2371                           ;main.c: 64:     I2C1_Open();
  2372     03C3  3183  2301  3183   	fcall	_I2C1_Open
  2373     03C6                     l2300:
  2374                           
  2375                           ;main.c: 75:     (INTCONbits.GIE = 1);
  2376     03C6  178B               	bsf	11,7	;volatile
  2377     03C7                     l2302:
  2378                           
  2379                           ;main.c: 78:     (INTCONbits.PEIE = 1);
  2380     03C7  170B               	bsf	11,6	;volatile
  2381     03C8                     l635:	
  2382                           ;main.c: 86:     while (1)
  2383                           
  2384     03C8                     l636:	
  2385                           ;main.c: 87:     {;main.c: 92:     }
  2386                           
  2387     03C8  2BC8               	goto	l635
  2388     03C9  2831               	ljmp	start
  2389     03CA                     __end_of_main:
  2390                           
  2391                           	psect	text1
  2392     00E6                     __ptext1:	
  2393 ;; *************** function _memory_initialize *****************
  2394 ;; Defined at:
  2395 ;;		line 5 in file "flash_memory_filling.c"
  2396 ;; Parameters:    Size  Location     Type
  2397 ;;  TAG             1    wreg     unsigned char 
  2398 ;; Auto vars:     Size  Location     Type
  2399 ;;  TAG             1   21[BANK0 ] unsigned char 
  2400 ;; Return value:  Size  Location     Type
  2401 ;;                  1    wreg      void 
  2402 ;; Registers used:
  2403 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2404 ;; Tracked objects:
  2405 ;;		On entry : 0/0
  2406 ;;		On exit  : 0/0
  2407 ;;		Unchanged: 0/0
  2408 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2409 ;;      Params:         0       0       0       0
  2410 ;;      Locals:         0       1       0       0
  2411 ;;      Temps:          0       2       0       0
  2412 ;;      Totals:         0       3       0       0
  2413 ;;Total ram usage:        3 bytes
  2414 ;; Hardware stack levels used: 1
  2415 ;; Hardware stack levels required when called: 8
  2416 ;; This function calls:
  2417 ;;		_FLASH_ReadWord
  2418 ;;		_FLASH_WriteWord
  2419 ;;		___wmul
  2420 ;; This function is called by:
  2421 ;;		_main
  2422 ;; This function uses a non-reentrant model
  2423 ;;
  2424                           
  2425     00E6                     _memory_initialize:	
  2426                           ;psect for function _memory_initialize
  2427                           
  2428                           
  2429                           ;incstack = 0
  2430                           ; Regs used in _memory_initialize: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2431                           ;memory_initialize@TAG stored from wreg
  2432     00E6  0140               	movlb	0	; select bank0
  2433     00E7  00CE               	movwf	memory_initialize@TAG
  2434     00E8                     l2276:
  2435                           
  2436                           ;flash_memory_filling.c: 5: void memory_initialize(uint8_t TAG);flash_memory_filling.c: 
      +                          6: {;flash_memory_filling.c: 8:     static uint16_t ramBuff[32];;flash_memory_filling.c:
      +                           10:     if(FLASH_ReadWord(0x780) != 0x55)
  2437     00E8  3080               	movlw	128
  2438     00E9  00F3               	movwf	FLASH_ReadWord@flashAddr
  2439     00EA  3007               	movlw	7
  2440     00EB  00F4               	movwf	FLASH_ReadWord@flashAddr+1
  2441     00EC  3183  23E6  3180   	fcall	_FLASH_ReadWord
  2442     00EF  3055               	movlw	85
  2443     00F0  0673               	xorwf	?_FLASH_ReadWord,w
  2444     00F1  0474               	iorwf	?_FLASH_ReadWord+1,w
  2445     00F2  1903               	btfsc	3,2
  2446     00F3  28F5               	goto	u901
  2447     00F4  28F6               	goto	u900
  2448     00F5                     u901:
  2449     00F5  29E9               	goto	l32
  2450     00F6                     u900:
  2451     00F6                     l2278:
  2452                           
  2453                           ;flash_memory_filling.c: 11:     {;flash_memory_filling.c: 12:         FLASH_WriteWord(0
      +                          x780, ramBuff, 0x55);
  2454     00F6  3080               	movlw	128
  2455     00F7  0140               	movlb	0	; select bank0
  2456     00F8  00C3               	movwf	FLASH_WriteWord@flashAddr
  2457     00F9  3007               	movlw	7
  2458     00FA  00C4               	movwf	FLASH_WriteWord@flashAddr+1
  2459     00FB  30A0               	movlw	(low (memory_initialize@ramBuff| 0))& (0+255)
  2460     00FC  00C5               	movwf	FLASH_WriteWord@ramBuf
  2461     00FD  3055               	movlw	85
  2462     00FE  00C6               	movwf	FLASH_WriteWord@word
  2463     00FF  3000               	movlw	0
  2464     0100  00C7               	movwf	FLASH_WriteWord@word+1
  2465     0101  3182  22C3  3180   	fcall	_FLASH_WriteWord
  2466                           
  2467                           ;flash_memory_filling.c: 13:         FLASH_WriteWord(0x780 + 1, ramBuff, 0x00 );
  2468     0104  3081               	movlw	129
  2469     0105  0140               	movlb	0	; select bank0
  2470     0106  00C3               	movwf	FLASH_WriteWord@flashAddr
  2471     0107  3007               	movlw	7
  2472     0108  00C4               	movwf	FLASH_WriteWord@flashAddr+1
  2473     0109  30A0               	movlw	(low (memory_initialize@ramBuff| 0))& (0+255)
  2474     010A  00C5               	movwf	FLASH_WriteWord@ramBuf
  2475     010B  3000               	movlw	0
  2476     010C  00C6               	movwf	FLASH_WriteWord@word
  2477     010D  00C7               	movwf	FLASH_WriteWord@word+1
  2478     010E  3182  22C3  3180   	fcall	_FLASH_WriteWord
  2479     0111                     l2280:
  2480                           
  2481                           ;flash_memory_filling.c: 14:         FLASH_WriteWord(0x780 + 2, ramBuff, (uint16_t)defau
      +                          lt_in_flash[TAG - 1][0]);
  2482     0111  3082               	movlw	130
  2483     0112  0140               	movlb	0	; select bank0
  2484     0113  00C3               	movwf	FLASH_WriteWord@flashAddr
  2485     0114  3007               	movlw	7
  2486     0115  00C4               	movwf	FLASH_WriteWord@flashAddr+1
  2487     0116  30A0               	movlw	(low (memory_initialize@ramBuff| 0))& (0+255)
  2488     0117  00C5               	movwf	FLASH_WriteWord@ramBuf
  2489     0118  084E               	movf	memory_initialize@TAG,w
  2490     0119  00CC               	movwf	??_memory_initialize
  2491     011A  01CD               	clrf	??_memory_initialize+1
  2492     011B  084C               	movf	??_memory_initialize,w
  2493     011C  00F3               	movwf	___wmul@multiplier
  2494     011D  084D               	movf	??_memory_initialize+1,w
  2495     011E  00F4               	movwf	___wmul@multiplier+1
  2496     011F  300C               	movlw	12
  2497     0120  00F5               	movwf	___wmul@multiplicand
  2498     0121  3000               	movlw	0
  2499     0122  00F6               	movwf	___wmul@multiplicand+1
  2500     0123  3183  2387  3180   	fcall	___wmul
  2501     0126  3034               	movlw	52
  2502     0127  0773               	addwf	?___wmul,w
  2503     0128  0084               	movwf	4
  2504     0129  3000               	movlw	0
  2505     012A  3D74               	addwfc	?___wmul+1,w
  2506     012B  3880               	iorlw	128
  2507     012C  0085               	movwf	5
  2508     012D  3F00               	moviw [0]fsr0
  2509     012E  0140               	movlb	0	; select bank0
  2510     012F  00C6               	movwf	FLASH_WriteWord@word
  2511     0130  3F01               	moviw [1]fsr0
  2512     0131  00C7               	movwf	FLASH_WriteWord@word+1
  2513     0132  3182  22C3  3180   	fcall	_FLASH_WriteWord
  2514     0135                     l2282:
  2515                           
  2516                           ;flash_memory_filling.c: 15:         FLASH_WriteWord(0x780 + 3, ramBuff, (uint16_t)defau
      +                          lt_in_flash[TAG - 1][1]);
  2517     0135  3083               	movlw	131
  2518     0136  0140               	movlb	0	; select bank0
  2519     0137  00C3               	movwf	FLASH_WriteWord@flashAddr
  2520     0138  3007               	movlw	7
  2521     0139  00C4               	movwf	FLASH_WriteWord@flashAddr+1
  2522     013A  30A0               	movlw	(low (memory_initialize@ramBuff| 0))& (0+255)
  2523     013B  00C5               	movwf	FLASH_WriteWord@ramBuf
  2524     013C  084E               	movf	memory_initialize@TAG,w
  2525     013D  00CC               	movwf	??_memory_initialize
  2526     013E  01CD               	clrf	??_memory_initialize+1
  2527     013F  084C               	movf	??_memory_initialize,w
  2528     0140  00F3               	movwf	___wmul@multiplier
  2529     0141  084D               	movf	??_memory_initialize+1,w
  2530     0142  00F4               	movwf	___wmul@multiplier+1
  2531     0143  300C               	movlw	12
  2532     0144  00F5               	movwf	___wmul@multiplicand
  2533     0145  3000               	movlw	0
  2534     0146  00F6               	movwf	___wmul@multiplicand+1
  2535     0147  3183  2387  3180   	fcall	___wmul
  2536     014A  3036               	movlw	54
  2537     014B  0773               	addwf	?___wmul,w
  2538     014C  0084               	movwf	4
  2539     014D  3000               	movlw	0
  2540     014E  3D74               	addwfc	?___wmul+1,w
  2541     014F  3880               	iorlw	128
  2542     0150  0085               	movwf	5
  2543     0151  3F00               	moviw [0]fsr0
  2544     0152  0140               	movlb	0	; select bank0
  2545     0153  00C6               	movwf	FLASH_WriteWord@word
  2546     0154  3F01               	moviw [1]fsr0
  2547     0155  00C7               	movwf	FLASH_WriteWord@word+1
  2548     0156  3182  22C3  3180   	fcall	_FLASH_WriteWord
  2549     0159                     l2284:
  2550                           
  2551                           ;flash_memory_filling.c: 16:         FLASH_WriteWord(0x780 + 4, ramBuff, (uint16_t)defau
      +                          lt_in_flash[TAG - 1][2]);
  2552     0159  3084               	movlw	132
  2553     015A  0140               	movlb	0	; select bank0
  2554     015B  00C3               	movwf	FLASH_WriteWord@flashAddr
  2555     015C  3007               	movlw	7
  2556     015D  00C4               	movwf	FLASH_WriteWord@flashAddr+1
  2557     015E  30A0               	movlw	(low (memory_initialize@ramBuff| 0))& (0+255)
  2558     015F  00C5               	movwf	FLASH_WriteWord@ramBuf
  2559     0160  084E               	movf	memory_initialize@TAG,w
  2560     0161  00CC               	movwf	??_memory_initialize
  2561     0162  01CD               	clrf	??_memory_initialize+1
  2562     0163  084C               	movf	??_memory_initialize,w
  2563     0164  00F3               	movwf	___wmul@multiplier
  2564     0165  084D               	movf	??_memory_initialize+1,w
  2565     0166  00F4               	movwf	___wmul@multiplier+1
  2566     0167  300C               	movlw	12
  2567     0168  00F5               	movwf	___wmul@multiplicand
  2568     0169  3000               	movlw	0
  2569     016A  00F6               	movwf	___wmul@multiplicand+1
  2570     016B  3183  2387  3180   	fcall	___wmul
  2571     016E  3038               	movlw	56
  2572     016F  0773               	addwf	?___wmul,w
  2573     0170  0084               	movwf	4
  2574     0171  3000               	movlw	0
  2575     0172  3D74               	addwfc	?___wmul+1,w
  2576     0173  3880               	iorlw	128
  2577     0174  0085               	movwf	5
  2578     0175  3F00               	moviw [0]fsr0
  2579     0176  0140               	movlb	0	; select bank0
  2580     0177  00C6               	movwf	FLASH_WriteWord@word
  2581     0178  3F01               	moviw [1]fsr0
  2582     0179  00C7               	movwf	FLASH_WriteWord@word+1
  2583     017A  3182  22C3  3180   	fcall	_FLASH_WriteWord
  2584     017D                     l2286:
  2585                           
  2586                           ;flash_memory_filling.c: 17:         FLASH_WriteWord(0x780 + 5, ramBuff, (uint16_t)defau
      +                          lt_in_flash[TAG - 1][3]);
  2587     017D  3085               	movlw	133
  2588     017E  0140               	movlb	0	; select bank0
  2589     017F  00C3               	movwf	FLASH_WriteWord@flashAddr
  2590     0180  3007               	movlw	7
  2591     0181  00C4               	movwf	FLASH_WriteWord@flashAddr+1
  2592     0182  30A0               	movlw	(low (memory_initialize@ramBuff| 0))& (0+255)
  2593     0183  00C5               	movwf	FLASH_WriteWord@ramBuf
  2594     0184  084E               	movf	memory_initialize@TAG,w
  2595     0185  00CC               	movwf	??_memory_initialize
  2596     0186  01CD               	clrf	??_memory_initialize+1
  2597     0187  084C               	movf	??_memory_initialize,w
  2598     0188  00F3               	movwf	___wmul@multiplier
  2599     0189  084D               	movf	??_memory_initialize+1,w
  2600     018A  00F4               	movwf	___wmul@multiplier+1
  2601     018B  300C               	movlw	12
  2602     018C  00F5               	movwf	___wmul@multiplicand
  2603     018D  3000               	movlw	0
  2604     018E  00F6               	movwf	___wmul@multiplicand+1
  2605     018F  3183  2387  3180   	fcall	___wmul
  2606     0192  303A               	movlw	58
  2607     0193  0773               	addwf	?___wmul,w
  2608     0194  0084               	movwf	4
  2609     0195  3000               	movlw	0
  2610     0196  3D74               	addwfc	?___wmul+1,w
  2611     0197  3880               	iorlw	128
  2612     0198  0085               	movwf	5
  2613     0199  3F00               	moviw [0]fsr0
  2614     019A  0140               	movlb	0	; select bank0
  2615     019B  00C6               	movwf	FLASH_WriteWord@word
  2616     019C  3F01               	moviw [1]fsr0
  2617     019D  00C7               	movwf	FLASH_WriteWord@word+1
  2618     019E  3182  22C3  3180   	fcall	_FLASH_WriteWord
  2619     01A1                     l2288:
  2620                           
  2621                           ;flash_memory_filling.c: 18:         FLASH_WriteWord(0x780 + 6, ramBuff, (uint16_t)defau
      +                          lt_in_flash[TAG - 1][4]);
  2622     01A1  3086               	movlw	134
  2623     01A2  0140               	movlb	0	; select bank0
  2624     01A3  00C3               	movwf	FLASH_WriteWord@flashAddr
  2625     01A4  3007               	movlw	7
  2626     01A5  00C4               	movwf	FLASH_WriteWord@flashAddr+1
  2627     01A6  30A0               	movlw	(low (memory_initialize@ramBuff| 0))& (0+255)
  2628     01A7  00C5               	movwf	FLASH_WriteWord@ramBuf
  2629     01A8  084E               	movf	memory_initialize@TAG,w
  2630     01A9  00CC               	movwf	??_memory_initialize
  2631     01AA  01CD               	clrf	??_memory_initialize+1
  2632     01AB  084C               	movf	??_memory_initialize,w
  2633     01AC  00F3               	movwf	___wmul@multiplier
  2634     01AD  084D               	movf	??_memory_initialize+1,w
  2635     01AE  00F4               	movwf	___wmul@multiplier+1
  2636     01AF  300C               	movlw	12
  2637     01B0  00F5               	movwf	___wmul@multiplicand
  2638     01B1  3000               	movlw	0
  2639     01B2  00F6               	movwf	___wmul@multiplicand+1
  2640     01B3  3183  2387  3180   	fcall	___wmul
  2641     01B6  303C               	movlw	60
  2642     01B7  0773               	addwf	?___wmul,w
  2643     01B8  0084               	movwf	4
  2644     01B9  3000               	movlw	0
  2645     01BA  3D74               	addwfc	?___wmul+1,w
  2646     01BB  3880               	iorlw	128
  2647     01BC  0085               	movwf	5
  2648     01BD  3F00               	moviw [0]fsr0
  2649     01BE  0140               	movlb	0	; select bank0
  2650     01BF  00C6               	movwf	FLASH_WriteWord@word
  2651     01C0  3F01               	moviw [1]fsr0
  2652     01C1  00C7               	movwf	FLASH_WriteWord@word+1
  2653     01C2  3182  22C3  3180   	fcall	_FLASH_WriteWord
  2654     01C5                     l2290:
  2655                           
  2656                           ;flash_memory_filling.c: 19:         FLASH_WriteWord(0x780 + 7, ramBuff, (uint16_t)defau
      +                          lt_in_flash[TAG - 1][5]);
  2657     01C5  3087               	movlw	135
  2658     01C6  0140               	movlb	0	; select bank0
  2659     01C7  00C3               	movwf	FLASH_WriteWord@flashAddr
  2660     01C8  3007               	movlw	7
  2661     01C9  00C4               	movwf	FLASH_WriteWord@flashAddr+1
  2662     01CA  30A0               	movlw	(low (memory_initialize@ramBuff| 0))& (0+255)
  2663     01CB  00C5               	movwf	FLASH_WriteWord@ramBuf
  2664     01CC  084E               	movf	memory_initialize@TAG,w
  2665     01CD  00CC               	movwf	??_memory_initialize
  2666     01CE  01CD               	clrf	??_memory_initialize+1
  2667     01CF  084C               	movf	??_memory_initialize,w
  2668     01D0  00F3               	movwf	___wmul@multiplier
  2669     01D1  084D               	movf	??_memory_initialize+1,w
  2670     01D2  00F4               	movwf	___wmul@multiplier+1
  2671     01D3  300C               	movlw	12
  2672     01D4  00F5               	movwf	___wmul@multiplicand
  2673     01D5  3000               	movlw	0
  2674     01D6  00F6               	movwf	___wmul@multiplicand+1
  2675     01D7  3183  2387  3180   	fcall	___wmul
  2676     01DA  303E               	movlw	62
  2677     01DB  0773               	addwf	?___wmul,w
  2678     01DC  0084               	movwf	4
  2679     01DD  3000               	movlw	0
  2680     01DE  3D74               	addwfc	?___wmul+1,w
  2681     01DF  3880               	iorlw	128
  2682     01E0  0085               	movwf	5
  2683     01E1  3F00               	moviw [0]fsr0
  2684     01E2  0140               	movlb	0	; select bank0
  2685     01E3  00C6               	movwf	FLASH_WriteWord@word
  2686     01E4  3F01               	moviw [1]fsr0
  2687     01E5  00C7               	movwf	FLASH_WriteWord@word+1
  2688     01E6  3182  22C3  3180   	fcall	_FLASH_WriteWord
  2689     01E9                     l32:
  2690     01E9  0008               	return
  2691     01EA                     __end_of_memory_initialize:
  2692                           
  2693                           	psect	text2
  2694     0387                     __ptext2:	
  2695 ;; *************** function ___wmul *****************
  2696 ;; Defined at:
  2697 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\Umul16.c"
  2698 ;; Parameters:    Size  Location     Type
  2699 ;;  multiplier      2    3[COMMON] unsigned int 
  2700 ;;  multiplicand    2    5[COMMON] unsigned int 
  2701 ;; Auto vars:     Size  Location     Type
  2702 ;;  product         2    0[BANK0 ] unsigned int 
  2703 ;; Return value:  Size  Location     Type
  2704 ;;                  2    3[COMMON] unsigned int 
  2705 ;; Registers used:
  2706 ;;		wreg, status,2, status,0
  2707 ;; Tracked objects:
  2708 ;;		On entry : 0/0
  2709 ;;		On exit  : 0/0
  2710 ;;		Unchanged: 0/0
  2711 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2712 ;;      Params:         4       0       0       0
  2713 ;;      Locals:         0       2       0       0
  2714 ;;      Temps:          0       0       0       0
  2715 ;;      Totals:         4       2       0       0
  2716 ;;Total ram usage:        6 bytes
  2717 ;; Hardware stack levels used: 1
  2718 ;; Hardware stack levels required when called: 5
  2719 ;; This function calls:
  2720 ;;		Nothing
  2721 ;; This function is called by:
  2722 ;;		_memory_initialize
  2723 ;; This function uses a non-reentrant model
  2724 ;;
  2725                           
  2726     0387                     ___wmul:	
  2727                           ;psect for function ___wmul
  2728                           
  2729     0387                     l2262:	
  2730                           ;incstack = 0
  2731                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  2732                           
  2733     0387  0140               	movlb	0	; select bank0
  2734     0388  01B9               	clrf	___wmul@product
  2735     0389  01BA               	clrf	___wmul@product+1
  2736     038A                     l2264:
  2737     038A  1C73               	btfss	___wmul@multiplier,0
  2738     038B  2B8D               	goto	u861
  2739     038C  2B8E               	goto	u860
  2740     038D                     u861:
  2741     038D  2B93               	goto	l706
  2742     038E                     u860:
  2743     038E                     l2266:
  2744     038E  0875               	movf	___wmul@multiplicand,w
  2745     038F  0140               	movlb	0	; select bank0
  2746     0390  07B9               	addwf	___wmul@product,f
  2747     0391  0876               	movf	___wmul@multiplicand+1,w
  2748     0392  3DBA               	addwfc	___wmul@product+1,f
  2749     0393                     l706:
  2750     0393  3001               	movlw	1
  2751     0394                     u875:
  2752     0394  35F5               	lslf	___wmul@multiplicand,f
  2753     0395  0DF6               	rlf	___wmul@multiplicand+1,f
  2754     0396  0B89               	decfsz	9,f
  2755     0397  2B94               	goto	u875
  2756     0398                     l2268:
  2757     0398  3001               	movlw	1
  2758     0399                     u885:
  2759     0399  36F4               	lsrf	___wmul@multiplier+1,f
  2760     039A  0CF3               	rrf	___wmul@multiplier,f
  2761     039B  0B89               	decfsz	9,f
  2762     039C  2B99               	goto	u885
  2763     039D                     l2270:
  2764     039D  0873               	movf	___wmul@multiplier,w
  2765     039E  0474               	iorwf	___wmul@multiplier+1,w
  2766     039F  1D03               	btfss	3,2
  2767     03A0  2BA2               	goto	u891
  2768     03A1  2BA3               	goto	u890
  2769     03A2                     u891:
  2770     03A2  2B8A               	goto	l2264
  2771     03A3                     u890:
  2772     03A3                     l2272:
  2773     03A3  0140               	movlb	0	; select bank0
  2774     03A4  083A               	movf	___wmul@product+1,w
  2775     03A5  00F4               	movwf	?___wmul+1
  2776     03A6  0839               	movf	___wmul@product,w
  2777     03A7  00F3               	movwf	?___wmul
  2778     03A8                     l708:
  2779     03A8  0008               	return
  2780     03A9                     __end_of___wmul:
  2781                           
  2782                           	psect	text3
  2783     02C3                     __ptext3:	
  2784 ;; *************** function _FLASH_WriteWord *****************
  2785 ;; Defined at:
  2786 ;;		line 75 in file "mcc_generated_files/memory.c"
  2787 ;; Parameters:    Size  Location     Type
  2788 ;;  flashAddr       2   10[BANK0 ] unsigned short 
  2789 ;;  ramBuf          1   12[BANK0 ] PTR unsigned short 
  2790 ;;		 -> memory_initialize@ramBuff(64), 
  2791 ;;  word            2   13[BANK0 ] unsigned short 
  2792 ;; Auto vars:     Size  Location     Type
  2793 ;;  blockStartAd    2   16[BANK0 ] unsigned short 
  2794 ;;  i               1   18[BANK0 ] unsigned char 
  2795 ;;  offset          1   15[BANK0 ] unsigned char 
  2796 ;; Return value:  Size  Location     Type
  2797 ;;                  1    wreg      void 
  2798 ;; Registers used:
  2799 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2800 ;; Tracked objects:
  2801 ;;		On entry : 0/0
  2802 ;;		On exit  : 0/0
  2803 ;;		Unchanged: 0/0
  2804 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2805 ;;      Params:         0       5       0       0
  2806 ;;      Locals:         0       4       0       0
  2807 ;;      Temps:          1       0       0       0
  2808 ;;      Totals:         1       9       0       0
  2809 ;;Total ram usage:       10 bytes
  2810 ;; Hardware stack levels used: 1
  2811 ;; Hardware stack levels required when called: 7
  2812 ;; This function calls:
  2813 ;;		_FLASH_ReadWord
  2814 ;;		_FLASH_WriteBlock
  2815 ;; This function is called by:
  2816 ;;		_memory_initialize
  2817 ;; This function uses a non-reentrant model
  2818 ;;
  2819                           
  2820     02C3                     _FLASH_WriteWord:	
  2821                           ;psect for function _FLASH_WriteWord
  2822                           
  2823     02C3                     l2244:	
  2824                           ;incstack = 0
  2825                           ; Regs used in _FLASH_WriteWord: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2826                           
  2827                           
  2828                           ;mcc_generated_files/memory.c: 75: void FLASH_WriteWord(uint16_t flashAddr, uint16_t *ra
      +                          mBuf, uint16_t word);mcc_generated_files/memory.c: 76: {;mcc_generated_files/memory.c: 7
      +                          7:     uint16_t blockStartAddr = (uint16_t)(flashAddr & ((0x800 -1) ^ (32 -1)));
  2829     02C3  30E0               	movlw	224
  2830     02C4  0140               	movlb	0	; select bank0
  2831     02C5  0543               	andwf	FLASH_WriteWord@flashAddr,w
  2832     02C6  00C9               	movwf	FLASH_WriteWord@blockStartAddr
  2833     02C7  3007               	movlw	7
  2834     02C8  0544               	andwf	FLASH_WriteWord@flashAddr+1,w
  2835     02C9  00CA               	movwf	FLASH_WriteWord@blockStartAddr+1
  2836     02CA                     l2246:
  2837                           
  2838                           ;mcc_generated_files/memory.c: 78:     uint8_t offset = (uint8_t)(flashAddr & (32 -1));
  2839     02CA  0843               	movf	FLASH_WriteWord@flashAddr,w
  2840     02CB  391F               	andlw	31
  2841     02CC  00C8               	movwf	FLASH_WriteWord@offset
  2842                           
  2843                           ;mcc_generated_files/memory.c: 79:     uint8_t i;;mcc_generated_files/memory.c: 82:     
      +                          for (i=0; i<32; i++)
  2844     02CD  01CB               	clrf	FLASH_WriteWord@i
  2845     02CE                     l2252:
  2846                           
  2847                           ;mcc_generated_files/memory.c: 83:     {;mcc_generated_files/memory.c: 84:         ramBu
      +                          f[i] = FLASH_ReadWord((blockStartAddr+i));
  2848     02CE  084B               	movf	FLASH_WriteWord@i,w
  2849     02CF  0749               	addwf	FLASH_WriteWord@blockStartAddr,w
  2850     02D0  00F3               	movwf	FLASH_ReadWord@flashAddr
  2851     02D1  084A               	movf	FLASH_WriteWord@blockStartAddr+1,w
  2852     02D2  1803               	skipnc
  2853     02D3  0A4A               	incf	FLASH_WriteWord@blockStartAddr+1,w
  2854     02D4  00F4               	movwf	FLASH_ReadWord@flashAddr+1
  2855     02D5  3183  23E6  3182   	fcall	_FLASH_ReadWord
  2856     02D8  0140               	movlb	0	; select bank0
  2857     02D9  354B               	lslf	FLASH_WriteWord@i,w
  2858     02DA  0745               	addwf	FLASH_WriteWord@ramBuf,w
  2859     02DB  00F7               	movwf	??_FLASH_WriteWord
  2860     02DC  0877               	movf	??_FLASH_WriteWord,w
  2861     02DD  0086               	movwf	6
  2862     02DE  0187               	clrf	7
  2863     02DF  0873               	movf	?_FLASH_ReadWord,w
  2864     02E0  3FC0               	movwi [0]fsr1
  2865     02E1  0874               	movf	?_FLASH_ReadWord+1,w
  2866     02E2  3FC1               	movwi [1]fsr1
  2867     02E3                     l2254:
  2868                           
  2869                           ;mcc_generated_files/memory.c: 85:     }
  2870     02E3  3001               	movlw	1
  2871     02E4  00F7               	movwf	??_FLASH_WriteWord
  2872     02E5  0877               	movf	??_FLASH_WriteWord,w
  2873     02E6  07CB               	addwf	FLASH_WriteWord@i,f
  2874     02E7                     l2256:
  2875     02E7  3020               	movlw	32
  2876     02E8  024B               	subwf	FLASH_WriteWord@i,w
  2877     02E9  1C03               	skipc
  2878     02EA  2AEC               	goto	u851
  2879     02EB  2AED               	goto	u850
  2880     02EC                     u851:
  2881     02EC  2ACE               	goto	l2252
  2882     02ED                     u850:
  2883     02ED                     l2258:
  2884                           
  2885                           ;mcc_generated_files/memory.c: 88:     ramBuf[offset] = word;
  2886     02ED  3548               	lslf	FLASH_WriteWord@offset,w
  2887     02EE  0745               	addwf	FLASH_WriteWord@ramBuf,w
  2888     02EF  00F7               	movwf	??_FLASH_WriteWord
  2889     02F0  0877               	movf	??_FLASH_WriteWord,w
  2890     02F1  0086               	movwf	6
  2891     02F2  0187               	clrf	7
  2892     02F3  0846               	movf	FLASH_WriteWord@word,w
  2893     02F4  3FC0               	movwi [0]fsr1
  2894     02F5  0847               	movf	FLASH_WriteWord@word+1,w
  2895     02F6  3FC1               	movwi [1]fsr1
  2896     02F7                     l2260:
  2897                           
  2898                           ;mcc_generated_files/memory.c: 91:     FLASH_WriteBlock(blockStartAddr, ramBuf);
  2899     02F7  084A               	movf	FLASH_WriteWord@blockStartAddr+1,w
  2900     02F8  00BA               	movwf	FLASH_WriteBlock@writeAddr+1
  2901     02F9  0849               	movf	FLASH_WriteWord@blockStartAddr,w
  2902     02FA  00B9               	movwf	FLASH_WriteBlock@writeAddr
  2903     02FB  0845               	movf	FLASH_WriteWord@ramBuf,w
  2904     02FC  00BB               	movwf	FLASH_WriteBlock@flashWordArray
  2905     02FD  3182  2257  3182   	fcall	_FLASH_WriteBlock
  2906     0300                     l524:
  2907     0300  0008               	return
  2908     0301                     __end_of_FLASH_WriteWord:
  2909                           
  2910                           	psect	text4
  2911     0257                     __ptext4:	
  2912 ;; *************** function _FLASH_WriteBlock *****************
  2913 ;; Defined at:
  2914 ;;		line 94 in file "mcc_generated_files/memory.c"
  2915 ;; Parameters:    Size  Location     Type
  2916 ;;  writeAddr       2    0[BANK0 ] unsigned short 
  2917 ;;  flashWordArr    1    2[BANK0 ] PTR unsigned short 
  2918 ;;		 -> memory_initialize@ramBuff(64), 
  2919 ;; Auto vars:     Size  Location     Type
  2920 ;;  blockStartAd    2    6[BANK0 ] unsigned short 
  2921 ;;  i               1    9[BANK0 ] unsigned char 
  2922 ;;  GIEBitValue     1    8[BANK0 ] unsigned char 
  2923 ;; Return value:  Size  Location     Type
  2924 ;;                  1    wreg      char 
  2925 ;; Registers used:
  2926 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2927 ;; Tracked objects:
  2928 ;;		On entry : 0/0
  2929 ;;		On exit  : 0/0
  2930 ;;		Unchanged: 0/0
  2931 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2932 ;;      Params:         0       3       0       0
  2933 ;;      Locals:         0       4       0       0
  2934 ;;      Temps:          0       3       0       0
  2935 ;;      Totals:         0      10       0       0
  2936 ;;Total ram usage:       10 bytes
  2937 ;; Hardware stack levels used: 1
  2938 ;; Hardware stack levels required when called: 6
  2939 ;; This function calls:
  2940 ;;		_FLASH_EraseBlock
  2941 ;; This function is called by:
  2942 ;;		_FLASH_WriteWord
  2943 ;; This function uses a non-reentrant model
  2944 ;;
  2945                           
  2946     0257                     _FLASH_WriteBlock:	
  2947                           ;psect for function _FLASH_WriteBlock
  2948                           
  2949     0257                     l2194:	
  2950                           ;incstack = 0
  2951                           ; Regs used in _FLASH_WriteBlock: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2952                           
  2953                           
  2954                           ;mcc_generated_files/memory.c: 94: int8_t FLASH_WriteBlock(uint16_t writeAddr, uint16_t 
      +                          *flashWordArray);mcc_generated_files/memory.c: 95: {;mcc_generated_files/memory.c: 96:  
      +                             uint16_t blockStartAddr = (uint16_t )(writeAddr & ((0x800 -1) ^ (32 -1)));
  2955     0257  30E0               	movlw	224
  2956     0258  0140               	movlb	0	; select bank0
  2957     0259  0539               	andwf	FLASH_WriteBlock@writeAddr,w
  2958     025A  00BF               	movwf	FLASH_WriteBlock@blockStartAddr
  2959     025B  3007               	movlw	7
  2960     025C  053A               	andwf	FLASH_WriteBlock@writeAddr+1,w
  2961     025D  00C0               	movwf	FLASH_WriteBlock@blockStartAddr+1
  2962     025E                     l2196:
  2963                           
  2964                           ;mcc_generated_files/memory.c: 97:     uint8_t GIEBitValue = INTCONbits.GIE;
  2965     025E  3000               	movlw	0
  2966     025F  1B8B               	btfsc	11,7	;volatile
  2967     0260  3001               	movlw	1
  2968     0261  00C1               	movwf	FLASH_WriteBlock@GIEBitValue
  2969     0262                     l2198:
  2970                           
  2971                           ;mcc_generated_files/memory.c: 98:     uint8_t i;;mcc_generated_files/memory.c: 102:    
      +                           if( writeAddr != blockStartAddr )
  2972     0262  0840               	movf	FLASH_WriteBlock@blockStartAddr+1,w
  2973     0263  063A               	xorwf	FLASH_WriteBlock@writeAddr+1,w
  2974     0264  1D03               	skipz
  2975     0265  2A68               	goto	u825
  2976     0266  083F               	movf	FLASH_WriteBlock@blockStartAddr,w
  2977     0267  0639               	xorwf	FLASH_WriteBlock@writeAddr,w
  2978     0268                     u825:
  2979     0268  1903               	skipnz
  2980     0269  2A6B               	goto	u821
  2981     026A  2A6C               	goto	u820
  2982     026B                     u821:
  2983     026B  2A6D               	goto	l527
  2984     026C                     u820:
  2985     026C  2AC2               	goto	l528
  2986     026D                     l527:	
  2987                           ;mcc_generated_files/memory.c: 105:     }
  2988                           
  2989                           
  2990                           ;mcc_generated_files/memory.c: 107:     INTCONbits.GIE = 0;
  2991     026D  138B               	bcf	11,7	;volatile
  2992     026E                     l2202:
  2993                           
  2994                           ;mcc_generated_files/memory.c: 110:     FLASH_EraseBlock(writeAddr);
  2995     026E  083A               	movf	FLASH_WriteBlock@writeAddr+1,w
  2996     026F  00F4               	movwf	FLASH_EraseBlock@startAddr+1
  2997     0270  0839               	movf	FLASH_WriteBlock@writeAddr,w
  2998     0271  00F3               	movwf	FLASH_EraseBlock@startAddr
  2999     0272  3183  23CA  3182   	fcall	_FLASH_EraseBlock
  3000     0275                     l2204:
  3001                           
  3002                           ;mcc_generated_files/memory.c: 113:     NVMCON1bits.NVMREGS = 0;
  3003     0275  0150               	movlb	16	; select bank16
  3004     0276  131E               	bcf	30,6	;volsfr
  3005     0277                     l2206:
  3006                           
  3007                           ;mcc_generated_files/memory.c: 114:     NVMCON1bits.WREN = 1;
  3008     0277  151E               	bsf	30,2	;volsfr
  3009     0278                     l2208:
  3010                           
  3011                           ;mcc_generated_files/memory.c: 115:     NVMCON1bits.LWLO = 1;
  3012     0278  169E               	bsf	30,5	;volsfr
  3013     0279                     l2210:
  3014                           
  3015                           ;mcc_generated_files/memory.c: 117:     for (i=0; i<32; i++)
  3016     0279  0140               	movlb	0	; select bank0
  3017     027A  01C2               	clrf	FLASH_WriteBlock@i
  3018     027B                     l2216:
  3019                           
  3020                           ;mcc_generated_files/memory.c: 118:     {;mcc_generated_files/memory.c: 120:         NVM
      +                          ADRL = (writeAddr & 0xFF);
  3021     027B  0839               	movf	FLASH_WriteBlock@writeAddr,w
  3022     027C  0150               	movlb	16	; select bank16
  3023     027D  009A               	movwf	26	;volatile
  3024     027E                     l2218:
  3025                           
  3026                           ;mcc_generated_files/memory.c: 122:         NVMADRH = ((writeAddr & 0xFF00) >> 8);
  3027     027E  0140               	movlb	0	; select bank0
  3028     027F  083A               	movf	FLASH_WriteBlock@writeAddr+1,w
  3029     0280  0150               	movlb	16	; select bank16
  3030     0281  009B               	movwf	27	;volatile
  3031     0282                     l2220:
  3032                           
  3033                           ;mcc_generated_files/memory.c: 125:         NVMDATL = flashWordArray[i];
  3034     0282  0140               	movlb	0	; select bank0
  3035     0283  3542               	lslf	FLASH_WriteBlock@i,w
  3036     0284  073B               	addwf	FLASH_WriteBlock@flashWordArray,w
  3037     0285  00BC               	movwf	??_FLASH_WriteBlock
  3038     0286  083C               	movf	??_FLASH_WriteBlock,w
  3039     0287  0086               	movwf	6
  3040     0288  0187               	clrf	7
  3041     0289  0801               	movf	1,w
  3042     028A  0150               	movlb	16	; select bank16
  3043     028B  009C               	movwf	28	;volatile
  3044     028C                     l2222:
  3045                           
  3046                           ;mcc_generated_files/memory.c: 126:         NVMDATH = ((flashWordArray[i] & 0xFF00) >> 8
      +                          );
  3047     028C  0140               	movlb	0	; select bank0
  3048     028D  3542               	lslf	FLASH_WriteBlock@i,w
  3049     028E  073B               	addwf	FLASH_WriteBlock@flashWordArray,w
  3050     028F  00BC               	movwf	??_FLASH_WriteBlock
  3051     0290  083C               	movf	??_FLASH_WriteBlock,w
  3052     0291  0086               	movwf	6
  3053     0292  0187               	clrf	7
  3054     0293  3F40               	moviw [0]fsr1
  3055     0294  00BD               	movwf	??_FLASH_WriteBlock+1
  3056     0295  3F41               	moviw [1]fsr1
  3057     0296  00BE               	movwf	??_FLASH_WriteBlock+2
  3058     0297  083E               	movf	??_FLASH_WriteBlock+2,w
  3059     0298  0150               	movlb	16	; select bank16
  3060     0299  009D               	movwf	29	;volatile
  3061     029A                     l2224:
  3062                           
  3063                           ;mcc_generated_files/memory.c: 128:         if(i == (32 -1))
  3064     029A  301F               	movlw	31
  3065     029B  0140               	movlb	0	; select bank0
  3066     029C  0642               	xorwf	FLASH_WriteBlock@i,w
  3067     029D  1D03               	btfss	3,2
  3068     029E  2AA0               	goto	u831
  3069     029F  2AA1               	goto	u830
  3070     02A0                     u831:
  3071     02A0  2AA3               	goto	l2228
  3072     02A1                     u830:
  3073     02A1                     l2226:
  3074                           
  3075                           ;mcc_generated_files/memory.c: 129:         {;mcc_generated_files/memory.c: 131:        
      +                               NVMCON1bits.LWLO = 0;
  3076     02A1  0150               	movlb	16	; select bank16
  3077     02A2  129E               	bcf	30,5	;volsfr
  3078     02A3                     l2228:
  3079                           
  3080                           ;mcc_generated_files/memory.c: 134:         NVMCON2 = 0x55;
  3081     02A3  3055               	movlw	85
  3082     02A4  0150               	movlb	16	; select bank16
  3083     02A5  009F               	movwf	31	;volsfr
  3084                           
  3085                           ;mcc_generated_files/memory.c: 135:         NVMCON2 = 0xAA;
  3086     02A6  30AA               	movlw	170
  3087     02A7  009F               	movwf	31	;volsfr
  3088     02A8                     l2230:
  3089                           
  3090                           ;mcc_generated_files/memory.c: 136:         NVMCON1bits.WR = 1;
  3091     02A8  149E               	bsf	30,1	;volsfr
  3092     02A9                     l2232:
  3093                           
  3094                           ;mcc_generated_files/memory.c: 137:         __nop();
  3095     02A9  0000               	nop
  3096     02AA                     l2234:
  3097                           
  3098                           ;mcc_generated_files/memory.c: 138:         __nop();
  3099     02AA  0000               	nop
  3100                           
  3101                           ;mcc_generated_files/memory.c: 140:      writeAddr++;
  3102     02AB  3001               	movlw	1
  3103     02AC  0140               	movlb	0	; select bank0
  3104     02AD  07B9               	addwf	FLASH_WriteBlock@writeAddr,f
  3105     02AE  3000               	movlw	0
  3106     02AF  3DBA               	addwfc	FLASH_WriteBlock@writeAddr+1,f
  3107     02B0                     l2236:
  3108                           
  3109                           ;mcc_generated_files/memory.c: 141:     }
  3110     02B0  3001               	movlw	1
  3111     02B1  00BC               	movwf	??_FLASH_WriteBlock
  3112     02B2  083C               	movf	??_FLASH_WriteBlock,w
  3113     02B3  07C2               	addwf	FLASH_WriteBlock@i,f
  3114     02B4                     l2238:
  3115     02B4  3020               	movlw	32
  3116     02B5  0242               	subwf	FLASH_WriteBlock@i,w
  3117     02B6  1C03               	skipc
  3118     02B7  2AB9               	goto	u841
  3119     02B8  2ABA               	goto	u840
  3120     02B9                     u841:
  3121     02B9  2A7B               	goto	l2216
  3122     02BA                     u840:
  3123     02BA                     l530:
  3124                           
  3125                           ;mcc_generated_files/memory.c: 143:     NVMCON1bits.WREN = 0;
  3126     02BA  0150               	movlb	16	; select bank16
  3127     02BB  111E               	bcf	30,2	;volsfr
  3128     02BC                     l2240:
  3129                           
  3130                           ;mcc_generated_files/memory.c: 144:     INTCONbits.GIE = GIEBitValue;
  3131     02BC  0140               	movlb	0	; select bank0
  3132     02BD  0C41               	rrf	FLASH_WriteBlock@GIEBitValue,w
  3133     02BE  1C03               	skipc
  3134     02BF  138B               	bcf	11,7	;volatile
  3135     02C0  1803               	skipnc
  3136     02C1  178B               	bsf	11,7	;volatile
  3137     02C2                     l528:
  3138     02C2  0008               	return
  3139     02C3                     __end_of_FLASH_WriteBlock:
  3140                           
  3141                           	psect	text5
  3142     03CA                     __ptext5:	
  3143 ;; *************** function _FLASH_EraseBlock *****************
  3144 ;; Defined at:
  3145 ;;		line 149 in file "mcc_generated_files/memory.c"
  3146 ;; Parameters:    Size  Location     Type
  3147 ;;  startAddr       2    3[COMMON] unsigned short 
  3148 ;; Auto vars:     Size  Location     Type
  3149 ;;  GIEBitValue     1    5[COMMON] unsigned char 
  3150 ;; Return value:  Size  Location     Type
  3151 ;;                  1    wreg      void 
  3152 ;; Registers used:
  3153 ;;		wreg, status,2, status,0
  3154 ;; Tracked objects:
  3155 ;;		On entry : 0/0
  3156 ;;		On exit  : 0/0
  3157 ;;		Unchanged: 0/0
  3158 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3159 ;;      Params:         2       0       0       0
  3160 ;;      Locals:         1       0       0       0
  3161 ;;      Temps:          0       0       0       0
  3162 ;;      Totals:         3       0       0       0
  3163 ;;Total ram usage:        3 bytes
  3164 ;; Hardware stack levels used: 1
  3165 ;; Hardware stack levels required when called: 5
  3166 ;; This function calls:
  3167 ;;		Nothing
  3168 ;; This function is called by:
  3169 ;;		_FLASH_WriteBlock
  3170 ;; This function uses a non-reentrant model
  3171 ;;
  3172                           
  3173     03CA                     _FLASH_EraseBlock:	
  3174                           ;psect for function _FLASH_EraseBlock
  3175                           
  3176     03CA                     l2148:	
  3177                           ;incstack = 0
  3178                           ; Regs used in _FLASH_EraseBlock: [wreg+status,2+status,0]
  3179                           
  3180                           
  3181                           ;mcc_generated_files/memory.c: 149: void FLASH_EraseBlock(uint16_t startAddr);mcc_genera
      +                          ted_files/memory.c: 150: {;mcc_generated_files/memory.c: 151:     uint8_t GIEBitValue = 
      +                          INTCONbits.GIE;
  3182     03CA  3000               	movlw	0
  3183     03CB  1B8B               	btfsc	11,7	;volatile
  3184     03CC  3001               	movlw	1
  3185     03CD  00F5               	movwf	FLASH_EraseBlock@GIEBitValue
  3186     03CE                     l2150:
  3187                           
  3188                           ;mcc_generated_files/memory.c: 154:     INTCONbits.GIE = 0;
  3189     03CE  138B               	bcf	11,7	;volatile
  3190     03CF                     l2152:
  3191                           
  3192                           ;mcc_generated_files/memory.c: 156:     NVMADRL = (startAddr & 0xFF);
  3193     03CF  0873               	movf	FLASH_EraseBlock@startAddr,w
  3194     03D0  0150               	movlb	16	; select bank16
  3195     03D1  009A               	movwf	26	;volatile
  3196     03D2                     l2154:
  3197                           
  3198                           ;mcc_generated_files/memory.c: 158:     NVMADRH = ((startAddr & 0xFF00) >> 8);
  3199     03D2  0874               	movf	FLASH_EraseBlock@startAddr+1,w
  3200     03D3  009B               	movwf	27	;volatile
  3201     03D4                     l2156:
  3202                           
  3203                           ;mcc_generated_files/memory.c: 161:     NVMCON1bits.NVMREGS = 0;
  3204     03D4  131E               	bcf	30,6	;volsfr
  3205     03D5                     l2158:
  3206                           
  3207                           ;mcc_generated_files/memory.c: 162:     NVMCON1bits.FREE = 1;
  3208     03D5  161E               	bsf	30,4	;volsfr
  3209     03D6                     l2160:
  3210                           
  3211                           ;mcc_generated_files/memory.c: 163:     NVMCON1bits.WREN = 1;
  3212     03D6  151E               	bsf	30,2	;volsfr
  3213                           
  3214                           ;mcc_generated_files/memory.c: 166:     NVMCON2 = 0x55;
  3215     03D7  3055               	movlw	85
  3216     03D8  009F               	movwf	31	;volsfr
  3217                           
  3218                           ;mcc_generated_files/memory.c: 167:     NVMCON2 = 0xAA;
  3219     03D9  30AA               	movlw	170
  3220     03DA  009F               	movwf	31	;volsfr
  3221     03DB                     l2162:
  3222                           
  3223                           ;mcc_generated_files/memory.c: 168:     NVMCON1bits.WR = 1;
  3224     03DB  149E               	bsf	30,1	;volsfr
  3225     03DC                     l2164:
  3226                           
  3227                           ;mcc_generated_files/memory.c: 169:     __nop();
  3228     03DC  0000               	nop
  3229     03DD                     l2166:
  3230                           
  3231                           ;mcc_generated_files/memory.c: 170:     __nop();
  3232     03DD  0000               	nop
  3233     03DE                     l2168:
  3234                           
  3235                           ;mcc_generated_files/memory.c: 172:     NVMCON1bits.WREN = 0;
  3236     03DE  0150               	movlb	16	; select bank16
  3237     03DF  111E               	bcf	30,2	;volsfr
  3238     03E0                     l2170:
  3239                           
  3240                           ;mcc_generated_files/memory.c: 173:     INTCONbits.GIE = GIEBitValue;
  3241     03E0  0C75               	rrf	FLASH_EraseBlock@GIEBitValue,w
  3242     03E1  1C03               	skipc
  3243     03E2  138B               	bcf	11,7	;volatile
  3244     03E3  1803               	skipnc
  3245     03E4  178B               	bsf	11,7	;volatile
  3246     03E5                     l534:
  3247     03E5  0008               	return
  3248     03E6                     __end_of_FLASH_EraseBlock:
  3249                           
  3250                           	psect	text6
  3251     03E6                     __ptext6:	
  3252 ;; *************** function _FLASH_ReadWord *****************
  3253 ;; Defined at:
  3254 ;;		line 58 in file "mcc_generated_files/memory.c"
  3255 ;; Parameters:    Size  Location     Type
  3256 ;;  flashAddr       2    3[COMMON] unsigned short 
  3257 ;; Auto vars:     Size  Location     Type
  3258 ;;  GIEBitValue     1    5[COMMON] unsigned char 
  3259 ;; Return value:  Size  Location     Type
  3260 ;;                  2    3[COMMON] unsigned short 
  3261 ;; Registers used:
  3262 ;;		wreg, status,2, status,0
  3263 ;; Tracked objects:
  3264 ;;		On entry : 0/0
  3265 ;;		On exit  : 0/0
  3266 ;;		Unchanged: 0/0
  3267 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3268 ;;      Params:         2       0       0       0
  3269 ;;      Locals:         1       0       0       0
  3270 ;;      Temps:          0       0       0       0
  3271 ;;      Totals:         3       0       0       0
  3272 ;;Total ram usage:        3 bytes
  3273 ;; Hardware stack levels used: 1
  3274 ;; Hardware stack levels required when called: 5
  3275 ;; This function calls:
  3276 ;;		Nothing
  3277 ;; This function is called by:
  3278 ;;		_memory_initialize
  3279 ;;		_FLASH_WriteWord
  3280 ;; This function uses a non-reentrant model
  3281 ;;
  3282                           
  3283     03E6                     _FLASH_ReadWord:	
  3284                           ;psect for function _FLASH_ReadWord
  3285                           
  3286     03E6                     l2172:	
  3287                           ;incstack = 0
  3288                           ; Regs used in _FLASH_ReadWord: [wreg+status,2+status,0]
  3289                           
  3290                           
  3291                           ;mcc_generated_files/memory.c: 58: uint16_t FLASH_ReadWord(uint16_t flashAddr);mcc_gener
      +                          ated_files/memory.c: 59: {;mcc_generated_files/memory.c: 60:     uint8_t GIEBitValue = I
      +                          NTCONbits.GIE;
  3292     03E6  3000               	movlw	0
  3293     03E7  1B8B               	btfsc	11,7	;volatile
  3294     03E8  3001               	movlw	1
  3295     03E9  00F5               	movwf	FLASH_ReadWord@GIEBitValue
  3296     03EA                     l2174:
  3297                           
  3298                           ;mcc_generated_files/memory.c: 62:     INTCONbits.GIE = 0;
  3299     03EA  138B               	bcf	11,7	;volatile
  3300     03EB                     l2176:
  3301                           
  3302                           ;mcc_generated_files/memory.c: 63:     NVMADRL = (flashAddr & 0x00FF);
  3303     03EB  0873               	movf	FLASH_ReadWord@flashAddr,w
  3304     03EC  0150               	movlb	16	; select bank16
  3305     03ED  009A               	movwf	26	;volatile
  3306     03EE                     l2178:
  3307                           
  3308                           ;mcc_generated_files/memory.c: 64:     NVMADRH = ((flashAddr & 0xFF00) >> 8);
  3309     03EE  0874               	movf	FLASH_ReadWord@flashAddr+1,w
  3310     03EF  009B               	movwf	27	;volatile
  3311     03F0                     l2180:
  3312                           
  3313                           ;mcc_generated_files/memory.c: 66:     NVMCON1bits.NVMREGS = 0;
  3314     03F0  131E               	bcf	30,6	;volsfr
  3315     03F1                     l2182:
  3316                           
  3317                           ;mcc_generated_files/memory.c: 67:     NVMCON1bits.RD = 1;
  3318     03F1  141E               	bsf	30,0	;volsfr
  3319     03F2                     l2184:
  3320                           
  3321                           ;mcc_generated_files/memory.c: 68:     __nop();
  3322     03F2  0000               	nop
  3323     03F3                     l2186:
  3324                           
  3325                           ;mcc_generated_files/memory.c: 69:     __nop();
  3326     03F3  0000               	nop
  3327     03F4                     l2188:
  3328                           
  3329                           ;mcc_generated_files/memory.c: 70:     INTCONbits.GIE = GIEBitValue;
  3330     03F4  0C75               	rrf	FLASH_ReadWord@GIEBitValue,w
  3331     03F5  1C03               	skipc
  3332     03F6  138B               	bcf	11,7	;volatile
  3333     03F7  1803               	skipnc
  3334     03F8  178B               	bsf	11,7	;volatile
  3335     03F9                     l2190:
  3336                           
  3337                           ;mcc_generated_files/memory.c: 72:     return ((uint16_t)((NVMDATH << 8) | NVMDATL));
  3338     03F9  0150               	movlb	16	; select bank16
  3339     03FA  081D               	movf	29,w	;volatile
  3340     03FB  00F4               	movwf	?_FLASH_ReadWord+1
  3341     03FC  081C               	movf	28,w	;volatile
  3342     03FD  00F3               	movwf	?_FLASH_ReadWord
  3343     03FE                     l519:
  3344     03FE  0008               	return
  3345     03FF                     __end_of_FLASH_ReadWord:
  3346                           
  3347                           	psect	text7
  3348     046E                     __ptext7:	
  3349 ;; *************** function _getSensorBoardType *****************
  3350 ;; Defined at:
  3351 ;;		line 35 in file "sensor.c"
  3352 ;; Parameters:    Size  Location     Type
  3353 ;;		None
  3354 ;; Auto vars:     Size  Location     Type
  3355 ;;		None
  3356 ;; Return value:  Size  Location     Type
  3357 ;;                  1    wreg      unsigned char 
  3358 ;; Registers used:
  3359 ;;		wreg, status,2, status,0
  3360 ;; Tracked objects:
  3361 ;;		On entry : 0/0
  3362 ;;		On exit  : 0/0
  3363 ;;		Unchanged: 0/0
  3364 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3365 ;;      Params:         0       0       0       0
  3366 ;;      Locals:         0       0       0       0
  3367 ;;      Temps:          2       0       0       0
  3368 ;;      Totals:         2       0       0       0
  3369 ;;Total ram usage:        2 bytes
  3370 ;; Hardware stack levels used: 1
  3371 ;; Hardware stack levels required when called: 5
  3372 ;; This function calls:
  3373 ;;		Nothing
  3374 ;; This function is called by:
  3375 ;;		_main
  3376 ;; This function uses a non-reentrant model
  3377 ;;
  3378                           
  3379     046E                     _getSensorBoardType:	
  3380                           ;psect for function _getSensorBoardType
  3381                           
  3382     046E                     l2004:	
  3383                           ;incstack = 0
  3384                           ; Regs used in _getSensorBoardType: [wreg+status,2+status,0]
  3385                           
  3386                           
  3387                           ;sensor.c: 37:     return (((PORTC & 0x3C)) >>2 | (PORTA & 0x30));
  3388     046E  3030               	movlw	48
  3389     046F  0140               	movlb	0	; select bank0
  3390     0470  050C               	andwf	12,w	;volatile
  3391     0471  00F3               	movwf	??_getSensorBoardType
  3392     0472  080E               	movf	14,w	;volatile
  3393     0473  00F4               	movwf	??_getSensorBoardType+1
  3394     0474  3002               	movlw	2
  3395     0475                     u625:
  3396     0475  36F4               	lsrf	??_getSensorBoardType+1,f
  3397     0476  0B89               	decfsz	9,f
  3398     0477  2C75               	goto	u625
  3399     0478  0874               	movf	??_getSensorBoardType+1,w
  3400     0479  390F               	andlw	15
  3401     047A  0473               	iorwf	??_getSensorBoardType,w
  3402     047B                     l48:
  3403     047B  0008               	return
  3404     047C                     __end_of_getSensorBoardType:
  3405                           
  3406                           	psect	text8
  3407     0512                     __ptext8:	
  3408 ;; *************** function _error_signal *****************
  3409 ;; Defined at:
  3410 ;;		line 53 in file "sensor.c"
  3411 ;; Parameters:    Size  Location     Type
  3412 ;;		None
  3413 ;; Auto vars:     Size  Location     Type
  3414 ;;		None
  3415 ;; Return value:  Size  Location     Type
  3416 ;;                  1    wreg      void 
  3417 ;; Registers used:
  3418 ;;		None
  3419 ;; Tracked objects:
  3420 ;;		On entry : 0/0
  3421 ;;		On exit  : 0/0
  3422 ;;		Unchanged: 0/0
  3423 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3424 ;;      Params:         0       0       0       0
  3425 ;;      Locals:         0       0       0       0
  3426 ;;      Temps:          0       0       0       0
  3427 ;;      Totals:         0       0       0       0
  3428 ;;Total ram usage:        0 bytes
  3429 ;; Hardware stack levels used: 1
  3430 ;; Hardware stack levels required when called: 5
  3431 ;; This function calls:
  3432 ;;		Nothing
  3433 ;; This function is called by:
  3434 ;;		_main
  3435 ;; This function uses a non-reentrant model
  3436 ;;
  3437                           
  3438     0512                     _error_signal:	
  3439                           ;psect for function _error_signal
  3440                           
  3441     0512                     l2020:	
  3442                           ;incstack = 0
  3443                           ; Regs used in _error_signal: []
  3444                           
  3445                           
  3446                           ;sensor.c: 55:     error_flag = 1;
  3447     0512  0140               	movlb	0	; select bank0
  3448     0513  01B7               	clrf	_error_flag
  3449     0514  0AB7               	incf	_error_flag,f
  3450     0515                     l56:
  3451     0515  0008               	return
  3452     0516                     __end_of_error_signal:
  3453                           
  3454                           	psect	text9
  3455     043F                     __ptext9:	
  3456 ;; *************** function _SensorBoardType_validation *****************
  3457 ;; Defined at:
  3458 ;;		line 40 in file "sensor.c"
  3459 ;; Parameters:    Size  Location     Type
  3460 ;;  SensorBoardT    1    wreg     unsigned char 
  3461 ;; Auto vars:     Size  Location     Type
  3462 ;;  SensorBoardT    1    3[COMMON] unsigned char 
  3463 ;; Return value:  Size  Location     Type
  3464 ;;                  1    wreg      unsigned char 
  3465 ;; Registers used:
  3466 ;;		wreg, status,2, status,0
  3467 ;; Tracked objects:
  3468 ;;		On entry : 0/0
  3469 ;;		On exit  : 0/0
  3470 ;;		Unchanged: 0/0
  3471 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3472 ;;      Params:         0       0       0       0
  3473 ;;      Locals:         1       0       0       0
  3474 ;;      Temps:          0       0       0       0
  3475 ;;      Totals:         1       0       0       0
  3476 ;;Total ram usage:        1 bytes
  3477 ;; Hardware stack levels used: 1
  3478 ;; Hardware stack levels required when called: 5
  3479 ;; This function calls:
  3480 ;;		Nothing
  3481 ;; This function is called by:
  3482 ;;		_main
  3483 ;; This function uses a non-reentrant model
  3484 ;;
  3485                           
  3486     043F                     _SensorBoardType_validation:	
  3487                           ;psect for function _SensorBoardType_validation
  3488                           
  3489                           
  3490                           ;incstack = 0
  3491                           ; Regs used in _SensorBoardType_validation: [wreg+status,2+status,0]
  3492                           ;SensorBoardType_validation@SensorBoardType stored from wreg
  3493     043F  00F3               	movwf	SensorBoardType_validation@SensorBoardType
  3494     0440                     l2008:
  3495                           
  3496                           ;sensor.c: 40: uint8_t SensorBoardType_validation (uint8_t SensorBoardType);sensor.c: 41
      +                          : {;sensor.c: 42:     if(SensorBoardType>=1)
  3497     0440  0873               	movf	SensorBoardType_validation@SensorBoardType,w
  3498     0441  1903               	btfsc	3,2
  3499     0442  2C44               	goto	u631
  3500     0443  2C45               	goto	u630
  3501     0444                     u631:
  3502     0444  2C4D               	goto	l2016
  3503     0445                     u630:
  3504     0445                     l2010:
  3505                           
  3506                           ;sensor.c: 43:     {;sensor.c: 44:         if(SensorBoardType<=12)
  3507     0445  300D               	movlw	13
  3508     0446  0273               	subwf	SensorBoardType_validation@SensorBoardType,w
  3509     0447  1803               	skipnc
  3510     0448  2C4A               	goto	u641
  3511     0449  2C4B               	goto	u640
  3512     044A                     u641:
  3513     044A  2C4D               	goto	l2016
  3514     044B                     u640:
  3515     044B                     l2012:
  3516                           
  3517                           ;sensor.c: 45:         {;sensor.c: 46:             return(1);
  3518     044B  3001               	movlw	1
  3519     044C  2C4E               	goto	l53
  3520     044D                     l2016:
  3521                           
  3522                           ;sensor.c: 50:     return(0);
  3523     044D  3000               	movlw	0
  3524     044E                     l53:
  3525     044E  0008               	return
  3526     044F                     __end_of_SensorBoardType_validation:
  3527                           
  3528                           	psect	text10
  3529     044F                     __ptext10:	
  3530 ;; *************** function _SYSTEM_Initialize *****************
  3531 ;; Defined at:
  3532 ;;		line 50 in file "mcc_generated_files/mcc.c"
  3533 ;; Parameters:    Size  Location     Type
  3534 ;;		None
  3535 ;; Auto vars:     Size  Location     Type
  3536 ;;		None
  3537 ;; Return value:  Size  Location     Type
  3538 ;;                  1    wreg      void 
  3539 ;; Registers used:
  3540 ;;		wreg, status,2, status,0, pclath, cstack
  3541 ;; Tracked objects:
  3542 ;;		On entry : 0/0
  3543 ;;		On exit  : 0/0
  3544 ;;		Unchanged: 0/0
  3545 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3546 ;;      Params:         0       0       0       0
  3547 ;;      Locals:         0       0       0       0
  3548 ;;      Temps:          0       0       0       0
  3549 ;;      Totals:         0       0       0       0
  3550 ;;Total ram usage:        0 bytes
  3551 ;; Hardware stack levels used: 1
  3552 ;; Hardware stack levels required when called: 7
  3553 ;; This function calls:
  3554 ;;		_I2C1_Initialize
  3555 ;;		_OSCILLATOR_Initialize
  3556 ;;		_PIN_MANAGER_Initialize
  3557 ;;		_TMR0_Initialize
  3558 ;;		_WDT_Initialize
  3559 ;; This function is called by:
  3560 ;;		_main
  3561 ;; This function uses a non-reentrant model
  3562 ;;
  3563                           
  3564     044F                     _SYSTEM_Initialize:	
  3565                           ;psect for function _SYSTEM_Initialize
  3566                           
  3567     044F                     l2074:	
  3568                           ;incstack = 0
  3569                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  3570                           
  3571                           
  3572                           ;mcc_generated_files/mcc.c: 53:     I2C1_Initialize();
  3573     044F  3184  24A4  3184   	fcall	_I2C1_Initialize
  3574                           
  3575                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
  3576     0452  3183  2364  3184   	fcall	_PIN_MANAGER_Initialize
  3577                           
  3578                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
  3579     0455  3184  24CF  3184   	fcall	_OSCILLATOR_Initialize
  3580     0458                     l2076:
  3581                           
  3582                           ;mcc_generated_files/mcc.c: 56:     WDT_Initialize();
  3583     0458  3185  251A  3184   	fcall	_WDT_Initialize
  3584     045B                     l2078:
  3585                           
  3586                           ;mcc_generated_files/mcc.c: 57:     TMR0_Initialize();
  3587     045B  3184  242B  3184   	fcall	_TMR0_Initialize
  3588     045E                     l586:
  3589     045E  0008               	return
  3590     045F                     __end_of_SYSTEM_Initialize:
  3591                           
  3592                           	psect	text11
  3593     051A                     __ptext11:	
  3594 ;; *************** function _WDT_Initialize *****************
  3595 ;; Defined at:
  3596 ;;		line 70 in file "mcc_generated_files/mcc.c"
  3597 ;; Parameters:    Size  Location     Type
  3598 ;;		None
  3599 ;; Auto vars:     Size  Location     Type
  3600 ;;		None
  3601 ;; Return value:  Size  Location     Type
  3602 ;;                  1    wreg      void 
  3603 ;; Registers used:
  3604 ;;		status,2
  3605 ;; Tracked objects:
  3606 ;;		On entry : 0/0
  3607 ;;		On exit  : 0/0
  3608 ;;		Unchanged: 0/0
  3609 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3610 ;;      Params:         0       0       0       0
  3611 ;;      Locals:         0       0       0       0
  3612 ;;      Temps:          0       0       0       0
  3613 ;;      Totals:         0       0       0       0
  3614 ;;Total ram usage:        0 bytes
  3615 ;; Hardware stack levels used: 1
  3616 ;; Hardware stack levels required when called: 5
  3617 ;; This function calls:
  3618 ;;		Nothing
  3619 ;; This function is called by:
  3620 ;;		_SYSTEM_Initialize
  3621 ;; This function uses a non-reentrant model
  3622 ;;
  3623                           
  3624     051A                     _WDT_Initialize:	
  3625                           ;psect for function _WDT_Initialize
  3626                           
  3627     051A                     l1972:	
  3628                           ;incstack = 0
  3629                           ; Regs used in _WDT_Initialize: [status,2]
  3630                           
  3631                           
  3632                           ;mcc_generated_files/mcc.c: 73:     WDTCON = 0x00;
  3633     051A  0150               	movlb	16	; select bank16
  3634     051B  018C               	clrf	12	;volatile
  3635     051C                     l592:
  3636     051C  0008               	return
  3637     051D                     __end_of_WDT_Initialize:
  3638                           
  3639                           	psect	text12
  3640     042B                     __ptext12:	
  3641 ;; *************** function _TMR0_Initialize *****************
  3642 ;; Defined at:
  3643 ;;		line 71 in file "mcc_generated_files/tmr0.c"
  3644 ;; Parameters:    Size  Location     Type
  3645 ;;		None
  3646 ;; Auto vars:     Size  Location     Type
  3647 ;;		None
  3648 ;; Return value:  Size  Location     Type
  3649 ;;                  1    wreg      void 
  3650 ;; Registers used:
  3651 ;;		wreg, status,2, status,0, pclath, cstack
  3652 ;; Tracked objects:
  3653 ;;		On entry : 0/0
  3654 ;;		On exit  : 0/0
  3655 ;;		Unchanged: 0/0
  3656 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3657 ;;      Params:         0       0       0       0
  3658 ;;      Locals:         0       0       0       0
  3659 ;;      Temps:          0       0       0       0
  3660 ;;      Totals:         0       0       0       0
  3661 ;;Total ram usage:        0 bytes
  3662 ;; Hardware stack levels used: 1
  3663 ;; Hardware stack levels required when called: 6
  3664 ;; This function calls:
  3665 ;;		_TMR0_SetInterruptHandler
  3666 ;; This function is called by:
  3667 ;;		_SYSTEM_Initialize
  3668 ;; This function uses a non-reentrant model
  3669 ;;
  3670                           
  3671     042B                     _TMR0_Initialize:	
  3672                           ;psect for function _TMR0_Initialize
  3673                           
  3674     042B                     l1940:	
  3675                           ;incstack = 0
  3676                           ; Regs used in _TMR0_Initialize: [wreg+status,2+status,0+pclath+cstack]
  3677                           
  3678                           
  3679                           ;mcc_generated_files/tmr0.c: 76:     T0CON1 = 0x69;
  3680     042B  3069               	movlw	105
  3681     042C  014B               	movlb	11	; select bank11
  3682     042D  009F               	movwf	31	;volatile
  3683                           
  3684                           ;mcc_generated_files/tmr0.c: 79:     TMR0H = 0x9B;
  3685     042E  309B               	movlw	155
  3686     042F  009D               	movwf	29	;volatile
  3687     0430                     l1942:
  3688                           
  3689                           ;mcc_generated_files/tmr0.c: 82:     TMR0L = 0x00;
  3690     0430  019C               	clrf	28	;volatile
  3691     0431                     l1944:
  3692                           
  3693                           ;mcc_generated_files/tmr0.c: 85:     PIR0bits.TMR0IF = 0;
  3694     0431  014E               	movlb	14	; select bank14
  3695     0432  128C               	bcf	12,5	;volatile
  3696     0433                     l1946:
  3697                           
  3698                           ;mcc_generated_files/tmr0.c: 88:     PIE0bits.TMR0IE = 1;
  3699     0433  1696               	bsf	22,5	;volatile
  3700     0434                     l1948:
  3701                           
  3702                           ;mcc_generated_files/tmr0.c: 91:     TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandl
      +                          er);
  3703     0434  303A               	movlw	low _TMR0_DefaultInterruptHandler
  3704     0435  00F3               	movwf	TMR0_SetInterruptHandler@InterruptHandler
  3705     0436  3003               	movlw	high _TMR0_DefaultInterruptHandler
  3706     0437  00F4               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1
  3707     0438  3184  24C9  3184   	fcall	_TMR0_SetInterruptHandler
  3708     043B                     l1950:
  3709                           
  3710                           ;mcc_generated_files/tmr0.c: 94:     T0CON0 = 0x80;
  3711     043B  3080               	movlw	128
  3712     043C  014B               	movlb	11	; select bank11
  3713     043D  009E               	movwf	30	;volatile
  3714     043E                     l457:
  3715     043E  0008               	return
  3716     043F                     __end_of_TMR0_Initialize:
  3717                           
  3718                           	psect	text13
  3719     04C9                     __ptext13:	
  3720 ;; *************** function _TMR0_SetInterruptHandler *****************
  3721 ;; Defined at:
  3722 ;;		line 146 in file "mcc_generated_files/tmr0.c"
  3723 ;; Parameters:    Size  Location     Type
  3724 ;;  InterruptHan    2    3[COMMON] PTR FTN()void 
  3725 ;;		 -> TMR0_DefaultInterruptHandler(1), 
  3726 ;; Auto vars:     Size  Location     Type
  3727 ;;		None
  3728 ;; Return value:  Size  Location     Type
  3729 ;;                  1    wreg      void 
  3730 ;; Registers used:
  3731 ;;		wreg
  3732 ;; Tracked objects:
  3733 ;;		On entry : 0/0
  3734 ;;		On exit  : 0/0
  3735 ;;		Unchanged: 0/0
  3736 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3737 ;;      Params:         2       0       0       0
  3738 ;;      Locals:         0       0       0       0
  3739 ;;      Temps:          0       0       0       0
  3740 ;;      Totals:         2       0       0       0
  3741 ;;Total ram usage:        2 bytes
  3742 ;; Hardware stack levels used: 1
  3743 ;; Hardware stack levels required when called: 5
  3744 ;; This function calls:
  3745 ;;		Nothing
  3746 ;; This function is called by:
  3747 ;;		_TMR0_Initialize
  3748 ;; This function uses a non-reentrant model
  3749 ;;
  3750                           
  3751     04C9                     _TMR0_SetInterruptHandler:	
  3752                           ;psect for function _TMR0_SetInterruptHandler
  3753                           
  3754     04C9                     l1764:	
  3755                           ;incstack = 0
  3756                           ; Regs used in _TMR0_SetInterruptHandler: [wreg]
  3757                           
  3758                           
  3759                           ;mcc_generated_files/tmr0.c: 147:     TMR0_InterruptHandler = InterruptHandler;
  3760     04C9  0874               	movf	TMR0_SetInterruptHandler@InterruptHandler+1,w
  3761     04CA  0140               	movlb	0	; select bank0
  3762     04CB  00D1               	movwf	_TMR0_InterruptHandler+1
  3763     04CC  0873               	movf	TMR0_SetInterruptHandler@InterruptHandler,w
  3764     04CD  00D0               	movwf	_TMR0_InterruptHandler
  3765     04CE                     l479:
  3766     04CE  0008               	return
  3767     04CF                     __end_of_TMR0_SetInterruptHandler:
  3768                           
  3769                           	psect	text14
  3770     0364                     __ptext14:	
  3771 ;; *************** function _PIN_MANAGER_Initialize *****************
  3772 ;; Defined at:
  3773 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  3774 ;; Parameters:    Size  Location     Type
  3775 ;;		None
  3776 ;; Auto vars:     Size  Location     Type
  3777 ;;		None
  3778 ;; Return value:  Size  Location     Type
  3779 ;;                  1    wreg      void 
  3780 ;; Registers used:
  3781 ;;		wreg, status,2
  3782 ;; Tracked objects:
  3783 ;;		On entry : 0/0
  3784 ;;		On exit  : 0/0
  3785 ;;		Unchanged: 0/0
  3786 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3787 ;;      Params:         0       0       0       0
  3788 ;;      Locals:         0       0       0       0
  3789 ;;      Temps:          0       0       0       0
  3790 ;;      Totals:         0       0       0       0
  3791 ;;Total ram usage:        0 bytes
  3792 ;; Hardware stack levels used: 1
  3793 ;; Hardware stack levels required when called: 5
  3794 ;; This function calls:
  3795 ;;		Nothing
  3796 ;; This function is called by:
  3797 ;;		_SYSTEM_Initialize
  3798 ;; This function uses a non-reentrant model
  3799 ;;
  3800                           
  3801     0364                     _PIN_MANAGER_Initialize:	
  3802                           ;psect for function _PIN_MANAGER_Initialize
  3803                           
  3804     0364                     l1834:	
  3805                           ;incstack = 0
  3806                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  3807                           
  3808                           
  3809                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
  3810     0364  0140               	movlb	0	; select bank0
  3811     0365  0198               	clrf	24	;volatile
  3812                           
  3813                           ;mcc_generated_files/pin_manager.c: 61:     LATC = 0x00;
  3814     0366  019A               	clrf	26	;volatile
  3815     0367                     l1836:
  3816                           
  3817                           ;mcc_generated_files/pin_manager.c: 66:     TRISA = 0x3B;
  3818     0367  303B               	movlw	59
  3819     0368  0092               	movwf	18	;volatile
  3820     0369                     l1838:
  3821                           
  3822                           ;mcc_generated_files/pin_manager.c: 67:     TRISC = 0x3F;
  3823     0369  303F               	movlw	63
  3824     036A  0094               	movwf	20	;volatile
  3825                           
  3826                           ;mcc_generated_files/pin_manager.c: 72:     ANSELC = 0x00;
  3827     036B  017E               	movlb	62	; select bank62
  3828     036C  01CE               	clrf	78	;volatile
  3829     036D                     l1840:
  3830                           
  3831                           ;mcc_generated_files/pin_manager.c: 73:     ANSELA = 0x07;
  3832     036D  3007               	movlw	7
  3833     036E  00B8               	movwf	56	;volatile
  3834     036F                     l1842:
  3835                           
  3836                           ;mcc_generated_files/pin_manager.c: 78:     WPUA = 0x00;
  3837     036F  01B9               	clrf	57	;volatile
  3838     0370                     l1844:
  3839                           
  3840                           ;mcc_generated_files/pin_manager.c: 79:     WPUC = 0x00;
  3841     0370  01CF               	clrf	79	;volatile
  3842     0371                     l1846:
  3843                           
  3844                           ;mcc_generated_files/pin_manager.c: 84:     ODCONA = 0x00;
  3845     0371  01BA               	clrf	58	;volatile
  3846     0372                     l1848:
  3847                           
  3848                           ;mcc_generated_files/pin_manager.c: 85:     ODCONC = 0x00;
  3849     0372  01D0               	clrf	80	;volatile
  3850     0373                     l1850:
  3851                           
  3852                           ;mcc_generated_files/pin_manager.c: 90:     SLRCONA = 0x37;
  3853     0373  3037               	movlw	55
  3854     0374  00BB               	movwf	59	;volatile
  3855     0375                     l1852:
  3856                           
  3857                           ;mcc_generated_files/pin_manager.c: 91:     SLRCONC = 0x3F;
  3858     0375  303F               	movlw	63
  3859     0376  00D1               	movwf	81	;volatile
  3860     0377                     l1854:
  3861                           
  3862                           ;mcc_generated_files/pin_manager.c: 96:     INLVLA = 0x3F;
  3863     0377  303F               	movlw	63
  3864     0378  00BC               	movwf	60	;volatile
  3865     0379                     l1856:
  3866                           
  3867                           ;mcc_generated_files/pin_manager.c: 97:     INLVLC = 0x3F;
  3868     0379  303F               	movlw	63
  3869     037A  00D2               	movwf	82	;volatile
  3870     037B                     l1858:
  3871                           
  3872                           ;mcc_generated_files/pin_manager.c: 106:     RC0PPS = 0x07;
  3873     037B  3007               	movlw	7
  3874     037C  00A0               	movwf	32	;volatile
  3875     037D                     l1860:
  3876                           
  3877                           ;mcc_generated_files/pin_manager.c: 107:     SSP1CLKPPS = 0x10;
  3878     037D  3010               	movlw	16
  3879     037E  017D               	movlb	61	; select bank61
  3880     037F  00C5               	movwf	69	;volatile
  3881     0380                     l1862:
  3882                           
  3883                           ;mcc_generated_files/pin_manager.c: 108:     RC1PPS = 0x08;
  3884     0380  3008               	movlw	8
  3885     0381  017E               	movlb	62	; select bank62
  3886     0382  00A1               	movwf	33	;volatile
  3887     0383                     l1864:
  3888                           
  3889                           ;mcc_generated_files/pin_manager.c: 109:     SSP1DATPPS = 0x11;
  3890     0383  3011               	movlw	17
  3891     0384  017D               	movlb	61	; select bank61
  3892     0385  00C6               	movwf	70	;volatile
  3893     0386                     l95:
  3894     0386  0008               	return
  3895     0387                     __end_of_PIN_MANAGER_Initialize:
  3896                           
  3897                           	psect	text15
  3898     04CF                     __ptext15:	
  3899 ;; *************** function _OSCILLATOR_Initialize *****************
  3900 ;; Defined at:
  3901 ;;		line 60 in file "mcc_generated_files/mcc.c"
  3902 ;; Parameters:    Size  Location     Type
  3903 ;;		None
  3904 ;; Auto vars:     Size  Location     Type
  3905 ;;		None
  3906 ;; Return value:  Size  Location     Type
  3907 ;;                  1    wreg      void 
  3908 ;; Registers used:
  3909 ;;		wreg, status,2
  3910 ;; Tracked objects:
  3911 ;;		On entry : 0/0
  3912 ;;		On exit  : 0/0
  3913 ;;		Unchanged: 0/0
  3914 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3915 ;;      Params:         0       0       0       0
  3916 ;;      Locals:         0       0       0       0
  3917 ;;      Temps:          0       0       0       0
  3918 ;;      Totals:         0       0       0       0
  3919 ;;Total ram usage:        0 bytes
  3920 ;; Hardware stack levels used: 1
  3921 ;; Hardware stack levels required when called: 5
  3922 ;; This function calls:
  3923 ;;		Nothing
  3924 ;; This function is called by:
  3925 ;;		_SYSTEM_Initialize
  3926 ;; This function uses a non-reentrant model
  3927 ;;
  3928                           
  3929     04CF                     _OSCILLATOR_Initialize:	
  3930                           ;psect for function _OSCILLATOR_Initialize
  3931                           
  3932     04CF                     l1966:	
  3933                           ;incstack = 0
  3934                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  3935                           
  3936                           
  3937                           ;mcc_generated_files/mcc.c: 63:     OSCEN = 0x00;
  3938     04CF  0151               	movlb	17	; select bank17
  3939     04D0  0191               	clrf	17	;volatile
  3940     04D1                     l1968:
  3941                           
  3942                           ;mcc_generated_files/mcc.c: 65:     OSCFRQ = 0x03;
  3943     04D1  3003               	movlw	3
  3944     04D2  0093               	movwf	19	;volatile
  3945     04D3                     l1970:
  3946                           
  3947                           ;mcc_generated_files/mcc.c: 67:     OSCTUNE = 0x00;
  3948     04D3  0192               	clrf	18	;volatile
  3949     04D4                     l589:
  3950     04D4  0008               	return
  3951     04D5                     __end_of_OSCILLATOR_Initialize:
  3952                           
  3953                           	psect	text16
  3954     04A4                     __ptext16:	
  3955 ;; *************** function _I2C1_Initialize *****************
  3956 ;; Defined at:
  3957 ;;		line 112 in file "mcc_generated_files/i2c1_slave.c"
  3958 ;; Parameters:    Size  Location     Type
  3959 ;;		None
  3960 ;; Auto vars:     Size  Location     Type
  3961 ;;		None
  3962 ;; Return value:  Size  Location     Type
  3963 ;;                  1    wreg      void 
  3964 ;; Registers used:
  3965 ;;		wreg, status,2, status,0
  3966 ;; Tracked objects:
  3967 ;;		On entry : 0/0
  3968 ;;		On exit  : 0/0
  3969 ;;		Unchanged: 0/0
  3970 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3971 ;;      Params:         0       0       0       0
  3972 ;;      Locals:         0       0       0       0
  3973 ;;      Temps:          1       0       0       0
  3974 ;;      Totals:         1       0       0       0
  3975 ;;Total ram usage:        1 bytes
  3976 ;; Hardware stack levels used: 1
  3977 ;; Hardware stack levels required when called: 5
  3978 ;; This function calls:
  3979 ;;		Nothing
  3980 ;; This function is called by:
  3981 ;;		_SYSTEM_Initialize
  3982 ;;		_I2C1_Enable
  3983 ;; This function uses a non-reentrant model
  3984 ;;
  3985                           
  3986     04A4                     _I2C1_Initialize:	
  3987                           ;psect for function _I2C1_Initialize
  3988                           
  3989     04A4                     l1866:	
  3990                           ;incstack = 0
  3991                           ; Regs used in _I2C1_Initialize: [wreg+status,2+status,0]
  3992                           
  3993                           
  3994                           ;mcc_generated_files/i2c1_slave.c: 114:     SSP1STAT = 0x40;
  3995     04A4  3040               	movlw	64
  3996     04A5  0143               	movlb	3	; select bank3
  3997     04A6  008F               	movwf	15	;volatile
  3998     04A7                     l1868:
  3999                           
  4000                           ;mcc_generated_files/i2c1_slave.c: 115:     SSP1CON1 |= 0x06;
  4001     04A7  3006               	movlw	6
  4002     04A8  00F3               	movwf	??_I2C1_Initialize
  4003     04A9  0873               	movf	??_I2C1_Initialize,w
  4004     04AA  0490               	iorwf	16,f	;volatile
  4005     04AB                     l1870:
  4006                           
  4007                           ;mcc_generated_files/i2c1_slave.c: 116:     SSP1CON2 = 0x00;
  4008     04AB  0191               	clrf	17	;volatile
  4009     04AC                     l1872:
  4010                           
  4011                           ;mcc_generated_files/i2c1_slave.c: 117:     SSP1CON1bits.SSPEN = 0;
  4012     04AC  1290               	bcf	16,5	;volatile
  4013     04AD                     l266:
  4014     04AD  0008               	return
  4015     04AE                     __end_of_I2C1_Initialize:
  4016                           
  4017                           	psect	text17
  4018     0301                     __ptext17:	
  4019 ;; *************** function _I2C1_Open *****************
  4020 ;; Defined at:
  4021 ;;		line 120 in file "mcc_generated_files/i2c1_slave.c"
  4022 ;; Parameters:    Size  Location     Type
  4023 ;;		None
  4024 ;; Auto vars:     Size  Location     Type
  4025 ;;		None
  4026 ;; Return value:  Size  Location     Type
  4027 ;;                  1    wreg      void 
  4028 ;; Registers used:
  4029 ;;		wreg, status,2, status,0, pclath, cstack
  4030 ;; Tracked objects:
  4031 ;;		On entry : 0/0
  4032 ;;		On exit  : 0/0
  4033 ;;		Unchanged: 0/0
  4034 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4035 ;;      Params:         0       0       0       0
  4036 ;;      Locals:         0       0       0       0
  4037 ;;      Temps:          0       0       0       0
  4038 ;;      Totals:         0       0       0       0
  4039 ;;Total ram usage:        0 bytes
  4040 ;; Hardware stack levels used: 1
  4041 ;; Hardware stack levels required when called: 6
  4042 ;; This function calls:
  4043 ;;		_I2C1_SlaveEnableIrq
  4044 ;;		_I2C1_SlaveOpen
  4045 ;;		_I2C1_SlaveSetAddrIntHandler
  4046 ;;		_I2C1_SlaveSetBusColIntHandler
  4047 ;;		_I2C1_SlaveSetIsrHandler
  4048 ;;		_I2C1_SlaveSetReadIntHandler
  4049 ;;		_I2C1_SlaveSetSlaveAddr
  4050 ;;		_I2C1_SlaveSetSlaveMask
  4051 ;;		_I2C1_SlaveSetWrColIntHandler
  4052 ;;		_I2C1_SlaveSetWriteIntHandler
  4053 ;; This function is called by:
  4054 ;;		_main
  4055 ;; This function uses a non-reentrant model
  4056 ;;
  4057                           
  4058     0301                     _I2C1_Open:	
  4059                           ;psect for function _I2C1_Open
  4060                           
  4061     0301                     l2028:	
  4062                           ;incstack = 0
  4063                           ; Regs used in _I2C1_Open: [wreg+status,2+status,0+pclath+cstack]
  4064                           
  4065                           
  4066                           ;mcc_generated_files/i2c1_slave.c: 122:     I2C1_SlaveOpen();
  4067     0301  3184  247C  3183   	fcall	_I2C1_SlaveOpen
  4068                           
  4069                           ;mcc_generated_files/i2c1_slave.c: 123:     I2C1_SlaveSetSlaveAddr(0x77);
  4070     0304  3077               	movlw	119
  4071     0305  3184  24FE  3183   	fcall	_I2C1_SlaveSetSlaveAddr
  4072                           
  4073                           ;mcc_generated_files/i2c1_slave.c: 124:     I2C1_SlaveSetSlaveMask(0);
  4074     0308  3000               	movlw	0
  4075     0309  3184  24F9  3183   	fcall	_I2C1_SlaveSetSlaveMask
  4076                           
  4077                           ;mcc_generated_files/i2c1_slave.c: 125:     I2C1_SlaveSetIsrHandler(I2C1_Isr);
  4078     030C  30EA               	movlw	low _I2C1_Isr
  4079     030D  00F3               	movwf	I2C1_SlaveSetIsrHandler@handler
  4080     030E  3001               	movlw	high _I2C1_Isr
  4081     030F  00F4               	movwf	I2C1_SlaveSetIsrHandler@handler+1
  4082     0310  3184  24E7  3183   	fcall	_I2C1_SlaveSetIsrHandler
  4083                           
  4084                           ;mcc_generated_files/i2c1_slave.c: 126:     I2C1_SlaveSetBusColIntHandler(I2C1_SlaveDefB
      +                          usColInterruptHandler);
  4085     0313  3000               	movlw	0
  4086     0314  00F3               	movwf	I2C1_SlaveSetBusColIntHandler@handler
  4087     0315  3000               	movlw	0
  4088     0316  00F4               	movwf	I2C1_SlaveSetBusColIntHandler@handler+1
  4089     0317  3184  24ED  3183   	fcall	_I2C1_SlaveSetBusColIntHandler
  4090                           
  4091                           ;mcc_generated_files/i2c1_slave.c: 127:     I2C1_SlaveSetWriteIntHandler(I2C1_SlaveDefWr
      +                          InterruptHandler);
  4092     031A  3003               	movlw	low _I2C1_SlaveDefWrInterruptHandler
  4093     031B  00F3               	movwf	I2C1_SlaveSetWriteIntHandler@handler
  4094     031C  3005               	movlw	high _I2C1_SlaveDefWrInterruptHandler
  4095     031D  00F4               	movwf	I2C1_SlaveSetWriteIntHandler@handler+1
  4096     031E  3184  24D5  3183   	fcall	_I2C1_SlaveSetWriteIntHandler
  4097                           
  4098                           ;mcc_generated_files/i2c1_slave.c: 128:     I2C1_SlaveSetReadIntHandler(I2C1_SlaveDefRdI
      +                          nterruptHandler);
  4099     0321  3015               	movlw	low _I2C1_SlaveDefRdInterruptHandler
  4100     0322  00F3               	movwf	I2C1_SlaveSetReadIntHandler@handler
  4101     0323  3004               	movlw	high _I2C1_SlaveDefRdInterruptHandler
  4102     0324  00F4               	movwf	I2C1_SlaveSetReadIntHandler@handler+1
  4103     0325  3184  24E1  3183   	fcall	_I2C1_SlaveSetReadIntHandler
  4104                           
  4105                           ;mcc_generated_files/i2c1_slave.c: 129:     I2C1_SlaveSetAddrIntHandler(I2C1_SlaveDefAdd
      +                          rInterruptHandler);
  4106     0328  30BC               	movlw	low _I2C1_SlaveDefAddrInterruptHandler
  4107     0329  00F3               	movwf	I2C1_SlaveSetAddrIntHandler@handler
  4108     032A  3004               	movlw	high _I2C1_SlaveDefAddrInterruptHandler
  4109     032B  00F4               	movwf	I2C1_SlaveSetAddrIntHandler@handler+1
  4110     032C  3184  24F3  3183   	fcall	_I2C1_SlaveSetAddrIntHandler
  4111                           
  4112                           ;mcc_generated_files/i2c1_slave.c: 130:     I2C1_SlaveSetWrColIntHandler(I2C1_SlaveDefWr
      +                          ColInterruptHandler);
  4113     032F  3000               	movlw	0
  4114     0330  00F3               	movwf	I2C1_SlaveSetWrColIntHandler@handler
  4115     0331  3000               	movlw	0
  4116     0332  00F4               	movwf	I2C1_SlaveSetWrColIntHandler@handler+1
  4117     0333  3184  24DB  3183   	fcall	_I2C1_SlaveSetWrColIntHandler
  4118     0336                     l2030:
  4119                           
  4120                           ;mcc_generated_files/i2c1_slave.c: 131:     I2C1_SlaveEnableIrq();
  4121     0336  3185  251D  3183   	fcall	_I2C1_SlaveEnableIrq
  4122     0339                     l269:
  4123     0339  0008               	return
  4124     033A                     __end_of_I2C1_Open:
  4125                           
  4126                           	psect	text18
  4127     04D5                     __ptext18:	
  4128 ;; *************** function _I2C1_SlaveSetWriteIntHandler *****************
  4129 ;; Defined at:
  4130 ;;		line 274 in file "mcc_generated_files/i2c1_slave.c"
  4131 ;; Parameters:    Size  Location     Type
  4132 ;;  handler         2    3[COMMON] PTR FTN()void 
  4133 ;;		 -> I2C1_SlaveDefWrInterruptHandler(1), 
  4134 ;; Auto vars:     Size  Location     Type
  4135 ;;		None
  4136 ;; Return value:  Size  Location     Type
  4137 ;;                  1    wreg      void 
  4138 ;; Registers used:
  4139 ;;		wreg
  4140 ;; Tracked objects:
  4141 ;;		On entry : 0/0
  4142 ;;		On exit  : 0/0
  4143 ;;		Unchanged: 0/0
  4144 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4145 ;;      Params:         2       0       0       0
  4146 ;;      Locals:         0       0       0       0
  4147 ;;      Temps:          0       0       0       0
  4148 ;;      Totals:         2       0       0       0
  4149 ;;Total ram usage:        2 bytes
  4150 ;; Hardware stack levels used: 1
  4151 ;; Hardware stack levels required when called: 5
  4152 ;; This function calls:
  4153 ;;		Nothing
  4154 ;; This function is called by:
  4155 ;;		_I2C1_Open
  4156 ;; This function uses a non-reentrant model
  4157 ;;
  4158                           
  4159     04D5                     _I2C1_SlaveSetWriteIntHandler:	
  4160                           ;psect for function _I2C1_SlaveSetWriteIntHandler
  4161                           
  4162     04D5                     l1894:	
  4163                           ;incstack = 0
  4164                           ; Regs used in _I2C1_SlaveSetWriteIntHandler: [wreg]
  4165                           
  4166                           
  4167                           ;mcc_generated_files/i2c1_slave.c: 275:     I2C1_SlaveWrInterruptHandler = handler;
  4168     04D5  0874               	movf	I2C1_SlaveSetWriteIntHandler@handler+1,w
  4169     04D6  0140               	movlb	0	; select bank0
  4170     04D7  00AC               	movwf	_I2C1_SlaveWrInterruptHandler+1
  4171     04D8  0873               	movf	I2C1_SlaveSetWriteIntHandler@handler,w
  4172     04D9  00AB               	movwf	_I2C1_SlaveWrInterruptHandler
  4173     04DA                     l328:
  4174     04DA  0008               	return
  4175     04DB                     __end_of_I2C1_SlaveSetWriteIntHandler:
  4176                           
  4177                           	psect	text19
  4178     04DB                     __ptext19:	
  4179 ;; *************** function _I2C1_SlaveSetWrColIntHandler *****************
  4180 ;; Defined at:
  4181 ;;		line 310 in file "mcc_generated_files/i2c1_slave.c"
  4182 ;; Parameters:    Size  Location     Type
  4183 ;;  handler         2    3[COMMON] PTR FTN()void 
  4184 ;;		 -> I2C1_SlaveDefWrColInterruptHandler(1), 
  4185 ;; Auto vars:     Size  Location     Type
  4186 ;;		None
  4187 ;; Return value:  Size  Location     Type
  4188 ;;                  1    wreg      void 
  4189 ;; Registers used:
  4190 ;;		wreg
  4191 ;; Tracked objects:
  4192 ;;		On entry : 0/0
  4193 ;;		On exit  : 0/0
  4194 ;;		Unchanged: 0/0
  4195 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4196 ;;      Params:         2       0       0       0
  4197 ;;      Locals:         0       0       0       0
  4198 ;;      Temps:          0       0       0       0
  4199 ;;      Totals:         2       0       0       0
  4200 ;;Total ram usage:        2 bytes
  4201 ;; Hardware stack levels used: 1
  4202 ;; Hardware stack levels required when called: 5
  4203 ;; This function calls:
  4204 ;;		Nothing
  4205 ;; This function is called by:
  4206 ;;		_I2C1_Open
  4207 ;; This function uses a non-reentrant model
  4208 ;;
  4209                           
  4210     04DB                     _I2C1_SlaveSetWrColIntHandler:	
  4211                           ;psect for function _I2C1_SlaveSetWrColIntHandler
  4212                           
  4213     04DB                     l1900:	
  4214                           ;incstack = 0
  4215                           ; Regs used in _I2C1_SlaveSetWrColIntHandler: [wreg]
  4216                           
  4217                           
  4218                           ;mcc_generated_files/i2c1_slave.c: 311:     I2C1_SlaveWrColInterruptHandler = handler;
  4219     04DB  0874               	movf	I2C1_SlaveSetWrColIntHandler@handler+1,w
  4220     04DC  0140               	movlb	0	; select bank0
  4221     04DD  00A6               	movwf	_I2C1_SlaveWrColInterruptHandler+1
  4222     04DE  0873               	movf	I2C1_SlaveSetWrColIntHandler@handler,w
  4223     04DF  00A5               	movwf	_I2C1_SlaveWrColInterruptHandler
  4224     04E0                     l348:
  4225     04E0  0008               	return
  4226     04E1                     __end_of_I2C1_SlaveSetWrColIntHandler:
  4227                           
  4228                           	psect	text20
  4229     04F9                     __ptext20:	
  4230 ;; *************** function _I2C1_SlaveSetSlaveMask *****************
  4231 ;; Defined at:
  4232 ;;		line 367 in file "mcc_generated_files/i2c1_slave.c"
  4233 ;; Parameters:    Size  Location     Type
  4234 ;;  maskAddr        1    wreg     unsigned char 
  4235 ;; Auto vars:     Size  Location     Type
  4236 ;;  maskAddr        1    3[COMMON] unsigned char 
  4237 ;; Return value:  Size  Location     Type
  4238 ;;                  1    wreg      void 
  4239 ;; Registers used:
  4240 ;;		wreg, status,2, status,0
  4241 ;; Tracked objects:
  4242 ;;		On entry : 0/0
  4243 ;;		On exit  : 0/0
  4244 ;;		Unchanged: 0/0
  4245 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4246 ;;      Params:         0       0       0       0
  4247 ;;      Locals:         1       0       0       0
  4248 ;;      Temps:          0       0       0       0
  4249 ;;      Totals:         1       0       0       0
  4250 ;;Total ram usage:        1 bytes
  4251 ;; Hardware stack levels used: 1
  4252 ;; Hardware stack levels required when called: 5
  4253 ;; This function calls:
  4254 ;;		Nothing
  4255 ;; This function is called by:
  4256 ;;		_I2C1_Open
  4257 ;; This function uses a non-reentrant model
  4258 ;;
  4259                           
  4260     04F9                     _I2C1_SlaveSetSlaveMask:	
  4261                           ;psect for function _I2C1_SlaveSetSlaveMask
  4262                           
  4263                           
  4264                           ;incstack = 0
  4265                           ; Regs used in _I2C1_SlaveSetSlaveMask: [wreg+status,2+status,0]
  4266                           ;I2C1_SlaveSetSlaveMask@maskAddr stored from wreg
  4267     04F9  00F3               	movwf	I2C1_SlaveSetSlaveMask@maskAddr
  4268     04FA                     l1888:
  4269                           
  4270                           ;mcc_generated_files/i2c1_slave.c: 367: static __attribute__((inline)) void I2C1_SlaveSe
      +                          tSlaveMask(uint8_t maskAddr);mcc_generated_files/i2c1_slave.c: 368: {;mcc_generated_file
      +                          s/i2c1_slave.c: 369:     SSP1MSK = (uint8_t) (maskAddr << 1);
  4271     04FA  3573               	lslf	I2C1_SlaveSetSlaveMask@maskAddr,w
  4272     04FB  0143               	movlb	3	; select bank3
  4273     04FC  008E               	movwf	14	;volatile
  4274     04FD                     l378:
  4275     04FD  0008               	return
  4276     04FE                     __end_of_I2C1_SlaveSetSlaveMask:
  4277                           
  4278                           	psect	text21
  4279     04FE                     __ptext21:	
  4280 ;; *************** function _I2C1_SlaveSetSlaveAddr *****************
  4281 ;; Defined at:
  4282 ;;		line 362 in file "mcc_generated_files/i2c1_slave.c"
  4283 ;; Parameters:    Size  Location     Type
  4284 ;;  slaveAddr       1    wreg     unsigned char 
  4285 ;; Auto vars:     Size  Location     Type
  4286 ;;  slaveAddr       1    3[COMMON] unsigned char 
  4287 ;; Return value:  Size  Location     Type
  4288 ;;                  1    wreg      void 
  4289 ;; Registers used:
  4290 ;;		wreg, status,2, status,0
  4291 ;; Tracked objects:
  4292 ;;		On entry : 0/0
  4293 ;;		On exit  : 0/0
  4294 ;;		Unchanged: 0/0
  4295 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4296 ;;      Params:         0       0       0       0
  4297 ;;      Locals:         1       0       0       0
  4298 ;;      Temps:          0       0       0       0
  4299 ;;      Totals:         1       0       0       0
  4300 ;;Total ram usage:        1 bytes
  4301 ;; Hardware stack levels used: 1
  4302 ;; Hardware stack levels required when called: 5
  4303 ;; This function calls:
  4304 ;;		Nothing
  4305 ;; This function is called by:
  4306 ;;		_I2C1_Open
  4307 ;; This function uses a non-reentrant model
  4308 ;;
  4309                           
  4310     04FE                     _I2C1_SlaveSetSlaveAddr:	
  4311                           ;psect for function _I2C1_SlaveSetSlaveAddr
  4312                           
  4313                           
  4314                           ;incstack = 0
  4315                           ; Regs used in _I2C1_SlaveSetSlaveAddr: [wreg+status,2+status,0]
  4316                           ;I2C1_SlaveSetSlaveAddr@slaveAddr stored from wreg
  4317     04FE  00F3               	movwf	I2C1_SlaveSetSlaveAddr@slaveAddr
  4318     04FF                     l1886:
  4319                           
  4320                           ;mcc_generated_files/i2c1_slave.c: 362: static __attribute__((inline)) void I2C1_SlaveSe
      +                          tSlaveAddr(uint8_t slaveAddr);mcc_generated_files/i2c1_slave.c: 363: {;mcc_generated_fil
      +                          es/i2c1_slave.c: 364:     SSP1ADD = (uint8_t) (slaveAddr << 1);
  4321     04FF  3573               	lslf	I2C1_SlaveSetSlaveAddr@slaveAddr,w
  4322     0500  0143               	movlb	3	; select bank3
  4323     0501  008D               	movwf	13	;volatile
  4324     0502                     l375:
  4325     0502  0008               	return
  4326     0503                     __end_of_I2C1_SlaveSetSlaveAddr:
  4327                           
  4328                           	psect	text22
  4329     04E1                     __ptext22:	
  4330 ;; *************** function _I2C1_SlaveSetReadIntHandler *****************
  4331 ;; Defined at:
  4332 ;;		line 240 in file "mcc_generated_files/i2c1_slave.c"
  4333 ;; Parameters:    Size  Location     Type
  4334 ;;  handler         2    3[COMMON] PTR FTN()void 
  4335 ;;		 -> I2C1_SlaveDefRdInterruptHandler(1), 
  4336 ;; Auto vars:     Size  Location     Type
  4337 ;;		None
  4338 ;; Return value:  Size  Location     Type
  4339 ;;                  1    wreg      void 
  4340 ;; Registers used:
  4341 ;;		wreg
  4342 ;; Tracked objects:
  4343 ;;		On entry : 0/0
  4344 ;;		On exit  : 0/0
  4345 ;;		Unchanged: 0/0
  4346 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4347 ;;      Params:         2       0       0       0
  4348 ;;      Locals:         0       0       0       0
  4349 ;;      Temps:          0       0       0       0
  4350 ;;      Totals:         2       0       0       0
  4351 ;;Total ram usage:        2 bytes
  4352 ;; Hardware stack levels used: 1
  4353 ;; Hardware stack levels required when called: 5
  4354 ;; This function calls:
  4355 ;;		Nothing
  4356 ;; This function is called by:
  4357 ;;		_I2C1_Open
  4358 ;; This function uses a non-reentrant model
  4359 ;;
  4360                           
  4361     04E1                     _I2C1_SlaveSetReadIntHandler:	
  4362                           ;psect for function _I2C1_SlaveSetReadIntHandler
  4363                           
  4364     04E1                     l1896:	
  4365                           ;incstack = 0
  4366                           ; Regs used in _I2C1_SlaveSetReadIntHandler: [wreg]
  4367                           
  4368                           
  4369                           ;mcc_generated_files/i2c1_slave.c: 241:     I2C1_SlaveRdInterruptHandler = handler;
  4370     04E1  0874               	movf	I2C1_SlaveSetReadIntHandler@handler+1,w
  4371     04E2  0140               	movlb	0	; select bank0
  4372     04E3  00AE               	movwf	_I2C1_SlaveRdInterruptHandler+1
  4373     04E4  0873               	movf	I2C1_SlaveSetReadIntHandler@handler,w
  4374     04E5  00AD               	movwf	_I2C1_SlaveRdInterruptHandler
  4375     04E6                     l315:
  4376     04E6  0008               	return
  4377     04E7                     __end_of_I2C1_SlaveSetReadIntHandler:
  4378                           
  4379                           	psect	text23
  4380     04E7                     __ptext23:	
  4381 ;; *************** function _I2C1_SlaveSetIsrHandler *****************
  4382 ;; Defined at:
  4383 ;;		line 234 in file "mcc_generated_files/i2c1_slave.c"
  4384 ;; Parameters:    Size  Location     Type
  4385 ;;  handler         2    3[COMMON] PTR FTN()void 
  4386 ;;		 -> I2C1_Isr(1), 
  4387 ;; Auto vars:     Size  Location     Type
  4388 ;;		None
  4389 ;; Return value:  Size  Location     Type
  4390 ;;                  1    wreg      void 
  4391 ;; Registers used:
  4392 ;;		wreg
  4393 ;; Tracked objects:
  4394 ;;		On entry : 0/0
  4395 ;;		On exit  : 0/0
  4396 ;;		Unchanged: 0/0
  4397 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4398 ;;      Params:         2       0       0       0
  4399 ;;      Locals:         0       0       0       0
  4400 ;;      Temps:          0       0       0       0
  4401 ;;      Totals:         2       0       0       0
  4402 ;;Total ram usage:        2 bytes
  4403 ;; Hardware stack levels used: 1
  4404 ;; Hardware stack levels required when called: 5
  4405 ;; This function calls:
  4406 ;;		Nothing
  4407 ;; This function is called by:
  4408 ;;		_I2C1_Open
  4409 ;; This function uses a non-reentrant model
  4410 ;;
  4411                           
  4412     04E7                     _I2C1_SlaveSetIsrHandler:	
  4413                           ;psect for function _I2C1_SlaveSetIsrHandler
  4414                           
  4415     04E7                     l1890:	
  4416                           ;incstack = 0
  4417                           ; Regs used in _I2C1_SlaveSetIsrHandler: [wreg]
  4418                           
  4419                           
  4420                           ;mcc_generated_files/i2c1_slave.c: 234: void I2C1_SlaveSetIsrHandler(i2c1InterruptHandle
      +                          r handler);mcc_generated_files/i2c1_slave.c: 235: {;mcc_generated_files/i2c1_slave.c: 23
      +                          6:     MSSP1_InterruptHandler = handler;
  4421     04E7  0874               	movf	I2C1_SlaveSetIsrHandler@handler+1,w
  4422     04E8  0140               	movlb	0	; select bank0
  4423     04E9  00B0               	movwf	_MSSP1_InterruptHandler+1
  4424     04EA  0873               	movf	I2C1_SlaveSetIsrHandler@handler,w
  4425     04EB  00AF               	movwf	_MSSP1_InterruptHandler
  4426     04EC                     l312:
  4427     04EC  0008               	return
  4428     04ED                     __end_of_I2C1_SlaveSetIsrHandler:
  4429                           
  4430                           	psect	text24
  4431     04ED                     __ptext24:	
  4432 ;; *************** function _I2C1_SlaveSetBusColIntHandler *****************
  4433 ;; Defined at:
  4434 ;;		line 326 in file "mcc_generated_files/i2c1_slave.c"
  4435 ;; Parameters:    Size  Location     Type
  4436 ;;  handler         2    3[COMMON] PTR FTN()void 
  4437 ;;		 -> I2C1_SlaveDefBusColInterruptHandler(1), 
  4438 ;; Auto vars:     Size  Location     Type
  4439 ;;		None
  4440 ;; Return value:  Size  Location     Type
  4441 ;;                  1    wreg      void 
  4442 ;; Registers used:
  4443 ;;		wreg
  4444 ;; Tracked objects:
  4445 ;;		On entry : 0/0
  4446 ;;		On exit  : 0/0
  4447 ;;		Unchanged: 0/0
  4448 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4449 ;;      Params:         2       0       0       0
  4450 ;;      Locals:         0       0       0       0
  4451 ;;      Temps:          0       0       0       0
  4452 ;;      Totals:         2       0       0       0
  4453 ;;Total ram usage:        2 bytes
  4454 ;; Hardware stack levels used: 1
  4455 ;; Hardware stack levels required when called: 5
  4456 ;; This function calls:
  4457 ;;		Nothing
  4458 ;; This function is called by:
  4459 ;;		_I2C1_Open
  4460 ;; This function uses a non-reentrant model
  4461 ;;
  4462                           
  4463     04ED                     _I2C1_SlaveSetBusColIntHandler:	
  4464                           ;psect for function _I2C1_SlaveSetBusColIntHandler
  4465                           
  4466     04ED                     l1892:	
  4467                           ;incstack = 0
  4468                           ; Regs used in _I2C1_SlaveSetBusColIntHandler: [wreg]
  4469                           
  4470                           
  4471                           ;mcc_generated_files/i2c1_slave.c: 327:     I2C1_SlaveBusColInterruptHandler = handler;
  4472     04ED  0874               	movf	I2C1_SlaveSetBusColIntHandler@handler+1,w
  4473     04EE  0140               	movlb	0	; select bank0
  4474     04EF  00A8               	movwf	_I2C1_SlaveBusColInterruptHandler+1
  4475     04F0  0873               	movf	I2C1_SlaveSetBusColIntHandler@handler,w
  4476     04F1  00A7               	movwf	_I2C1_SlaveBusColInterruptHandler
  4477     04F2                     l358:
  4478     04F2  0008               	return
  4479     04F3                     __end_of_I2C1_SlaveSetBusColIntHandler:
  4480                           
  4481                           	psect	text25
  4482     04F3                     __ptext25:	
  4483 ;; *************** function _I2C1_SlaveSetAddrIntHandler *****************
  4484 ;; Defined at:
  4485 ;;		line 291 in file "mcc_generated_files/i2c1_slave.c"
  4486 ;; Parameters:    Size  Location     Type
  4487 ;;  handler         2    3[COMMON] PTR FTN()void 
  4488 ;;		 -> I2C1_SlaveDefAddrInterruptHandler(1), 
  4489 ;; Auto vars:     Size  Location     Type
  4490 ;;		None
  4491 ;; Return value:  Size  Location     Type
  4492 ;;                  1    wreg      void 
  4493 ;; Registers used:
  4494 ;;		wreg
  4495 ;; Tracked objects:
  4496 ;;		On entry : 0/0
  4497 ;;		On exit  : 0/0
  4498 ;;		Unchanged: 0/0
  4499 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4500 ;;      Params:         2       0       0       0
  4501 ;;      Locals:         0       0       0       0
  4502 ;;      Temps:          0       0       0       0
  4503 ;;      Totals:         2       0       0       0
  4504 ;;Total ram usage:        2 bytes
  4505 ;; Hardware stack levels used: 1
  4506 ;; Hardware stack levels required when called: 5
  4507 ;; This function calls:
  4508 ;;		Nothing
  4509 ;; This function is called by:
  4510 ;;		_I2C1_Open
  4511 ;; This function uses a non-reentrant model
  4512 ;;
  4513                           
  4514     04F3                     _I2C1_SlaveSetAddrIntHandler:	
  4515                           ;psect for function _I2C1_SlaveSetAddrIntHandler
  4516                           
  4517     04F3                     l1898:	
  4518                           ;incstack = 0
  4519                           ; Regs used in _I2C1_SlaveSetAddrIntHandler: [wreg]
  4520                           
  4521                           
  4522                           ;mcc_generated_files/i2c1_slave.c: 292:     I2C1_SlaveAddrInterruptHandler = handler;
  4523     04F3  0874               	movf	I2C1_SlaveSetAddrIntHandler@handler+1,w
  4524     04F4  0140               	movlb	0	; select bank0
  4525     04F5  00AA               	movwf	_I2C1_SlaveAddrInterruptHandler+1
  4526     04F6  0873               	movf	I2C1_SlaveSetAddrIntHandler@handler,w
  4527     04F7  00A9               	movwf	_I2C1_SlaveAddrInterruptHandler
  4528     04F8                     l338:
  4529     04F8  0008               	return
  4530     04F9                     __end_of_I2C1_SlaveSetAddrIntHandler:
  4531                           
  4532                           	psect	text26
  4533     047C                     __ptext26:	
  4534 ;; *************** function _I2C1_SlaveOpen *****************
  4535 ;; Defined at:
  4536 ;;		line 341 in file "mcc_generated_files/i2c1_slave.c"
  4537 ;; Parameters:    Size  Location     Type
  4538 ;;		None
  4539 ;; Auto vars:     Size  Location     Type
  4540 ;;		None
  4541 ;; Return value:  Size  Location     Type
  4542 ;;                  1    wreg      _Bool 
  4543 ;; Registers used:
  4544 ;;		wreg, status,2, status,0
  4545 ;; Tracked objects:
  4546 ;;		On entry : 0/0
  4547 ;;		On exit  : 0/0
  4548 ;;		Unchanged: 0/0
  4549 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4550 ;;      Params:         0       0       0       0
  4551 ;;      Locals:         0       0       0       0
  4552 ;;      Temps:          1       0       0       0
  4553 ;;      Totals:         1       0       0       0
  4554 ;;Total ram usage:        1 bytes
  4555 ;; Hardware stack levels used: 1
  4556 ;; Hardware stack levels required when called: 5
  4557 ;; This function calls:
  4558 ;;		Nothing
  4559 ;; This function is called by:
  4560 ;;		_I2C1_Open
  4561 ;; This function uses a non-reentrant model
  4562 ;;
  4563                           
  4564     047C                     _I2C1_SlaveOpen:	
  4565                           ;psect for function _I2C1_SlaveOpen
  4566                           
  4567     047C                     l1874:	
  4568                           ;incstack = 0
  4569                           ; Regs used in _I2C1_SlaveOpen: [wreg+status,2+status,0]
  4570                           
  4571                           
  4572                           ;mcc_generated_files/i2c1_slave.c: 343:     if(!SSP1CON1bits.SSPEN)
  4573     047C  0143               	movlb	3	; select bank3
  4574     047D  1A90               	btfsc	16,5	;volatile
  4575     047E  2C80               	goto	u471
  4576     047F  2C81               	goto	u470
  4577     0480                     u471:
  4578     0480  2C89               	goto	l369
  4579     0481                     u470:
  4580     0481                     l1876:
  4581                           
  4582                           ;mcc_generated_files/i2c1_slave.c: 344:     {;mcc_generated_files/i2c1_slave.c: 345:    
      +                               SSP1STAT = 0x40;
  4583     0481  3040               	movlw	64
  4584     0482  008F               	movwf	15	;volatile
  4585     0483                     l1878:
  4586                           
  4587                           ;mcc_generated_files/i2c1_slave.c: 346:         SSP1CON1 |= 0x06;
  4588     0483  3006               	movlw	6
  4589     0484  00F3               	movwf	??_I2C1_SlaveOpen
  4590     0485  0873               	movf	??_I2C1_SlaveOpen,w
  4591     0486  0490               	iorwf	16,f	;volatile
  4592     0487                     l1880:
  4593                           
  4594                           ;mcc_generated_files/i2c1_slave.c: 347:         SSP1CON2 = 0x00;
  4595     0487  0191               	clrf	17	;volatile
  4596     0488                     l1882:
  4597                           
  4598                           ;mcc_generated_files/i2c1_slave.c: 348:         SSP1CON1bits.SSPEN = 1;
  4599     0488  1690               	bsf	16,5	;volatile
  4600     0489                     l369:
  4601     0489  0008               	return
  4602     048A                     __end_of_I2C1_SlaveOpen:
  4603                           
  4604                           	psect	text27
  4605     051D                     __ptext27:	
  4606 ;; *************** function _I2C1_SlaveEnableIrq *****************
  4607 ;; Defined at:
  4608 ;;		line 372 in file "mcc_generated_files/i2c1_slave.c"
  4609 ;; Parameters:    Size  Location     Type
  4610 ;;		None
  4611 ;; Auto vars:     Size  Location     Type
  4612 ;;		None
  4613 ;; Return value:  Size  Location     Type
  4614 ;;                  1    wreg      void 
  4615 ;; Registers used:
  4616 ;;		None
  4617 ;; Tracked objects:
  4618 ;;		On entry : 0/0
  4619 ;;		On exit  : 0/0
  4620 ;;		Unchanged: 0/0
  4621 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4622 ;;      Params:         0       0       0       0
  4623 ;;      Locals:         0       0       0       0
  4624 ;;      Temps:          0       0       0       0
  4625 ;;      Totals:         0       0       0       0
  4626 ;;Total ram usage:        0 bytes
  4627 ;; Hardware stack levels used: 1
  4628 ;; Hardware stack levels required when called: 5
  4629 ;; This function calls:
  4630 ;;		Nothing
  4631 ;; This function is called by:
  4632 ;;		_I2C1_Open
  4633 ;; This function uses a non-reentrant model
  4634 ;;
  4635                           
  4636     051D                     _I2C1_SlaveEnableIrq:	
  4637                           ;psect for function _I2C1_SlaveEnableIrq
  4638                           
  4639     051D                     l1902:	
  4640                           ;incstack = 0
  4641                           ; Regs used in _I2C1_SlaveEnableIrq: []
  4642                           
  4643                           
  4644                           ;mcc_generated_files/i2c1_slave.c: 374:     PIE1bits.SSP1IE = 1;
  4645     051D  014E               	movlb	14	; select bank14
  4646     051E  1497               	bsf	23,1	;volatile
  4647     051F                     l381:
  4648     051F  0008               	return
  4649     0520                     __end_of_I2C1_SlaveEnableIrq:
  4650                           
  4651                           	psect	intentry
  4652     0004                     __pintentry:	
  4653 ;; *************** function _INTERRUPT_InterruptManager *****************
  4654 ;; Defined at:
  4655 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  4656 ;; Parameters:    Size  Location     Type
  4657 ;;		None
  4658 ;; Auto vars:     Size  Location     Type
  4659 ;;		None
  4660 ;; Return value:  Size  Location     Type
  4661 ;;                  1    wreg      void 
  4662 ;; Registers used:
  4663 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4664 ;; Tracked objects:
  4665 ;;		On entry : 0/0
  4666 ;;		On exit  : 0/0
  4667 ;;		Unchanged: 0/0
  4668 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4669 ;;      Params:         0       0       0       0
  4670 ;;      Locals:         0       0       0       0
  4671 ;;      Temps:          0       0       0       0
  4672 ;;      Totals:         0       0       0       0
  4673 ;;Total ram usage:        0 bytes
  4674 ;; Hardware stack levels used: 1
  4675 ;; Hardware stack levels required when called: 4
  4676 ;; This function calls:
  4677 ;;		NULL
  4678 ;;		_I2C1_Isr
  4679 ;;		_TMR0_ISR
  4680 ;; This function is called by:
  4681 ;;		Interrupt level 1
  4682 ;; This function uses a non-reentrant model
  4683 ;;
  4684                           
  4685     0004                     _INTERRUPT_InterruptManager:
  4686                           
  4687                           ;incstack = 0
  4688     0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
  4689                           
  4690                           ; Regs used in _INTERRUPT_InterruptManager: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4691     0005  3180               	pagesel	$
  4692     0006                     i1l2080:
  4693                           
  4694                           ;mcc_generated_files/interrupt_manager.c: 55:     if(PIE0bits.TMR0IE == 1 && PIR0bits.TM
      +                          R0IF == 1)
  4695     0006  014E               	movlb	14	; select bank14
  4696     0007  1E96               	btfss	22,5	;volatile
  4697     0008  280A               	goto	u72_21
  4698     0009  280B               	goto	u72_20
  4699     000A                     u72_21:
  4700     000A  2813               	goto	i1l137
  4701     000B                     u72_20:
  4702     000B                     i1l2082:
  4703     000B  1E8C               	btfss	12,5	;volatile
  4704     000C  280E               	goto	u73_21
  4705     000D  280F               	goto	u73_20
  4706     000E                     u73_21:
  4707     000E  2813               	goto	i1l137
  4708     000F                     u73_20:
  4709     000F                     i1l2084:
  4710                           
  4711                           ;mcc_generated_files/interrupt_manager.c: 56:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 57:         TMR0_ISR();
  4712     000F  3184  245F  3180   	fcall	_TMR0_ISR
  4713                           
  4714                           ;mcc_generated_files/interrupt_manager.c: 58:     }
  4715     0012  282F               	goto	i1l145
  4716     0013                     i1l137:	
  4717                           ;mcc_generated_files/interrupt_manager.c: 59:     else if(INTCONbits.PEIE == 1)
  4718                           
  4719     0013  1F0B               	btfss	11,6	;volatile
  4720     0014  2816               	goto	u74_21
  4721     0015  2817               	goto	u74_20
  4722     0016                     u74_21:
  4723     0016  282F               	goto	i1l145
  4724     0017                     u74_20:
  4725     0017                     i1l2086:
  4726                           
  4727                           ;mcc_generated_files/interrupt_manager.c: 60:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 61:         if(PIE1bits.BCL1IE == 1 && PIR1bits.BCL1IF == 1)
  4728     0017  1D17               	btfss	23,2	;volatile
  4729     0018  281A               	goto	u75_21
  4730     0019  281B               	goto	u75_20
  4731     001A                     u75_21:
  4732     001A  2826               	goto	i1l140
  4733     001B                     u75_20:
  4734     001B                     i1l2088:
  4735     001B  1D0D               	btfss	13,2	;volatile
  4736     001C  281E               	goto	u76_21
  4737     001D  281F               	goto	u76_20
  4738     001E                     u76_21:
  4739     001E  2826               	goto	i1l140
  4740     001F                     u76_20:
  4741     001F                     i1l2090:
  4742                           
  4743                           ;mcc_generated_files/interrupt_manager.c: 62:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 63:             MSSP1_InterruptHandler();
  4744     001F  0140               	movlb	0	; select bank0
  4745     0020  0830               	movf	_MSSP1_InterruptHandler+1,w
  4746     0021  008A               	movwf	10
  4747     0022  082F               	movf	_MSSP1_InterruptHandler,w
  4748     0023  000A               	callw
  4749     0024  3180               	pagesel	$
  4750                           
  4751                           ;mcc_generated_files/interrupt_manager.c: 64:         }
  4752     0025  282F               	goto	i1l145
  4753     0026                     i1l140:	
  4754                           ;mcc_generated_files/interrupt_manager.c: 65:         else if(PIE1bits.SSP1IE == 1 && PI
      +                          R1bits.SSP1IF == 1)
  4755                           
  4756     0026  1C97               	btfss	23,1	;volatile
  4757     0027  2829               	goto	u77_21
  4758     0028  282A               	goto	u77_20
  4759     0029                     u77_21:
  4760     0029  282F               	goto	i1l144
  4761     002A                     u77_20:
  4762     002A                     i1l2092:
  4763     002A  1C8D               	btfss	13,1	;volatile
  4764     002B  282D               	goto	u78_21
  4765     002C  282E               	goto	u78_20
  4766     002D                     u78_21:
  4767     002D  282F               	goto	i1l144
  4768     002E                     u78_20:
  4769     002E  281F               	goto	i1l2090
  4770     002F                     i1l144:	
  4771                           ;mcc_generated_files/interrupt_manager.c: 76:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 78:     }
  4772                           
  4773     002F                     i1l145:
  4774     002F  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  4775     0030  0009               	retfie
  4776     0031                     __end_of_INTERRUPT_InterruptManager:
  4777                           
  4778                           	psect	text29
  4779     045F                     __ptext29:	
  4780 ;; *************** function _TMR0_ISR *****************
  4781 ;; Defined at:
  4782 ;;		line 131 in file "mcc_generated_files/tmr0.c"
  4783 ;; Parameters:    Size  Location     Type
  4784 ;;		None
  4785 ;; Auto vars:     Size  Location     Type
  4786 ;;		None
  4787 ;; Return value:  Size  Location     Type
  4788 ;;                  1    wreg      void 
  4789 ;; Registers used:
  4790 ;;		wreg, status,2, status,0, pclath, cstack
  4791 ;; Tracked objects:
  4792 ;;		On entry : 0/0
  4793 ;;		On exit  : 0/0
  4794 ;;		Unchanged: 0/0
  4795 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4796 ;;      Params:         0       0       0       0
  4797 ;;      Locals:         0       0       0       0
  4798 ;;      Temps:          0       0       0       0
  4799 ;;      Totals:         0       0       0       0
  4800 ;;Total ram usage:        0 bytes
  4801 ;; Hardware stack levels used: 1
  4802 ;; Hardware stack levels required when called: 1
  4803 ;; This function calls:
  4804 ;;		NULL
  4805 ;;		_TMR0_DefaultInterruptHandler
  4806 ;; This function is called by:
  4807 ;;		_INTERRUPT_InterruptManager
  4808 ;; This function uses a non-reentrant model
  4809 ;;
  4810                           
  4811     045F                     _TMR0_ISR:	
  4812                           ;psect for function _TMR0_ISR
  4813                           
  4814     045F                     i1l2022:	
  4815                           ;incstack = 0
  4816                           ; Regs used in _TMR0_ISR: [wreg+status,2+status,0+pclath+cstack]
  4817                           
  4818                           
  4819                           ;mcc_generated_files/tmr0.c: 134:     PIR0bits.TMR0IF = 0;
  4820     045F  014E               	movlb	14	; select bank14
  4821     0460  128C               	bcf	12,5	;volatile
  4822     0461                     i1l2024:
  4823                           
  4824                           ;mcc_generated_files/tmr0.c: 136:     if(TMR0_InterruptHandler)
  4825     0461  0140               	movlb	0	; select bank0
  4826     0462  0850               	movf	_TMR0_InterruptHandler,w
  4827     0463  0451               	iorwf	_TMR0_InterruptHandler+1,w
  4828     0464  1903               	btfsc	3,2
  4829     0465  2C67               	goto	u65_21
  4830     0466  2C68               	goto	u65_20
  4831     0467                     u65_21:
  4832     0467  2C6D               	goto	i1l476
  4833     0468                     u65_20:
  4834     0468                     i1l2026:
  4835                           
  4836                           ;mcc_generated_files/tmr0.c: 137:     {;mcc_generated_files/tmr0.c: 138:         TMR0_In
      +                          terruptHandler();
  4837     0468  0851               	movf	_TMR0_InterruptHandler+1,w
  4838     0469  008A               	movwf	10
  4839     046A  0850               	movf	_TMR0_InterruptHandler,w
  4840     046B  000A               	callw
  4841     046C  3184               	pagesel	$
  4842     046D                     i1l476:
  4843     046D  0008               	return
  4844     046E                     __end_of_TMR0_ISR:
  4845                           
  4846                           	psect	text30
  4847     033A                     __ptext30:	
  4848 ;; *************** function _TMR0_DefaultInterruptHandler *****************
  4849 ;; Defined at:
  4850 ;;		line 152 in file "mcc_generated_files/tmr0.c"
  4851 ;; Parameters:    Size  Location     Type
  4852 ;;		None
  4853 ;; Auto vars:     Size  Location     Type
  4854 ;;		None
  4855 ;; Return value:  Size  Location     Type
  4856 ;;                  1    wreg      void 
  4857 ;; Registers used:
  4858 ;;		wreg, status,2, status,0
  4859 ;; Tracked objects:
  4860 ;;		On entry : 0/0
  4861 ;;		On exit  : 0/0
  4862 ;;		Unchanged: 0/0
  4863 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4864 ;;      Params:         0       0       0       0
  4865 ;;      Locals:         0       0       0       0
  4866 ;;      Temps:          1       0       0       0
  4867 ;;      Totals:         1       0       0       0
  4868 ;;Total ram usage:        1 bytes
  4869 ;; Hardware stack levels used: 1
  4870 ;; This function calls:
  4871 ;;		Nothing
  4872 ;; This function is called by:
  4873 ;;		_TMR0_Initialize
  4874 ;;		_TMR0_ISR
  4875 ;; This function uses a non-reentrant model
  4876 ;;
  4877                           
  4878     033A                     _TMR0_DefaultInterruptHandler:	
  4879                           ;psect for function _TMR0_DefaultInterruptHandler
  4880                           
  4881     033A                     i1l1952:	
  4882                           ;incstack = 0
  4883                           ; Regs used in _TMR0_DefaultInterruptHandler: [wreg+status,2+status,0]
  4884                           
  4885                           
  4886                           ;mcc_generated_files/tmr0.c: 156:     LED_timer++;
  4887     033A  3001               	movlw	1
  4888     033B  00F0               	movwf	??_TMR0_DefaultInterruptHandler
  4889     033C  0870               	movf	??_TMR0_DefaultInterruptHandler,w
  4890     033D  07FA               	addwf	_LED_timer,f
  4891                           
  4892                           ;mcc_generated_files/tmr0.c: 159:     if(error_flag == 1)
  4893     033E  0140               	movlb	0	; select bank0
  4894     033F  0337               	decf	_error_flag,w
  4895     0340  1D03               	btfss	3,2
  4896     0341  2B43               	goto	u52_21
  4897     0342  2B44               	goto	u52_20
  4898     0343                     u52_21:
  4899     0343  2B54               	goto	i1l1960
  4900     0344                     u52_20:
  4901     0344                     i1l1954:
  4902                           
  4903                           ;mcc_generated_files/tmr0.c: 160:     {;mcc_generated_files/tmr0.c: 161:         if(LED_
      +                          timer == 5)
  4904     0344  3005               	movlw	5
  4905     0345  067A               	xorwf	_LED_timer,w
  4906     0346  1D03               	btfss	3,2
  4907     0347  2B49               	goto	u53_21
  4908     0348  2B4A               	goto	u53_20
  4909     0349                     u53_21:
  4910     0349  2B4B               	goto	i1l1956
  4911     034A                     u53_20:
  4912     034A                     i1l484:	
  4913                           ;mcc_generated_files/tmr0.c: 162:         {;mcc_generated_files/tmr0.c: 163:            
      +                           do { LATAbits.LATA2 = 1; } while(0);
  4914                           
  4915     034A  1518               	bsf	24,2	;volatile
  4916     034B                     i1l1956:
  4917                           
  4918                           ;mcc_generated_files/tmr0.c: 165:         if(LED_timer == 10)
  4919     034B  300A               	movlw	10
  4920     034C  067A               	xorwf	_LED_timer,w
  4921     034D  1D03               	btfss	3,2
  4922     034E  2B50               	goto	u54_21
  4923     034F  2B51               	goto	u54_20
  4924     0350                     u54_21:
  4925     0350  2B63               	goto	i1l496
  4926     0351                     u54_20:
  4927     0351                     i1l487:	
  4928                           ;mcc_generated_files/tmr0.c: 166:         {;mcc_generated_files/tmr0.c: 167:            
      +                           do { LATAbits.LATA2 = 0; } while(0);
  4929                           
  4930     0351  1118               	bcf	24,2	;volatile
  4931     0352                     i1l1958:
  4932                           
  4933                           ;mcc_generated_files/tmr0.c: 168:             LED_timer = 0;
  4934     0352  01FA               	clrf	_LED_timer
  4935     0353  2B63               	goto	i1l496
  4936     0354                     i1l1960:
  4937                           
  4938                           ;mcc_generated_files/tmr0.c: 171:         if(LED_timer == 50)
  4939     0354  3032               	movlw	50
  4940     0355  067A               	xorwf	_LED_timer,w
  4941     0356  1D03               	btfss	3,2
  4942     0357  2B59               	goto	u55_21
  4943     0358  2B5A               	goto	u55_20
  4944     0359                     u55_21:
  4945     0359  2B5B               	goto	i1l1962
  4946     035A                     u55_20:
  4947     035A                     i1l491:	
  4948                           ;mcc_generated_files/tmr0.c: 172:         {;mcc_generated_files/tmr0.c: 173:            
      +                           do { LATAbits.LATA2 = 1; } while(0);
  4949                           
  4950     035A  1518               	bsf	24,2	;volatile
  4951     035B                     i1l1962:
  4952                           
  4953                           ;mcc_generated_files/tmr0.c: 175:         if(LED_timer == 100)
  4954     035B  3064               	movlw	100
  4955     035C  067A               	xorwf	_LED_timer,w
  4956     035D  1D03               	btfss	3,2
  4957     035E  2B60               	goto	u56_21
  4958     035F  2B61               	goto	u56_20
  4959     0360                     u56_21:
  4960     0360  2B63               	goto	i1l496
  4961     0361                     u56_20:
  4962     0361                     i1l494:	
  4963                           ;mcc_generated_files/tmr0.c: 176:         {;mcc_generated_files/tmr0.c: 177:            
      +                           do { LATAbits.LATA2 = 0; } while(0);
  4964                           
  4965     0361  1118               	bcf	24,2	;volatile
  4966     0362  2B52               	goto	i1l1958
  4967     0363                     i1l496:
  4968     0363  0008               	return
  4969     0364                     __end_of_TMR0_DefaultInterruptHandler:
  4970                           
  4971                           	psect	text31
  4972     01EA                     __ptext31:	
  4973 ;; *************** function _I2C1_Isr *****************
  4974 ;; Defined at:
  4975 ;;		line 169 in file "mcc_generated_files/i2c1_slave.c"
  4976 ;; Parameters:    Size  Location     Type
  4977 ;;		None
  4978 ;; Auto vars:     Size  Location     Type
  4979 ;;		None
  4980 ;; Return value:  Size  Location     Type
  4981 ;;                  1    wreg      void 
  4982 ;; Registers used:
  4983 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4984 ;; Tracked objects:
  4985 ;;		On entry : 0/0
  4986 ;;		On exit  : 0/0
  4987 ;;		Unchanged: 0/0
  4988 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4989 ;;      Params:         0       0       0       0
  4990 ;;      Locals:         0       0       0       0
  4991 ;;      Temps:          2       0       0       0
  4992 ;;      Totals:         2       0       0       0
  4993 ;;Total ram usage:        2 bytes
  4994 ;; Hardware stack levels used: 1
  4995 ;; Hardware stack levels required when called: 3
  4996 ;; This function calls:
  4997 ;;		_I2C1_SlaveAddrCallBack
  4998 ;;		_I2C1_SlaveClearIrq
  4999 ;;		_I2C1_SlaveIsAddr
  5000 ;;		_I2C1_SlaveIsRead
  5001 ;;		_I2C1_SlaveIsRxBufFull
  5002 ;;		_I2C1_SlaveIsTxBufEmpty
  5003 ;;		_I2C1_SlaveRdCallBack
  5004 ;;		_I2C1_SlaveReleaseClock
  5005 ;;		_I2C1_SlaveWrCallBack
  5006 ;; This function is called by:
  5007 ;;		_I2C1_Open
  5008 ;;		_INTERRUPT_InterruptManager
  5009 ;; This function uses a non-reentrant model
  5010 ;;
  5011                           
  5012     01EA                     _I2C1_Isr:	
  5013                           ;psect for function _I2C1_Isr
  5014                           
  5015     01EA                     i1l2032:	
  5016                           ;incstack = 0
  5017                           ; Regs used in _I2C1_Isr: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5018                           
  5019                           
  5020                           ;mcc_generated_files/i2c1_slave.c: 171:     I2C1_SlaveClearIrq();
  5021     01EA  3185  2523  3181   	fcall	_I2C1_SlaveClearIrq
  5022     01ED                     i1l2034:
  5023                           
  5024                           ;mcc_generated_files/i2c1_slave.c: 174:     if(I2C1_SlaveIsAddr())
  5025     01ED  3184  24B5  3181   	fcall	_I2C1_SlaveIsAddr
  5026     01F0  3A00               	xorlw	0
  5027     01F1  1903               	skipnz
  5028     01F2  29F4               	goto	u66_21
  5029     01F3  29F5               	goto	u66_20
  5030     01F4                     u66_21:
  5031     01F4  2A05               	goto	i1l2042
  5032     01F5                     u66_20:
  5033     01F5                     i1l2036:
  5034                           
  5035                           ;mcc_generated_files/i2c1_slave.c: 175:     {;mcc_generated_files/i2c1_slave.c: 182:    
      +                               if(I2C1_SlaveIsRead())
  5036     01F5  3185  250D  3181   	fcall	_I2C1_SlaveIsRead
  5037     01F8  3A00               	xorlw	0
  5038     01F9  1903               	skipnz
  5039     01FA  29FC               	goto	u67_21
  5040     01FB  29FD               	goto	u67_20
  5041     01FC                     u67_21:
  5042     01FC  2A01               	goto	i1l2040
  5043     01FD                     u67_20:
  5044     01FD                     i1l2038:
  5045                           
  5046                           ;mcc_generated_files/i2c1_slave.c: 183:         {;mcc_generated_files/i2c1_slave.c: 184:
      +                                       i2c1SlaveState = I2C1_ADDR_TX;
  5047     01FD  3001               	movlw	1
  5048     01FE  0140               	movlb	0	; select bank0
  5049     01FF  00B3               	movwf	_i2c1SlaveState	;volatile
  5050                           
  5051                           ;mcc_generated_files/i2c1_slave.c: 185:         }
  5052     0200  2A3D               	goto	i1l2066
  5053     0201                     i1l2040:
  5054                           
  5055                           ;mcc_generated_files/i2c1_slave.c: 187:         {;mcc_generated_files/i2c1_slave.c: 188:
      +                                       i2c1SlaveState = I2C1_ADDR_RX;
  5056     0201  3002               	movlw	2
  5057     0202  0140               	movlb	0	; select bank0
  5058     0203  00B3               	movwf	_i2c1SlaveState	;volatile
  5059     0204  2A3D               	goto	i1l2066
  5060     0205                     i1l2042:
  5061                           
  5062                           ;mcc_generated_files/i2c1_slave.c: 192:     {;mcc_generated_files/i2c1_slave.c: 193:    
      +                               if(I2C1_SlaveIsRead())
  5063     0205  3185  250D  3181   	fcall	_I2C1_SlaveIsRead
  5064     0208  3A00               	xorlw	0
  5065     0209  1903               	skipnz
  5066     020A  2A0C               	goto	u68_21
  5067     020B  2A0D               	goto	u68_20
  5068     020C                     u68_21:
  5069     020C  2A11               	goto	i1l2046
  5070     020D                     u68_20:
  5071     020D                     i1l2044:
  5072                           
  5073                           ;mcc_generated_files/i2c1_slave.c: 194:         {;mcc_generated_files/i2c1_slave.c: 195:
      +                                       i2c1SlaveState = I2C1_DATA_TX;
  5074     020D  3003               	movlw	3
  5075     020E  0140               	movlb	0	; select bank0
  5076     020F  00B3               	movwf	_i2c1SlaveState	;volatile
  5077                           
  5078                           ;mcc_generated_files/i2c1_slave.c: 196:         }
  5079     0210  2A3D               	goto	i1l2066
  5080     0211                     i1l2046:
  5081                           
  5082                           ;mcc_generated_files/i2c1_slave.c: 198:         {;mcc_generated_files/i2c1_slave.c: 199:
      +                                       i2c1SlaveState = I2C1_DATA_RX;
  5083     0211  3004               	movlw	4
  5084     0212  0140               	movlb	0	; select bank0
  5085     0213  00B3               	movwf	_i2c1SlaveState	;volatile
  5086     0214  2A3D               	goto	i1l2066
  5087     0215                     i1l2048:
  5088                           
  5089                           ;mcc_generated_files/i2c1_slave.c: 206:             I2C1_SlaveAddrCallBack();
  5090     0215  3184  2497  3181   	fcall	_I2C1_SlaveAddrCallBack
  5091     0218                     i1l2050:
  5092                           
  5093                           ;mcc_generated_files/i2c1_slave.c: 207:             if(I2C1_SlaveIsTxBufEmpty())
  5094     0218  3184  24AE  3181   	fcall	_I2C1_SlaveIsTxBufEmpty
  5095     021B  3A00               	xorlw	0
  5096     021C  1903               	skipnz
  5097     021D  2A1F               	goto	u69_21
  5098     021E  2A20               	goto	u69_20
  5099     021F                     u69_21:
  5100     021F  2A53               	goto	i1l2068
  5101     0220                     u69_20:
  5102     0220                     i1l2052:
  5103                           
  5104                           ;mcc_generated_files/i2c1_slave.c: 208:             {;mcc_generated_files/i2c1_slave.c: 
      +                          209:                 I2C1_SlaveWrCallBack();
  5105     0220  3184  248A  3181   	fcall	_I2C1_SlaveWrCallBack
  5106     0223  2A53               	goto	i1l2068
  5107     0224                     i1l2054:
  5108                           
  5109                           ;mcc_generated_files/i2c1_slave.c: 213:             I2C1_SlaveAddrCallBack();
  5110     0224  3184  2497  3181   	fcall	_I2C1_SlaveAddrCallBack
  5111                           
  5112                           ;mcc_generated_files/i2c1_slave.c: 214:             break;
  5113     0227  2A53               	goto	i1l2068
  5114     0228                     i1l2056:
  5115                           
  5116                           ;mcc_generated_files/i2c1_slave.c: 216:             if(I2C1_SlaveIsTxBufEmpty())
  5117     0228  3184  24AE  3181   	fcall	_I2C1_SlaveIsTxBufEmpty
  5118     022B  3A00               	xorlw	0
  5119     022C  1903               	skipnz
  5120     022D  2A2F               	goto	u70_21
  5121     022E  2A30               	goto	u70_20
  5122     022F                     u70_21:
  5123     022F  2A53               	goto	i1l2068
  5124     0230                     u70_20:
  5125     0230  2A20               	goto	i1l2052
  5126     0231                     i1l2060:
  5127                           
  5128                           ;mcc_generated_files/i2c1_slave.c: 222:             if(I2C1_SlaveIsRxBufFull())
  5129     0231  3185  2516  3181   	fcall	_I2C1_SlaveIsRxBufFull
  5130     0234  3A00               	xorlw	0
  5131     0235  1903               	skipnz
  5132     0236  2A38               	goto	u71_21
  5133     0237  2A39               	goto	u71_20
  5134     0238                     u71_21:
  5135     0238  2A53               	goto	i1l2068
  5136     0239                     u71_20:
  5137     0239                     i1l2062:
  5138                           
  5139                           ;mcc_generated_files/i2c1_slave.c: 223:             {;mcc_generated_files/i2c1_slave.c: 
      +                          224:                 I2C1_SlaveRdCallBack();
  5140     0239  3183  23FF  3181   	fcall	_I2C1_SlaveRdCallBack
  5141     023C  2A53               	goto	i1l2068
  5142     023D                     i1l2066:
  5143     023D  0833               	movf	_i2c1SlaveState,w	;volatile
  5144     023E  00F1               	movwf	??_I2C1_Isr
  5145     023F  01F2               	clrf	??_I2C1_Isr+1
  5146                           
  5147                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5148                           ; Switch size 1, requested type "simple"
  5149                           ; Number of cases is 1, Range of values is 0 to 0
  5150                           ; switch strategies available:
  5151                           ; Name         Instructions Cycles
  5152                           ; simple_byte            4     3 (average)
  5153                           ; direct_byte            8     6 (fixed)
  5154                           ; jumptable            260     6 (fixed)
  5155                           ;	Chosen strategy is simple_byte
  5156     0240  0872               	movf	??_I2C1_Isr+1,w
  5157     0241  3A00               	xorlw	0	; case 0
  5158     0242  1903               	skipnz
  5159     0243  2A45               	goto	i1l2324
  5160     0244  2A53               	goto	i1l2068
  5161     0245                     i1l2324:
  5162                           
  5163                           ; Switch size 1, requested type "simple"
  5164                           ; Number of cases is 4, Range of values is 1 to 4
  5165                           ; switch strategies available:
  5166                           ; Name         Instructions Cycles
  5167                           ; simple_byte           13     7 (average)
  5168                           ; direct_byte           17     9 (fixed)
  5169                           ; jumptable            263     9 (fixed)
  5170                           ;	Chosen strategy is simple_byte
  5171     0245  0871               	movf	??_I2C1_Isr,w
  5172     0246  3A01               	xorlw	1	; case 1
  5173     0247  1903               	skipnz
  5174     0248  2A15               	goto	i1l2048
  5175     0249  3A03               	xorlw	3	; case 2
  5176     024A  1903               	skipnz
  5177     024B  2A24               	goto	i1l2054
  5178     024C  3A01               	xorlw	1	; case 3
  5179     024D  1903               	skipnz
  5180     024E  2A28               	goto	i1l2056
  5181     024F  3A07               	xorlw	7	; case 4
  5182     0250  1903               	skipnz
  5183     0251  2A31               	goto	i1l2060
  5184     0252  2A53               	goto	i1l2068
  5185     0253                     i1l2068:
  5186                           
  5187                           ;mcc_generated_files/i2c1_slave.c: 230:     I2C1_SlaveReleaseClock();
  5188     0253  3185  2520  3181   	fcall	_I2C1_SlaveReleaseClock
  5189     0256                     i1l309:
  5190     0256  0008               	return
  5191     0257                     __end_of_I2C1_Isr:
  5192                           
  5193                           	psect	text32
  5194     048A                     __ptext32:	
  5195 ;; *************** function _I2C1_SlaveWrCallBack *****************
  5196 ;; Defined at:
  5197 ;;		line 278 in file "mcc_generated_files/i2c1_slave.c"
  5198 ;; Parameters:    Size  Location     Type
  5199 ;;		None
  5200 ;; Auto vars:     Size  Location     Type
  5201 ;;		None
  5202 ;; Return value:  Size  Location     Type
  5203 ;;                  1    wreg      void 
  5204 ;; Registers used:
  5205 ;;		wreg, status,2, status,0, pclath, cstack
  5206 ;; Tracked objects:
  5207 ;;		On entry : 0/0
  5208 ;;		On exit  : 0/0
  5209 ;;		Unchanged: 0/0
  5210 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5211 ;;      Params:         0       0       0       0
  5212 ;;      Locals:         0       0       0       0
  5213 ;;      Temps:          0       0       0       0
  5214 ;;      Totals:         0       0       0       0
  5215 ;;Total ram usage:        0 bytes
  5216 ;; Hardware stack levels used: 1
  5217 ;; Hardware stack levels required when called: 2
  5218 ;; This function calls:
  5219 ;;		NULL
  5220 ;;		_I2C1_SlaveDefWrInterruptHandler
  5221 ;; This function is called by:
  5222 ;;		_I2C1_Isr
  5223 ;; This function uses a non-reentrant model
  5224 ;;
  5225                           
  5226     048A                     _I2C1_SlaveWrCallBack:	
  5227                           ;psect for function _I2C1_SlaveWrCallBack
  5228                           
  5229     048A                     i1l1922:	
  5230                           ;incstack = 0
  5231                           ; Regs used in _I2C1_SlaveWrCallBack: [wreg+status,2+status,0+pclath+cstack]
  5232                           
  5233                           
  5234                           ;mcc_generated_files/i2c1_slave.c: 280:     if (I2C1_SlaveWrInterruptHandler)
  5235     048A  0140               	movlb	0	; select bank0
  5236     048B  082B               	movf	_I2C1_SlaveWrInterruptHandler,w
  5237     048C  042C               	iorwf	_I2C1_SlaveWrInterruptHandler+1,w
  5238     048D  1903               	btfsc	3,2
  5239     048E  2C90               	goto	u49_21
  5240     048F  2C91               	goto	u49_20
  5241     0490                     u49_21:
  5242     0490  2C96               	goto	i1l332
  5243     0491                     u49_20:
  5244     0491                     i1l1924:
  5245                           
  5246                           ;mcc_generated_files/i2c1_slave.c: 281:     {;mcc_generated_files/i2c1_slave.c: 282:    
      +                               I2C1_SlaveWrInterruptHandler();
  5247     0491  082C               	movf	_I2C1_SlaveWrInterruptHandler+1,w
  5248     0492  008A               	movwf	10
  5249     0493  082B               	movf	_I2C1_SlaveWrInterruptHandler,w
  5250     0494  000A               	callw
  5251     0495  3184               	pagesel	$
  5252     0496                     i1l332:
  5253     0496  0008               	return
  5254     0497                     __end_of_I2C1_SlaveWrCallBack:
  5255                           
  5256                           	psect	text33
  5257     0503                     __ptext33:	
  5258 ;; *************** function _I2C1_SlaveDefWrInterruptHandler *****************
  5259 ;; Defined at:
  5260 ;;		line 286 in file "mcc_generated_files/i2c1_slave.c"
  5261 ;; Parameters:    Size  Location     Type
  5262 ;;		None
  5263 ;; Auto vars:     Size  Location     Type
  5264 ;;		None
  5265 ;; Return value:  Size  Location     Type
  5266 ;;                  1    wreg      void 
  5267 ;; Registers used:
  5268 ;;		wreg, status,2, status,0, pclath, cstack
  5269 ;; Tracked objects:
  5270 ;;		On entry : 0/0
  5271 ;;		On exit  : 0/0
  5272 ;;		Unchanged: 0/0
  5273 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5274 ;;      Params:         0       0       0       0
  5275 ;;      Locals:         0       0       0       0
  5276 ;;      Temps:          0       0       0       0
  5277 ;;      Totals:         0       0       0       0
  5278 ;;Total ram usage:        0 bytes
  5279 ;; Hardware stack levels used: 1
  5280 ;; Hardware stack levels required when called: 1
  5281 ;; This function calls:
  5282 ;;		_I2C1_SlaveSendTxData
  5283 ;; This function is called by:
  5284 ;;		_I2C1_Open
  5285 ;;		_I2C1_SlaveWrCallBack
  5286 ;; This function uses a non-reentrant model
  5287 ;;
  5288                           
  5289     0503                     _I2C1_SlaveDefWrInterruptHandler:	
  5290                           ;psect for function _I2C1_SlaveDefWrInterruptHandler
  5291                           
  5292     0503                     i1l1758:	
  5293                           ;incstack = 0
  5294                           ; Regs used in _I2C1_SlaveDefWrInterruptHandler: [wreg+status,2+status,0+pclath+cstack]
  5295                           
  5296                           
  5297                           ;mcc_generated_files/i2c1_slave.c: 287:     I2C1_SlaveSendTxData(i2c1WrData);
  5298     0503  0878               	movf	_i2c1WrData,w	;volatile
  5299     0504  3185  2508  3185   	fcall	_I2C1_SlaveSendTxData
  5300     0507                     i1l335:
  5301     0507  0008               	return
  5302     0508                     __end_of_I2C1_SlaveDefWrInterruptHandler:
  5303                           
  5304                           	psect	text34
  5305     0508                     __ptext34:	
  5306 ;; *************** function _I2C1_SlaveSendTxData *****************
  5307 ;; Defined at:
  5308 ;;		line 422 in file "mcc_generated_files/i2c1_slave.c"
  5309 ;; Parameters:    Size  Location     Type
  5310 ;;  data            1    wreg     unsigned char 
  5311 ;; Auto vars:     Size  Location     Type
  5312 ;;  data            1    0[COMMON] unsigned char 
  5313 ;; Return value:  Size  Location     Type
  5314 ;;                  1    wreg      void 
  5315 ;; Registers used:
  5316 ;;		wreg
  5317 ;; Tracked objects:
  5318 ;;		On entry : 0/0
  5319 ;;		On exit  : 0/0
  5320 ;;		Unchanged: 0/0
  5321 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5322 ;;      Params:         0       0       0       0
  5323 ;;      Locals:         1       0       0       0
  5324 ;;      Temps:          0       0       0       0
  5325 ;;      Totals:         1       0       0       0
  5326 ;;Total ram usage:        1 bytes
  5327 ;; Hardware stack levels used: 1
  5328 ;; This function calls:
  5329 ;;		Nothing
  5330 ;; This function is called by:
  5331 ;;		_I2C1_SlaveDefWrInterruptHandler
  5332 ;;		_I2C1_Write
  5333 ;; This function uses a non-reentrant model
  5334 ;;
  5335                           
  5336     0508                     _I2C1_SlaveSendTxData:	
  5337                           ;psect for function _I2C1_SlaveSendTxData
  5338                           
  5339                           
  5340                           ;incstack = 0
  5341                           ; Regs used in _I2C1_SlaveSendTxData: [wreg]
  5342                           ;I2C1_SlaveSendTxData@data stored from wreg
  5343     0508  00F0               	movwf	I2C1_SlaveSendTxData@data
  5344     0509                     i1l1702:
  5345                           
  5346                           ;mcc_generated_files/i2c1_slave.c: 422: static __attribute__((inline)) void I2C1_SlaveSe
      +                          ndTxData(uint8_t data);mcc_generated_files/i2c1_slave.c: 423: {;mcc_generated_files/i2c1
      +                          _slave.c: 424:     SSP1BUF = data;
  5347     0509  0870               	movf	I2C1_SlaveSendTxData@data,w
  5348     050A  0143               	movlb	3	; select bank3
  5349     050B  008C               	movwf	12	;volatile
  5350     050C                     i1l411:
  5351     050C  0008               	return
  5352     050D                     __end_of_I2C1_SlaveSendTxData:
  5353                           
  5354                           	psect	text35
  5355     0520                     __ptext35:	
  5356 ;; *************** function _I2C1_SlaveReleaseClock *****************
  5357 ;; Defined at:
  5358 ;;		line 392 in file "mcc_generated_files/i2c1_slave.c"
  5359 ;; Parameters:    Size  Location     Type
  5360 ;;		None
  5361 ;; Auto vars:     Size  Location     Type
  5362 ;;		None
  5363 ;; Return value:  Size  Location     Type
  5364 ;;                  1    wreg      void 
  5365 ;; Registers used:
  5366 ;;		None
  5367 ;; Tracked objects:
  5368 ;;		On entry : 0/0
  5369 ;;		On exit  : 0/0
  5370 ;;		Unchanged: 0/0
  5371 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5372 ;;      Params:         0       0       0       0
  5373 ;;      Locals:         0       0       0       0
  5374 ;;      Temps:          0       0       0       0
  5375 ;;      Totals:         0       0       0       0
  5376 ;;Total ram usage:        0 bytes
  5377 ;; Hardware stack levels used: 1
  5378 ;; This function calls:
  5379 ;;		Nothing
  5380 ;; This function is called by:
  5381 ;;		_I2C1_Isr
  5382 ;; This function uses a non-reentrant model
  5383 ;;
  5384                           
  5385     0520                     _I2C1_SlaveReleaseClock:	
  5386                           ;psect for function _I2C1_SlaveReleaseClock
  5387                           
  5388     0520                     i1l1938:	
  5389                           ;incstack = 0
  5390                           ; Regs used in _I2C1_SlaveReleaseClock: []
  5391                           
  5392                           
  5393                           ;mcc_generated_files/i2c1_slave.c: 394:     SSP1CON1bits.CKP = 1;
  5394     0520  0143               	movlb	3	; select bank3
  5395     0521  1610               	bsf	16,4	;volatile
  5396     0522                     i1l393:
  5397     0522  0008               	return
  5398     0523                     __end_of_I2C1_SlaveReleaseClock:
  5399                           
  5400                           	psect	text36
  5401     03FF                     __ptext36:	
  5402 ;; *************** function _I2C1_SlaveRdCallBack *****************
  5403 ;; Defined at:
  5404 ;;		line 244 in file "mcc_generated_files/i2c1_slave.c"
  5405 ;; Parameters:    Size  Location     Type
  5406 ;;		None
  5407 ;; Auto vars:     Size  Location     Type
  5408 ;;		None
  5409 ;; Return value:  Size  Location     Type
  5410 ;;                  1    wreg      void 
  5411 ;; Registers used:
  5412 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5413 ;; Tracked objects:
  5414 ;;		On entry : 0/0
  5415 ;;		On exit  : 0/0
  5416 ;;		Unchanged: 0/0
  5417 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5418 ;;      Params:         0       0       0       0
  5419 ;;      Locals:         0       0       0       0
  5420 ;;      Temps:          0       0       0       0
  5421 ;;      Totals:         0       0       0       0
  5422 ;;Total ram usage:        0 bytes
  5423 ;; Hardware stack levels used: 1
  5424 ;; Hardware stack levels required when called: 2
  5425 ;; This function calls:
  5426 ;;		NULL
  5427 ;;		_I2C1_SlaveDefRdInterruptHandler
  5428 ;;		_data_recv_handler
  5429 ;; This function is called by:
  5430 ;;		_I2C1_Isr
  5431 ;; This function uses a non-reentrant model
  5432 ;;
  5433                           
  5434     03FF                     _I2C1_SlaveRdCallBack:	
  5435                           ;psect for function _I2C1_SlaveRdCallBack
  5436                           
  5437     03FF                     i1l1930:	
  5438                           ;incstack = 0
  5439                           ; Regs used in _I2C1_SlaveRdCallBack: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5440                           
  5441                           
  5442                           ;mcc_generated_files/i2c1_slave.c: 246:     if (I2C1_SlaveRdInterruptHandler)
  5443     03FF  0140               	movlb	0	; select bank0
  5444     0400  082D               	movf	_I2C1_SlaveRdInterruptHandler,w
  5445     0401  042E               	iorwf	_I2C1_SlaveRdInterruptHandler+1,w
  5446     0402  1903               	btfsc	3,2
  5447     0403  2C05               	goto	u50_21
  5448     0404  2C06               	goto	u50_20
  5449     0405                     u50_21:
  5450     0405  2C14               	goto	i1l320
  5451     0406                     u50_20:
  5452     0406                     i1l1932:
  5453                           
  5454                           ;mcc_generated_files/i2c1_slave.c: 247:     {;mcc_generated_files/i2c1_slave.c: 249:    
      +                               I2C1_SlaveRdInterruptHandler();
  5455     0406  082E               	movf	_I2C1_SlaveRdInterruptHandler+1,w
  5456     0407  008A               	movwf	10
  5457     0408  082D               	movf	_I2C1_SlaveRdInterruptHandler,w
  5458     0409  000A               	callw
  5459     040A  3183               	pagesel	$
  5460     040B                     i1l1934:
  5461                           
  5462                           ;mcc_generated_files/i2c1_slave.c: 251:         if(i2cReadCnt == 3)
  5463     040B  3003               	movlw	3
  5464     040C  0679               	xorwf	_i2cReadCnt@i2c1_slave$F749,w	;volatile
  5465     040D  1D03               	btfss	3,2
  5466     040E  2C10               	goto	u51_21
  5467     040F  2C11               	goto	u51_20
  5468     0410                     u51_21:
  5469     0410  2C14               	goto	i1l320
  5470     0411                     u51_20:
  5471     0411                     i1l1936:
  5472                           
  5473                           ;mcc_generated_files/i2c1_slave.c: 252:         {;mcc_generated_files/i2c1_slave.c: 253:
      +                                       data_recv_handler();
  5474     0411  3185  2529  3183   	fcall	_data_recv_handler
  5475     0414                     i1l320:
  5476     0414  0008               	return
  5477     0415                     __end_of_I2C1_SlaveRdCallBack:
  5478                           
  5479                           	psect	text37
  5480     0529                     __ptext37:	
  5481 ;; *************** function _data_recv_handler *****************
  5482 ;; Defined at:
  5483 ;;		line 24 in file "flash_memory_filling.c"
  5484 ;; Parameters:    Size  Location     Type
  5485 ;;		None
  5486 ;; Auto vars:     Size  Location     Type
  5487 ;;		None
  5488 ;; Return value:  Size  Location     Type
  5489 ;;                  1    wreg      void 
  5490 ;; Registers used:
  5491 ;;		None
  5492 ;; Tracked objects:
  5493 ;;		On entry : 0/0
  5494 ;;		On exit  : 0/0
  5495 ;;		Unchanged: 0/0
  5496 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5497 ;;      Params:         0       0       0       0
  5498 ;;      Locals:         0       0       0       0
  5499 ;;      Temps:          0       0       0       0
  5500 ;;      Totals:         0       0       0       0
  5501 ;;Total ram usage:        0 bytes
  5502 ;; Hardware stack levels used: 1
  5503 ;; This function calls:
  5504 ;;		Nothing
  5505 ;; This function is called by:
  5506 ;;		_I2C1_SlaveRdCallBack
  5507 ;; This function uses a non-reentrant model
  5508 ;;
  5509                           
  5510     0529                     _data_recv_handler:	
  5511                           ;psect for function _data_recv_handler
  5512                           
  5513     0529                     i1l37:	
  5514                           ;incstack = 0
  5515                           ; Regs used in _data_recv_handler: []
  5516                           
  5517     0529  0008               	return
  5518     052A                     __end_of_data_recv_handler:
  5519                           
  5520                           	psect	text38
  5521     0415                     __ptext38:	
  5522 ;; *************** function _I2C1_SlaveDefRdInterruptHandler *****************
  5523 ;; Defined at:
  5524 ;;		line 259 in file "mcc_generated_files/i2c1_slave.c"
  5525 ;; Parameters:    Size  Location     Type
  5526 ;;		None
  5527 ;; Auto vars:     Size  Location     Type
  5528 ;;		None
  5529 ;; Return value:  Size  Location     Type
  5530 ;;                  1    wreg      void 
  5531 ;; Registers used:
  5532 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5533 ;; Tracked objects:
  5534 ;;		On entry : 0/0
  5535 ;;		On exit  : 0/0
  5536 ;;		Unchanged: 0/0
  5537 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5538 ;;      Params:         0       0       0       0
  5539 ;;      Locals:         0       0       0       0
  5540 ;;      Temps:          0       0       0       0
  5541 ;;      Totals:         0       0       0       0
  5542 ;;Total ram usage:        0 bytes
  5543 ;; Hardware stack levels used: 1
  5544 ;; Hardware stack levels required when called: 1
  5545 ;; This function calls:
  5546 ;;		_I2C1_SlaveGetRxData
  5547 ;; This function is called by:
  5548 ;;		_I2C1_Open
  5549 ;;		_I2C1_SlaveRdCallBack
  5550 ;; This function uses a non-reentrant model
  5551 ;;
  5552                           
  5553     0415                     _I2C1_SlaveDefRdInterruptHandler:	
  5554                           ;psect for function _I2C1_SlaveDefRdInterruptHandler
  5555                           
  5556     0415                     i1l1750:	
  5557                           ;incstack = 0
  5558                           ; Regs used in _I2C1_SlaveDefRdInterruptHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pcl
      +                          ath+cstack]
  5559                           
  5560                           
  5561                           ;mcc_generated_files/i2c1_slave.c: 261:     i2c1RdData = I2C1_SlaveGetRxData();
  5562     0415  3185  2526  3184   	fcall	_I2C1_SlaveGetRxData
  5563     0418  0140               	movlb	0	; select bank0
  5564     0419  00B5               	movwf	_i2c1RdData	;volatile
  5565     041A                     i1l1752:
  5566                           
  5567                           ;mcc_generated_files/i2c1_slave.c: 263:     if(i2cReadCnt < 3)
  5568     041A  3003               	movlw	3
  5569     041B  0279               	subwf	_i2cReadCnt@i2c1_slave$F749,w	;volatile
  5570     041C  1803               	skipnc
  5571     041D  2C1F               	goto	u42_21
  5572     041E  2C20               	goto	u42_20
  5573     041F                     u42_21:
  5574     041F  2C27               	goto	i1l1756
  5575     0420                     u42_20:
  5576     0420                     i1l1754:
  5577                           
  5578                           ;mcc_generated_files/i2c1_slave.c: 264:     {;mcc_generated_files/i2c1_slave.c: 265:    
      +                               i2cDataRead[i2cReadCnt] = i2c1RdData;
  5579     0420  0879               	movf	_i2cReadCnt@i2c1_slave$F749,w
  5580     0421  3E20               	addlw	(low (_i2cDataRead| 0))& (0+255)
  5581     0422  0086               	movwf	6
  5582     0423  0187               	clrf	7
  5583     0424  0835               	movf	_i2c1RdData,w	;volatile
  5584     0425  0081               	movwf	1
  5585                           
  5586                           ;mcc_generated_files/i2c1_slave.c: 266:     }
  5587     0426  2C2A               	goto	i1l325
  5588     0427                     i1l1756:
  5589                           
  5590                           ;mcc_generated_files/i2c1_slave.c: 268:     {;mcc_generated_files/i2c1_slave.c: 269:    
      +                               I2C1_SlaveGetRxData();
  5591     0427  3185  2526  3184   	fcall	_I2C1_SlaveGetRxData
  5592     042A                     i1l325:
  5593     042A  0008               	return
  5594     042B                     __end_of_I2C1_SlaveDefRdInterruptHandler:
  5595                           
  5596                           	psect	text39
  5597     04AE                     __ptext39:	
  5598 ;; *************** function _I2C1_SlaveIsTxBufEmpty *****************
  5599 ;; Defined at:
  5600 ;;		line 412 in file "mcc_generated_files/i2c1_slave.c"
  5601 ;; Parameters:    Size  Location     Type
  5602 ;;		None
  5603 ;; Auto vars:     Size  Location     Type
  5604 ;;		None
  5605 ;; Return value:  Size  Location     Type
  5606 ;;                  1    wreg      _Bool 
  5607 ;; Registers used:
  5608 ;;		wreg, status,0
  5609 ;; Tracked objects:
  5610 ;;		On entry : 0/0
  5611 ;;		On exit  : 0/0
  5612 ;;		Unchanged: 0/0
  5613 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5614 ;;      Params:         0       0       0       0
  5615 ;;      Locals:         0       0       0       0
  5616 ;;      Temps:          0       0       0       0
  5617 ;;      Totals:         0       0       0       0
  5618 ;;Total ram usage:        0 bytes
  5619 ;; Hardware stack levels used: 1
  5620 ;; This function calls:
  5621 ;;		Nothing
  5622 ;; This function is called by:
  5623 ;;		_I2C1_Isr
  5624 ;; This function uses a non-reentrant model
  5625 ;;
  5626                           
  5627     04AE                     _I2C1_SlaveIsTxBufEmpty:	
  5628                           ;psect for function _I2C1_SlaveIsTxBufEmpty
  5629                           
  5630     04AE                     i1l1918:	
  5631                           ;incstack = 0
  5632                           ; Regs used in _I2C1_SlaveIsTxBufEmpty: [wreg+status,0]
  5633                           
  5634                           
  5635                           ;mcc_generated_files/i2c1_slave.c: 414:     return !SSP1STATbits.BF;
  5636     04AE  1003               	clrc
  5637     04AF  0143               	movlb	3	; select bank3
  5638     04B0  1C0F               	btfss	15,0	;volatile
  5639     04B1  1403               	setc
  5640     04B2  3000               	movlw	0
  5641     04B3  3D09               	addwfc	9,w
  5642     04B4                     i1l405:
  5643     04B4  0008               	return
  5644     04B5                     __end_of_I2C1_SlaveIsTxBufEmpty:
  5645                           
  5646                           	psect	text40
  5647     0516                     __ptext40:	
  5648 ;; *************** function _I2C1_SlaveIsRxBufFull *****************
  5649 ;; Defined at:
  5650 ;;		line 417 in file "mcc_generated_files/i2c1_slave.c"
  5651 ;; Parameters:    Size  Location     Type
  5652 ;;		None
  5653 ;; Auto vars:     Size  Location     Type
  5654 ;;		None
  5655 ;; Return value:  Size  Location     Type
  5656 ;;                  1    wreg      _Bool 
  5657 ;; Registers used:
  5658 ;;		wreg, status,2, status,0
  5659 ;; Tracked objects:
  5660 ;;		On entry : 0/0
  5661 ;;		On exit  : 0/0
  5662 ;;		Unchanged: 0/0
  5663 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5664 ;;      Params:         0       0       0       0
  5665 ;;      Locals:         0       0       0       0
  5666 ;;      Temps:          0       0       0       0
  5667 ;;      Totals:         0       0       0       0
  5668 ;;Total ram usage:        0 bytes
  5669 ;; Hardware stack levels used: 1
  5670 ;; This function calls:
  5671 ;;		Nothing
  5672 ;; This function is called by:
  5673 ;;		_I2C1_Isr
  5674 ;; This function uses a non-reentrant model
  5675 ;;
  5676                           
  5677     0516                     _I2C1_SlaveIsRxBufFull:	
  5678                           ;psect for function _I2C1_SlaveIsRxBufFull
  5679                           
  5680     0516                     i1l1926:	
  5681                           ;incstack = 0
  5682                           ; Regs used in _I2C1_SlaveIsRxBufFull: [wreg+status,2+status,0]
  5683                           
  5684                           
  5685                           ;mcc_generated_files/i2c1_slave.c: 419:     return SSP1STATbits.BF;
  5686     0516  0143               	movlb	3	; select bank3
  5687     0517  080F               	movf	15,w	;volatile
  5688     0518  3901               	andlw	1
  5689     0519                     i1l408:
  5690     0519  0008               	return
  5691     051A                     __end_of_I2C1_SlaveIsRxBufFull:
  5692                           
  5693                           	psect	text41
  5694     050D                     __ptext41:	
  5695 ;; *************** function _I2C1_SlaveIsRead *****************
  5696 ;; Defined at:
  5697 ;;		line 382 in file "mcc_generated_files/i2c1_slave.c"
  5698 ;; Parameters:    Size  Location     Type
  5699 ;;		None
  5700 ;; Auto vars:     Size  Location     Type
  5701 ;;		None
  5702 ;; Return value:  Size  Location     Type
  5703 ;;                  1    wreg      _Bool 
  5704 ;; Registers used:
  5705 ;;		wreg, status,2, status,0
  5706 ;; Tracked objects:
  5707 ;;		On entry : 0/0
  5708 ;;		On exit  : 0/0
  5709 ;;		Unchanged: 0/0
  5710 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5711 ;;      Params:         0       0       0       0
  5712 ;;      Locals:         0       0       0       0
  5713 ;;      Temps:          0       0       0       0
  5714 ;;      Totals:         0       0       0       0
  5715 ;;Total ram usage:        0 bytes
  5716 ;; Hardware stack levels used: 1
  5717 ;; This function calls:
  5718 ;;		Nothing
  5719 ;; This function is called by:
  5720 ;;		_I2C1_Isr
  5721 ;;		_I2C1_IsRead
  5722 ;; This function uses a non-reentrant model
  5723 ;;
  5724                           
  5725     050D                     _I2C1_SlaveIsRead:	
  5726                           ;psect for function _I2C1_SlaveIsRead
  5727                           
  5728     050D                     i1l1904:	
  5729                           ;incstack = 0
  5730                           ; Regs used in _I2C1_SlaveIsRead: [wreg+status,2+status,0]
  5731                           
  5732                           
  5733                           ;mcc_generated_files/i2c1_slave.c: 384:     return (SSP1STATbits.R_nW);
  5734     050D  0143               	movlb	3	; select bank3
  5735     050E  0C0F               	rrf	15,w	;volatile
  5736     050F  0C89               	rrf	9,f
  5737     0510  3901               	andlw	1
  5738     0511                     i1l387:
  5739     0511  0008               	return
  5740     0512                     __end_of_I2C1_SlaveIsRead:
  5741                           
  5742                           	psect	text42
  5743     04B5                     __ptext42:	
  5744 ;; *************** function _I2C1_SlaveIsAddr *****************
  5745 ;; Defined at:
  5746 ;;		line 377 in file "mcc_generated_files/i2c1_slave.c"
  5747 ;; Parameters:    Size  Location     Type
  5748 ;;		None
  5749 ;; Auto vars:     Size  Location     Type
  5750 ;;		None
  5751 ;; Return value:  Size  Location     Type
  5752 ;;                  1    wreg      _Bool 
  5753 ;; Registers used:
  5754 ;;		wreg, status,0
  5755 ;; Tracked objects:
  5756 ;;		On entry : 0/0
  5757 ;;		On exit  : 0/0
  5758 ;;		Unchanged: 0/0
  5759 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5760 ;;      Params:         0       0       0       0
  5761 ;;      Locals:         0       0       0       0
  5762 ;;      Temps:          0       0       0       0
  5763 ;;      Totals:         0       0       0       0
  5764 ;;Total ram usage:        0 bytes
  5765 ;; Hardware stack levels used: 1
  5766 ;; This function calls:
  5767 ;;		Nothing
  5768 ;; This function is called by:
  5769 ;;		_I2C1_Isr
  5770 ;; This function uses a non-reentrant model
  5771 ;;
  5772                           
  5773     04B5                     _I2C1_SlaveIsAddr:	
  5774                           ;psect for function _I2C1_SlaveIsAddr
  5775                           
  5776     04B5                     i1l1910:	
  5777                           ;incstack = 0
  5778                           ; Regs used in _I2C1_SlaveIsAddr: [wreg+status,0]
  5779                           
  5780                           
  5781                           ;mcc_generated_files/i2c1_slave.c: 379:     return !(SSP1STATbits.D_nA);
  5782     04B5  1003               	clrc
  5783     04B6  0143               	movlb	3	; select bank3
  5784     04B7  1E8F               	btfss	15,5	;volatile
  5785     04B8  1403               	setc
  5786     04B9  3000               	movlw	0
  5787     04BA  3D09               	addwfc	9,w
  5788     04BB                     i1l384:
  5789     04BB  0008               	return
  5790     04BC                     __end_of_I2C1_SlaveIsAddr:
  5791                           
  5792                           	psect	text43
  5793     0523                     __ptext43:	
  5794 ;; *************** function _I2C1_SlaveClearIrq *****************
  5795 ;; Defined at:
  5796 ;;		line 387 in file "mcc_generated_files/i2c1_slave.c"
  5797 ;; Parameters:    Size  Location     Type
  5798 ;;		None
  5799 ;; Auto vars:     Size  Location     Type
  5800 ;;		None
  5801 ;; Return value:  Size  Location     Type
  5802 ;;                  1    wreg      void 
  5803 ;; Registers used:
  5804 ;;		None
  5805 ;; Tracked objects:
  5806 ;;		On entry : 0/0
  5807 ;;		On exit  : 0/0
  5808 ;;		Unchanged: 0/0
  5809 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5810 ;;      Params:         0       0       0       0
  5811 ;;      Locals:         0       0       0       0
  5812 ;;      Temps:          0       0       0       0
  5813 ;;      Totals:         0       0       0       0
  5814 ;;Total ram usage:        0 bytes
  5815 ;; Hardware stack levels used: 1
  5816 ;; This function calls:
  5817 ;;		Nothing
  5818 ;; This function is called by:
  5819 ;;		_I2C1_Isr
  5820 ;; This function uses a non-reentrant model
  5821 ;;
  5822                           
  5823     0523                     _I2C1_SlaveClearIrq:	
  5824                           ;psect for function _I2C1_SlaveClearIrq
  5825                           
  5826     0523                     i1l1908:	
  5827                           ;incstack = 0
  5828                           ; Regs used in _I2C1_SlaveClearIrq: []
  5829                           
  5830                           
  5831                           ;mcc_generated_files/i2c1_slave.c: 389:     PIR1bits.SSP1IF = 0;
  5832     0523  014E               	movlb	14	; select bank14
  5833     0524  108D               	bcf	13,1	;volatile
  5834     0525                     i1l390:
  5835     0525  0008               	return
  5836     0526                     __end_of_I2C1_SlaveClearIrq:
  5837                           
  5838                           	psect	text44
  5839     0497                     __ptext44:	
  5840 ;; *************** function _I2C1_SlaveAddrCallBack *****************
  5841 ;; Defined at:
  5842 ;;		line 295 in file "mcc_generated_files/i2c1_slave.c"
  5843 ;; Parameters:    Size  Location     Type
  5844 ;;		None
  5845 ;; Auto vars:     Size  Location     Type
  5846 ;;		None
  5847 ;; Return value:  Size  Location     Type
  5848 ;;                  1    wreg      void 
  5849 ;; Registers used:
  5850 ;;		wreg, status,2, status,0, pclath, cstack
  5851 ;; Tracked objects:
  5852 ;;		On entry : 0/0
  5853 ;;		On exit  : 0/0
  5854 ;;		Unchanged: 0/0
  5855 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5856 ;;      Params:         0       0       0       0
  5857 ;;      Locals:         0       0       0       0
  5858 ;;      Temps:          0       0       0       0
  5859 ;;      Totals:         0       0       0       0
  5860 ;;Total ram usage:        0 bytes
  5861 ;; Hardware stack levels used: 1
  5862 ;; Hardware stack levels required when called: 2
  5863 ;; This function calls:
  5864 ;;		NULL
  5865 ;;		_I2C1_SlaveDefAddrInterruptHandler
  5866 ;; This function is called by:
  5867 ;;		_I2C1_Isr
  5868 ;; This function uses a non-reentrant model
  5869 ;;
  5870                           
  5871     0497                     _I2C1_SlaveAddrCallBack:	
  5872                           ;psect for function _I2C1_SlaveAddrCallBack
  5873                           
  5874     0497                     i1l1914:	
  5875                           ;incstack = 0
  5876                           ; Regs used in _I2C1_SlaveAddrCallBack: [wreg+status,2+status,0+pclath+cstack]
  5877                           
  5878                           
  5879                           ;mcc_generated_files/i2c1_slave.c: 297:     if (I2C1_SlaveAddrInterruptHandler) {
  5880     0497  0140               	movlb	0	; select bank0
  5881     0498  0829               	movf	_I2C1_SlaveAddrInterruptHandler,w
  5882     0499  042A               	iorwf	_I2C1_SlaveAddrInterruptHandler+1,w
  5883     049A  1903               	btfsc	3,2
  5884     049B  2C9D               	goto	u48_21
  5885     049C  2C9E               	goto	u48_20
  5886     049D                     u48_21:
  5887     049D  2CA3               	goto	i1l342
  5888     049E                     u48_20:
  5889     049E                     i1l1916:
  5890                           
  5891                           ;mcc_generated_files/i2c1_slave.c: 298:         I2C1_SlaveAddrInterruptHandler();
  5892     049E  082A               	movf	_I2C1_SlaveAddrInterruptHandler+1,w
  5893     049F  008A               	movwf	10
  5894     04A0  0829               	movf	_I2C1_SlaveAddrInterruptHandler,w
  5895     04A1  000A               	callw
  5896     04A2  3184               	pagesel	$
  5897     04A3                     i1l342:
  5898     04A3  0008               	return
  5899     04A4                     __end_of_I2C1_SlaveAddrCallBack:
  5900                           
  5901                           	psect	text45
  5902     04BC                     __ptext45:	
  5903 ;; *************** function _I2C1_SlaveDefAddrInterruptHandler *****************
  5904 ;; Defined at:
  5905 ;;		line 303 in file "mcc_generated_files/i2c1_slave.c"
  5906 ;; Parameters:    Size  Location     Type
  5907 ;;		None
  5908 ;; Auto vars:     Size  Location     Type
  5909 ;;		None
  5910 ;; Return value:  Size  Location     Type
  5911 ;;                  1    wreg      void 
  5912 ;; Registers used:
  5913 ;;		wreg, status,2, pclath, cstack
  5914 ;; Tracked objects:
  5915 ;;		On entry : 0/0
  5916 ;;		On exit  : 0/0
  5917 ;;		Unchanged: 0/0
  5918 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5919 ;;      Params:         0       0       0       0
  5920 ;;      Locals:         0       0       0       0
  5921 ;;      Temps:          0       0       0       0
  5922 ;;      Totals:         0       0       0       0
  5923 ;;Total ram usage:        0 bytes
  5924 ;; Hardware stack levels used: 1
  5925 ;; Hardware stack levels required when called: 1
  5926 ;; This function calls:
  5927 ;;		_I2C1_SlaveGetRxData
  5928 ;; This function is called by:
  5929 ;;		_I2C1_Open
  5930 ;;		_I2C1_SlaveAddrCallBack
  5931 ;; This function uses a non-reentrant model
  5932 ;;
  5933                           
  5934     04BC                     _I2C1_SlaveDefAddrInterruptHandler:	
  5935                           ;psect for function _I2C1_SlaveDefAddrInterruptHandler
  5936                           
  5937     04BC                     i1l1760:	
  5938                           ;incstack = 0
  5939                           ; Regs used in _I2C1_SlaveDefAddrInterruptHandler: [wreg+status,2+pclath+cstack]
  5940                           
  5941                           
  5942                           ;mcc_generated_files/i2c1_slave.c: 304:     i2c1SlaveAddr = I2C1_SlaveGetRxData();
  5943     04BC  3185  2526  3184   	fcall	_I2C1_SlaveGetRxData
  5944     04BF  0140               	movlb	0	; select bank0
  5945     04C0  00B4               	movwf	_i2c1SlaveAddr	;volatile
  5946     04C1                     i1l1762:
  5947                           
  5948                           ;mcc_generated_files/i2c1_slave.c: 306:     i2cReadCnt = 0;
  5949     04C1  01F9               	clrf	_i2cReadCnt@i2c1_slave$F749	;volatile
  5950     04C2                     i1l345:
  5951     04C2  0008               	return
  5952     04C3                     __end_of_I2C1_SlaveDefAddrInterruptHandler:
  5953                           
  5954                           	psect	text46
  5955     0526                     __ptext46:	
  5956 ;; *************** function _I2C1_SlaveGetRxData *****************
  5957 ;; Defined at:
  5958 ;;		line 427 in file "mcc_generated_files/i2c1_slave.c"
  5959 ;; Parameters:    Size  Location     Type
  5960 ;;		None
  5961 ;; Auto vars:     Size  Location     Type
  5962 ;;		None
  5963 ;; Return value:  Size  Location     Type
  5964 ;;                  1    wreg      unsigned char 
  5965 ;; Registers used:
  5966 ;;		wreg
  5967 ;; Tracked objects:
  5968 ;;		On entry : 0/0
  5969 ;;		On exit  : 0/0
  5970 ;;		Unchanged: 0/0
  5971 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5972 ;;      Params:         0       0       0       0
  5973 ;;      Locals:         0       0       0       0
  5974 ;;      Temps:          0       0       0       0
  5975 ;;      Totals:         0       0       0       0
  5976 ;;Total ram usage:        0 bytes
  5977 ;; Hardware stack levels used: 1
  5978 ;; This function calls:
  5979 ;;		Nothing
  5980 ;; This function is called by:
  5981 ;;		_I2C1_SlaveDefRdInterruptHandler
  5982 ;;		_I2C1_SlaveDefAddrInterruptHandler
  5983 ;;		_I2C1_Read
  5984 ;; This function uses a non-reentrant model
  5985 ;;
  5986                           
  5987     0526                     _I2C1_SlaveGetRxData:	
  5988                           ;psect for function _I2C1_SlaveGetRxData
  5989                           
  5990     0526                     i1l1698:	
  5991                           ;incstack = 0
  5992                           ; Regs used in _I2C1_SlaveGetRxData: [wreg]
  5993                           
  5994                           
  5995                           ;mcc_generated_files/i2c1_slave.c: 429:     return SSP1BUF;
  5996     0526  0143               	movlb	3	; select bank3
  5997     0527  080C               	movf	12,w	;volatile
  5998     0528                     i1l414:
  5999     0528  0008               	return
  6000     0529                     __end_of_I2C1_SlaveGetRxData:
  6001     007E                     btemp	set	126	;btemp
  6002     007E                     int$flags	set	126
  6003     007E                     wtemp0	set	126
  6004                           
  6005                           	psect	idloc
  6006                           
  6007                           ;Config register IDLOC0 @ 0x8000
  6008                           ;	unspecified, using default values
  6009     8000                     	org	32768
  6010     8000  3FFF               	dw	16383
  6011                           
  6012                           ;Config register IDLOC1 @ 0x8001
  6013                           ;	unspecified, using default values
  6014     8001                     	org	32769
  6015     8001  3FFF               	dw	16383
  6016                           
  6017                           ;Config register IDLOC2 @ 0x8002
  6018                           ;	unspecified, using default values
  6019     8002                     	org	32770
  6020     8002  3FFF               	dw	16383
  6021                           
  6022                           ;Config register IDLOC3 @ 0x8003
  6023                           ;	unspecified, using default values
  6024     8003                     	org	32771
  6025     8003  3FFF               	dw	16383
  6026                           
  6027                           	psect	config
  6028                           
  6029                           ;Config register CONFIG1 @ 0x8007
  6030                           ;	External Oscillator Mode Selection bits
  6031                           ;	FEXTOSC = OFF, Oscillator not enabled
  6032                           ;	Power-up Default Value for COSC bits
  6033                           ;	RSTOSC = HFINTOSC_32MHZ, HFINTOSC (32 MHz)
  6034                           ;	Clock Out Enable bit
  6035                           ;	CLKOUTEN = OFF, CLKOUT function is disabled; I/O function on RA4
  6036                           ;	VDD Range Analog Calibration Selection bit
  6037                           ;	VDDAR = HI, Internal analog systems are calibrated for operation between VDD = 2.3V - 
      +                          5.5V
  6038     8007                     	org	32775
  6039     8007  3FCD               	dw	16333
  6040                           
  6041                           ;Config register CONFIG2 @ 0x8008
  6042                           ;	Master Clear Enable bit
  6043                           ;	MCLRE = EXTMCLR, If LVP = 0, MCLR pin is MCLR; If LVP = 1, RA3 pin function is MCLR
  6044                           ;	Power-up Timer Selection bits
  6045                           ;	PWRTS = PWRT_OFF, PWRT is disabled
  6046                           ;	WDT Operating Mode bits
  6047                           ;	WDTE = OFF, WDT disabled; SEN is ignored
  6048                           ;	Brown-out Reset Enable bits
  6049                           ;	BOREN = ON, Brown-out Reset Enabled, SBOREN bit is ignored
  6050                           ;	Brown-out Reset Voltage Selection bit
  6051                           ;	BORV = LO, Brown-out Reset Voltage (VBOR) set to 1.9V
  6052                           ;	PPSLOCKED One-Way Set Enable bit
  6053                           ;	PPS1WAY = ON, The PPSLOCKED bit can be set once after an unlocking sequence is execute
      +                          d; once PPSLOCKED is set, all future changes to PPS registers are prevented
  6054                           ;	Stack Overflow/Underflow Reset Enable bit
  6055                           ;	STVREN = ON, Stack Overflow or Underflow will cause a reset
  6056     8008                     	org	32776
  6057     8008  3FE7               	dw	16359
  6058                           
  6059                           ;Config register CONFIG3 @ 0x8009
  6060                           ;	unspecified, using default values
  6061     8009                     	org	32777
  6062     8009  3FFF               	dw	16383
  6063                           
  6064                           ;Config register CONFIG4 @ 0x800A
  6065                           ;	Boot Block Size Selection bits
  6066                           ;	BBSIZE = BB512, 512 words boot block size
  6067                           ;	Boot Block Enable bit
  6068                           ;	BBEN = OFF, Boot Block is disabled
  6069                           ;	SAF Enable bit
  6070                           ;	SAFEN = ON, SAF is enabled
  6071                           ;	Application Block Write Protection bit
  6072                           ;	WRTAPP = OFF, Application Block is not write-protected
  6073                           ;	Boot Block Write Protection bit
  6074                           ;	WRTB = OFF, Boot Block is not write-protected
  6075                           ;	Configuration Registers Write Protection bit
  6076                           ;	WRTC = OFF, Configuration Registers are not write-protected
  6077                           ;	Storage Area Flash (SAF) Write Protection bit
  6078                           ;	WRTSAF = OFF, SAF is not write-protected
  6079                           ;	Low Voltage Programming Enable bit
  6080                           ;	LVP = ON, Low Voltage programming enabled. MCLR/Vpp pin function is MCLR. MCLRE Config
      +                          uration bit is ignored.
  6081     800A                     	org	32778
  6082     800A  3FEF               	dw	16367
  6083                           
  6084                           ;Config register CONFIG5 @ 0x800B
  6085                           ;	User Program Flash Memory Code Protection bit
  6086                           ;	CP = OFF, User Program Flash Memory code protection is disabled
  6087     800B                     	org	32779
  6088     800B  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         92
    Persistent  34
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      11
    BANK0            80     23      50
    BANK1            80      0      64
    BANK2            80      0       0

Pointer List with Targets:

    data_recv_handler@ramBuff	PTR volatile unsigned short  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    FLASH_WriteBlock@flashWordArray	PTR unsigned short  size(1) Largest target is 64
		 -> memory_initialize@ramBuff(BANK1[64]), 

    FLASH_WriteWord@ramBuf	PTR unsigned short  size(1) Largest target is 64
		 -> memory_initialize@ramBuff(BANK1[64]), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_DefaultInterruptHandler(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_DefaultInterruptHandler(), NULL(), 

    I2C1_SlaveSetBusColIntHandler@handler	PTR FTN()void  size(2) Largest target is 1
		 -> I2C1_SlaveDefBusColInterruptHandler(), 

    I2C1_SlaveBusColInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), I2C1_SlaveDefBusColInterruptHandler(), 

    I2C1_SlaveSetWrColIntHandler@handler	PTR FTN()void  size(2) Largest target is 1
		 -> I2C1_SlaveDefWrColInterruptHandler(), 

    I2C1_SlaveWrColInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), I2C1_SlaveDefWrColInterruptHandler(), 

    I2C1_SlaveSetAddrIntHandler@handler	PTR FTN()void  size(2) Largest target is 1
		 -> I2C1_SlaveDefAddrInterruptHandler(), 

    I2C1_SlaveAddrInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), I2C1_SlaveDefAddrInterruptHandler(), 

    I2C1_SlaveSetWriteIntHandler@handler	PTR FTN()void  size(2) Largest target is 1
		 -> I2C1_SlaveDefWrInterruptHandler(), 

    I2C1_SlaveWrInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), I2C1_SlaveDefWrInterruptHandler(), 

    I2C1_SlaveSetReadIntHandler@handler	PTR FTN()void  size(2) Largest target is 1
		 -> I2C1_SlaveDefRdInterruptHandler(), 

    I2C1_SlaveRdInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), I2C1_SlaveDefRdInterruptHandler(), 

    I2C1_SlaveSetIsrHandler@handler	PTR FTN()void  size(2) Largest target is 1
		 -> I2C1_Isr(), 

    MSSP1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), I2C1_Isr(), 


Critical Paths under _main in COMMON

    _memory_initialize->_FLASH_WriteWord
    _FLASH_WriteWord->___wmul
    _FLASH_WriteBlock->_FLASH_EraseBlock
    _TMR0_Initialize->_TMR0_SetInterruptHandler
    _I2C1_Open->_I2C1_SlaveSetAddrIntHandler
    _I2C1_Open->_I2C1_SlaveSetBusColIntHandler
    _I2C1_Open->_I2C1_SlaveSetIsrHandler
    _I2C1_Open->_I2C1_SlaveSetReadIntHandler
    _I2C1_Open->_I2C1_SlaveSetWrColIntHandler
    _I2C1_Open->_I2C1_SlaveSetWriteIntHandler

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _INTERRUPT_InterruptManager->_I2C1_Isr
    _TMR0_ISR->_TMR0_DefaultInterruptHandler
    _I2C1_SlaveDefWrInterruptHandler->_I2C1_SlaveSendTxData

Critical Paths under _main in BANK0

    _main->_memory_initialize
    _memory_initialize->_FLASH_WriteWord
    _FLASH_WriteWord->_FLASH_WriteBlock

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0    6183
                                             22 BANK0      1     1      0
                          _I2C1_Open
                  _SYSTEM_Initialize
         _SensorBoardType_validation
                       _error_signal
                 _getSensorBoardType
                  _memory_initialize
 ---------------------------------------------------------------------------------
 (1) _memory_initialize                                    3     3      0    5344
                                             19 BANK0      3     3      0
                     _FLASH_ReadWord
                    _FLASH_WriteWord
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4    1216
                                              3 COMMON     4     0      4
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _FLASH_WriteWord                                     10     5      5    3666
                                              7 COMMON     1     1      0
                                             10 BANK0      9     4      5
                     _FLASH_ReadWord
                   _FLASH_WriteBlock
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (3) _FLASH_WriteBlock                                    10     7      3     815
                                              0 BANK0     10     7      3
                   _FLASH_EraseBlock
 ---------------------------------------------------------------------------------
 (4) _FLASH_EraseBlock                                     3     1      2     186
                                              3 COMMON     3     1      2
 ---------------------------------------------------------------------------------
 (3) _FLASH_ReadWord                                       3     1      2     276
                                              3 COMMON     3     1      2
 ---------------------------------------------------------------------------------
 (1) _getSensorBoardType                                   2     2      0       0
                                              3 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _error_signal                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SensorBoardType_validation                           1     1      0      44
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0      98
                    _I2C1_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR0_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      0     0      0      98
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR0_SetInterruptHandler                             2     0      2      98
                                              3 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C1_Initialize                                      1     1      0       0
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _I2C1_Open                                            0     0      0     632
                _I2C1_SlaveEnableIrq
                     _I2C1_SlaveOpen
        _I2C1_SlaveSetAddrIntHandler
      _I2C1_SlaveSetBusColIntHandler
            _I2C1_SlaveSetIsrHandler
        _I2C1_SlaveSetReadIntHandler
             _I2C1_SlaveSetSlaveAddr
             _I2C1_SlaveSetSlaveMask
       _I2C1_SlaveSetWrColIntHandler
       _I2C1_SlaveSetWriteIntHandler
 ---------------------------------------------------------------------------------
 (2) _I2C1_SlaveSetWriteIntHandler                         2     0      2      98
                                              3 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _I2C1_SlaveSetWrColIntHandler                         2     0      2      98
                                              3 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _I2C1_SlaveSetSlaveMask                               1     1      0      22
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _I2C1_SlaveSetSlaveAddr                               1     1      0      22
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _I2C1_SlaveSetReadIntHandler                          2     0      2      98
                                              3 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _I2C1_SlaveSetIsrHandler                              2     0      2      98
                                              3 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _I2C1_SlaveSetBusColIntHandler                        2     0      2      98
                                              3 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _I2C1_SlaveSetAddrIntHandler                          2     0      2      98
                                              3 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _I2C1_SlaveOpen                                       1     1      0       0
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _I2C1_SlaveEnableIrq                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _INTERRUPT_InterruptManager                           0     0      0      22
                                NULL *
                           _I2C1_Isr *
                           _TMR0_ISR
 ---------------------------------------------------------------------------------
 (6) _TMR0_ISR                                             0     0      0       0
                                NULL *
       _TMR0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (7) _TMR0_DefaultInterruptHandler                         1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (6) _I2C1_Isr                                             2     2      0      22
                                              1 COMMON     2     2      0
             _I2C1_SlaveAddrCallBack
                 _I2C1_SlaveClearIrq
                   _I2C1_SlaveIsAddr
                   _I2C1_SlaveIsRead
              _I2C1_SlaveIsRxBufFull
             _I2C1_SlaveIsTxBufEmpty
               _I2C1_SlaveRdCallBack
             _I2C1_SlaveReleaseClock
               _I2C1_SlaveWrCallBack
 ---------------------------------------------------------------------------------
 (7) _I2C1_SlaveWrCallBack                                 0     0      0      22
                                NULL *
    _I2C1_SlaveDefWrInterruptHandler *
 ---------------------------------------------------------------------------------
 (8) _I2C1_SlaveDefWrInterruptHandler                      0     0      0      22
               _I2C1_SlaveSendTxData
 ---------------------------------------------------------------------------------
 (9) _I2C1_SlaveSendTxData                                 1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (7) _I2C1_SlaveReleaseClock                               0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C1_SlaveRdCallBack                                 0     0      0       0
                                NULL *
    _I2C1_SlaveDefRdInterruptHandler *
                  _data_recv_handler
 ---------------------------------------------------------------------------------
 (8) _data_recv_handler                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _I2C1_SlaveDefRdInterruptHandler                      0     0      0       0
                _I2C1_SlaveGetRxData
 ---------------------------------------------------------------------------------
 (7) _I2C1_SlaveIsTxBufEmpty                               0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C1_SlaveIsRxBufFull                                0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C1_SlaveIsRead                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C1_SlaveIsAddr                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C1_SlaveClearIrq                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C1_SlaveAddrCallBack                               0     0      0       0
                                NULL *
  _I2C1_SlaveDefAddrInterruptHandler *
 ---------------------------------------------------------------------------------
 (8) _I2C1_SlaveDefAddrInterruptHandler                    0     0      0       0
                _I2C1_SlaveGetRxData
 ---------------------------------------------------------------------------------
 (9) _I2C1_SlaveGetRxData                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (7) NULL(Fake)                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C1_Open
     _I2C1_SlaveEnableIrq
     _I2C1_SlaveOpen
     _I2C1_SlaveSetAddrIntHandler
     _I2C1_SlaveSetBusColIntHandler
     _I2C1_SlaveSetIsrHandler
     _I2C1_SlaveSetReadIntHandler
     _I2C1_SlaveSetSlaveAddr
     _I2C1_SlaveSetSlaveMask
     _I2C1_SlaveSetWrColIntHandler
     _I2C1_SlaveSetWriteIntHandler
   _SYSTEM_Initialize
     _I2C1_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
     _WDT_Initialize
   _SensorBoardType_validation
   _error_signal
   _getSensorBoardType
   _memory_initialize
     _FLASH_ReadWord
     _FLASH_WriteWord
       _FLASH_ReadWord
       _FLASH_WriteBlock
         _FLASH_EraseBlock
       ___wmul (ARG)
     ___wmul

 _INTERRUPT_InterruptManager (ROOT)
   NULL(Fake) *
   _I2C1_Isr *
     _I2C1_SlaveAddrCallBack
       NULL(Fake) *
       _I2C1_SlaveDefAddrInterruptHandler *
         _I2C1_SlaveGetRxData
     _I2C1_SlaveClearIrq
     _I2C1_SlaveIsAddr
     _I2C1_SlaveIsRead
     _I2C1_SlaveIsRxBufFull
     _I2C1_SlaveIsTxBufEmpty
     _I2C1_SlaveRdCallBack
       NULL(Fake) *
       _I2C1_SlaveDefRdInterruptHandler *
         _I2C1_SlaveGetRxData
       _data_recv_handler *
     _I2C1_SlaveReleaseClock
     _I2C1_SlaveWrCallBack
       NULL(Fake) *
       _I2C1_SlaveDefWrInterruptHandler *
         _I2C1_SlaveSendTxData
   _TMR0_ISR *
     NULL(Fake) *
     _TMR0_DefaultInterruptHandler *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM              F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      8       B       2       78.6%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     17      32       5       62.5%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0      40       7       80.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
ABS                  0      0      7D      10        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
DATA                 0      0      7D      11        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%
BITSFR32             0      0       0      33        0.0%
SFR32                0      0       0      33        0.0%
BITSFR33             0      0       0      34        0.0%
SFR33                0      0       0      34        0.0%
BITSFR34             0      0       0      35        0.0%
SFR34                0      0       0      35        0.0%
BITSFR35             0      0       0      36        0.0%
SFR35                0      0       0      36        0.0%
BITSFR36             0      0       0      37        0.0%
SFR36                0      0       0      37        0.0%
BITSFR37             0      0       0      38        0.0%
SFR37                0      0       0      38        0.0%
BITSFR38             0      0       0      39        0.0%
SFR38                0      0       0      39        0.0%
BITSFR39             0      0       0      40        0.0%
SFR39                0      0       0      40        0.0%
BITSFR40             0      0       0      41        0.0%
SFR40                0      0       0      41        0.0%
BITSFR41             0      0       0      42        0.0%
SFR41                0      0       0      42        0.0%
BITSFR42             0      0       0      43        0.0%
SFR42                0      0       0      43        0.0%
BITSFR43             0      0       0      44        0.0%
SFR43                0      0       0      44        0.0%
BITSFR44             0      0       0      45        0.0%
SFR44                0      0       0      45        0.0%
BITSFR45             0      0       0      46        0.0%
SFR45                0      0       0      46        0.0%
BITSFR46             0      0       0      47        0.0%
SFR46                0      0       0      47        0.0%
BITSFR47             0      0       0      48        0.0%
SFR47                0      0       0      48        0.0%
BITSFR48             0      0       0      49        0.0%
SFR48                0      0       0      49        0.0%
BITSFR49             0      0       0      50        0.0%
SFR49                0      0       0      50        0.0%
BITSFR50             0      0       0      51        0.0%
SFR50                0      0       0      51        0.0%
BITSFR51             0      0       0      52        0.0%
SFR51                0      0       0      52        0.0%
BITSFR52             0      0       0      53        0.0%
SFR52                0      0       0      53        0.0%
BITSFR53             0      0       0      54        0.0%
SFR53                0      0       0      54        0.0%
BITSFR54             0      0       0      55        0.0%
SFR54                0      0       0      55        0.0%
BITSFR55             0      0       0      56        0.0%
SFR55                0      0       0      56        0.0%
BITSFR56             0      0       0      57        0.0%
SFR56                0      0       0      57        0.0%
BITSFR57             0      0       0      58        0.0%
SFR57                0      0       0      58        0.0%
BITSFR58             0      0       0      59        0.0%
SFR58                0      0       0      59        0.0%
BITSFR59             0      0       0      60        0.0%
SFR59                0      0       0      60        0.0%
BITSFR60             0      0       0      61        0.0%
SFR60                0      0       0      61        0.0%
BITSFR61             0      0       0      62        0.0%
SFR61                0      0       0      62        0.0%
BITSFR62             0      0       0      63        0.0%
SFR62                0      0       0      63        0.0%
BITSFR63             0      0       0      64        0.0%
SFR63                0      0       0      64        0.0%


Microchip Technology PIC Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Fri Apr 21 15:30:46 2023

                 ??_I2C1_SlaveAddrCallBack 0070                                         l32 01E9  
                                       l53 044E                                         l56 0515  
                                       l48 047B                                         l95 0386  
                      ___wmul@multiplicand 0075                                        l312 04EC  
                                      l315 04E6                                        l328 04DA  
                                      l338 04F8                                        l266 04AD  
                                      l530 02BA                                        l348 04E0  
                                      l524 0300                                        l381 051F  
                                      l269 0339                                        l358 04F2  
                                      l534 03E5                                        l375 0502  
                                      l519 03FE                                        l527 026D  
                                      l528 02C2                                        l369 0489  
                                      l457 043E                                        l378 04FD  
                                      l706 0393                                        l635 03C8  
                                      l708 03A8                                        l636 03C8  
                                      l479 04CE                                        l592 051C  
                                      l586 045E                                        l589 04D4  
                 __end_of_I2C1_SlaveIsAddr 04BC                                        u470 0481  
                                      u630 0445                                        u471 0480  
                                      u631 0444                                        u640 044B  
                                      u641 044A                                        u625 0475  
                                      u820 026C                                        u900 00F6  
                                      u821 026B                                        u901 00F5  
                                      u830 02A1                                        u910 03BA  
                                      u831 02A0                                        u911 03B9  
                                      u840 02BA                                        u841 02B9  
                                      u825 0268                                        u850 02ED  
                                      u851 02EC                                        u860 038E  
                                      u861 038D                                        u890 03A3  
                                      u891 03A2                                        u875 0394  
                                      u885 0399                   __end_of_I2C1_SlaveIsRead 0512  
                                      wreg 0009                          _data_recv_handler 0529  
                         ?_FLASH_WriteWord 0043             FLASH_WriteBlock@flashWordArray 003B  
                       ?_data_recv_handler 0070                                       l2010 0445  
                                     l2012 044B                                       l2020 0512  
                                     l2004 046E                                       l2030 0336  
                                     l2016 044D                                       l2008 0440  
                                     l2210 0279                                       l2202 026E  
                                     l2028 0301                                       l2220 0282  
                                     l2204 0275                                       l2300 03C6  
                                     l2150 03CE                                       l2230 02A8  
                                     l2222 028C                                       l2206 0277  
                                     l2302 03C7                                       l2160 03D6  
                                     l2152 03CF                                       l2240 02BC  
                                     l2232 02A9                                       l2224 029A  
                                     l2216 027B                                       l2208 0278  
                                     l2074 044F                                       l2170 03E0  
                                     l2162 03DB                                       l2154 03D2  
                                     l2234 02AA                                       l2226 02A1  
                                     l2218 027E                                       l2076 0458  
                                     l2180 03F0                                       l2172 03E6  
                                     l2164 03DC                                       l2156 03D4  
                                     l2148 03CA                                       l2236 02B0  
                                     l2228 02A3                                       l2260 02F7  
                                     l2252 02CE                                       l2244 02C3  
                                     l2078 045B                                       l2190 03F9  
                                     l2182 03F1                                       l2174 03EA  
                                     l2166 03DD                                       l2158 03D5  
                                     l2238 02B4                                       l2254 02E3  
                                     l2246 02CA                                       l2270 039D  
                                     l2262 0387                                       l2184 03F2  
                                     l2176 03EB                                       l2168 03DE  
                                     l2256 02E7                                       l2272 03A3  
                                     l2264 038A                                       l2280 0111  
                         __end_of_I2C1_Isr 0257                                       l2186 03F3  
                                     l2178 03EE                                       l2194 0257  
                                     l2258 02ED                                       l2266 038E  
                                     l2290 01C5                                       l2282 0135  
                                     l1900 04DB                                       l2188 03F4  
                                     l2196 025E                                       l2268 0398  
                                     l2284 0159                                       l2276 00E8  
                                     l2292 03A9                                       l1902 051D  
                                     l2198 0262                                       l2286 017D  
                                     l2278 00F6                                       l2294 03BA  
                                     l1840 036D                                       l2288 01A1  
                                     l2296 03C0                                       l1850 0373  
                                     l1842 036F                                       l1834 0364  
                                     l2298 03C3                                       l1860 037D  
                                     l1852 0375                                       l1844 0370  
                                     l1836 0367                                       l1764 04C9  
                                     l1940 042B                                       l1870 04AB  
                                     l1862 0380                                       l1854 0377  
                                     l1846 0371                                       l1838 0369  
                                     l1950 043B                                       l1942 0430  
                                     l1880 0487                                       l1872 04AC  
                                     l1864 0383                                       l1856 0379  
                                     l1848 0372                                       l1944 0431  
                                     l1882 0488                                       l1874 047C  
                                     l1890 04E7                                       l1866 04A4  
                                     l1970 04D3                                       l1858 037B  
                                     l1946 0433                                       l1876 0481  
                                     l1892 04ED                                       l1868 04A7  
                                     l1948 0434                                       l1972 051A  
                                     l1878 0483                                       l1886 04FF  
                                     l1894 04D5                                       l1966 04CF  
                                     l1896 04E1                                       l1888 04FA  
                                     l1968 04D1                                       l1898 04F3  
                                     _LATA 0018                                       _LATC 001A  
                                     i1l37 0529                                       _WPUA 1F39  
                                     _WPUC 1F4F                                       _main 03A9  
                      ??_data_recv_handler 0070         I2C1_SlaveSetAddrIntHandler@handler 0073  
                                     fsr0h 0005                                       fsr1h 0007  
                                     indf0 0000                                       fsr0l 0004  
                                     indf1 0001                                       fsr1l 0006  
                                     btemp 007E                          ?_FLASH_WriteBlock 0039  
                                     start 0031                                 _i2c1RdData 0035  
                       ??_FLASH_WriteBlock 003C                                 _i2c1WrData 0078  
       I2C1_SlaveSetReadIntHandler@handler 0073               _I2C1_SlaveRdInterruptHandler 002D  
             _I2C1_SlaveWrInterruptHandler 002B                   memory_initialize@ramBuff 00A0  
                         ??_I2C1_SlaveOpen 0073                    __end_of_TMR0_Initialize 043F  
           ??_TMR0_DefaultInterruptHandler 0070              __end_of_OSCILLATOR_Initialize 04D5  
                        __end_of_I2C1_Open 033A                                      ?_main 0070  
                __end_of_data_recv_handler 052A                                      i1l140 0026  
                                    i1l320 0414                                      i1l144 002F  
                                    i1l145 002F                                      i1l137 0013  
                                    i1l411 050C                                      i1l332 0496  
                                    i1l405 04B4                                      i1l325 042A  
                                    i1l309 0256                                      i1l414 0528  
                                    i1l342 04A3                                      i1l335 0507  
                                    i1l408 0519                                      i1l345 04C2  
                                    i1l390 0525                                      i1l384 04BB  
                                    i1l393 0522                                      i1l387 0511  
                                    i1l491 035A                                      i1l484 034A  
                                    i1l476 046D                                      i1l494 0361  
                                    i1l487 0351                                      i1l496 0363  
       __end_of_SensorBoardType_validation 044F                 _SensorBoardType_validation 043F  
                                    _OSCEN 0891                                      _TMR0H 059D  
                                    _TMR0L 059C                                      u42_20 0420  
                                    u50_20 0406                                      u42_21 041F  
                                    u50_21 0405                                      u51_20 0411  
                                    u51_21 0410                                      _PORTA 000C  
                                    _PORTC 000E                                      u52_20 0344  
                                    u52_21 0343                                      u53_20 034A  
                                    u53_21 0349                                      u70_20 0230  
                                    u54_20 0351                                      u70_21 022F  
                                    u54_21 0350                                      u71_20 0239  
                                    u55_20 035A                                      u71_21 0238  
                                    u55_21 0359                                      u48_20 049E  
                                    u56_20 0361                                      u72_20 000B  
                                    u48_21 049D                                      u56_21 0360  
                                    u72_21 000A                                      u49_20 0491  
                                    u65_20 0468                                      u73_20 000F  
                                    u49_21 0490                                      u65_21 0467  
                                    u73_21 000E                                      _TRISA 0012  
                                    _TRISC 0014                                      u66_20 01F5  
                                    u74_20 0017                                      u66_21 01F4  
                                    u74_21 0016                                      u67_20 01FD  
                                    u75_20 001B                                      u67_21 01FC  
                                    u75_21 001A                                      u68_20 020D  
                                    u76_20 001F                                      u68_21 020C  
                                    u76_21 001E                                      u69_20 0220  
                                    u77_20 002A                                      u69_21 021F  
                                    u77_21 0029                                      u78_20 002E  
                                    u78_21 002D                  ?_TMR0_SetInterruptHandler 0073  
                        ??_I2C1_Initialize 0073                           __end_of_TMR0_ISR 046E  
           I2C1_SlaveSetSlaveMask@maskAddr 0073                             _WDT_Initialize 051A  
                               _i2cReadCnt 0038                             _i2c1SlaveState 0033  
                                    pclath 000A                                      status 0003  
                                    wtemp0 007E                            __initialization 00D0  
                             __end_of_main 03CA                ?_INTERRUPT_InterruptManager 0070  
                                   ??_main 0078                         _I2C1_SlaveClearIrq 0523  
               _i2cReadCnt@i2c1_slave$F179 0036                 _i2cReadCnt@i2c1_slave$F749 0079  
                   __end_of_WDT_Initialize 051D                        ?_I2C1_SlaveClearIrq 0070  
                FLASH_WriteBlock@writeAddr 0039                    ?_I2C1_SlaveReleaseClock 0070  
                                   _ANSELA 1F38                                     _ANSELC 1F4E  
                                   _T0CON0 059E                                     _T0CON1 059F  
                                   _RC0PPS 1F20                                     _RC1PPS 1F21  
                       _getSensorBoardType 046E                                     i1l2022 045F  
                                   i1l2040 0201                                     i1l2032 01EA  
                                   i1l2024 0461                                     i1l2050 0218  
                                   i1l2042 0205                                     i1l2034 01ED  
                                   i1l2026 0468                                     i1l2060 0231  
                                   i1l2052 0220                                     i1l2044 020D  
                                   i1l2036 01F5                                     i1l2062 0239  
                                   i1l2054 0224                                     i1l2046 0211  
                                   i1l2038 01FD                                     i1l2056 0228  
                                   i1l2048 0215                                     i1l2080 0006  
                                   _ODCONA 1F3A                                     i1l2066 023D  
                                   i1l2090 001F                                     i1l2082 000B  
                                   _ODCONC 1F50                                     i1l2324 0245  
                                   i1l2068 0253                                     i1l2092 002A  
                                   i1l2084 000F                                     i1l1702 0509  
                                   i1l2086 0017                                     i1l2088 001B  
                                   i1l1910 04B5                                     i1l1750 0415  
                                   i1l1760 04BC                                     i1l1904 050D  
                                   i1l1752 041A                                     i1l1762 04C1  
                                   i1l1914 0497                                     i1l1754 0420  
                                   i1l1930 03FF                                     i1l1922 048A  
                                   i1l1916 049E                                     i1l1908 0523  
                                   i1l1756 0427                                     i1l1932 0406  
                                   i1l1924 0491                                     i1l1926 0516  
                                   i1l1918 04AE                                     i1l1934 040B  
                                   i1l1758 0503                                     i1l1936 0411  
                                   i1l1960 0354                                     i1l1952 033A  
                                   i1l1698 0526                                     i1l1938 0520  
                                   i1l1962 035B                                     i1l1954 0344  
                                   i1l1956 034B                                     i1l1958 0352  
                                   _INLVLA 1F3C                                     _INLVLC 1F52  
                                   _OSCFRQ 0893                                     _WDTCON 080C  
                              _i2cDataRead 0020                        ?_getSensorBoardType 0070  
                     ??_I2C1_SlaveClearIrq 0070                              ?_error_signal 0070  
                                   ___wmul 0387              FLASH_WriteWord@blockStartAddr 0049  
                      FLASH_WriteWord@word 0046                           ?_TMR0_Initialize 0070  
                                ?_I2C1_Isr 0070                    ?_I2C1_SlaveSetSlaveAddr 0070  
                  ?_I2C1_SlaveSetSlaveMask 0070       __end_of_I2C1_SlaveSetWrColIntHandler 04E1  
             _I2C1_SlaveSetWrColIntHandler 04DB                    FLASH_ReadWord@flashAddr 0073  
                     ??_getSensorBoardType 0073       I2C1_SlaveSetBusColIntHandler@handler 0073  
                          ?_WDT_Initialize 0070             __end_of_I2C1_SlaveReleaseClock 0523  
 TMR0_SetInterruptHandler@InterruptHandler 0073                     _I2C1_SlaveAddrCallBack 0497  
                        _SYSTEM_Initialize 044F                    __end_of__initialization 00E3  
      I2C1_SlaveSetWrColIntHandler@handler 0073                         ?_SYSTEM_Initialize 0070  
                           ??_error_signal 0073                             __pcstackCOMMON 0070  
                      ??_SYSTEM_Initialize 0075                                  ?_TMR0_ISR 0070  
           __end_of_I2C1_SlaveSetSlaveAddr 0503                           FLASH_WriteWord@i 004B  
           __end_of_I2C1_SlaveSetSlaveMask 04FE                                 ??_I2C1_Isr 0071  
                        ?_I2C1_SlaveIsAddr 0070                          ?_I2C1_SlaveIsRead 0070  
              FLASH_WriteBlock@GIEBitValue 0041                         ??_I2C1_SlaveIsAddr 0070  
                       ??_I2C1_SlaveIsRead 0070                  __end_of_SYSTEM_Initialize 045F  
                               __pbssBANK0 0020                                 __pbssBANK1 00A0  
                     memory_initialize@TAG 004E                        _I2C1_SlaveEnableIrq 051D  
                      _I2C1_SlaveGetRxData 0526                      _I2C1_SlaveIsRxBufFull 0516  
                               __pmaintext 03A9              ?_I2C1_SlaveSetWriteIntHandler 0073  
         __end_of_TMR0_SetInterruptHandler 04CF                                    ?___wmul 0073  
                               ??_TMR0_ISR 0071                                 __pintentry 0004  
                          _I2C1_Initialize 04A4                       ?_I2C1_SlaveEnableIrq 0070  
                     ?_I2C1_SlaveGetRxData 0070                             _FLASH_ReadWord 03E6  
              ?_SensorBoardType_validation 0070                                  _I2C1_Open 0301  
                                  _NVMADRH 081B                                    _NVMADRL 081A  
                                  _NVMDATH 081D                                    _OSCTUNE 0892  
                                  _NVMDATL 081C                                    _NVMCON2 081F  
                                  _SSP1ADD 018D                                    _SLRCONA 1F3B  
                                  _SLRCONC 1F51                                    _SSP1BUF 018C  
                                  _SSP1MSK 018E                   ?_I2C1_SlaveSetIsrHandler 0073  
                         _FLASH_EraseBlock 03CA             ?_I2C1_SlaveSetBusColIntHandler 0073  
SensorBoardType_validation@SensorBoardType 0073                      ??_I2C1_SlaveEnableIrq 0073  
                    ??_I2C1_SlaveGetRxData 0070                     __end_of_FLASH_ReadWord 03FF  
                               _error_flag 0037                                    __ptext1 00E6  
                                  __ptext2 0387                                    __ptext3 02C3  
                                  __ptext4 0257                                    __ptext5 03CA  
                                  __ptext6 03E6                                    __ptext7 046E  
                                  __ptext8 0512                                    __ptext9 043F  
                        _memory_initialize 00E6             _I2C1_SlaveAddrInterruptHandler 0029  
                    _OSCILLATOR_Initialize 04CF                         ?_memory_initialize 0070  
          I2C1_SlaveSetSlaveAddr@slaveAddr 0073                   ??_PIN_MANAGER_Initialize 0073  
                               ?_I2C1_Open 0070                   ??_I2C1_SlaveIsTxBufEmpty 0070  
                                  main@TAG 004F                       __end_of_error_signal 0516  
                         _default_in_flash 0040                                    clrloop0 04C4  
                     end_of_initialization 00E3                        ??_memory_initialize 004C  
                                _LED_timer 007A                     ?_I2C1_SlaveIsRxBufFull 0070  
          _I2C1_SlaveWrColInterruptHandler 0025                    __end_of_I2C1_Initialize 04AE  
             __end_of_I2C1_SlaveRdCallBack 0415                  FLASH_ReadWord@GIEBitValue 0075  
                __end_of_memory_initialize 01EA             ??_I2C1_SlaveSetWriteIntHandler 0075  
                          ?_FLASH_ReadWord 0073                           ??_WDT_Initialize 0073  
                 _TMR0_SetInterruptHandler 04C9            __end_of_I2C1_SlaveSetIsrHandler 04ED  
                  ?_I2C1_SlaveAddrCallBack 0070             I2C1_SlaveSetIsrHandler@handler 0073  
                        FLASH_WriteBlock@i 0042                          ??_FLASH_WriteWord 0077  
                           __end_of___wmul 03A9                              _i2c1SlaveAddr 0034  
                         _FLASH_WriteBlock 0257                     ?_OSCILLATOR_Initialize 0070  
           __end_of_I2C1_SlaveAddrCallBack 04A4               __end_of_I2C1_SlaveSendTxData 050D  
                      start_initialization 00D0                                ??_I2C1_Open 0075  
             __end_of_I2C1_SlaveWrCallBack 0497                   I2C1_SlaveSendTxData@data 0070  
                         ?_I2C1_Initialize 0070                                   ??___wmul 0077  
              FLASH_EraseBlock@GIEBitValue 0075                   __end_of_FLASH_EraseBlock 03E6  
  __end_of_I2C1_SlaveDefRdInterruptHandler 042B          ??_I2C1_SlaveDefRdInterruptHandler 0070  
         ?_I2C1_SlaveDefRdInterruptHandler 0070            _I2C1_SlaveDefRdInterruptHandler 0415  
  __end_of_I2C1_SlaveDefWrInterruptHandler 0508          ??_I2C1_SlaveDefWrInterruptHandler 0071  
         ?_I2C1_SlaveDefWrInterruptHandler 0070            _I2C1_SlaveDefWrInterruptHandler 0503  
                              __pbssCOMMON 0078                                  ___latbits 0000  
                            __pcstackBANK0 0039                       _I2C1_SlaveRdCallBack 03FF  
             ?_I2C1_SlaveSetAddrIntHandler 0073                      _TMR0_InterruptHandler 0050  
                                __pnvBANK0 0050                     _PIN_MANAGER_Initialize 0364  
                   _MSSP1_InterruptHandler 002F                     _I2C1_SlaveIsTxBufEmpty 04AE  
                             _error_signal 0512               ?_I2C1_SlaveSetReadIntHandler 0073  
                 __end_of_default_in_flash 00D0            ??_I2C1_SlaveSetBusColIntHandler 0075  
                                 _I2C1_Isr 01EA               ??_INTERRUPT_InterruptManager 0073  
                 ??_I2C1_SlaveReleaseClock 0070        __end_of_I2C1_SlaveSetAddrIntHandler 04F9  
              _I2C1_SlaveSetAddrIntHandler 04F3                             _I2C1_SlaveOpen 047C  
                    ?_I2C1_SlaveRdCallBack 0070                    ??_I2C1_SlaveIsRxBufFull 0070  
            ?_I2C1_SlaveSetWrColIntHandler 0073                   FLASH_WriteWord@flashAddr 0043  
           FLASH_WriteBlock@blockStartAddr 003F              ??_I2C1_SlaveSetAddrIntHandler 0075  
                        ??_TMR0_Initialize 0075                             ___wmul@product 0039  
                                 _LATAbits 0018                                  clear_ram0 04C3  
                                 _PIE0bits 0716                                   _PIE1bits 0717  
                 ??_I2C1_SlaveSetSlaveAddr 0073        __end_of_I2C1_SlaveSetReadIntHandler 04E7  
              _I2C1_SlaveSetReadIntHandler 04E1                   ??_I2C1_SlaveSetSlaveMask 0073  
              __end_of_I2C1_SlaveEnableIrq 0520                 ??_TMR0_SetInterruptHandler 0075  
                                 _PIR0bits 070C                __end_of_I2C1_SlaveGetRxData 0529  
                                 _PIR1bits 070D                  FLASH_EraseBlock@startAddr 0073  
                     _I2C1_SlaveSendTxData 0508                           ??_FLASH_ReadWord 0075  
                 _default_in_flash_absaddr 0040                       _I2C1_SlaveWrCallBack 048A  
                                 _SSP1CON1 0190                                   _SSP1CON2 0191  
                                 _TMR0_ISR 045F                                   _SSP1STAT 018F  
            ??_I2C1_SlaveSetReadIntHandler 0075                          ___wmul@multiplier 0073  
                   __end_of_I2C1_SlaveOpen 048A                   data_recv_handler@ramBuff 0023  
         _I2C1_SlaveBusColInterruptHandler 0027                            _FLASH_WriteWord 02C3  
       _I2C1_SlaveDefWrColInterruptHandler 0000                   __end_of_FLASH_WriteBlock 02C3  
__end_of_I2C1_SlaveDefAddrInterruptHandler 04C3        ??_I2C1_SlaveDefAddrInterruptHandler 0070  
       ?_I2C1_SlaveDefAddrInterruptHandler 0070          _I2C1_SlaveDefAddrInterruptHandler 04BC  
                         _I2C1_SlaveIsAddr 04B5                           _I2C1_SlaveIsRead 050D  
                    ?_I2C1_SlaveSendTxData 0070                      ?_I2C1_SlaveWrCallBack 0070  
                  ??_OSCILLATOR_Initialize 0073                   __p_default_in_flash_text 0040  
      _I2C1_SlaveDefBusColInterruptHandler 0000                            ?_I2C1_SlaveOpen 0070  
                   ??_I2C1_SlaveRdCallBack 0070      __end_of_I2C1_SlaveSetBusColIntHandler 04F3  
            _I2C1_SlaveSetBusColIntHandler 04ED                                 _T0CON0bits 059E  
                                 __ptext10 044F                                   __ptext11 051A  
                                 __ptext20 04F9                                   __ptext12 042B  
                                 __ptext21 04FE                                   __ptext13 04C9  
                                 __ptext30 033A                                   __ptext22 04E1  
                                 __ptext14 0364                                   __ptext31 01EA  
                                 __ptext23 04E7                                   __ptext15 04CF  
                                 __ptext40 0516                                   __ptext32 048A  
                                 __ptext24 04ED                                   __ptext16 04A4  
                                 __ptext41 050D                                   __ptext33 0503  
                                 __ptext25 04F3                                   __ptext17 0301  
                                 __ptext42 04B5                                   __ptext34 0508  
                                 __ptext26 047C                                   __ptext18 04D5  
                                 __ptext43 0523                                   __ptext35 0520  
                                 __ptext27 051D                                   __ptext19 04DB  
                                 __ptext44 0497                                   __ptext36 03FF  
                                 __ptext45 04BC                                   __ptext37 0529  
                                 __ptext29 045F                                   __ptext46 0526  
                                 __ptext38 0415                                   __ptext39 04AE  
                             _SSP1CON1bits 0190                               _SSP1CON2bits 0191  
                    FLASH_WriteWord@ramBuf 0045                      FLASH_WriteWord@offset 0048  
     __end_of_I2C1_SlaveSetWriteIntHandler 04DB               _I2C1_SlaveSetWriteIntHandler 04D5  
           ??_I2C1_SlaveSetWrColIntHandler 0075       __end_of_TMR0_DefaultInterruptHandler 0364  
             _TMR0_DefaultInterruptHandler 033A                 __end_of_I2C1_SlaveClearIrq 0526  
                  _I2C1_SlaveSetIsrHandler 04E7                                   int$flags 007E  
       __end_of_INTERRUPT_InterruptManager 0031                 _INTERRUPT_InterruptManager 0004  
                             _SSP1STATbits 018F                          ?_FLASH_EraseBlock 0073  
               __end_of_getSensorBoardType 047C                         ??_FLASH_EraseBlock 0075  
                               _INTCONbits 000B                    __end_of_FLASH_WriteWord 0301  
             ??_SensorBoardType_validation 0073                                _NVMCON1bits 081E  
              _i2cReadCnt@i2c1_slave$F1132 0031                _i2cReadCnt@i2c1_slave$F1095 0032  
                                 intlevel1 0000                     _I2C1_SlaveReleaseClock 0520  
                  ?_PIN_MANAGER_Initialize 0070                    ?_I2C1_SlaveIsTxBufEmpty 0070  
                   ??_I2C1_SlaveSendTxData 0070                     ??_I2C1_SlaveWrCallBack 0071  
            ?_TMR0_DefaultInterruptHandler 0070        I2C1_SlaveSetWriteIntHandler@handler 0073  
                               _SSP1DATPPS 1EC6                                 _SSP1CLKPPS 1EC5  
                   _I2C1_SlaveSetSlaveAddr 04FE                            _TMR0_Initialize 042B  
                   _I2C1_SlaveSetSlaveMask 04F9             __end_of_PIN_MANAGER_Initialize 0387  
           __end_of_I2C1_SlaveIsTxBufEmpty 04B5              __end_of_I2C1_SlaveIsRxBufFull 051A  
                ??_I2C1_SlaveSetIsrHandler 0075  
