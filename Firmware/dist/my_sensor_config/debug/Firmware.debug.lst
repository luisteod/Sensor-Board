

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Tue Apr 25 11:16:08 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	16F15223
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	_default_in_flash_text,global,class=STRCODE,delta=2,noexec
     5                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
     9                           	psect	clrtext,global,class=CODE,delta=2
    10                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    14                           	psect	text1,local,class=CODE,merge=1,delta=2
    15                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    16                           	psect	text3,local,class=CODE,merge=1,delta=2
    17                           	psect	text4,local,class=CODE,merge=1,delta=2
    18                           	psect	text5,local,class=CODE,merge=1,delta=2
    19                           	psect	text6,local,class=CODE,merge=1,delta=2
    20                           	psect	text7,local,class=CODE,merge=1,delta=2
    21                           	psect	text8,local,class=CODE,merge=1,delta=2
    22                           	psect	text9,local,class=CODE,merge=1,delta=2
    23                           	psect	text10,local,class=CODE,merge=1,delta=2
    24                           	psect	text11,local,class=CODE,merge=1,delta=2
    25                           	psect	text12,local,class=CODE,merge=1,delta=2
    26                           	psect	text13,local,class=CODE,merge=1,delta=2
    27                           	psect	text14,local,class=CODE,merge=1,delta=2
    28                           	psect	text15,local,class=CODE,merge=1,delta=2
    29                           	psect	text16,local,class=CODE,merge=1,delta=2
    30                           	psect	text17,local,class=CODE,merge=1,delta=2
    31                           	psect	text18,local,class=CODE,merge=1,delta=2
    32                           	psect	text19,local,class=CODE,merge=1,delta=2
    33                           	psect	text20,local,class=CODE,merge=1,inline,delta=2
    34                           	psect	text21,local,class=CODE,merge=1,inline,delta=2
    35                           	psect	text22,local,class=CODE,merge=1,delta=2
    36                           	psect	text23,local,class=CODE,merge=1,delta=2
    37                           	psect	text24,local,class=CODE,merge=1,delta=2
    38                           	psect	text25,local,class=CODE,merge=1,delta=2
    39                           	psect	text26,local,class=CODE,merge=1,inline,delta=2
    40                           	psect	text27,local,class=CODE,merge=1,inline,delta=2
    41                           	psect	intentry,global,class=CODE,delta=2
    42                           	psect	text29,local,class=CODE,merge=1,delta=2
    43                           	psect	text30,local,class=CODE,merge=1,delta=2
    44                           	psect	text31,local,class=CODE,merge=1,delta=2
    45                           	psect	text32,local,class=CODE,merge=1,delta=2
    46                           	psect	text33,local,class=CODE,merge=1,delta=2
    47                           	psect	text34,local,class=CODE,merge=1,inline,delta=2
    48                           	psect	text35,local,class=CODE,merge=1,inline,delta=2
    49                           	psect	text36,local,class=CODE,merge=1,delta=2
    50                           	psect	text37,local,class=CODE,merge=1,delta=2
    51                           	psect	text38,local,class=CODE,merge=1,delta=2
    52                           	psect	text39,local,class=CODE,merge=1,delta=2
    53                           	psect	text40,local,class=CODE,merge=1,delta=2
    54                           	psect	text41,local,class=CODE,merge=1,delta=2
    55                           	psect	text42,local,class=CODE,merge=1,delta=2
    56                           	psect	text43,local,class=CODE,merge=1,inline,delta=2
    57                           	psect	text44,local,class=CODE,merge=1,inline,delta=2
    58                           	psect	text45,local,class=CODE,merge=1,inline,delta=2
    59                           	psect	text46,local,class=CODE,merge=1,inline,delta=2
    60                           	psect	text47,local,class=CODE,merge=1,inline,delta=2
    61                           	psect	text48,local,class=CODE,merge=1,delta=2
    62                           	psect	text49,local,class=CODE,merge=1,delta=2
    63                           	psect	text50,local,class=CODE,merge=1,inline,delta=2
    64                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    65                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    66                           	dabs	1,0x7E,2
    67     0000                     
    68                           ; Generated 19/07/2022 GMT
    69                           ; 
    70                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
    71                           ; All rights reserved.
    72                           ; 
    73                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    74                           ; 
    75                           ; Redistribution and use in source and binary forms, with or without modification, are
    76                           ; permitted provided that the following conditions are met:
    77                           ; 
    78                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    79                           ;        conditions and the following disclaimer.
    80                           ; 
    81                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    82                           ;        of conditions and the following disclaimer in the documentation and/or other
    83                           ;        materials provided with the distribution. Publication is not required when
    84                           ;        this file is used in an embedded application.
    85                           ; 
    86                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    87                           ;        software without specific prior written permission.
    88                           ; 
    89                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    90                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    91                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    92                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    93                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    94                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    95                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    96                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    97                           ; 
    98                           ; 
    99                           ; Code-generator required, PIC16F15223 Definitions
   100                           ; 
   101                           ; SFR Addresses
   102     0000                     	;# 
   103     0001                     	;# 
   104     0002                     	;# 
   105     0003                     	;# 
   106     0004                     	;# 
   107     0005                     	;# 
   108     0006                     	;# 
   109     0007                     	;# 
   110     0008                     	;# 
   111     0009                     	;# 
   112     000A                     	;# 
   113     000B                     	;# 
   114     000C                     	;# 
   115     000E                     	;# 
   116     0012                     	;# 
   117     0014                     	;# 
   118     0018                     	;# 
   119     001A                     	;# 
   120     009A                     	;# 
   121     009B                     	;# 
   122     009B                     	;# 
   123     009C                     	;# 
   124     009D                     	;# 
   125     009E                     	;# 
   126     009F                     	;# 
   127     010E                     	;# 
   128     010F                     	;# 
   129     0119                     	;# 
   130     011A                     	;# 
   131     011B                     	;# 
   132     011B                     	;# 
   133     011C                     	;# 
   134     011D                     	;# 
   135     011E                     	;# 
   136     011F                     	;# 
   137     018C                     	;# 
   138     018D                     	;# 
   139     018E                     	;# 
   140     018F                     	;# 
   141     0190                     	;# 
   142     0191                     	;# 
   143     0192                     	;# 
   144     020C                     	;# 
   145     020D                     	;# 
   146     020E                     	;# 
   147     020E                     	;# 
   148     020F                     	;# 
   149     020F                     	;# 
   150     0210                     	;# 
   151     0210                     	;# 
   152     0211                     	;# 
   153     0211                     	;# 
   154     028C                     	;# 
   155     028C                     	;# 
   156     028D                     	;# 
   157     028D                     	;# 
   158     028E                     	;# 
   159     028F                     	;# 
   160     0290                     	;# 
   161     0291                     	;# 
   162     030C                     	;# 
   163     030C                     	;# 
   164     030D                     	;# 
   165     030E                     	;# 
   166     030F                     	;# 
   167     0310                     	;# 
   168     0310                     	;# 
   169     0311                     	;# 
   170     0312                     	;# 
   171     0313                     	;# 
   172     0314                     	;# 
   173     0314                     	;# 
   174     0315                     	;# 
   175     0316                     	;# 
   176     0318                     	;# 
   177     0318                     	;# 
   178     0319                     	;# 
   179     031A                     	;# 
   180     059C                     	;# 
   181     059C                     	;# 
   182     059D                     	;# 
   183     059D                     	;# 
   184     059E                     	;# 
   185     059F                     	;# 
   186     070C                     	;# 
   187     070D                     	;# 
   188     070E                     	;# 
   189     0716                     	;# 
   190     0717                     	;# 
   191     0718                     	;# 
   192     080C                     	;# 
   193     0811                     	;# 
   194     0813                     	;# 
   195     0814                     	;# 
   196     081A                     	;# 
   197     081A                     	;# 
   198     081B                     	;# 
   199     081C                     	;# 
   200     081C                     	;# 
   201     081D                     	;# 
   202     081E                     	;# 
   203     081F                     	;# 
   204     088E                     	;# 
   205     0890                     	;# 
   206     0891                     	;# 
   207     0892                     	;# 
   208     0893                     	;# 
   209     090C                     	;# 
   210     1E8F                     	;# 
   211     1E90                     	;# 
   212     1E91                     	;# 
   213     1E92                     	;# 
   214     1E93                     	;# 
   215     1E9C                     	;# 
   216     1EA1                     	;# 
   217     1EA2                     	;# 
   218     1EC3                     	;# 
   219     1EC5                     	;# 
   220     1EC6                     	;# 
   221     1EC7                     	;# 
   222     1ECB                     	;# 
   223     1ECB                     	;# 
   224     1ECB                     	;# 
   225     1ECC                     	;# 
   226     1ECC                     	;# 
   227     1ECC                     	;# 
   228     1F10                     	;# 
   229     1F11                     	;# 
   230     1F12                     	;# 
   231     1F14                     	;# 
   232     1F15                     	;# 
   233     1F20                     	;# 
   234     1F21                     	;# 
   235     1F22                     	;# 
   236     1F23                     	;# 
   237     1F24                     	;# 
   238     1F25                     	;# 
   239     1F38                     	;# 
   240     1F39                     	;# 
   241     1F3A                     	;# 
   242     1F3B                     	;# 
   243     1F3C                     	;# 
   244     1F3D                     	;# 
   245     1F3E                     	;# 
   246     1F3F                     	;# 
   247     1F4E                     	;# 
   248     1F4F                     	;# 
   249     1F50                     	;# 
   250     1F51                     	;# 
   251     1F52                     	;# 
   252     1F53                     	;# 
   253     1F54                     	;# 
   254     1F55                     	;# 
   255     1FE4                     	;# 
   256     1FE5                     	;# 
   257     1FE6                     	;# 
   258     1FE7                     	;# 
   259     1FE8                     	;# 
   260     1FE8                     	;# 
   261     1FE9                     	;# 
   262     1FEA                     	;# 
   263     1FEB                     	;# 
   264     1FED                     	;# 
   265     1FEE                     	;# 
   266     1FEF                     	;# 
   267     0000                     	;# 
   268     0001                     	;# 
   269     0002                     	;# 
   270     0003                     	;# 
   271     0004                     	;# 
   272     0005                     	;# 
   273     0006                     	;# 
   274     0007                     	;# 
   275     0008                     	;# 
   276     0009                     	;# 
   277     000A                     	;# 
   278     000B                     	;# 
   279     000C                     	;# 
   280     000E                     	;# 
   281     0012                     	;# 
   282     0014                     	;# 
   283     0018                     	;# 
   284     001A                     	;# 
   285     009A                     	;# 
   286     009B                     	;# 
   287     009B                     	;# 
   288     009C                     	;# 
   289     009D                     	;# 
   290     009E                     	;# 
   291     009F                     	;# 
   292     010E                     	;# 
   293     010F                     	;# 
   294     0119                     	;# 
   295     011A                     	;# 
   296     011B                     	;# 
   297     011B                     	;# 
   298     011C                     	;# 
   299     011D                     	;# 
   300     011E                     	;# 
   301     011F                     	;# 
   302     018C                     	;# 
   303     018D                     	;# 
   304     018E                     	;# 
   305     018F                     	;# 
   306     0190                     	;# 
   307     0191                     	;# 
   308     0192                     	;# 
   309     020C                     	;# 
   310     020D                     	;# 
   311     020E                     	;# 
   312     020E                     	;# 
   313     020F                     	;# 
   314     020F                     	;# 
   315     0210                     	;# 
   316     0210                     	;# 
   317     0211                     	;# 
   318     0211                     	;# 
   319     028C                     	;# 
   320     028C                     	;# 
   321     028D                     	;# 
   322     028D                     	;# 
   323     028E                     	;# 
   324     028F                     	;# 
   325     0290                     	;# 
   326     0291                     	;# 
   327     030C                     	;# 
   328     030C                     	;# 
   329     030D                     	;# 
   330     030E                     	;# 
   331     030F                     	;# 
   332     0310                     	;# 
   333     0310                     	;# 
   334     0311                     	;# 
   335     0312                     	;# 
   336     0313                     	;# 
   337     0314                     	;# 
   338     0314                     	;# 
   339     0315                     	;# 
   340     0316                     	;# 
   341     0318                     	;# 
   342     0318                     	;# 
   343     0319                     	;# 
   344     031A                     	;# 
   345     059C                     	;# 
   346     059C                     	;# 
   347     059D                     	;# 
   348     059D                     	;# 
   349     059E                     	;# 
   350     059F                     	;# 
   351     070C                     	;# 
   352     070D                     	;# 
   353     070E                     	;# 
   354     0716                     	;# 
   355     0717                     	;# 
   356     0718                     	;# 
   357     080C                     	;# 
   358     0811                     	;# 
   359     0813                     	;# 
   360     0814                     	;# 
   361     081A                     	;# 
   362     081A                     	;# 
   363     081B                     	;# 
   364     081C                     	;# 
   365     081C                     	;# 
   366     081D                     	;# 
   367     081E                     	;# 
   368     081F                     	;# 
   369     088E                     	;# 
   370     0890                     	;# 
   371     0891                     	;# 
   372     0892                     	;# 
   373     0893                     	;# 
   374     090C                     	;# 
   375     1E8F                     	;# 
   376     1E90                     	;# 
   377     1E91                     	;# 
   378     1E92                     	;# 
   379     1E93                     	;# 
   380     1E9C                     	;# 
   381     1EA1                     	;# 
   382     1EA2                     	;# 
   383     1EC3                     	;# 
   384     1EC5                     	;# 
   385     1EC6                     	;# 
   386     1EC7                     	;# 
   387     1ECB                     	;# 
   388     1ECB                     	;# 
   389     1ECB                     	;# 
   390     1ECC                     	;# 
   391     1ECC                     	;# 
   392     1ECC                     	;# 
   393     1F10                     	;# 
   394     1F11                     	;# 
   395     1F12                     	;# 
   396     1F14                     	;# 
   397     1F15                     	;# 
   398     1F20                     	;# 
   399     1F21                     	;# 
   400     1F22                     	;# 
   401     1F23                     	;# 
   402     1F24                     	;# 
   403     1F25                     	;# 
   404     1F38                     	;# 
   405     1F39                     	;# 
   406     1F3A                     	;# 
   407     1F3B                     	;# 
   408     1F3C                     	;# 
   409     1F3D                     	;# 
   410     1F3E                     	;# 
   411     1F3F                     	;# 
   412     1F4E                     	;# 
   413     1F4F                     	;# 
   414     1F50                     	;# 
   415     1F51                     	;# 
   416     1F52                     	;# 
   417     1F53                     	;# 
   418     1F54                     	;# 
   419     1F55                     	;# 
   420     1FE4                     	;# 
   421     1FE5                     	;# 
   422     1FE6                     	;# 
   423     1FE7                     	;# 
   424     1FE8                     	;# 
   425     1FE8                     	;# 
   426     1FE9                     	;# 
   427     1FEA                     	;# 
   428     1FEB                     	;# 
   429     1FED                     	;# 
   430     1FEE                     	;# 
   431     1FEF                     	;# 
   432     0000                     	;# 
   433     0001                     	;# 
   434     0002                     	;# 
   435     0003                     	;# 
   436     0004                     	;# 
   437     0005                     	;# 
   438     0006                     	;# 
   439     0007                     	;# 
   440     0008                     	;# 
   441     0009                     	;# 
   442     000A                     	;# 
   443     000B                     	;# 
   444     000C                     	;# 
   445     000E                     	;# 
   446     0012                     	;# 
   447     0014                     	;# 
   448     0018                     	;# 
   449     001A                     	;# 
   450     009A                     	;# 
   451     009B                     	;# 
   452     009B                     	;# 
   453     009C                     	;# 
   454     009D                     	;# 
   455     009E                     	;# 
   456     009F                     	;# 
   457     010E                     	;# 
   458     010F                     	;# 
   459     0119                     	;# 
   460     011A                     	;# 
   461     011B                     	;# 
   462     011B                     	;# 
   463     011C                     	;# 
   464     011D                     	;# 
   465     011E                     	;# 
   466     011F                     	;# 
   467     018C                     	;# 
   468     018D                     	;# 
   469     018E                     	;# 
   470     018F                     	;# 
   471     0190                     	;# 
   472     0191                     	;# 
   473     0192                     	;# 
   474     020C                     	;# 
   475     020D                     	;# 
   476     020E                     	;# 
   477     020E                     	;# 
   478     020F                     	;# 
   479     020F                     	;# 
   480     0210                     	;# 
   481     0210                     	;# 
   482     0211                     	;# 
   483     0211                     	;# 
   484     028C                     	;# 
   485     028C                     	;# 
   486     028D                     	;# 
   487     028D                     	;# 
   488     028E                     	;# 
   489     028F                     	;# 
   490     0290                     	;# 
   491     0291                     	;# 
   492     030C                     	;# 
   493     030C                     	;# 
   494     030D                     	;# 
   495     030E                     	;# 
   496     030F                     	;# 
   497     0310                     	;# 
   498     0310                     	;# 
   499     0311                     	;# 
   500     0312                     	;# 
   501     0313                     	;# 
   502     0314                     	;# 
   503     0314                     	;# 
   504     0315                     	;# 
   505     0316                     	;# 
   506     0318                     	;# 
   507     0318                     	;# 
   508     0319                     	;# 
   509     031A                     	;# 
   510     059C                     	;# 
   511     059C                     	;# 
   512     059D                     	;# 
   513     059D                     	;# 
   514     059E                     	;# 
   515     059F                     	;# 
   516     070C                     	;# 
   517     070D                     	;# 
   518     070E                     	;# 
   519     0716                     	;# 
   520     0717                     	;# 
   521     0718                     	;# 
   522     080C                     	;# 
   523     0811                     	;# 
   524     0813                     	;# 
   525     0814                     	;# 
   526     081A                     	;# 
   527     081A                     	;# 
   528     081B                     	;# 
   529     081C                     	;# 
   530     081C                     	;# 
   531     081D                     	;# 
   532     081E                     	;# 
   533     081F                     	;# 
   534     088E                     	;# 
   535     0890                     	;# 
   536     0891                     	;# 
   537     0892                     	;# 
   538     0893                     	;# 
   539     090C                     	;# 
   540     1E8F                     	;# 
   541     1E90                     	;# 
   542     1E91                     	;# 
   543     1E92                     	;# 
   544     1E93                     	;# 
   545     1E9C                     	;# 
   546     1EA1                     	;# 
   547     1EA2                     	;# 
   548     1EC3                     	;# 
   549     1EC5                     	;# 
   550     1EC6                     	;# 
   551     1EC7                     	;# 
   552     1ECB                     	;# 
   553     1ECB                     	;# 
   554     1ECB                     	;# 
   555     1ECC                     	;# 
   556     1ECC                     	;# 
   557     1ECC                     	;# 
   558     1F10                     	;# 
   559     1F11                     	;# 
   560     1F12                     	;# 
   561     1F14                     	;# 
   562     1F15                     	;# 
   563     1F20                     	;# 
   564     1F21                     	;# 
   565     1F22                     	;# 
   566     1F23                     	;# 
   567     1F24                     	;# 
   568     1F25                     	;# 
   569     1F38                     	;# 
   570     1F39                     	;# 
   571     1F3A                     	;# 
   572     1F3B                     	;# 
   573     1F3C                     	;# 
   574     1F3D                     	;# 
   575     1F3E                     	;# 
   576     1F3F                     	;# 
   577     1F4E                     	;# 
   578     1F4F                     	;# 
   579     1F50                     	;# 
   580     1F51                     	;# 
   581     1F52                     	;# 
   582     1F53                     	;# 
   583     1F54                     	;# 
   584     1F55                     	;# 
   585     1FE4                     	;# 
   586     1FE5                     	;# 
   587     1FE6                     	;# 
   588     1FE7                     	;# 
   589     1FE8                     	;# 
   590     1FE8                     	;# 
   591     1FE9                     	;# 
   592     1FEA                     	;# 
   593     1FEB                     	;# 
   594     1FED                     	;# 
   595     1FEE                     	;# 
   596     1FEF                     	;# 
   597     0000                     	;# 
   598     0001                     	;# 
   599     0002                     	;# 
   600     0003                     	;# 
   601     0004                     	;# 
   602     0005                     	;# 
   603     0006                     	;# 
   604     0007                     	;# 
   605     0008                     	;# 
   606     0009                     	;# 
   607     000A                     	;# 
   608     000B                     	;# 
   609     000C                     	;# 
   610     000E                     	;# 
   611     0012                     	;# 
   612     0014                     	;# 
   613     0018                     	;# 
   614     001A                     	;# 
   615     009A                     	;# 
   616     009B                     	;# 
   617     009B                     	;# 
   618     009C                     	;# 
   619     009D                     	;# 
   620     009E                     	;# 
   621     009F                     	;# 
   622     010E                     	;# 
   623     010F                     	;# 
   624     0119                     	;# 
   625     011A                     	;# 
   626     011B                     	;# 
   627     011B                     	;# 
   628     011C                     	;# 
   629     011D                     	;# 
   630     011E                     	;# 
   631     011F                     	;# 
   632     018C                     	;# 
   633     018D                     	;# 
   634     018E                     	;# 
   635     018F                     	;# 
   636     0190                     	;# 
   637     0191                     	;# 
   638     0192                     	;# 
   639     020C                     	;# 
   640     020D                     	;# 
   641     020E                     	;# 
   642     020E                     	;# 
   643     020F                     	;# 
   644     020F                     	;# 
   645     0210                     	;# 
   646     0210                     	;# 
   647     0211                     	;# 
   648     0211                     	;# 
   649     028C                     	;# 
   650     028C                     	;# 
   651     028D                     	;# 
   652     028D                     	;# 
   653     028E                     	;# 
   654     028F                     	;# 
   655     0290                     	;# 
   656     0291                     	;# 
   657     030C                     	;# 
   658     030C                     	;# 
   659     030D                     	;# 
   660     030E                     	;# 
   661     030F                     	;# 
   662     0310                     	;# 
   663     0310                     	;# 
   664     0311                     	;# 
   665     0312                     	;# 
   666     0313                     	;# 
   667     0314                     	;# 
   668     0314                     	;# 
   669     0315                     	;# 
   670     0316                     	;# 
   671     0318                     	;# 
   672     0318                     	;# 
   673     0319                     	;# 
   674     031A                     	;# 
   675     059C                     	;# 
   676     059C                     	;# 
   677     059D                     	;# 
   678     059D                     	;# 
   679     059E                     	;# 
   680     059F                     	;# 
   681     070C                     	;# 
   682     070D                     	;# 
   683     070E                     	;# 
   684     0716                     	;# 
   685     0717                     	;# 
   686     0718                     	;# 
   687     080C                     	;# 
   688     0811                     	;# 
   689     0813                     	;# 
   690     0814                     	;# 
   691     081A                     	;# 
   692     081A                     	;# 
   693     081B                     	;# 
   694     081C                     	;# 
   695     081C                     	;# 
   696     081D                     	;# 
   697     081E                     	;# 
   698     081F                     	;# 
   699     088E                     	;# 
   700     0890                     	;# 
   701     0891                     	;# 
   702     0892                     	;# 
   703     0893                     	;# 
   704     090C                     	;# 
   705     1E8F                     	;# 
   706     1E90                     	;# 
   707     1E91                     	;# 
   708     1E92                     	;# 
   709     1E93                     	;# 
   710     1E9C                     	;# 
   711     1EA1                     	;# 
   712     1EA2                     	;# 
   713     1EC3                     	;# 
   714     1EC5                     	;# 
   715     1EC6                     	;# 
   716     1EC7                     	;# 
   717     1ECB                     	;# 
   718     1ECB                     	;# 
   719     1ECB                     	;# 
   720     1ECC                     	;# 
   721     1ECC                     	;# 
   722     1ECC                     	;# 
   723     1F10                     	;# 
   724     1F11                     	;# 
   725     1F12                     	;# 
   726     1F14                     	;# 
   727     1F15                     	;# 
   728     1F20                     	;# 
   729     1F21                     	;# 
   730     1F22                     	;# 
   731     1F23                     	;# 
   732     1F24                     	;# 
   733     1F25                     	;# 
   734     1F38                     	;# 
   735     1F39                     	;# 
   736     1F3A                     	;# 
   737     1F3B                     	;# 
   738     1F3C                     	;# 
   739     1F3D                     	;# 
   740     1F3E                     	;# 
   741     1F3F                     	;# 
   742     1F4E                     	;# 
   743     1F4F                     	;# 
   744     1F50                     	;# 
   745     1F51                     	;# 
   746     1F52                     	;# 
   747     1F53                     	;# 
   748     1F54                     	;# 
   749     1F55                     	;# 
   750     1FE4                     	;# 
   751     1FE5                     	;# 
   752     1FE6                     	;# 
   753     1FE7                     	;# 
   754     1FE8                     	;# 
   755     1FE8                     	;# 
   756     1FE9                     	;# 
   757     1FEA                     	;# 
   758     1FEB                     	;# 
   759     1FED                     	;# 
   760     1FEE                     	;# 
   761     1FEF                     	;# 
   762     0000                     	;# 
   763     0001                     	;# 
   764     0002                     	;# 
   765     0003                     	;# 
   766     0004                     	;# 
   767     0005                     	;# 
   768     0006                     	;# 
   769     0007                     	;# 
   770     0008                     	;# 
   771     0009                     	;# 
   772     000A                     	;# 
   773     000B                     	;# 
   774     000C                     	;# 
   775     000E                     	;# 
   776     0012                     	;# 
   777     0014                     	;# 
   778     0018                     	;# 
   779     001A                     	;# 
   780     009A                     	;# 
   781     009B                     	;# 
   782     009B                     	;# 
   783     009C                     	;# 
   784     009D                     	;# 
   785     009E                     	;# 
   786     009F                     	;# 
   787     010E                     	;# 
   788     010F                     	;# 
   789     0119                     	;# 
   790     011A                     	;# 
   791     011B                     	;# 
   792     011B                     	;# 
   793     011C                     	;# 
   794     011D                     	;# 
   795     011E                     	;# 
   796     011F                     	;# 
   797     018C                     	;# 
   798     018D                     	;# 
   799     018E                     	;# 
   800     018F                     	;# 
   801     0190                     	;# 
   802     0191                     	;# 
   803     0192                     	;# 
   804     020C                     	;# 
   805     020D                     	;# 
   806     020E                     	;# 
   807     020E                     	;# 
   808     020F                     	;# 
   809     020F                     	;# 
   810     0210                     	;# 
   811     0210                     	;# 
   812     0211                     	;# 
   813     0211                     	;# 
   814     028C                     	;# 
   815     028C                     	;# 
   816     028D                     	;# 
   817     028D                     	;# 
   818     028E                     	;# 
   819     028F                     	;# 
   820     0290                     	;# 
   821     0291                     	;# 
   822     030C                     	;# 
   823     030C                     	;# 
   824     030D                     	;# 
   825     030E                     	;# 
   826     030F                     	;# 
   827     0310                     	;# 
   828     0310                     	;# 
   829     0311                     	;# 
   830     0312                     	;# 
   831     0313                     	;# 
   832     0314                     	;# 
   833     0314                     	;# 
   834     0315                     	;# 
   835     0316                     	;# 
   836     0318                     	;# 
   837     0318                     	;# 
   838     0319                     	;# 
   839     031A                     	;# 
   840     059C                     	;# 
   841     059C                     	;# 
   842     059D                     	;# 
   843     059D                     	;# 
   844     059E                     	;# 
   845     059F                     	;# 
   846     070C                     	;# 
   847     070D                     	;# 
   848     070E                     	;# 
   849     0716                     	;# 
   850     0717                     	;# 
   851     0718                     	;# 
   852     080C                     	;# 
   853     0811                     	;# 
   854     0813                     	;# 
   855     0814                     	;# 
   856     081A                     	;# 
   857     081A                     	;# 
   858     081B                     	;# 
   859     081C                     	;# 
   860     081C                     	;# 
   861     081D                     	;# 
   862     081E                     	;# 
   863     081F                     	;# 
   864     088E                     	;# 
   865     0890                     	;# 
   866     0891                     	;# 
   867     0892                     	;# 
   868     0893                     	;# 
   869     090C                     	;# 
   870     1E8F                     	;# 
   871     1E90                     	;# 
   872     1E91                     	;# 
   873     1E92                     	;# 
   874     1E93                     	;# 
   875     1E9C                     	;# 
   876     1EA1                     	;# 
   877     1EA2                     	;# 
   878     1EC3                     	;# 
   879     1EC5                     	;# 
   880     1EC6                     	;# 
   881     1EC7                     	;# 
   882     1ECB                     	;# 
   883     1ECB                     	;# 
   884     1ECB                     	;# 
   885     1ECC                     	;# 
   886     1ECC                     	;# 
   887     1ECC                     	;# 
   888     1F10                     	;# 
   889     1F11                     	;# 
   890     1F12                     	;# 
   891     1F14                     	;# 
   892     1F15                     	;# 
   893     1F20                     	;# 
   894     1F21                     	;# 
   895     1F22                     	;# 
   896     1F23                     	;# 
   897     1F24                     	;# 
   898     1F25                     	;# 
   899     1F38                     	;# 
   900     1F39                     	;# 
   901     1F3A                     	;# 
   902     1F3B                     	;# 
   903     1F3C                     	;# 
   904     1F3D                     	;# 
   905     1F3E                     	;# 
   906     1F3F                     	;# 
   907     1F4E                     	;# 
   908     1F4F                     	;# 
   909     1F50                     	;# 
   910     1F51                     	;# 
   911     1F52                     	;# 
   912     1F53                     	;# 
   913     1F54                     	;# 
   914     1F55                     	;# 
   915     1FE4                     	;# 
   916     1FE5                     	;# 
   917     1FE6                     	;# 
   918     1FE7                     	;# 
   919     1FE8                     	;# 
   920     1FE8                     	;# 
   921     1FE9                     	;# 
   922     1FEA                     	;# 
   923     1FEB                     	;# 
   924     1FED                     	;# 
   925     1FEE                     	;# 
   926     1FEF                     	;# 
   927     0000                     	;# 
   928     0001                     	;# 
   929     0002                     	;# 
   930     0003                     	;# 
   931     0004                     	;# 
   932     0005                     	;# 
   933     0006                     	;# 
   934     0007                     	;# 
   935     0008                     	;# 
   936     0009                     	;# 
   937     000A                     	;# 
   938     000B                     	;# 
   939     000C                     	;# 
   940     000E                     	;# 
   941     0012                     	;# 
   942     0014                     	;# 
   943     0018                     	;# 
   944     001A                     	;# 
   945     009A                     	;# 
   946     009B                     	;# 
   947     009B                     	;# 
   948     009C                     	;# 
   949     009D                     	;# 
   950     009E                     	;# 
   951     009F                     	;# 
   952     010E                     	;# 
   953     010F                     	;# 
   954     0119                     	;# 
   955     011A                     	;# 
   956     011B                     	;# 
   957     011B                     	;# 
   958     011C                     	;# 
   959     011D                     	;# 
   960     011E                     	;# 
   961     011F                     	;# 
   962     018C                     	;# 
   963     018D                     	;# 
   964     018E                     	;# 
   965     018F                     	;# 
   966     0190                     	;# 
   967     0191                     	;# 
   968     0192                     	;# 
   969     020C                     	;# 
   970     020D                     	;# 
   971     020E                     	;# 
   972     020E                     	;# 
   973     020F                     	;# 
   974     020F                     	;# 
   975     0210                     	;# 
   976     0210                     	;# 
   977     0211                     	;# 
   978     0211                     	;# 
   979     028C                     	;# 
   980     028C                     	;# 
   981     028D                     	;# 
   982     028D                     	;# 
   983     028E                     	;# 
   984     028F                     	;# 
   985     0290                     	;# 
   986     0291                     	;# 
   987     030C                     	;# 
   988     030C                     	;# 
   989     030D                     	;# 
   990     030E                     	;# 
   991     030F                     	;# 
   992     0310                     	;# 
   993     0310                     	;# 
   994     0311                     	;# 
   995     0312                     	;# 
   996     0313                     	;# 
   997     0314                     	;# 
   998     0314                     	;# 
   999     0315                     	;# 
  1000     0316                     	;# 
  1001     0318                     	;# 
  1002     0318                     	;# 
  1003     0319                     	;# 
  1004     031A                     	;# 
  1005     059C                     	;# 
  1006     059C                     	;# 
  1007     059D                     	;# 
  1008     059D                     	;# 
  1009     059E                     	;# 
  1010     059F                     	;# 
  1011     070C                     	;# 
  1012     070D                     	;# 
  1013     070E                     	;# 
  1014     0716                     	;# 
  1015     0717                     	;# 
  1016     0718                     	;# 
  1017     080C                     	;# 
  1018     0811                     	;# 
  1019     0813                     	;# 
  1020     0814                     	;# 
  1021     081A                     	;# 
  1022     081A                     	;# 
  1023     081B                     	;# 
  1024     081C                     	;# 
  1025     081C                     	;# 
  1026     081D                     	;# 
  1027     081E                     	;# 
  1028     081F                     	;# 
  1029     088E                     	;# 
  1030     0890                     	;# 
  1031     0891                     	;# 
  1032     0892                     	;# 
  1033     0893                     	;# 
  1034     090C                     	;# 
  1035     1E8F                     	;# 
  1036     1E90                     	;# 
  1037     1E91                     	;# 
  1038     1E92                     	;# 
  1039     1E93                     	;# 
  1040     1E9C                     	;# 
  1041     1EA1                     	;# 
  1042     1EA2                     	;# 
  1043     1EC3                     	;# 
  1044     1EC5                     	;# 
  1045     1EC6                     	;# 
  1046     1EC7                     	;# 
  1047     1ECB                     	;# 
  1048     1ECB                     	;# 
  1049     1ECB                     	;# 
  1050     1ECC                     	;# 
  1051     1ECC                     	;# 
  1052     1ECC                     	;# 
  1053     1F10                     	;# 
  1054     1F11                     	;# 
  1055     1F12                     	;# 
  1056     1F14                     	;# 
  1057     1F15                     	;# 
  1058     1F20                     	;# 
  1059     1F21                     	;# 
  1060     1F22                     	;# 
  1061     1F23                     	;# 
  1062     1F24                     	;# 
  1063     1F25                     	;# 
  1064     1F38                     	;# 
  1065     1F39                     	;# 
  1066     1F3A                     	;# 
  1067     1F3B                     	;# 
  1068     1F3C                     	;# 
  1069     1F3D                     	;# 
  1070     1F3E                     	;# 
  1071     1F3F                     	;# 
  1072     1F4E                     	;# 
  1073     1F4F                     	;# 
  1074     1F50                     	;# 
  1075     1F51                     	;# 
  1076     1F52                     	;# 
  1077     1F53                     	;# 
  1078     1F54                     	;# 
  1079     1F55                     	;# 
  1080     1FE4                     	;# 
  1081     1FE5                     	;# 
  1082     1FE6                     	;# 
  1083     1FE7                     	;# 
  1084     1FE8                     	;# 
  1085     1FE8                     	;# 
  1086     1FE9                     	;# 
  1087     1FEA                     	;# 
  1088     1FEB                     	;# 
  1089     1FED                     	;# 
  1090     1FEE                     	;# 
  1091     1FEF                     	;# 
  1092     0000                     	;# 
  1093     0001                     	;# 
  1094     0002                     	;# 
  1095     0003                     	;# 
  1096     0004                     	;# 
  1097     0005                     	;# 
  1098     0006                     	;# 
  1099     0007                     	;# 
  1100     0008                     	;# 
  1101     0009                     	;# 
  1102     000A                     	;# 
  1103     000B                     	;# 
  1104     000C                     	;# 
  1105     000E                     	;# 
  1106     0012                     	;# 
  1107     0014                     	;# 
  1108     0018                     	;# 
  1109     001A                     	;# 
  1110     009A                     	;# 
  1111     009B                     	;# 
  1112     009B                     	;# 
  1113     009C                     	;# 
  1114     009D                     	;# 
  1115     009E                     	;# 
  1116     009F                     	;# 
  1117     010E                     	;# 
  1118     010F                     	;# 
  1119     0119                     	;# 
  1120     011A                     	;# 
  1121     011B                     	;# 
  1122     011B                     	;# 
  1123     011C                     	;# 
  1124     011D                     	;# 
  1125     011E                     	;# 
  1126     011F                     	;# 
  1127     018C                     	;# 
  1128     018D                     	;# 
  1129     018E                     	;# 
  1130     018F                     	;# 
  1131     0190                     	;# 
  1132     0191                     	;# 
  1133     0192                     	;# 
  1134     020C                     	;# 
  1135     020D                     	;# 
  1136     020E                     	;# 
  1137     020E                     	;# 
  1138     020F                     	;# 
  1139     020F                     	;# 
  1140     0210                     	;# 
  1141     0210                     	;# 
  1142     0211                     	;# 
  1143     0211                     	;# 
  1144     028C                     	;# 
  1145     028C                     	;# 
  1146     028D                     	;# 
  1147     028D                     	;# 
  1148     028E                     	;# 
  1149     028F                     	;# 
  1150     0290                     	;# 
  1151     0291                     	;# 
  1152     030C                     	;# 
  1153     030C                     	;# 
  1154     030D                     	;# 
  1155     030E                     	;# 
  1156     030F                     	;# 
  1157     0310                     	;# 
  1158     0310                     	;# 
  1159     0311                     	;# 
  1160     0312                     	;# 
  1161     0313                     	;# 
  1162     0314                     	;# 
  1163     0314                     	;# 
  1164     0315                     	;# 
  1165     0316                     	;# 
  1166     0318                     	;# 
  1167     0318                     	;# 
  1168     0319                     	;# 
  1169     031A                     	;# 
  1170     059C                     	;# 
  1171     059C                     	;# 
  1172     059D                     	;# 
  1173     059D                     	;# 
  1174     059E                     	;# 
  1175     059F                     	;# 
  1176     070C                     	;# 
  1177     070D                     	;# 
  1178     070E                     	;# 
  1179     0716                     	;# 
  1180     0717                     	;# 
  1181     0718                     	;# 
  1182     080C                     	;# 
  1183     0811                     	;# 
  1184     0813                     	;# 
  1185     0814                     	;# 
  1186     081A                     	;# 
  1187     081A                     	;# 
  1188     081B                     	;# 
  1189     081C                     	;# 
  1190     081C                     	;# 
  1191     081D                     	;# 
  1192     081E                     	;# 
  1193     081F                     	;# 
  1194     088E                     	;# 
  1195     0890                     	;# 
  1196     0891                     	;# 
  1197     0892                     	;# 
  1198     0893                     	;# 
  1199     090C                     	;# 
  1200     1E8F                     	;# 
  1201     1E90                     	;# 
  1202     1E91                     	;# 
  1203     1E92                     	;# 
  1204     1E93                     	;# 
  1205     1E9C                     	;# 
  1206     1EA1                     	;# 
  1207     1EA2                     	;# 
  1208     1EC3                     	;# 
  1209     1EC5                     	;# 
  1210     1EC6                     	;# 
  1211     1EC7                     	;# 
  1212     1ECB                     	;# 
  1213     1ECB                     	;# 
  1214     1ECB                     	;# 
  1215     1ECC                     	;# 
  1216     1ECC                     	;# 
  1217     1ECC                     	;# 
  1218     1F10                     	;# 
  1219     1F11                     	;# 
  1220     1F12                     	;# 
  1221     1F14                     	;# 
  1222     1F15                     	;# 
  1223     1F20                     	;# 
  1224     1F21                     	;# 
  1225     1F22                     	;# 
  1226     1F23                     	;# 
  1227     1F24                     	;# 
  1228     1F25                     	;# 
  1229     1F38                     	;# 
  1230     1F39                     	;# 
  1231     1F3A                     	;# 
  1232     1F3B                     	;# 
  1233     1F3C                     	;# 
  1234     1F3D                     	;# 
  1235     1F3E                     	;# 
  1236     1F3F                     	;# 
  1237     1F4E                     	;# 
  1238     1F4F                     	;# 
  1239     1F50                     	;# 
  1240     1F51                     	;# 
  1241     1F52                     	;# 
  1242     1F53                     	;# 
  1243     1F54                     	;# 
  1244     1F55                     	;# 
  1245     1FE4                     	;# 
  1246     1FE5                     	;# 
  1247     1FE6                     	;# 
  1248     1FE7                     	;# 
  1249     1FE8                     	;# 
  1250     1FE8                     	;# 
  1251     1FE9                     	;# 
  1252     1FEA                     	;# 
  1253     1FEB                     	;# 
  1254     1FED                     	;# 
  1255     1FEE                     	;# 
  1256     1FEF                     	;# 
  1257     0000                     	;# 
  1258     0001                     	;# 
  1259     0002                     	;# 
  1260     0003                     	;# 
  1261     0004                     	;# 
  1262     0005                     	;# 
  1263     0006                     	;# 
  1264     0007                     	;# 
  1265     0008                     	;# 
  1266     0009                     	;# 
  1267     000A                     	;# 
  1268     000B                     	;# 
  1269     000C                     	;# 
  1270     000E                     	;# 
  1271     0012                     	;# 
  1272     0014                     	;# 
  1273     0018                     	;# 
  1274     001A                     	;# 
  1275     009A                     	;# 
  1276     009B                     	;# 
  1277     009B                     	;# 
  1278     009C                     	;# 
  1279     009D                     	;# 
  1280     009E                     	;# 
  1281     009F                     	;# 
  1282     010E                     	;# 
  1283     010F                     	;# 
  1284     0119                     	;# 
  1285     011A                     	;# 
  1286     011B                     	;# 
  1287     011B                     	;# 
  1288     011C                     	;# 
  1289     011D                     	;# 
  1290     011E                     	;# 
  1291     011F                     	;# 
  1292     018C                     	;# 
  1293     018D                     	;# 
  1294     018E                     	;# 
  1295     018F                     	;# 
  1296     0190                     	;# 
  1297     0191                     	;# 
  1298     0192                     	;# 
  1299     020C                     	;# 
  1300     020D                     	;# 
  1301     020E                     	;# 
  1302     020E                     	;# 
  1303     020F                     	;# 
  1304     020F                     	;# 
  1305     0210                     	;# 
  1306     0210                     	;# 
  1307     0211                     	;# 
  1308     0211                     	;# 
  1309     028C                     	;# 
  1310     028C                     	;# 
  1311     028D                     	;# 
  1312     028D                     	;# 
  1313     028E                     	;# 
  1314     028F                     	;# 
  1315     0290                     	;# 
  1316     0291                     	;# 
  1317     030C                     	;# 
  1318     030C                     	;# 
  1319     030D                     	;# 
  1320     030E                     	;# 
  1321     030F                     	;# 
  1322     0310                     	;# 
  1323     0310                     	;# 
  1324     0311                     	;# 
  1325     0312                     	;# 
  1326     0313                     	;# 
  1327     0314                     	;# 
  1328     0314                     	;# 
  1329     0315                     	;# 
  1330     0316                     	;# 
  1331     0318                     	;# 
  1332     0318                     	;# 
  1333     0319                     	;# 
  1334     031A                     	;# 
  1335     059C                     	;# 
  1336     059C                     	;# 
  1337     059D                     	;# 
  1338     059D                     	;# 
  1339     059E                     	;# 
  1340     059F                     	;# 
  1341     070C                     	;# 
  1342     070D                     	;# 
  1343     070E                     	;# 
  1344     0716                     	;# 
  1345     0717                     	;# 
  1346     0718                     	;# 
  1347     080C                     	;# 
  1348     0811                     	;# 
  1349     0813                     	;# 
  1350     0814                     	;# 
  1351     081A                     	;# 
  1352     081A                     	;# 
  1353     081B                     	;# 
  1354     081C                     	;# 
  1355     081C                     	;# 
  1356     081D                     	;# 
  1357     081E                     	;# 
  1358     081F                     	;# 
  1359     088E                     	;# 
  1360     0890                     	;# 
  1361     0891                     	;# 
  1362     0892                     	;# 
  1363     0893                     	;# 
  1364     090C                     	;# 
  1365     1E8F                     	;# 
  1366     1E90                     	;# 
  1367     1E91                     	;# 
  1368     1E92                     	;# 
  1369     1E93                     	;# 
  1370     1E9C                     	;# 
  1371     1EA1                     	;# 
  1372     1EA2                     	;# 
  1373     1EC3                     	;# 
  1374     1EC5                     	;# 
  1375     1EC6                     	;# 
  1376     1EC7                     	;# 
  1377     1ECB                     	;# 
  1378     1ECB                     	;# 
  1379     1ECB                     	;# 
  1380     1ECC                     	;# 
  1381     1ECC                     	;# 
  1382     1ECC                     	;# 
  1383     1F10                     	;# 
  1384     1F11                     	;# 
  1385     1F12                     	;# 
  1386     1F14                     	;# 
  1387     1F15                     	;# 
  1388     1F20                     	;# 
  1389     1F21                     	;# 
  1390     1F22                     	;# 
  1391     1F23                     	;# 
  1392     1F24                     	;# 
  1393     1F25                     	;# 
  1394     1F38                     	;# 
  1395     1F39                     	;# 
  1396     1F3A                     	;# 
  1397     1F3B                     	;# 
  1398     1F3C                     	;# 
  1399     1F3D                     	;# 
  1400     1F3E                     	;# 
  1401     1F3F                     	;# 
  1402     1F4E                     	;# 
  1403     1F4F                     	;# 
  1404     1F50                     	;# 
  1405     1F51                     	;# 
  1406     1F52                     	;# 
  1407     1F53                     	;# 
  1408     1F54                     	;# 
  1409     1F55                     	;# 
  1410     1FE4                     	;# 
  1411     1FE5                     	;# 
  1412     1FE6                     	;# 
  1413     1FE7                     	;# 
  1414     1FE8                     	;# 
  1415     1FE8                     	;# 
  1416     1FE9                     	;# 
  1417     1FEA                     	;# 
  1418     1FEB                     	;# 
  1419     1FED                     	;# 
  1420     1FEE                     	;# 
  1421     1FEF                     	;# 
  1422     0000                     	;# 
  1423     0001                     	;# 
  1424     0002                     	;# 
  1425     0003                     	;# 
  1426     0004                     	;# 
  1427     0005                     	;# 
  1428     0006                     	;# 
  1429     0007                     	;# 
  1430     0008                     	;# 
  1431     0009                     	;# 
  1432     000A                     	;# 
  1433     000B                     	;# 
  1434     000C                     	;# 
  1435     000E                     	;# 
  1436     0012                     	;# 
  1437     0014                     	;# 
  1438     0018                     	;# 
  1439     001A                     	;# 
  1440     009A                     	;# 
  1441     009B                     	;# 
  1442     009B                     	;# 
  1443     009C                     	;# 
  1444     009D                     	;# 
  1445     009E                     	;# 
  1446     009F                     	;# 
  1447     010E                     	;# 
  1448     010F                     	;# 
  1449     0119                     	;# 
  1450     011A                     	;# 
  1451     011B                     	;# 
  1452     011B                     	;# 
  1453     011C                     	;# 
  1454     011D                     	;# 
  1455     011E                     	;# 
  1456     011F                     	;# 
  1457     018C                     	;# 
  1458     018D                     	;# 
  1459     018E                     	;# 
  1460     018F                     	;# 
  1461     0190                     	;# 
  1462     0191                     	;# 
  1463     0192                     	;# 
  1464     020C                     	;# 
  1465     020D                     	;# 
  1466     020E                     	;# 
  1467     020E                     	;# 
  1468     020F                     	;# 
  1469     020F                     	;# 
  1470     0210                     	;# 
  1471     0210                     	;# 
  1472     0211                     	;# 
  1473     0211                     	;# 
  1474     028C                     	;# 
  1475     028C                     	;# 
  1476     028D                     	;# 
  1477     028D                     	;# 
  1478     028E                     	;# 
  1479     028F                     	;# 
  1480     0290                     	;# 
  1481     0291                     	;# 
  1482     030C                     	;# 
  1483     030C                     	;# 
  1484     030D                     	;# 
  1485     030E                     	;# 
  1486     030F                     	;# 
  1487     0310                     	;# 
  1488     0310                     	;# 
  1489     0311                     	;# 
  1490     0312                     	;# 
  1491     0313                     	;# 
  1492     0314                     	;# 
  1493     0314                     	;# 
  1494     0315                     	;# 
  1495     0316                     	;# 
  1496     0318                     	;# 
  1497     0318                     	;# 
  1498     0319                     	;# 
  1499     031A                     	;# 
  1500     059C                     	;# 
  1501     059C                     	;# 
  1502     059D                     	;# 
  1503     059D                     	;# 
  1504     059E                     	;# 
  1505     059F                     	;# 
  1506     070C                     	;# 
  1507     070D                     	;# 
  1508     070E                     	;# 
  1509     0716                     	;# 
  1510     0717                     	;# 
  1511     0718                     	;# 
  1512     080C                     	;# 
  1513     0811                     	;# 
  1514     0813                     	;# 
  1515     0814                     	;# 
  1516     081A                     	;# 
  1517     081A                     	;# 
  1518     081B                     	;# 
  1519     081C                     	;# 
  1520     081C                     	;# 
  1521     081D                     	;# 
  1522     081E                     	;# 
  1523     081F                     	;# 
  1524     088E                     	;# 
  1525     0890                     	;# 
  1526     0891                     	;# 
  1527     0892                     	;# 
  1528     0893                     	;# 
  1529     090C                     	;# 
  1530     1E8F                     	;# 
  1531     1E90                     	;# 
  1532     1E91                     	;# 
  1533     1E92                     	;# 
  1534     1E93                     	;# 
  1535     1E9C                     	;# 
  1536     1EA1                     	;# 
  1537     1EA2                     	;# 
  1538     1EC3                     	;# 
  1539     1EC5                     	;# 
  1540     1EC6                     	;# 
  1541     1EC7                     	;# 
  1542     1ECB                     	;# 
  1543     1ECB                     	;# 
  1544     1ECB                     	;# 
  1545     1ECC                     	;# 
  1546     1ECC                     	;# 
  1547     1ECC                     	;# 
  1548     1F10                     	;# 
  1549     1F11                     	;# 
  1550     1F12                     	;# 
  1551     1F14                     	;# 
  1552     1F15                     	;# 
  1553     1F20                     	;# 
  1554     1F21                     	;# 
  1555     1F22                     	;# 
  1556     1F23                     	;# 
  1557     1F24                     	;# 
  1558     1F25                     	;# 
  1559     1F38                     	;# 
  1560     1F39                     	;# 
  1561     1F3A                     	;# 
  1562     1F3B                     	;# 
  1563     1F3C                     	;# 
  1564     1F3D                     	;# 
  1565     1F3E                     	;# 
  1566     1F3F                     	;# 
  1567     1F4E                     	;# 
  1568     1F4F                     	;# 
  1569     1F50                     	;# 
  1570     1F51                     	;# 
  1571     1F52                     	;# 
  1572     1F53                     	;# 
  1573     1F54                     	;# 
  1574     1F55                     	;# 
  1575     1FE4                     	;# 
  1576     1FE5                     	;# 
  1577     1FE6                     	;# 
  1578     1FE7                     	;# 
  1579     1FE8                     	;# 
  1580     1FE8                     	;# 
  1581     1FE9                     	;# 
  1582     1FEA                     	;# 
  1583     1FEB                     	;# 
  1584     1FED                     	;# 
  1585     1FEE                     	;# 
  1586     1FEF                     	;# 
  1587                           
  1588 ;; Function _I2C1_SlaveDefWrColInterruptHandler is unused but had its address taken
  1589     0000                     
  1590 ;; Function _I2C1_SlaveDefBusColInterruptHandler is unused but had its address taken
  1591     0040                     _default_in_flash_absaddr	set	64
  1592     0040                     _default_in_flash_absaddr	set	64
  1593                           
  1594                           	psect	_default_in_flash_text
  1595     0040                     __p_default_in_flash_text:
  1596     0040                     _default_in_flash:
  1597     0040  3401               	retlw	1
  1598     0041  3400               	retlw	0
  1599     0042  3401               	retlw	1
  1600     0043  3400               	retlw	0
  1601     0044  3401               	retlw	1
  1602     0045  3400               	retlw	0
  1603     0046  3401               	retlw	1
  1604     0047  3400               	retlw	0
  1605     0048  3401               	retlw	1
  1606     0049  3400               	retlw	0
  1607     004A  3401               	retlw	1
  1608     004B  3400               	retlw	0
  1609     004C  3402               	retlw	2
  1610     004D  3400               	retlw	0
  1611     004E  3402               	retlw	2
  1612     004F  3400               	retlw	0
  1613     0050  3402               	retlw	2
  1614     0051  3400               	retlw	0
  1615     0052  3402               	retlw	2
  1616     0053  3400               	retlw	0
  1617     0054  3402               	retlw	2
  1618     0055  3400               	retlw	0
  1619     0056  3402               	retlw	2
  1620     0057  3400               	retlw	0
  1621     0058  3403               	retlw	3
  1622     0059  3400               	retlw	0
  1623     005A  3403               	retlw	3
  1624     005B  3400               	retlw	0
  1625     005C  3403               	retlw	3
  1626     005D  3400               	retlw	0
  1627     005E  3403               	retlw	3
  1628     005F  3400               	retlw	0
  1629     0060  3403               	retlw	3
  1630     0061  3400               	retlw	0
  1631     0062  3403               	retlw	3
  1632     0063  3400               	retlw	0
  1633     0064  3404               	retlw	4
  1634     0065  3400               	retlw	0
  1635     0066  3404               	retlw	4
  1636     0067  3400               	retlw	0
  1637     0068  3404               	retlw	4
  1638     0069  3400               	retlw	0
  1639     006A  3404               	retlw	4
  1640     006B  3400               	retlw	0
  1641     006C  3404               	retlw	4
  1642     006D  3400               	retlw	0
  1643     006E  3404               	retlw	4
  1644     006F  3400               	retlw	0
  1645     0070  3405               	retlw	5
  1646     0071  3400               	retlw	0
  1647     0072  3405               	retlw	5
  1648     0073  3400               	retlw	0
  1649     0074  3405               	retlw	5
  1650     0075  3400               	retlw	0
  1651     0076  3405               	retlw	5
  1652     0077  3400               	retlw	0
  1653     0078  3405               	retlw	5
  1654     0079  3400               	retlw	0
  1655     007A  3405               	retlw	5
  1656     007B  3400               	retlw	0
  1657     007C  3406               	retlw	6
  1658     007D  3400               	retlw	0
  1659     007E  3406               	retlw	6
  1660     007F  3400               	retlw	0
  1661     0080  3406               	retlw	6
  1662     0081  3400               	retlw	0
  1663     0082  3406               	retlw	6
  1664     0083  3400               	retlw	0
  1665     0084  3406               	retlw	6
  1666     0085  3400               	retlw	0
  1667     0086  3406               	retlw	6
  1668     0087  3400               	retlw	0
  1669     0088  3407               	retlw	7
  1670     0089  3400               	retlw	0
  1671     008A  3407               	retlw	7
  1672     008B  3400               	retlw	0
  1673     008C  3407               	retlw	7
  1674     008D  3400               	retlw	0
  1675     008E  3407               	retlw	7
  1676     008F  3400               	retlw	0
  1677     0090  3407               	retlw	7
  1678     0091  3400               	retlw	0
  1679     0092  3407               	retlw	7
  1680     0093  3400               	retlw	0
  1681     0094  3408               	retlw	8
  1682     0095  3400               	retlw	0
  1683     0096  3408               	retlw	8
  1684     0097  3400               	retlw	0
  1685     0098  3408               	retlw	8
  1686     0099  3400               	retlw	0
  1687     009A  3408               	retlw	8
  1688     009B  3400               	retlw	0
  1689     009C  3408               	retlw	8
  1690     009D  3400               	retlw	0
  1691     009E  3408               	retlw	8
  1692     009F  3400               	retlw	0
  1693     00A0  3409               	retlw	9
  1694     00A1  3400               	retlw	0
  1695     00A2  3409               	retlw	9
  1696     00A3  3400               	retlw	0
  1697     00A4  3409               	retlw	9
  1698     00A5  3400               	retlw	0
  1699     00A6  3409               	retlw	9
  1700     00A7  3400               	retlw	0
  1701     00A8  3409               	retlw	9
  1702     00A9  3400               	retlw	0
  1703     00AA  3409               	retlw	9
  1704     00AB  3400               	retlw	0
  1705     00AC  340A               	retlw	10
  1706     00AD  3400               	retlw	0
  1707     00AE  340A               	retlw	10
  1708     00AF  3400               	retlw	0
  1709     00B0  340A               	retlw	10
  1710     00B1  3400               	retlw	0
  1711     00B2  340A               	retlw	10
  1712     00B3  3400               	retlw	0
  1713     00B4  340A               	retlw	10
  1714     00B5  3400               	retlw	0
  1715     00B6  340A               	retlw	10
  1716     00B7  3400               	retlw	0
  1717     00B8  340B               	retlw	11
  1718     00B9  3400               	retlw	0
  1719     00BA  340B               	retlw	11
  1720     00BB  3400               	retlw	0
  1721     00BC  340B               	retlw	11
  1722     00BD  3400               	retlw	0
  1723     00BE  340B               	retlw	11
  1724     00BF  3400               	retlw	0
  1725     00C0  340B               	retlw	11
  1726     00C1  3400               	retlw	0
  1727     00C2  340B               	retlw	11
  1728     00C3  3400               	retlw	0
  1729     00C4  340C               	retlw	12
  1730     00C5  3400               	retlw	0
  1731     00C6  340C               	retlw	12
  1732     00C7  3400               	retlw	0
  1733     00C8  340C               	retlw	12
  1734     00C9  3400               	retlw	0
  1735     00CA  340C               	retlw	12
  1736     00CB  3400               	retlw	0
  1737     00CC  340C               	retlw	12
  1738     00CD  3400               	retlw	0
  1739     00CE  340C               	retlw	12
  1740     00CF  3400               	retlw	0
  1741     00D0                     __end_of_default_in_flash:
  1742                           
  1743                           	psect	nvBANK0
  1744     005F                     __pnvBANK0:
  1745     005F                     _TMR0_InterruptHandler:
  1746     005F                     	ds	2
  1747     0018                     _LATAbits	set	24
  1748     000B                     _INTCONbits	set	11
  1749     0014                     _TRISC	set	20
  1750     0012                     _TRISA	set	18
  1751     001A                     _LATC	set	26
  1752     0018                     _LATA	set	24
  1753     000C                     _PORTA	set	12
  1754     000E                     _PORTC	set	14
  1755     018C                     _SSP1BUF	set	396
  1756     0191                     _SSP1CON2bits	set	401
  1757     018F                     _SSP1STATbits	set	399
  1758     018E                     _SSP1MSK	set	398
  1759     018D                     _SSP1ADD	set	397
  1760     0190                     _SSP1CON1bits	set	400
  1761     0191                     _SSP1CON2	set	401
  1762     0190                     _SSP1CON1	set	400
  1763     018F                     _SSP1STAT	set	399
  1764     059E                     _T0CON0bits	set	1438
  1765     059E                     _T0CON0	set	1438
  1766     059C                     _TMR0L	set	1436
  1767     059D                     _TMR0H	set	1437
  1768     059F                     _T0CON1	set	1439
  1769     070D                     _PIR1bits	set	1805
  1770     0717                     _PIE1bits	set	1815
  1771     070C                     _PIR0bits	set	1804
  1772     0716                     _PIE0bits	set	1814
  1773     080C                     _WDTCON	set	2060
  1774     081F                     _NVMCON2	set	2079
  1775     081C                     _NVMDATL	set	2076
  1776     081D                     _NVMDATH	set	2077
  1777     081E                     _NVMCON1bits	set	2078
  1778     081B                     _NVMADRH	set	2075
  1779     081A                     _NVMADRL	set	2074
  1780     0892                     _OSCTUNE	set	2194
  1781     0893                     _OSCFRQ	set	2195
  1782     0891                     _OSCEN	set	2193
  1783     1EC6                     _SSP1DATPPS	set	7878
  1784     1EC5                     _SSP1CLKPPS	set	7877
  1785     1F21                     _RC1PPS	set	7969
  1786     1F20                     _RC0PPS	set	7968
  1787     1F52                     _INLVLC	set	8018
  1788     1F3C                     _INLVLA	set	7996
  1789     1F51                     _SLRCONC	set	8017
  1790     1F3B                     _SLRCONA	set	7995
  1791     1F50                     _ODCONC	set	8016
  1792     1F3A                     _ODCONA	set	7994
  1793     1F4F                     _WPUC	set	8015
  1794     1F39                     _WPUA	set	7993
  1795     1F38                     _ANSELA	set	7992
  1796     1F4E                     _ANSELC	set	8014
  1797                           
  1798                           	psect	cinit
  1799     00D0                     start_initialization:	
  1800                           ; #config settings
  1801                           
  1802     00D0                     __initialization:
  1803                           
  1804                           ; Clear objects allocated to BANK0
  1805     00D0  3041               	movlw	low __pbssBANK0
  1806     00D1  0084               	movwf	4
  1807     00D2  3000               	movlw	high __pbssBANK0
  1808     00D3  0085               	movwf	5
  1809     00D4  301E               	movlw	30
  1810     00D5  3186  260E  3180   	fcall	clear_ram0
  1811                           
  1812                           ; Clear objects allocated to BANK1
  1813     00D8  30A0               	movlw	low __pbssBANK1
  1814     00D9  0084               	movwf	4
  1815     00DA  3000               	movlw	high __pbssBANK1
  1816     00DB  0085               	movwf	5
  1817     00DC  3040               	movlw	64
  1818     00DD  3186  260E  3180   	fcall	clear_ram0
  1819     00E0                     end_of_initialization:	
  1820                           ;End of C runtime variable initialization code
  1821                           
  1822     00E0                     __end_of__initialization:
  1823     00E0  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  1824     00E1  0140               	movlb	0
  1825     00E2  2C88               	ljmp	_main	;jump to C main() function
  1826                           
  1827                           	psect	bssBANK0
  1828     0041                     __pbssBANK0:
  1829     0041                     _i2cDataRead:
  1830     0041                     	ds	5
  1831     0046                     _I2C1_SlaveWrColInterruptHandler:
  1832     0046                     	ds	2
  1833     0048                     _I2C1_SlaveBusColInterruptHandler:
  1834     0048                     	ds	2
  1835     004A                     _I2C1_SlaveAddrInterruptHandler:
  1836     004A                     	ds	2
  1837     004C                     _I2C1_SlaveWrInterruptHandler:
  1838     004C                     	ds	2
  1839     004E                     _I2C1_SlaveRdInterruptHandler:
  1840     004E                     	ds	2
  1841     0050                     _MSSP1_InterruptHandler:
  1842     0050                     	ds	2
  1843     0052                     _i2cReadCnt@i2c1_slave$F1136:
  1844     0052                     	ds	1
  1845     0053                     _i2cReadCnt@i2c1_slave$F1099:
  1846     0053                     	ds	1
  1847     0054                     _i2c1SlaveState:
  1848     0054                     	ds	1
  1849     0055                     _i2c1SlaveAddr:
  1850     0055                     	ds	1
  1851     0056                     _i2c1RdData:
  1852     0056                     	ds	1
  1853     0057                     _i2c1WrData:
  1854     0057                     	ds	1
  1855     0058                     _i2cReadCnt@i2c1_slave$F753:
  1856     0058                     	ds	1
  1857     0059                     _i2cReadCnt@i2c1_slave$F183:
  1858     0059                     	ds	1
  1859     005A                     _command:
  1860     005A                     	ds	1
  1861     005B                     _LED_timer:
  1862     005B                     	ds	1
  1863     005C                     _i2cReadCnt:
  1864     005C                     	ds	1
  1865     005D                     _error_flag:
  1866     005D                     	ds	1
  1867     005E                     _debug:
  1868     005E                     	ds	1
  1869                           
  1870                           	psect	bssBANK1
  1871     00A0                     __pbssBANK1:
  1872     00A0                     _ramBuff:
  1873     00A0                     	ds	64
  1874                           
  1875                           	psect	clrtext
  1876     060E                     clear_ram0:	
  1877                           ;	Called with FSR0 containing the base address, and
  1878                           ;	WREG with the size to clear
  1879                           
  1880     060E  0064               	clrwdt	;clear the watchdog before getting into this loop
  1881     060F                     clrloop0:
  1882     060F  0180               	clrf	0	;clear RAM location pointed to by FSR
  1883     0610  3101               	addfsr 0,1
  1884     0611  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  1885     0612  2E0F               	goto	clrloop0	;have we reached the end yet?
  1886     0613  3400               	retlw	0	;all done for this memory range, return
  1887                           
  1888                           	psect	cstackBANK1
  1889     00E0                     __pcstackBANK1:
  1890     00E0                     ??_FLASH_WriteWord:
  1891                           
  1892                           ; 1 bytes @ 0x0
  1893     00E0                     	ds	1
  1894     00E1                     FLASH_WriteWord@offset:
  1895                           
  1896                           ; 1 bytes @ 0x1
  1897     00E1                     	ds	1
  1898     00E2                     FLASH_WriteWord@blockStartAddr:
  1899                           
  1900                           ; 2 bytes @ 0x2
  1901     00E2                     	ds	2
  1902     00E4                     FLASH_WriteWord@i:
  1903                           
  1904                           ; 1 bytes @ 0x4
  1905     00E4                     	ds	1
  1906     00E5                     ??_memory_initialize:
  1907                           
  1908                           ; 1 bytes @ 0x5
  1909     00E5                     	ds	2
  1910     00E7                     memory_initialize@TAG:
  1911                           
  1912                           ; 1 bytes @ 0x7
  1913     00E7                     	ds	1
  1914     00E8                     main@TAG:
  1915                           
  1916                           ; 1 bytes @ 0x8
  1917     00E8                     	ds	1
  1918                           
  1919                           	psect	cstackCOMMON
  1920     0070                     __pcstackCOMMON:
  1921     0070                     ?_TMR0_ISR:
  1922     0070                     ?_I2C1_SlaveOpen:	
  1923                           ; 1 bytes @ 0x0
  1924                           
  1925     0070                     ?_I2C1_SlaveSetSlaveAddr:	
  1926                           ; 1 bytes @ 0x0
  1927                           
  1928     0070                     ?_I2C1_SlaveSetSlaveMask:	
  1929                           ; 1 bytes @ 0x0
  1930                           
  1931     0070                     ?_I2C1_Isr:	
  1932                           ; 1 bytes @ 0x0
  1933                           
  1934     0070                     ?_I2C1_SlaveDefWrInterruptHandler:	
  1935                           ; 1 bytes @ 0x0
  1936                           
  1937     0070                     ?_I2C1_SlaveDefRdInterruptHandler:	
  1938                           ; 1 bytes @ 0x0
  1939                           
  1940     0070                     ??_I2C1_SlaveDefRdInterruptHandler:	
  1941                           ; 1 bytes @ 0x0
  1942                           
  1943     0070                     ?_I2C1_SlaveDefAddrInterruptHandler:	
  1944                           ; 1 bytes @ 0x0
  1945                           
  1946     0070                     ??_I2C1_SlaveDefAddrInterruptHandler:	
  1947                           ; 1 bytes @ 0x0
  1948                           
  1949     0070                     ?_I2C1_SlaveEnableIrq:	
  1950                           ; 1 bytes @ 0x0
  1951                           
  1952     0070                     ?_I2C1_SlaveGetRxData:	
  1953                           ; 1 bytes @ 0x0
  1954                           
  1955     0070                     ??_I2C1_SlaveGetRxData:	
  1956                           ; 1 bytes @ 0x0
  1957                           
  1958     0070                     ?_I2C1_SlaveSendTxData:	
  1959                           ; 1 bytes @ 0x0
  1960                           
  1961     0070                     ??_I2C1_SlaveSendTxData:	
  1962                           ; 1 bytes @ 0x0
  1963                           
  1964     0070                     ?_I2C1_SlaveIsRead:	
  1965                           ; 1 bytes @ 0x0
  1966                           
  1967     0070                     ??_I2C1_SlaveIsRead:	
  1968                           ; 1 bytes @ 0x0
  1969                           
  1970     0070                     ?_I2C1_SlaveClearIrq:	
  1971                           ; 1 bytes @ 0x0
  1972                           
  1973     0070                     ??_I2C1_SlaveClearIrq:	
  1974                           ; 1 bytes @ 0x0
  1975                           
  1976     0070                     ?_I2C1_SlaveIsAddr:	
  1977                           ; 1 bytes @ 0x0
  1978                           
  1979     0070                     ??_I2C1_SlaveIsAddr:	
  1980                           ; 1 bytes @ 0x0
  1981                           
  1982     0070                     ?_I2C1_SlaveAddrCallBack:	
  1983                           ; 1 bytes @ 0x0
  1984                           
  1985     0070                     ??_I2C1_SlaveAddrCallBack:	
  1986                           ; 1 bytes @ 0x0
  1987                           
  1988     0070                     ?_I2C1_SlaveIsTxBufEmpty:	
  1989                           ; 1 bytes @ 0x0
  1990                           
  1991     0070                     ??_I2C1_SlaveIsTxBufEmpty:	
  1992                           ; 1 bytes @ 0x0
  1993                           
  1994     0070                     ?_I2C1_SlaveWrCallBack:	
  1995                           ; 1 bytes @ 0x0
  1996                           
  1997     0070                     ?_I2C1_SlaveIsRxBufFull:	
  1998                           ; 1 bytes @ 0x0
  1999                           
  2000     0070                     ??_I2C1_SlaveIsRxBufFull:	
  2001                           ; 1 bytes @ 0x0
  2002                           
  2003     0070                     ?_I2C1_SlaveRdCallBack:	
  2004                           ; 1 bytes @ 0x0
  2005                           
  2006     0070                     ?_I2C1_SlaveReleaseClock:	
  2007                           ; 1 bytes @ 0x0
  2008                           
  2009     0070                     ??_I2C1_SlaveReleaseClock:	
  2010                           ; 1 bytes @ 0x0
  2011                           
  2012     0070                     ?_TMR0_DefaultInterruptHandler:	
  2013                           ; 1 bytes @ 0x0
  2014                           
  2015     0070                     ??_TMR0_DefaultInterruptHandler:	
  2016                           ; 1 bytes @ 0x0
  2017                           
  2018     0070                     ?_OSCILLATOR_Initialize:	
  2019                           ; 1 bytes @ 0x0
  2020                           
  2021     0070                     ?_WDT_Initialize:	
  2022                           ; 1 bytes @ 0x0
  2023                           
  2024     0070                     ?_memory_initialize:	
  2025                           ; 1 bytes @ 0x0
  2026                           
  2027     0070                     ?_data_recv_handler:	
  2028                           ; 1 bytes @ 0x0
  2029                           
  2030     0070                     ?_getSensorBoardType:	
  2031                           ; 1 bytes @ 0x0
  2032                           
  2033     0070                     ?_SensorBoardType_validation:	
  2034                           ; 1 bytes @ 0x0
  2035                           
  2036     0070                     ?_error_signal:	
  2037                           ; 1 bytes @ 0x0
  2038                           
  2039     0070                     ?_PIN_MANAGER_Initialize:	
  2040                           ; 1 bytes @ 0x0
  2041                           
  2042     0070                     ?_INTERRUPT_InterruptManager:	
  2043                           ; 1 bytes @ 0x0
  2044                           
  2045     0070                     ?_I2C1_Initialize:	
  2046                           ; 1 bytes @ 0x0
  2047                           
  2048     0070                     ?_I2C1_Open:	
  2049                           ; 1 bytes @ 0x0
  2050                           
  2051     0070                     ?_TMR0_Initialize:	
  2052                           ; 1 bytes @ 0x0
  2053                           
  2054     0070                     ?_SYSTEM_Initialize:	
  2055                           ; 1 bytes @ 0x0
  2056                           
  2057     0070                     ?_main:	
  2058                           ; 1 bytes @ 0x0
  2059                           
  2060     0070                     ?i1_FLASH_EraseBlock:	
  2061                           ; 1 bytes @ 0x0
  2062                           
  2063     0070                     ?i1_FLASH_ReadWord:	
  2064                           ; 1 bytes @ 0x0
  2065                           
  2066     0070                     I2C1_SlaveSendTxData@data:	
  2067                           ; 2 bytes @ 0x0
  2068                           
  2069     0070                     i1FLASH_ReadWord@flashAddr:	
  2070                           ; 1 bytes @ 0x0
  2071                           
  2072     0070                     i1FLASH_EraseBlock@startAddr:	
  2073                           ; 2 bytes @ 0x0
  2074                           
  2075                           
  2076                           ; 2 bytes @ 0x0
  2077     0070                     	ds	1
  2078     0071                     ??_TMR0_ISR:
  2079     0071                     ??_I2C1_SlaveDefWrInterruptHandler:	
  2080                           ; 1 bytes @ 0x1
  2081                           
  2082     0071                     ??_I2C1_SlaveWrCallBack:	
  2083                           ; 1 bytes @ 0x1
  2084                           
  2085                           
  2086                           ; 1 bytes @ 0x1
  2087     0071                     	ds	1
  2088     0072                     ??i1_FLASH_ReadWord:
  2089     0072                     ??i1_FLASH_EraseBlock:	
  2090                           ; 1 bytes @ 0x2
  2091                           
  2092     0072                     i1FLASH_ReadWord@GIEBitValue:	
  2093                           ; 1 bytes @ 0x2
  2094                           
  2095     0072                     i1FLASH_EraseBlock@GIEBitValue:	
  2096                           ; 1 bytes @ 0x2
  2097                           
  2098                           
  2099                           ; 1 bytes @ 0x2
  2100     0072                     	ds	1
  2101     0073                     ?i1_FLASH_WriteBlock:
  2102     0073                     i1FLASH_WriteBlock@writeAddr:	
  2103                           ; 1 bytes @ 0x3
  2104                           
  2105                           
  2106                           ; 2 bytes @ 0x3
  2107     0073                     	ds	2
  2108     0075                     i1FLASH_WriteBlock@flashWordArray:
  2109                           
  2110                           ; 1 bytes @ 0x5
  2111     0075                     	ds	1
  2112     0076                     ??i1_FLASH_WriteBlock:
  2113                           
  2114                           ; 1 bytes @ 0x6
  2115     0076                     	ds	3
  2116     0079                     i1FLASH_WriteBlock@blockStartAddr:
  2117                           
  2118                           ; 2 bytes @ 0x9
  2119     0079                     	ds	2
  2120     007B                     i1FLASH_WriteBlock@GIEBitValue:
  2121                           
  2122                           ; 1 bytes @ 0xB
  2123     007B                     	ds	1
  2124     007C                     i1FLASH_WriteBlock@i:
  2125                           
  2126                           ; 1 bytes @ 0xC
  2127     007C                     	ds	1
  2128     007D                     ??i1_FLASH_WriteWord:
  2129                           
  2130                           ; 1 bytes @ 0xD
  2131     007D                     	ds	1
  2132     007E                     ??_I2C1_SlaveRdCallBack:
  2133     007E                     ??_INTERRUPT_InterruptManager:	
  2134                           ; 1 bytes @ 0xE
  2135                           
  2136                           
  2137                           	psect	cstackBANK0
  2138     0020                     __pcstackBANK0:	
  2139                           ; 1 bytes @ 0xE
  2140                           
  2141     0020                     ?i1_FLASH_WriteWord:
  2142     0020                     i1FLASH_WriteWord@flashAddr:	
  2143                           ; 1 bytes @ 0x0
  2144                           
  2145                           
  2146                           ; 2 bytes @ 0x0
  2147     0020                     	ds	2
  2148     0022                     i1FLASH_WriteWord@ramBuf:
  2149                           
  2150                           ; 1 bytes @ 0x2
  2151     0022                     	ds	1
  2152     0023                     i1FLASH_WriteWord@word:
  2153                           
  2154                           ; 2 bytes @ 0x3
  2155     0023                     	ds	2
  2156     0025                     i1FLASH_WriteWord@offset:
  2157                           
  2158                           ; 1 bytes @ 0x5
  2159     0025                     	ds	1
  2160     0026                     i1FLASH_WriteWord@blockStartAddr:
  2161                           
  2162                           ; 2 bytes @ 0x6
  2163     0026                     	ds	2
  2164     0028                     i1FLASH_WriteWord@i:
  2165                           
  2166                           ; 1 bytes @ 0x8
  2167     0028                     	ds	1
  2168     0029                     ??_data_recv_handler:
  2169                           
  2170                           ; 1 bytes @ 0x9
  2171     0029                     	ds	2
  2172     002B                     data_recv_handler@i:
  2173                           
  2174                           ; 2 bytes @ 0xB
  2175     002B                     	ds	2
  2176     002D                     ??_I2C1_Isr:
  2177                           
  2178                           ; 1 bytes @ 0xD
  2179     002D                     	ds	2
  2180     002F                     ??_I2C1_SlaveOpen:
  2181     002F                     ??_I2C1_SlaveSetSlaveAddr:	
  2182                           ; 1 bytes @ 0xF
  2183                           
  2184     002F                     ??_I2C1_SlaveSetSlaveMask:	
  2185                           ; 1 bytes @ 0xF
  2186                           
  2187     002F                     ?_I2C1_SlaveSetIsrHandler:	
  2188                           ; 1 bytes @ 0xF
  2189                           
  2190     002F                     ?_I2C1_SlaveSetBusColIntHandler:	
  2191                           ; 1 bytes @ 0xF
  2192                           
  2193     002F                     ?_I2C1_SlaveSetWriteIntHandler:	
  2194                           ; 1 bytes @ 0xF
  2195                           
  2196     002F                     ?_I2C1_SlaveSetReadIntHandler:	
  2197                           ; 1 bytes @ 0xF
  2198                           
  2199     002F                     ?_I2C1_SlaveSetAddrIntHandler:	
  2200                           ; 1 bytes @ 0xF
  2201                           
  2202     002F                     ?_I2C1_SlaveSetWrColIntHandler:	
  2203                           ; 1 bytes @ 0xF
  2204                           
  2205     002F                     ??_I2C1_SlaveEnableIrq:	
  2206                           ; 1 bytes @ 0xF
  2207                           
  2208     002F                     ?_TMR0_SetInterruptHandler:	
  2209                           ; 1 bytes @ 0xF
  2210                           
  2211     002F                     ?_FLASH_EraseBlock:	
  2212                           ; 1 bytes @ 0xF
  2213                           
  2214     002F                     ??_OSCILLATOR_Initialize:	
  2215                           ; 1 bytes @ 0xF
  2216                           
  2217     002F                     ??_WDT_Initialize:	
  2218                           ; 1 bytes @ 0xF
  2219                           
  2220     002F                     ??_getSensorBoardType:	
  2221                           ; 1 bytes @ 0xF
  2222                           
  2223     002F                     ??_SensorBoardType_validation:	
  2224                           ; 1 bytes @ 0xF
  2225                           
  2226     002F                     ??_error_signal:	
  2227                           ; 1 bytes @ 0xF
  2228                           
  2229     002F                     ??_PIN_MANAGER_Initialize:	
  2230                           ; 1 bytes @ 0xF
  2231                           
  2232     002F                     ??_I2C1_Initialize:	
  2233                           ; 1 bytes @ 0xF
  2234                           
  2235     002F                     ?_FLASH_ReadWord:	
  2236                           ; 1 bytes @ 0xF
  2237                           
  2238     002F                     ?___wmul:	
  2239                           ; 2 bytes @ 0xF
  2240                           
  2241     002F                     SensorBoardType_validation@SensorBoardType:	
  2242                           ; 2 bytes @ 0xF
  2243                           
  2244     002F                     I2C1_SlaveSetSlaveAddr@slaveAddr:	
  2245                           ; 1 bytes @ 0xF
  2246                           
  2247     002F                     I2C1_SlaveSetSlaveMask@maskAddr:	
  2248                           ; 1 bytes @ 0xF
  2249                           
  2250     002F                     I2C1_SlaveSetIsrHandler@handler:	
  2251                           ; 1 bytes @ 0xF
  2252                           
  2253     002F                     I2C1_SlaveSetReadIntHandler@handler:	
  2254                           ; 2 bytes @ 0xF
  2255                           
  2256     002F                     I2C1_SlaveSetWriteIntHandler@handler:	
  2257                           ; 2 bytes @ 0xF
  2258                           
  2259     002F                     I2C1_SlaveSetAddrIntHandler@handler:	
  2260                           ; 2 bytes @ 0xF
  2261                           
  2262     002F                     I2C1_SlaveSetWrColIntHandler@handler:	
  2263                           ; 2 bytes @ 0xF
  2264                           
  2265     002F                     I2C1_SlaveSetBusColIntHandler@handler:	
  2266                           ; 2 bytes @ 0xF
  2267                           
  2268     002F                     TMR0_SetInterruptHandler@InterruptHandler:	
  2269                           ; 2 bytes @ 0xF
  2270                           
  2271     002F                     FLASH_ReadWord@flashAddr:	
  2272                           ; 2 bytes @ 0xF
  2273                           
  2274     002F                     FLASH_EraseBlock@startAddr:	
  2275                           ; 2 bytes @ 0xF
  2276                           
  2277     002F                     ___wmul@multiplier:	
  2278                           ; 2 bytes @ 0xF
  2279                           
  2280                           
  2281                           ; 2 bytes @ 0xF
  2282     002F                     	ds	2
  2283     0031                     ??_FLASH_ReadWord:
  2284     0031                     ??_I2C1_SlaveSetIsrHandler:	
  2285                           ; 1 bytes @ 0x11
  2286                           
  2287     0031                     ??_I2C1_SlaveSetBusColIntHandler:	
  2288                           ; 1 bytes @ 0x11
  2289                           
  2290     0031                     ??_I2C1_SlaveSetWriteIntHandler:	
  2291                           ; 1 bytes @ 0x11
  2292                           
  2293     0031                     ??_I2C1_SlaveSetReadIntHandler:	
  2294                           ; 1 bytes @ 0x11
  2295                           
  2296     0031                     ??_I2C1_SlaveSetAddrIntHandler:	
  2297                           ; 1 bytes @ 0x11
  2298                           
  2299     0031                     ??_I2C1_SlaveSetWrColIntHandler:	
  2300                           ; 1 bytes @ 0x11
  2301                           
  2302     0031                     ??_TMR0_SetInterruptHandler:	
  2303                           ; 1 bytes @ 0x11
  2304                           
  2305     0031                     ??_FLASH_EraseBlock:	
  2306                           ; 1 bytes @ 0x11
  2307                           
  2308     0031                     ??_I2C1_Open:	
  2309                           ; 1 bytes @ 0x11
  2310                           
  2311     0031                     ??_TMR0_Initialize:	
  2312                           ; 1 bytes @ 0x11
  2313                           
  2314     0031                     ??_SYSTEM_Initialize:	
  2315                           ; 1 bytes @ 0x11
  2316                           
  2317     0031                     FLASH_ReadWord@GIEBitValue:	
  2318                           ; 1 bytes @ 0x11
  2319                           
  2320     0031                     FLASH_EraseBlock@GIEBitValue:	
  2321                           ; 1 bytes @ 0x11
  2322                           
  2323     0031                     ___wmul@multiplicand:	
  2324                           ; 1 bytes @ 0x11
  2325                           
  2326                           
  2327                           ; 2 bytes @ 0x11
  2328     0031                     	ds	1
  2329     0032                     ?_FLASH_WriteBlock:
  2330     0032                     FLASH_WriteBlock@writeAddr:	
  2331                           ; 1 bytes @ 0x12
  2332                           
  2333                           
  2334                           ; 2 bytes @ 0x12
  2335     0032                     	ds	1
  2336     0033                     ??___wmul:
  2337     0033                     ___wmul@product:	
  2338                           ; 1 bytes @ 0x13
  2339                           
  2340                           
  2341                           ; 2 bytes @ 0x13
  2342     0033                     	ds	1
  2343     0034                     FLASH_WriteBlock@flashWordArray:
  2344                           
  2345                           ; 1 bytes @ 0x14
  2346     0034                     	ds	1
  2347     0035                     ??_FLASH_WriteBlock:
  2348                           
  2349                           ; 1 bytes @ 0x15
  2350     0035                     	ds	3
  2351     0038                     FLASH_WriteBlock@blockStartAddr:
  2352                           
  2353                           ; 2 bytes @ 0x18
  2354     0038                     	ds	2
  2355     003A                     FLASH_WriteBlock@GIEBitValue:
  2356                           
  2357                           ; 1 bytes @ 0x1A
  2358     003A                     	ds	1
  2359     003B                     FLASH_WriteBlock@i:
  2360                           
  2361                           ; 1 bytes @ 0x1B
  2362     003B                     	ds	1
  2363     003C                     ?_FLASH_WriteWord:
  2364     003C                     FLASH_WriteWord@flashAddr:	
  2365                           ; 1 bytes @ 0x1C
  2366                           
  2367                           
  2368                           ; 2 bytes @ 0x1C
  2369     003C                     	ds	2
  2370     003E                     FLASH_WriteWord@ramBuf:
  2371                           
  2372                           ; 1 bytes @ 0x1E
  2373     003E                     	ds	1
  2374     003F                     FLASH_WriteWord@word:
  2375                           
  2376                           ; 2 bytes @ 0x1F
  2377     003F                     	ds	2
  2378     0041                     ??_main:
  2379                           
  2380                           	psect	maintext
  2381     0488                     __pmaintext:	
  2382                           ; 1 bytes @ 0x21
  2383 ;;
  2384 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  2385 ;;
  2386 ;; *************** function _main *****************
  2387 ;; Defined at:
  2388 ;;		line 51 in file "main.c"
  2389 ;; Parameters:    Size  Location     Type
  2390 ;;		None
  2391 ;; Auto vars:     Size  Location     Type
  2392 ;;  TAG             1    8[BANK1 ] unsigned char 
  2393 ;; Return value:  Size  Location     Type
  2394 ;;                  1    wreg      void 
  2395 ;; Registers used:
  2396 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2397 ;; Tracked objects:
  2398 ;;		On entry : B3F/0
  2399 ;;		On exit  : 0/0
  2400 ;;		Unchanged: 0/0
  2401 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2402 ;;      Params:         0       0       0       0
  2403 ;;      Locals:         0       0       1       0
  2404 ;;      Temps:          0       0       0       0
  2405 ;;      Totals:         0       0       1       0
  2406 ;;Total ram usage:        1 bytes
  2407 ;; Hardware stack levels required when called: 11
  2408 ;; This function calls:
  2409 ;;		_I2C1_Open
  2410 ;;		_SYSTEM_Initialize
  2411 ;;		_SensorBoardType_validation
  2412 ;;		_error_signal
  2413 ;;		_getSensorBoardType
  2414 ;;		_memory_initialize
  2415 ;; This function is called by:
  2416 ;;		Startup code after reset
  2417 ;; This function uses a non-reentrant model
  2418 ;;
  2419                           
  2420     0488                     _main:	
  2421                           ;psect for function _main
  2422                           
  2423     0488                     l2688:	
  2424                           ;incstack = 0
  2425                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2426                           
  2427                           
  2428                           ;main.c: 54:     SYSTEM_Initialize();
  2429     0488  3185  2596  3184   	fcall	_SYSTEM_Initialize
  2430                           
  2431                           ;main.c: 56:     uint8_t TAG = getSensorBoardType();
  2432     048B  3185  25C5  3184   	fcall	_getSensorBoardType
  2433     048E  0141               	movlb	1	; select bank1
  2434     048F  00E8               	movwf	main@TAG^(0+128)
  2435                           
  2436                           ;main.c: 58:     if(SensorBoardType_validation(TAG)){
  2437     0490  0868               	movf	main@TAG^(0+128),w
  2438     0491  3185  2585  3184   	fcall	_SensorBoardType_validation
  2439     0494  3A00               	xorlw	0
  2440     0495  1903               	skipnz
  2441     0496  2C98               	goto	u1071
  2442     0497  2C99               	goto	u1070
  2443     0498                     u1071:
  2444     0498  2C9F               	goto	l2692
  2445     0499                     u1070:
  2446     0499                     l2690:
  2447                           
  2448                           ;main.c: 60:         memory_initialize(TAG);
  2449     0499  0141               	movlb	1	; select bank1
  2450     049A  0868               	movf	main@TAG^(0+128),w
  2451     049B  3180  20E3  3184   	fcall	_memory_initialize
  2452                           
  2453                           ;main.c: 61:     }
  2454     049E  2CA2               	goto	l2694
  2455     049F                     l2692:
  2456                           
  2457                           ;main.c: 63:         error_signal();
  2458     049F  3186  2660  3184   	fcall	_error_signal
  2459     04A2                     l2694:
  2460                           
  2461                           ;main.c: 66:     I2C1_Open();
  2462     04A2  3183  2389  3184   	fcall	_I2C1_Open
  2463     04A5                     l2696:
  2464                           
  2465                           ;main.c: 73:     (INTCONbits.GIE = 1);
  2466     04A5  178B               	bsf	11,7	;volatile
  2467     04A6                     l2698:
  2468                           
  2469                           ;main.c: 76:     (INTCONbits.PEIE = 1);
  2470     04A6  170B               	bsf	11,6	;volatile
  2471     04A7                     l649:	
  2472                           ;main.c: 84:     while (1)
  2473                           
  2474     04A7                     l650:	
  2475                           ;main.c: 85:     {;main.c: 88:     }
  2476                           
  2477     04A7  2CA7               	goto	l649
  2478     04A8  2831               	ljmp	start
  2479     04A9                     __end_of_main:
  2480                           
  2481                           	psect	text1
  2482     00E3                     __ptext1:	
  2483 ;; *************** function _memory_initialize *****************
  2484 ;; Defined at:
  2485 ;;		line 10 in file "flash_memory_filling.c"
  2486 ;; Parameters:    Size  Location     Type
  2487 ;;  TAG             1    wreg     unsigned char 
  2488 ;; Auto vars:     Size  Location     Type
  2489 ;;  TAG             1    7[BANK1 ] unsigned char 
  2490 ;; Return value:  Size  Location     Type
  2491 ;;                  1    wreg      void 
  2492 ;; Registers used:
  2493 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2494 ;; Tracked objects:
  2495 ;;		On entry : 0/0
  2496 ;;		On exit  : 0/0
  2497 ;;		Unchanged: 0/0
  2498 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2499 ;;      Params:         0       0       0       0
  2500 ;;      Locals:         0       0       1       0
  2501 ;;      Temps:          0       0       2       0
  2502 ;;      Totals:         0       0       3       0
  2503 ;;Total ram usage:        3 bytes
  2504 ;; Hardware stack levels used: 1
  2505 ;; Hardware stack levels required when called: 10
  2506 ;; This function calls:
  2507 ;;		_FLASH_ReadWord
  2508 ;;		_FLASH_WriteWord
  2509 ;;		___wmul
  2510 ;; This function is called by:
  2511 ;;		_main
  2512 ;; This function uses a non-reentrant model
  2513 ;;
  2514                           
  2515     00E3                     _memory_initialize:	
  2516                           ;psect for function _memory_initialize
  2517                           
  2518                           
  2519                           ;incstack = 0
  2520                           ; Regs used in _memory_initialize: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2521                           ;memory_initialize@TAG stored from wreg
  2522     00E3  0141               	movlb	1	; select bank1
  2523     00E4  00E7               	movwf	memory_initialize@TAG^(0+128)
  2524     00E5                     l2642:
  2525                           
  2526                           ;flash_memory_filling.c: 10: void memory_initialize(uint8_t TAG);flash_memory_filling.c:
      +                           11: {;flash_memory_filling.c: 13:     if(FLASH_ReadWord(0x780) != 0x55)
  2527     00E5  3080               	movlw	128
  2528     00E6  0140               	movlb	0	; select bank0
  2529     00E7  00AF               	movwf	FLASH_ReadWord@flashAddr
  2530     00E8  3007               	movlw	7
  2531     00E9  00B0               	movwf	FLASH_ReadWord@flashAddr+1
  2532     00EA  3184  24E9  3180   	fcall	_FLASH_ReadWord
  2533     00ED  3055               	movlw	85
  2534     00EE  0140               	movlb	0	; select bank0
  2535     00EF  062F               	xorwf	?_FLASH_ReadWord,w
  2536     00F0  0430               	iorwf	?_FLASH_ReadWord+1,w
  2537     00F1  1903               	btfsc	3,2
  2538     00F2  28F4               	goto	u1031
  2539     00F3  28F5               	goto	u1030
  2540     00F4                     u1031:
  2541     00F4  29FF               	goto	l38
  2542     00F5                     u1030:
  2543     00F5                     l2644:
  2544                           
  2545                           ;flash_memory_filling.c: 14:     {;flash_memory_filling.c: 15:         FLASH_WriteWord(0
      +                          x780, ramBuff, 0x55);
  2546     00F5  3080               	movlw	128
  2547     00F6  00BC               	movwf	FLASH_WriteWord@flashAddr
  2548     00F7  3007               	movlw	7
  2549     00F8  00BD               	movwf	FLASH_WriteWord@flashAddr+1
  2550     00F9  30A0               	movlw	(low (_ramBuff| 0))& (0+255)
  2551     00FA  00BE               	movwf	FLASH_WriteWord@ramBuf
  2552     00FB  3055               	movlw	85
  2553     00FC  00BF               	movwf	FLASH_WriteWord@word
  2554     00FD  3000               	movlw	0
  2555     00FE  00C0               	movwf	FLASH_WriteWord@word+1
  2556     00FF  3183  2338  3180   	fcall	_FLASH_WriteWord
  2557                           
  2558                           ;flash_memory_filling.c: 16:         FLASH_WriteWord(0x780 + 1, ramBuff, 0x00 );
  2559     0102  3081               	movlw	129
  2560     0103  0140               	movlb	0	; select bank0
  2561     0104  00BC               	movwf	FLASH_WriteWord@flashAddr
  2562     0105  3007               	movlw	7
  2563     0106  00BD               	movwf	FLASH_WriteWord@flashAddr+1
  2564     0107  30A0               	movlw	(low (_ramBuff| 0))& (0+255)
  2565     0108  00BE               	movwf	FLASH_WriteWord@ramBuf
  2566     0109  3000               	movlw	0
  2567     010A  00BF               	movwf	FLASH_WriteWord@word
  2568     010B  00C0               	movwf	FLASH_WriteWord@word+1
  2569     010C  3183  2338  3180   	fcall	_FLASH_WriteWord
  2570     010F                     l2646:
  2571                           
  2572                           ;flash_memory_filling.c: 17:         FLASH_WriteWord(0x780 + 2, ramBuff, (uint16_t)defau
      +                          lt_in_flash[TAG - 1][0]);
  2573     010F  3082               	movlw	130
  2574     0110  0140               	movlb	0	; select bank0
  2575     0111  00BC               	movwf	FLASH_WriteWord@flashAddr
  2576     0112  3007               	movlw	7
  2577     0113  00BD               	movwf	FLASH_WriteWord@flashAddr+1
  2578     0114  30A0               	movlw	(low (_ramBuff| 0))& (0+255)
  2579     0115  00BE               	movwf	FLASH_WriteWord@ramBuf
  2580     0116  0141               	movlb	1	; select bank1
  2581     0117  0867               	movf	memory_initialize@TAG^(0+128),w
  2582     0118  00E5               	movwf	??_memory_initialize^(0+128)
  2583     0119  01E6               	clrf	(??_memory_initialize^(0+128)+1)
  2584     011A  0865               	movf	??_memory_initialize^(0+128),w
  2585     011B  0140               	movlb	0	; select bank0
  2586     011C  00AF               	movwf	___wmul@multiplier
  2587     011D  0141               	movlb	1	; select bank1
  2588     011E  0866               	movf	(??_memory_initialize+1)^(0+128),w
  2589     011F  0140               	movlb	0	; select bank0
  2590     0120  00B0               	movwf	___wmul@multiplier+1
  2591     0121  300C               	movlw	12
  2592     0122  00B1               	movwf	___wmul@multiplicand
  2593     0123  3000               	movlw	0
  2594     0124  00B2               	movwf	___wmul@multiplicand+1
  2595     0125  3184  24A9  3180   	fcall	___wmul
  2596     0128  3034               	movlw	52
  2597     0129  0140               	movlb	0	; select bank0
  2598     012A  072F               	addwf	?___wmul,w
  2599     012B  0084               	movwf	4
  2600     012C  3000               	movlw	0
  2601     012D  3D30               	addwfc	?___wmul+1,w
  2602     012E  3880               	iorlw	128
  2603     012F  0085               	movwf	5
  2604     0130  3F00               	moviw [0]fsr0
  2605     0131  00BF               	movwf	FLASH_WriteWord@word
  2606     0132  3F01               	moviw [1]fsr0
  2607     0133  00C0               	movwf	FLASH_WriteWord@word+1
  2608     0134  3183  2338  3180   	fcall	_FLASH_WriteWord
  2609     0137                     l2648:
  2610                           
  2611                           ;flash_memory_filling.c: 18:         FLASH_WriteWord(0x780 + 3, ramBuff, (uint16_t)defau
      +                          lt_in_flash[TAG - 1][1]);
  2612     0137  3083               	movlw	131
  2613     0138  0140               	movlb	0	; select bank0
  2614     0139  00BC               	movwf	FLASH_WriteWord@flashAddr
  2615     013A  3007               	movlw	7
  2616     013B  00BD               	movwf	FLASH_WriteWord@flashAddr+1
  2617     013C  30A0               	movlw	(low (_ramBuff| 0))& (0+255)
  2618     013D  00BE               	movwf	FLASH_WriteWord@ramBuf
  2619     013E  0141               	movlb	1	; select bank1
  2620     013F  0867               	movf	memory_initialize@TAG^(0+128),w
  2621     0140  00E5               	movwf	??_memory_initialize^(0+128)
  2622     0141  01E6               	clrf	(??_memory_initialize^(0+128)+1)
  2623     0142  0865               	movf	??_memory_initialize^(0+128),w
  2624     0143  0140               	movlb	0	; select bank0
  2625     0144  00AF               	movwf	___wmul@multiplier
  2626     0145  0141               	movlb	1	; select bank1
  2627     0146  0866               	movf	(??_memory_initialize+1)^(0+128),w
  2628     0147  0140               	movlb	0	; select bank0
  2629     0148  00B0               	movwf	___wmul@multiplier+1
  2630     0149  300C               	movlw	12
  2631     014A  00B1               	movwf	___wmul@multiplicand
  2632     014B  3000               	movlw	0
  2633     014C  00B2               	movwf	___wmul@multiplicand+1
  2634     014D  3184  24A9  3180   	fcall	___wmul
  2635     0150  3036               	movlw	54
  2636     0151  0140               	movlb	0	; select bank0
  2637     0152  072F               	addwf	?___wmul,w
  2638     0153  0084               	movwf	4
  2639     0154  3000               	movlw	0
  2640     0155  3D30               	addwfc	?___wmul+1,w
  2641     0156  3880               	iorlw	128
  2642     0157  0085               	movwf	5
  2643     0158  3F00               	moviw [0]fsr0
  2644     0159  00BF               	movwf	FLASH_WriteWord@word
  2645     015A  3F01               	moviw [1]fsr0
  2646     015B  00C0               	movwf	FLASH_WriteWord@word+1
  2647     015C  3183  2338  3180   	fcall	_FLASH_WriteWord
  2648     015F                     l2650:
  2649                           
  2650                           ;flash_memory_filling.c: 19:         FLASH_WriteWord(0x780 + 4, ramBuff, (uint16_t)defau
      +                          lt_in_flash[TAG - 1][2]);
  2651     015F  3084               	movlw	132
  2652     0160  0140               	movlb	0	; select bank0
  2653     0161  00BC               	movwf	FLASH_WriteWord@flashAddr
  2654     0162  3007               	movlw	7
  2655     0163  00BD               	movwf	FLASH_WriteWord@flashAddr+1
  2656     0164  30A0               	movlw	(low (_ramBuff| 0))& (0+255)
  2657     0165  00BE               	movwf	FLASH_WriteWord@ramBuf
  2658     0166  0141               	movlb	1	; select bank1
  2659     0167  0867               	movf	memory_initialize@TAG^(0+128),w
  2660     0168  00E5               	movwf	??_memory_initialize^(0+128)
  2661     0169  01E6               	clrf	(??_memory_initialize^(0+128)+1)
  2662     016A  0865               	movf	??_memory_initialize^(0+128),w
  2663     016B  0140               	movlb	0	; select bank0
  2664     016C  00AF               	movwf	___wmul@multiplier
  2665     016D  0141               	movlb	1	; select bank1
  2666     016E  0866               	movf	(??_memory_initialize+1)^(0+128),w
  2667     016F  0140               	movlb	0	; select bank0
  2668     0170  00B0               	movwf	___wmul@multiplier+1
  2669     0171  300C               	movlw	12
  2670     0172  00B1               	movwf	___wmul@multiplicand
  2671     0173  3000               	movlw	0
  2672     0174  00B2               	movwf	___wmul@multiplicand+1
  2673     0175  3184  24A9  3180   	fcall	___wmul
  2674     0178  3038               	movlw	56
  2675     0179  0140               	movlb	0	; select bank0
  2676     017A  072F               	addwf	?___wmul,w
  2677     017B  0084               	movwf	4
  2678     017C  3000               	movlw	0
  2679     017D  3D30               	addwfc	?___wmul+1,w
  2680     017E  3880               	iorlw	128
  2681     017F  0085               	movwf	5
  2682     0180  3F00               	moviw [0]fsr0
  2683     0181  00BF               	movwf	FLASH_WriteWord@word
  2684     0182  3F01               	moviw [1]fsr0
  2685     0183  00C0               	movwf	FLASH_WriteWord@word+1
  2686     0184  3183  2338  3180   	fcall	_FLASH_WriteWord
  2687     0187                     l2652:
  2688                           
  2689                           ;flash_memory_filling.c: 20:         FLASH_WriteWord(0x780 + 5, ramBuff, (uint16_t)defau
      +                          lt_in_flash[TAG - 1][3]);
  2690     0187  3085               	movlw	133
  2691     0188  0140               	movlb	0	; select bank0
  2692     0189  00BC               	movwf	FLASH_WriteWord@flashAddr
  2693     018A  3007               	movlw	7
  2694     018B  00BD               	movwf	FLASH_WriteWord@flashAddr+1
  2695     018C  30A0               	movlw	(low (_ramBuff| 0))& (0+255)
  2696     018D  00BE               	movwf	FLASH_WriteWord@ramBuf
  2697     018E  0141               	movlb	1	; select bank1
  2698     018F  0867               	movf	memory_initialize@TAG^(0+128),w
  2699     0190  00E5               	movwf	??_memory_initialize^(0+128)
  2700     0191  01E6               	clrf	(??_memory_initialize^(0+128)+1)
  2701     0192  0865               	movf	??_memory_initialize^(0+128),w
  2702     0193  0140               	movlb	0	; select bank0
  2703     0194  00AF               	movwf	___wmul@multiplier
  2704     0195  0141               	movlb	1	; select bank1
  2705     0196  0866               	movf	(??_memory_initialize+1)^(0+128),w
  2706     0197  0140               	movlb	0	; select bank0
  2707     0198  00B0               	movwf	___wmul@multiplier+1
  2708     0199  300C               	movlw	12
  2709     019A  00B1               	movwf	___wmul@multiplicand
  2710     019B  3000               	movlw	0
  2711     019C  00B2               	movwf	___wmul@multiplicand+1
  2712     019D  3184  24A9  3180   	fcall	___wmul
  2713     01A0  303A               	movlw	58
  2714     01A1  0140               	movlb	0	; select bank0
  2715     01A2  072F               	addwf	?___wmul,w
  2716     01A3  0084               	movwf	4
  2717     01A4  3000               	movlw	0
  2718     01A5  3D30               	addwfc	?___wmul+1,w
  2719     01A6  3880               	iorlw	128
  2720     01A7  0085               	movwf	5
  2721     01A8  3F00               	moviw [0]fsr0
  2722     01A9  00BF               	movwf	FLASH_WriteWord@word
  2723     01AA  3F01               	moviw [1]fsr0
  2724     01AB  00C0               	movwf	FLASH_WriteWord@word+1
  2725     01AC  3183  2338  3180   	fcall	_FLASH_WriteWord
  2726     01AF                     l2654:
  2727                           
  2728                           ;flash_memory_filling.c: 21:         FLASH_WriteWord(0x780 + 6, ramBuff, (uint16_t)defau
      +                          lt_in_flash[TAG - 1][4]);
  2729     01AF  3086               	movlw	134
  2730     01B0  0140               	movlb	0	; select bank0
  2731     01B1  00BC               	movwf	FLASH_WriteWord@flashAddr
  2732     01B2  3007               	movlw	7
  2733     01B3  00BD               	movwf	FLASH_WriteWord@flashAddr+1
  2734     01B4  30A0               	movlw	(low (_ramBuff| 0))& (0+255)
  2735     01B5  00BE               	movwf	FLASH_WriteWord@ramBuf
  2736     01B6  0141               	movlb	1	; select bank1
  2737     01B7  0867               	movf	memory_initialize@TAG^(0+128),w
  2738     01B8  00E5               	movwf	??_memory_initialize^(0+128)
  2739     01B9  01E6               	clrf	(??_memory_initialize^(0+128)+1)
  2740     01BA  0865               	movf	??_memory_initialize^(0+128),w
  2741     01BB  0140               	movlb	0	; select bank0
  2742     01BC  00AF               	movwf	___wmul@multiplier
  2743     01BD  0141               	movlb	1	; select bank1
  2744     01BE  0866               	movf	(??_memory_initialize+1)^(0+128),w
  2745     01BF  0140               	movlb	0	; select bank0
  2746     01C0  00B0               	movwf	___wmul@multiplier+1
  2747     01C1  300C               	movlw	12
  2748     01C2  00B1               	movwf	___wmul@multiplicand
  2749     01C3  3000               	movlw	0
  2750     01C4  00B2               	movwf	___wmul@multiplicand+1
  2751     01C5  3184  24A9  3180   	fcall	___wmul
  2752     01C8  303C               	movlw	60
  2753     01C9  0140               	movlb	0	; select bank0
  2754     01CA  072F               	addwf	?___wmul,w
  2755     01CB  0084               	movwf	4
  2756     01CC  3000               	movlw	0
  2757     01CD  3D30               	addwfc	?___wmul+1,w
  2758     01CE  3880               	iorlw	128
  2759     01CF  0085               	movwf	5
  2760     01D0  3F00               	moviw [0]fsr0
  2761     01D1  00BF               	movwf	FLASH_WriteWord@word
  2762     01D2  3F01               	moviw [1]fsr0
  2763     01D3  00C0               	movwf	FLASH_WriteWord@word+1
  2764     01D4  3183  2338  3180   	fcall	_FLASH_WriteWord
  2765     01D7                     l2656:
  2766                           
  2767                           ;flash_memory_filling.c: 22:         FLASH_WriteWord(0x780 + 7, ramBuff, (uint16_t)defau
      +                          lt_in_flash[TAG - 1][5]);
  2768     01D7  3087               	movlw	135
  2769     01D8  0140               	movlb	0	; select bank0
  2770     01D9  00BC               	movwf	FLASH_WriteWord@flashAddr
  2771     01DA  3007               	movlw	7
  2772     01DB  00BD               	movwf	FLASH_WriteWord@flashAddr+1
  2773     01DC  30A0               	movlw	(low (_ramBuff| 0))& (0+255)
  2774     01DD  00BE               	movwf	FLASH_WriteWord@ramBuf
  2775     01DE  0141               	movlb	1	; select bank1
  2776     01DF  0867               	movf	memory_initialize@TAG^(0+128),w
  2777     01E0  00E5               	movwf	??_memory_initialize^(0+128)
  2778     01E1  01E6               	clrf	(??_memory_initialize^(0+128)+1)
  2779     01E2  0865               	movf	??_memory_initialize^(0+128),w
  2780     01E3  0140               	movlb	0	; select bank0
  2781     01E4  00AF               	movwf	___wmul@multiplier
  2782     01E5  0141               	movlb	1	; select bank1
  2783     01E6  0866               	movf	(??_memory_initialize+1)^(0+128),w
  2784     01E7  0140               	movlb	0	; select bank0
  2785     01E8  00B0               	movwf	___wmul@multiplier+1
  2786     01E9  300C               	movlw	12
  2787     01EA  00B1               	movwf	___wmul@multiplicand
  2788     01EB  3000               	movlw	0
  2789     01EC  00B2               	movwf	___wmul@multiplicand+1
  2790     01ED  3184  24A9  3180   	fcall	___wmul
  2791     01F0  303E               	movlw	62
  2792     01F1  0140               	movlb	0	; select bank0
  2793     01F2  072F               	addwf	?___wmul,w
  2794     01F3  0084               	movwf	4
  2795     01F4  3000               	movlw	0
  2796     01F5  3D30               	addwfc	?___wmul+1,w
  2797     01F6  3880               	iorlw	128
  2798     01F7  0085               	movwf	5
  2799     01F8  3F00               	moviw [0]fsr0
  2800     01F9  00BF               	movwf	FLASH_WriteWord@word
  2801     01FA  3F01               	moviw [1]fsr0
  2802     01FB  00C0               	movwf	FLASH_WriteWord@word+1
  2803     01FC  3183  2338  3180   	fcall	_FLASH_WriteWord
  2804     01FF                     l38:
  2805     01FF  0008               	return
  2806     0200                     __end_of_memory_initialize:
  2807                           
  2808                           	psect	text2
  2809     04A9                     __ptext2:	
  2810 ;; *************** function ___wmul *****************
  2811 ;; Defined at:
  2812 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\Umul16.c"
  2813 ;; Parameters:    Size  Location     Type
  2814 ;;  multiplier      2   15[BANK0 ] unsigned int 
  2815 ;;  multiplicand    2   17[BANK0 ] unsigned int 
  2816 ;; Auto vars:     Size  Location     Type
  2817 ;;  product         2   19[BANK0 ] unsigned int 
  2818 ;; Return value:  Size  Location     Type
  2819 ;;                  2   15[BANK0 ] unsigned int 
  2820 ;; Registers used:
  2821 ;;		wreg, status,2, status,0
  2822 ;; Tracked objects:
  2823 ;;		On entry : 0/0
  2824 ;;		On exit  : 0/0
  2825 ;;		Unchanged: 0/0
  2826 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2827 ;;      Params:         0       4       0       0
  2828 ;;      Locals:         0       2       0       0
  2829 ;;      Temps:          0       0       0       0
  2830 ;;      Totals:         0       6       0       0
  2831 ;;Total ram usage:        6 bytes
  2832 ;; Hardware stack levels used: 1
  2833 ;; Hardware stack levels required when called: 7
  2834 ;; This function calls:
  2835 ;;		Nothing
  2836 ;; This function is called by:
  2837 ;;		_memory_initialize
  2838 ;; This function uses a non-reentrant model
  2839 ;;
  2840                           
  2841     04A9                     ___wmul:	
  2842                           ;psect for function ___wmul
  2843                           
  2844     04A9                     l2628:	
  2845                           ;incstack = 0
  2846                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  2847                           
  2848     04A9  0140               	movlb	0	; select bank0
  2849     04AA  01B3               	clrf	___wmul@product
  2850     04AB  01B4               	clrf	___wmul@product+1
  2851     04AC                     l2630:
  2852     04AC  1C2F               	btfss	___wmul@multiplier,0
  2853     04AD  2CAF               	goto	u991
  2854     04AE  2CB0               	goto	u990
  2855     04AF                     u991:
  2856     04AF  2CB4               	goto	l720
  2857     04B0                     u990:
  2858     04B0                     l2632:
  2859     04B0  0831               	movf	___wmul@multiplicand,w
  2860     04B1  07B3               	addwf	___wmul@product,f
  2861     04B2  0832               	movf	___wmul@multiplicand+1,w
  2862     04B3  3DB4               	addwfc	___wmul@product+1,f
  2863     04B4                     l720:
  2864     04B4  3001               	movlw	1
  2865     04B5                     u1005:
  2866     04B5  35B1               	lslf	___wmul@multiplicand,f
  2867     04B6  0DB2               	rlf	___wmul@multiplicand+1,f
  2868     04B7  0B89               	decfsz	9,f
  2869     04B8  2CB5               	goto	u1005
  2870     04B9                     l2634:
  2871     04B9  3001               	movlw	1
  2872     04BA                     u1015:
  2873     04BA  36B0               	lsrf	___wmul@multiplier+1,f
  2874     04BB  0CAF               	rrf	___wmul@multiplier,f
  2875     04BC  0B89               	decfsz	9,f
  2876     04BD  2CBA               	goto	u1015
  2877     04BE                     l2636:
  2878     04BE  082F               	movf	___wmul@multiplier,w
  2879     04BF  0430               	iorwf	___wmul@multiplier+1,w
  2880     04C0  1D03               	btfss	3,2
  2881     04C1  2CC3               	goto	u1021
  2882     04C2  2CC4               	goto	u1020
  2883     04C3                     u1021:
  2884     04C3  2CAC               	goto	l2630
  2885     04C4                     u1020:
  2886     04C4                     l2638:
  2887     04C4  0834               	movf	___wmul@product+1,w
  2888     04C5  00B0               	movwf	?___wmul+1
  2889     04C6  0833               	movf	___wmul@product,w
  2890     04C7  00AF               	movwf	?___wmul
  2891     04C8                     l722:
  2892     04C8  0008               	return
  2893     04C9                     __end_of___wmul:
  2894                           
  2895                           	psect	text3
  2896     0338                     __ptext3:	
  2897 ;; *************** function _FLASH_WriteWord *****************
  2898 ;; Defined at:
  2899 ;;		line 75 in file "mcc_generated_files/memory.c"
  2900 ;; Parameters:    Size  Location     Type
  2901 ;;  flashAddr       2   28[BANK0 ] unsigned short 
  2902 ;;  ramBuf          1   30[BANK0 ] PTR unsigned short 
  2903 ;;		 -> ramBuff(64), 
  2904 ;;  word            2   31[BANK0 ] unsigned short 
  2905 ;; Auto vars:     Size  Location     Type
  2906 ;;  blockStartAd    2    2[BANK1 ] unsigned short 
  2907 ;;  i               1    4[BANK1 ] unsigned char 
  2908 ;;  offset          1    1[BANK1 ] unsigned char 
  2909 ;; Return value:  Size  Location     Type
  2910 ;;                  1    wreg      void 
  2911 ;; Registers used:
  2912 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2913 ;; Tracked objects:
  2914 ;;		On entry : 0/0
  2915 ;;		On exit  : 0/0
  2916 ;;		Unchanged: 0/0
  2917 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2918 ;;      Params:         0       5       0       0
  2919 ;;      Locals:         0       0       4       0
  2920 ;;      Temps:          0       0       1       0
  2921 ;;      Totals:         0       5       5       0
  2922 ;;Total ram usage:       10 bytes
  2923 ;; Hardware stack levels used: 1
  2924 ;; Hardware stack levels required when called: 9
  2925 ;; This function calls:
  2926 ;;		_FLASH_ReadWord
  2927 ;;		_FLASH_WriteBlock
  2928 ;; This function is called by:
  2929 ;;		_memory_initialize
  2930 ;; This function uses a non-reentrant model
  2931 ;;
  2932                           
  2933     0338                     _FLASH_WriteWord:	
  2934                           ;psect for function _FLASH_WriteWord
  2935                           
  2936     0338                     l2520:	
  2937                           ;incstack = 0
  2938                           ; Regs used in _FLASH_WriteWord: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2939                           
  2940                           
  2941                           ;mcc_generated_files/memory.c: 75: void FLASH_WriteWord(uint16_t flashAddr, uint16_t *ra
      +                          mBuf, uint16_t word);mcc_generated_files/memory.c: 76: {;mcc_generated_files/memory.c: 7
      +                          7:     uint16_t blockStartAddr = (uint16_t)(flashAddr & ((0x800 -1) ^ (32 -1)));
  2942     0338  30E0               	movlw	224
  2943     0339  0140               	movlb	0	; select bank0
  2944     033A  053C               	andwf	FLASH_WriteWord@flashAddr,w
  2945     033B  0141               	movlb	1	; select bank1
  2946     033C  00E2               	movwf	FLASH_WriteWord@blockStartAddr^(0+128)
  2947     033D  3007               	movlw	7
  2948     033E  0140               	movlb	0	; select bank0
  2949     033F  053D               	andwf	FLASH_WriteWord@flashAddr+1,w
  2950     0340  0141               	movlb	1	; select bank1
  2951     0341  00E3               	movwf	(FLASH_WriteWord@blockStartAddr+1)^(0+128)
  2952     0342                     l2522:
  2953                           
  2954                           ;mcc_generated_files/memory.c: 78:     uint8_t offset = (uint8_t)(flashAddr & (32 -1));
  2955     0342  0140               	movlb	0	; select bank0
  2956     0343  083C               	movf	FLASH_WriteWord@flashAddr,w
  2957     0344  391F               	andlw	31
  2958     0345  0141               	movlb	1	; select bank1
  2959     0346  00E1               	movwf	FLASH_WriteWord@offset^(0+128)
  2960                           
  2961                           ;mcc_generated_files/memory.c: 79:     uint8_t i;;mcc_generated_files/memory.c: 82:     
      +                          for (i=0; i<32; i++)
  2962     0347  01E4               	clrf	FLASH_WriteWord@i^(0+128)
  2963     0348                     l2528:
  2964                           
  2965                           ;mcc_generated_files/memory.c: 83:     {;mcc_generated_files/memory.c: 84:         ramBu
      +                          f[i] = FLASH_ReadWord((blockStartAddr+i));
  2966     0348  0864               	movf	FLASH_WriteWord@i^(0+128),w
  2967     0349  0762               	addwf	FLASH_WriteWord@blockStartAddr^(0+128),w
  2968     034A  0140               	movlb	0	; select bank0
  2969     034B  00AF               	movwf	FLASH_ReadWord@flashAddr
  2970     034C  0141               	movlb	1	; select bank1
  2971     034D  0863               	movf	(FLASH_WriteWord@blockStartAddr+1)^(0+128),w
  2972     034E  1803               	skipnc
  2973     034F  0A63               	incf	(FLASH_WriteWord@blockStartAddr+1)^(0+128),w
  2974     0350  0140               	movlb	0	; select bank0
  2975     0351  00B0               	movwf	FLASH_ReadWord@flashAddr+1
  2976     0352  3184  24E9  3183   	fcall	_FLASH_ReadWord
  2977     0355  0141               	movlb	1	; select bank1
  2978     0356  3564               	lslf	FLASH_WriteWord@i^(0+128),w
  2979     0357  0140               	movlb	0	; select bank0
  2980     0358  073E               	addwf	FLASH_WriteWord@ramBuf,w
  2981     0359  0141               	movlb	1	; select bank1
  2982     035A  00E0               	movwf	??_FLASH_WriteWord^(0+128)
  2983     035B  0860               	movf	??_FLASH_WriteWord^(0+128),w
  2984     035C  0086               	movwf	6
  2985     035D  0187               	clrf	7
  2986     035E  0140               	movlb	0	; select bank0
  2987     035F  082F               	movf	?_FLASH_ReadWord,w
  2988     0360  3FC0               	movwi [0]fsr1
  2989     0361  0830               	movf	?_FLASH_ReadWord+1,w
  2990     0362  3FC1               	movwi [1]fsr1
  2991     0363                     l2530:
  2992                           
  2993                           ;mcc_generated_files/memory.c: 85:     }
  2994     0363  3001               	movlw	1
  2995     0364  0141               	movlb	1	; select bank1
  2996     0365  00E0               	movwf	??_FLASH_WriteWord^(0+128)
  2997     0366  0860               	movf	??_FLASH_WriteWord^(0+128),w
  2998     0367  07E4               	addwf	FLASH_WriteWord@i^(0+128),f
  2999     0368                     l2532:
  3000     0368  3020               	movlw	32
  3001     0369  0264               	subwf	FLASH_WriteWord@i^(0+128),w
  3002     036A  1C03               	skipc
  3003     036B  2B6D               	goto	u971
  3004     036C  2B6E               	goto	u970
  3005     036D                     u971:
  3006     036D  2B48               	goto	l2528
  3007     036E                     u970:
  3008     036E                     l2534:
  3009                           
  3010                           ;mcc_generated_files/memory.c: 88:     ramBuf[offset] = word;
  3011     036E  3561               	lslf	FLASH_WriteWord@offset^(0+128),w
  3012     036F  0140               	movlb	0	; select bank0
  3013     0370  073E               	addwf	FLASH_WriteWord@ramBuf,w
  3014     0371  0141               	movlb	1	; select bank1
  3015     0372  00E0               	movwf	??_FLASH_WriteWord^(0+128)
  3016     0373  0860               	movf	??_FLASH_WriteWord^(0+128),w
  3017     0374  0086               	movwf	6
  3018     0375  0187               	clrf	7
  3019     0376  0140               	movlb	0	; select bank0
  3020     0377  083F               	movf	FLASH_WriteWord@word,w
  3021     0378  3FC0               	movwi [0]fsr1
  3022     0379  0840               	movf	FLASH_WriteWord@word+1,w
  3023     037A  3FC1               	movwi [1]fsr1
  3024     037B                     l2536:
  3025                           
  3026                           ;mcc_generated_files/memory.c: 91:     FLASH_WriteBlock(blockStartAddr, ramBuf);
  3027     037B  0141               	movlb	1	; select bank1
  3028     037C  0863               	movf	(FLASH_WriteWord@blockStartAddr+1)^(0+128),w
  3029     037D  0140               	movlb	0	; select bank0
  3030     037E  00B3               	movwf	FLASH_WriteBlock@writeAddr+1
  3031     037F  0141               	movlb	1	; select bank1
  3032     0380  0862               	movf	FLASH_WriteWord@blockStartAddr^(0+128),w
  3033     0381  0140               	movlb	0	; select bank0
  3034     0382  00B2               	movwf	FLASH_WriteBlock@writeAddr
  3035     0383  083E               	movf	FLASH_WriteWord@ramBuf,w
  3036     0384  00B4               	movwf	FLASH_WriteBlock@flashWordArray
  3037     0385  3182  226D  3183   	fcall	_FLASH_WriteBlock
  3038     0388                     l536:
  3039     0388  0008               	return
  3040     0389                     __end_of_FLASH_WriteWord:
  3041                           
  3042                           	psect	text4
  3043     026D                     __ptext4:	
  3044 ;; *************** function _FLASH_WriteBlock *****************
  3045 ;; Defined at:
  3046 ;;		line 94 in file "mcc_generated_files/memory.c"
  3047 ;; Parameters:    Size  Location     Type
  3048 ;;  writeAddr       2   18[BANK0 ] unsigned short 
  3049 ;;  flashWordArr    1   20[BANK0 ] PTR unsigned short 
  3050 ;;		 -> ramBuff(64), 
  3051 ;; Auto vars:     Size  Location     Type
  3052 ;;  blockStartAd    2   24[BANK0 ] unsigned short 
  3053 ;;  i               1   27[BANK0 ] unsigned char 
  3054 ;;  GIEBitValue     1   26[BANK0 ] unsigned char 
  3055 ;; Return value:  Size  Location     Type
  3056 ;;                  1    wreg      char 
  3057 ;; Registers used:
  3058 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3059 ;; Tracked objects:
  3060 ;;		On entry : 0/0
  3061 ;;		On exit  : 0/0
  3062 ;;		Unchanged: 0/0
  3063 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3064 ;;      Params:         0       3       0       0
  3065 ;;      Locals:         0       4       0       0
  3066 ;;      Temps:          0       3       0       0
  3067 ;;      Totals:         0      10       0       0
  3068 ;;Total ram usage:       10 bytes
  3069 ;; Hardware stack levels used: 1
  3070 ;; Hardware stack levels required when called: 8
  3071 ;; This function calls:
  3072 ;;		_FLASH_EraseBlock
  3073 ;; This function is called by:
  3074 ;;		_FLASH_WriteWord
  3075 ;; This function uses a non-reentrant model
  3076 ;;
  3077                           
  3078     026D                     _FLASH_WriteBlock:	
  3079                           ;psect for function _FLASH_WriteBlock
  3080                           
  3081     026D                     l2470:	
  3082                           ;incstack = 0
  3083                           ; Regs used in _FLASH_WriteBlock: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3084                           
  3085                           
  3086                           ;mcc_generated_files/memory.c: 94: int8_t FLASH_WriteBlock(uint16_t writeAddr, uint16_t 
      +                          *flashWordArray);mcc_generated_files/memory.c: 95: {;mcc_generated_files/memory.c: 96:  
      +                             uint16_t blockStartAddr = (uint16_t )(writeAddr & ((0x800 -1) ^ (32 -1)));
  3087     026D  30E0               	movlw	224
  3088     026E  0140               	movlb	0	; select bank0
  3089     026F  0532               	andwf	FLASH_WriteBlock@writeAddr,w
  3090     0270  00B8               	movwf	FLASH_WriteBlock@blockStartAddr
  3091     0271  3007               	movlw	7
  3092     0272  0533               	andwf	FLASH_WriteBlock@writeAddr+1,w
  3093     0273  00B9               	movwf	FLASH_WriteBlock@blockStartAddr+1
  3094     0274                     l2472:
  3095                           
  3096                           ;mcc_generated_files/memory.c: 97:     uint8_t GIEBitValue = INTCONbits.GIE;
  3097     0274  3000               	movlw	0
  3098     0275  1B8B               	btfsc	11,7	;volatile
  3099     0276  3001               	movlw	1
  3100     0277  00BA               	movwf	FLASH_WriteBlock@GIEBitValue
  3101     0278                     l2474:
  3102                           
  3103                           ;mcc_generated_files/memory.c: 98:     uint8_t i;;mcc_generated_files/memory.c: 102:    
      +                           if( writeAddr != blockStartAddr )
  3104     0278  0839               	movf	FLASH_WriteBlock@blockStartAddr+1,w
  3105     0279  0633               	xorwf	FLASH_WriteBlock@writeAddr+1,w
  3106     027A  1D03               	skipz
  3107     027B  2A7E               	goto	u945
  3108     027C  0838               	movf	FLASH_WriteBlock@blockStartAddr,w
  3109     027D  0632               	xorwf	FLASH_WriteBlock@writeAddr,w
  3110     027E                     u945:
  3111     027E  1903               	skipnz
  3112     027F  2A81               	goto	u941
  3113     0280  2A82               	goto	u940
  3114     0281                     u941:
  3115     0281  2A83               	goto	l539
  3116     0282                     u940:
  3117     0282  2AD8               	goto	l540
  3118     0283                     l539:	
  3119                           ;mcc_generated_files/memory.c: 105:     }
  3120                           
  3121                           
  3122                           ;mcc_generated_files/memory.c: 107:     INTCONbits.GIE = 0;
  3123     0283  138B               	bcf	11,7	;volatile
  3124     0284                     l2478:
  3125                           
  3126                           ;mcc_generated_files/memory.c: 110:     FLASH_EraseBlock(writeAddr);
  3127     0284  0833               	movf	FLASH_WriteBlock@writeAddr+1,w
  3128     0285  00B0               	movwf	FLASH_EraseBlock@startAddr+1
  3129     0286  0832               	movf	FLASH_WriteBlock@writeAddr,w
  3130     0287  00AF               	movwf	FLASH_EraseBlock@startAddr
  3131     0288  3184  24C9  3182   	fcall	_FLASH_EraseBlock
  3132     028B                     l2480:
  3133                           
  3134                           ;mcc_generated_files/memory.c: 113:     NVMCON1bits.NVMREGS = 0;
  3135     028B  0150               	movlb	16	; select bank16
  3136     028C  131E               	bcf	30,6	;volsfr
  3137     028D                     l2482:
  3138                           
  3139                           ;mcc_generated_files/memory.c: 114:     NVMCON1bits.WREN = 1;
  3140     028D  151E               	bsf	30,2	;volsfr
  3141     028E                     l2484:
  3142                           
  3143                           ;mcc_generated_files/memory.c: 115:     NVMCON1bits.LWLO = 1;
  3144     028E  169E               	bsf	30,5	;volsfr
  3145     028F                     l2486:
  3146                           
  3147                           ;mcc_generated_files/memory.c: 117:     for (i=0; i<32; i++)
  3148     028F  0140               	movlb	0	; select bank0
  3149     0290  01BB               	clrf	FLASH_WriteBlock@i
  3150     0291                     l2492:
  3151                           
  3152                           ;mcc_generated_files/memory.c: 118:     {;mcc_generated_files/memory.c: 120:         NVM
      +                          ADRL = (writeAddr & 0xFF);
  3153     0291  0832               	movf	FLASH_WriteBlock@writeAddr,w
  3154     0292  0150               	movlb	16	; select bank16
  3155     0293  009A               	movwf	26	;volatile
  3156     0294                     l2494:
  3157                           
  3158                           ;mcc_generated_files/memory.c: 122:         NVMADRH = ((writeAddr & 0xFF00) >> 8);
  3159     0294  0140               	movlb	0	; select bank0
  3160     0295  0833               	movf	FLASH_WriteBlock@writeAddr+1,w
  3161     0296  0150               	movlb	16	; select bank16
  3162     0297  009B               	movwf	27	;volatile
  3163     0298                     l2496:
  3164                           
  3165                           ;mcc_generated_files/memory.c: 125:         NVMDATL = flashWordArray[i];
  3166     0298  0140               	movlb	0	; select bank0
  3167     0299  353B               	lslf	FLASH_WriteBlock@i,w
  3168     029A  0734               	addwf	FLASH_WriteBlock@flashWordArray,w
  3169     029B  00B5               	movwf	??_FLASH_WriteBlock
  3170     029C  0835               	movf	??_FLASH_WriteBlock,w
  3171     029D  0086               	movwf	6
  3172     029E  0187               	clrf	7
  3173     029F  0801               	movf	1,w
  3174     02A0  0150               	movlb	16	; select bank16
  3175     02A1  009C               	movwf	28	;volatile
  3176     02A2                     l2498:
  3177                           
  3178                           ;mcc_generated_files/memory.c: 126:         NVMDATH = ((flashWordArray[i] & 0xFF00) >> 8
      +                          );
  3179     02A2  0140               	movlb	0	; select bank0
  3180     02A3  353B               	lslf	FLASH_WriteBlock@i,w
  3181     02A4  0734               	addwf	FLASH_WriteBlock@flashWordArray,w
  3182     02A5  00B5               	movwf	??_FLASH_WriteBlock
  3183     02A6  0835               	movf	??_FLASH_WriteBlock,w
  3184     02A7  0086               	movwf	6
  3185     02A8  0187               	clrf	7
  3186     02A9  3F40               	moviw [0]fsr1
  3187     02AA  00B6               	movwf	??_FLASH_WriteBlock+1
  3188     02AB  3F41               	moviw [1]fsr1
  3189     02AC  00B7               	movwf	??_FLASH_WriteBlock+2
  3190     02AD  0837               	movf	??_FLASH_WriteBlock+2,w
  3191     02AE  0150               	movlb	16	; select bank16
  3192     02AF  009D               	movwf	29	;volatile
  3193     02B0                     l2500:
  3194                           
  3195                           ;mcc_generated_files/memory.c: 128:         if(i == (32 -1))
  3196     02B0  301F               	movlw	31
  3197     02B1  0140               	movlb	0	; select bank0
  3198     02B2  063B               	xorwf	FLASH_WriteBlock@i,w
  3199     02B3  1D03               	btfss	3,2
  3200     02B4  2AB6               	goto	u951
  3201     02B5  2AB7               	goto	u950
  3202     02B6                     u951:
  3203     02B6  2AB9               	goto	l2504
  3204     02B7                     u950:
  3205     02B7                     l2502:
  3206                           
  3207                           ;mcc_generated_files/memory.c: 129:         {;mcc_generated_files/memory.c: 131:        
      +                               NVMCON1bits.LWLO = 0;
  3208     02B7  0150               	movlb	16	; select bank16
  3209     02B8  129E               	bcf	30,5	;volsfr
  3210     02B9                     l2504:
  3211                           
  3212                           ;mcc_generated_files/memory.c: 134:         NVMCON2 = 0x55;
  3213     02B9  3055               	movlw	85
  3214     02BA  0150               	movlb	16	; select bank16
  3215     02BB  009F               	movwf	31	;volsfr
  3216                           
  3217                           ;mcc_generated_files/memory.c: 135:         NVMCON2 = 0xAA;
  3218     02BC  30AA               	movlw	170
  3219     02BD  009F               	movwf	31	;volsfr
  3220     02BE                     l2506:
  3221                           
  3222                           ;mcc_generated_files/memory.c: 136:         NVMCON1bits.WR = 1;
  3223     02BE  149E               	bsf	30,1	;volsfr
  3224     02BF                     l2508:
  3225                           
  3226                           ;mcc_generated_files/memory.c: 137:         __nop();
  3227     02BF  0000               	nop
  3228     02C0                     l2510:
  3229                           
  3230                           ;mcc_generated_files/memory.c: 138:         __nop();
  3231     02C0  0000               	nop
  3232                           
  3233                           ;mcc_generated_files/memory.c: 140:      writeAddr++;
  3234     02C1  3001               	movlw	1
  3235     02C2  0140               	movlb	0	; select bank0
  3236     02C3  07B2               	addwf	FLASH_WriteBlock@writeAddr,f
  3237     02C4  3000               	movlw	0
  3238     02C5  3DB3               	addwfc	FLASH_WriteBlock@writeAddr+1,f
  3239     02C6                     l2512:
  3240                           
  3241                           ;mcc_generated_files/memory.c: 141:     }
  3242     02C6  3001               	movlw	1
  3243     02C7  00B5               	movwf	??_FLASH_WriteBlock
  3244     02C8  0835               	movf	??_FLASH_WriteBlock,w
  3245     02C9  07BB               	addwf	FLASH_WriteBlock@i,f
  3246     02CA                     l2514:
  3247     02CA  3020               	movlw	32
  3248     02CB  023B               	subwf	FLASH_WriteBlock@i,w
  3249     02CC  1C03               	skipc
  3250     02CD  2ACF               	goto	u961
  3251     02CE  2AD0               	goto	u960
  3252     02CF                     u961:
  3253     02CF  2A91               	goto	l2492
  3254     02D0                     u960:
  3255     02D0                     l542:
  3256                           
  3257                           ;mcc_generated_files/memory.c: 143:     NVMCON1bits.WREN = 0;
  3258     02D0  0150               	movlb	16	; select bank16
  3259     02D1  111E               	bcf	30,2	;volsfr
  3260     02D2                     l2516:
  3261                           
  3262                           ;mcc_generated_files/memory.c: 144:     INTCONbits.GIE = GIEBitValue;
  3263     02D2  0140               	movlb	0	; select bank0
  3264     02D3  0C3A               	rrf	FLASH_WriteBlock@GIEBitValue,w
  3265     02D4  1C03               	skipc
  3266     02D5  138B               	bcf	11,7	;volatile
  3267     02D6  1803               	skipnc
  3268     02D7  178B               	bsf	11,7	;volatile
  3269     02D8                     l540:
  3270     02D8  0008               	return
  3271     02D9                     __end_of_FLASH_WriteBlock:
  3272                           
  3273                           	psect	text5
  3274     04C9                     __ptext5:	
  3275 ;; *************** function _FLASH_EraseBlock *****************
  3276 ;; Defined at:
  3277 ;;		line 149 in file "mcc_generated_files/memory.c"
  3278 ;; Parameters:    Size  Location     Type
  3279 ;;  startAddr       2   15[BANK0 ] unsigned short 
  3280 ;; Auto vars:     Size  Location     Type
  3281 ;;  GIEBitValue     1   17[BANK0 ] unsigned char 
  3282 ;; Return value:  Size  Location     Type
  3283 ;;                  1    wreg      void 
  3284 ;; Registers used:
  3285 ;;		wreg, status,2, status,0
  3286 ;; Tracked objects:
  3287 ;;		On entry : 0/0
  3288 ;;		On exit  : 0/0
  3289 ;;		Unchanged: 0/0
  3290 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3291 ;;      Params:         0       2       0       0
  3292 ;;      Locals:         0       1       0       0
  3293 ;;      Temps:          0       0       0       0
  3294 ;;      Totals:         0       3       0       0
  3295 ;;Total ram usage:        3 bytes
  3296 ;; Hardware stack levels used: 1
  3297 ;; Hardware stack levels required when called: 7
  3298 ;; This function calls:
  3299 ;;		Nothing
  3300 ;; This function is called by:
  3301 ;;		_FLASH_WriteBlock
  3302 ;; This function uses a non-reentrant model
  3303 ;;
  3304                           
  3305     04C9                     _FLASH_EraseBlock:	
  3306                           ;psect for function _FLASH_EraseBlock
  3307                           
  3308     04C9                     l2422:	
  3309                           ;incstack = 0
  3310                           ; Regs used in _FLASH_EraseBlock: [wreg+status,2+status,0]
  3311                           
  3312                           
  3313                           ;mcc_generated_files/memory.c: 149: void FLASH_EraseBlock(uint16_t startAddr);mcc_genera
      +                          ted_files/memory.c: 150: {;mcc_generated_files/memory.c: 151:     uint8_t GIEBitValue = 
      +                          INTCONbits.GIE;
  3314     04C9  3000               	movlw	0
  3315     04CA  1B8B               	btfsc	11,7	;volatile
  3316     04CB  3001               	movlw	1
  3317     04CC  0140               	movlb	0	; select bank0
  3318     04CD  00B1               	movwf	FLASH_EraseBlock@GIEBitValue
  3319     04CE                     l2424:
  3320                           
  3321                           ;mcc_generated_files/memory.c: 154:     INTCONbits.GIE = 0;
  3322     04CE  138B               	bcf	11,7	;volatile
  3323     04CF                     l2426:
  3324                           
  3325                           ;mcc_generated_files/memory.c: 156:     NVMADRL = (startAddr & 0xFF);
  3326     04CF  082F               	movf	FLASH_EraseBlock@startAddr,w
  3327     04D0  0150               	movlb	16	; select bank16
  3328     04D1  009A               	movwf	26	;volatile
  3329     04D2                     l2428:
  3330                           
  3331                           ;mcc_generated_files/memory.c: 158:     NVMADRH = ((startAddr & 0xFF00) >> 8);
  3332     04D2  0140               	movlb	0	; select bank0
  3333     04D3  0830               	movf	FLASH_EraseBlock@startAddr+1,w
  3334     04D4  0150               	movlb	16	; select bank16
  3335     04D5  009B               	movwf	27	;volatile
  3336     04D6                     l2430:
  3337                           
  3338                           ;mcc_generated_files/memory.c: 161:     NVMCON1bits.NVMREGS = 0;
  3339     04D6  131E               	bcf	30,6	;volsfr
  3340     04D7                     l2432:
  3341                           
  3342                           ;mcc_generated_files/memory.c: 162:     NVMCON1bits.FREE = 1;
  3343     04D7  161E               	bsf	30,4	;volsfr
  3344     04D8                     l2434:
  3345                           
  3346                           ;mcc_generated_files/memory.c: 163:     NVMCON1bits.WREN = 1;
  3347     04D8  151E               	bsf	30,2	;volsfr
  3348                           
  3349                           ;mcc_generated_files/memory.c: 166:     NVMCON2 = 0x55;
  3350     04D9  3055               	movlw	85
  3351     04DA  009F               	movwf	31	;volsfr
  3352                           
  3353                           ;mcc_generated_files/memory.c: 167:     NVMCON2 = 0xAA;
  3354     04DB  30AA               	movlw	170
  3355     04DC  009F               	movwf	31	;volsfr
  3356     04DD                     l2436:
  3357                           
  3358                           ;mcc_generated_files/memory.c: 168:     NVMCON1bits.WR = 1;
  3359     04DD  149E               	bsf	30,1	;volsfr
  3360     04DE                     l2438:
  3361                           
  3362                           ;mcc_generated_files/memory.c: 169:     __nop();
  3363     04DE  0000               	nop
  3364     04DF                     l2440:
  3365                           
  3366                           ;mcc_generated_files/memory.c: 170:     __nop();
  3367     04DF  0000               	nop
  3368     04E0                     l2442:
  3369                           
  3370                           ;mcc_generated_files/memory.c: 172:     NVMCON1bits.WREN = 0;
  3371     04E0  0150               	movlb	16	; select bank16
  3372     04E1  111E               	bcf	30,2	;volsfr
  3373     04E2                     l2444:
  3374                           
  3375                           ;mcc_generated_files/memory.c: 173:     INTCONbits.GIE = GIEBitValue;
  3376     04E2  0140               	movlb	0	; select bank0
  3377     04E3  0C31               	rrf	FLASH_EraseBlock@GIEBitValue,w
  3378     04E4  1C03               	skipc
  3379     04E5  138B               	bcf	11,7	;volatile
  3380     04E6  1803               	skipnc
  3381     04E7  178B               	bsf	11,7	;volatile
  3382     04E8                     l546:
  3383     04E8  0008               	return
  3384     04E9                     __end_of_FLASH_EraseBlock:
  3385                           
  3386                           	psect	text6
  3387     04E9                     __ptext6:	
  3388 ;; *************** function _FLASH_ReadWord *****************
  3389 ;; Defined at:
  3390 ;;		line 58 in file "mcc_generated_files/memory.c"
  3391 ;; Parameters:    Size  Location     Type
  3392 ;;  flashAddr       2   15[BANK0 ] unsigned short 
  3393 ;; Auto vars:     Size  Location     Type
  3394 ;;  GIEBitValue     1   17[BANK0 ] unsigned char 
  3395 ;; Return value:  Size  Location     Type
  3396 ;;                  2   15[BANK0 ] unsigned short 
  3397 ;; Registers used:
  3398 ;;		wreg, status,2, status,0
  3399 ;; Tracked objects:
  3400 ;;		On entry : 0/0
  3401 ;;		On exit  : 0/0
  3402 ;;		Unchanged: 0/0
  3403 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3404 ;;      Params:         0       2       0       0
  3405 ;;      Locals:         0       1       0       0
  3406 ;;      Temps:          0       0       0       0
  3407 ;;      Totals:         0       3       0       0
  3408 ;;Total ram usage:        3 bytes
  3409 ;; Hardware stack levels used: 1
  3410 ;; Hardware stack levels required when called: 7
  3411 ;; This function calls:
  3412 ;;		Nothing
  3413 ;; This function is called by:
  3414 ;;		_memory_initialize
  3415 ;;		_FLASH_WriteWord
  3416 ;; This function uses a non-reentrant model
  3417 ;;
  3418                           
  3419     04E9                     _FLASH_ReadWord:	
  3420                           ;psect for function _FLASH_ReadWord
  3421                           
  3422     04E9                     l2446:	
  3423                           ;incstack = 0
  3424                           ; Regs used in _FLASH_ReadWord: [wreg+status,2+status,0]
  3425                           
  3426                           
  3427                           ;mcc_generated_files/memory.c: 58: uint16_t FLASH_ReadWord(uint16_t flashAddr);mcc_gener
      +                          ated_files/memory.c: 59: {;mcc_generated_files/memory.c: 60:     uint8_t GIEBitValue = I
      +                          NTCONbits.GIE;
  3428     04E9  3000               	movlw	0
  3429     04EA  1B8B               	btfsc	11,7	;volatile
  3430     04EB  3001               	movlw	1
  3431     04EC  0140               	movlb	0	; select bank0
  3432     04ED  00B1               	movwf	FLASH_ReadWord@GIEBitValue
  3433     04EE                     l2448:
  3434                           
  3435                           ;mcc_generated_files/memory.c: 62:     INTCONbits.GIE = 0;
  3436     04EE  138B               	bcf	11,7	;volatile
  3437     04EF                     l2450:
  3438                           
  3439                           ;mcc_generated_files/memory.c: 63:     NVMADRL = (flashAddr & 0x00FF);
  3440     04EF  082F               	movf	FLASH_ReadWord@flashAddr,w
  3441     04F0  0150               	movlb	16	; select bank16
  3442     04F1  009A               	movwf	26	;volatile
  3443     04F2                     l2452:
  3444                           
  3445                           ;mcc_generated_files/memory.c: 64:     NVMADRH = ((flashAddr & 0xFF00) >> 8);
  3446     04F2  0140               	movlb	0	; select bank0
  3447     04F3  0830               	movf	FLASH_ReadWord@flashAddr+1,w
  3448     04F4  0150               	movlb	16	; select bank16
  3449     04F5  009B               	movwf	27	;volatile
  3450     04F6                     l2454:
  3451                           
  3452                           ;mcc_generated_files/memory.c: 66:     NVMCON1bits.NVMREGS = 0;
  3453     04F6  131E               	bcf	30,6	;volsfr
  3454     04F7                     l2456:
  3455                           
  3456                           ;mcc_generated_files/memory.c: 67:     NVMCON1bits.RD = 1;
  3457     04F7  141E               	bsf	30,0	;volsfr
  3458     04F8                     l2458:
  3459                           
  3460                           ;mcc_generated_files/memory.c: 68:     __nop();
  3461     04F8  0000               	nop
  3462     04F9                     l2460:
  3463                           
  3464                           ;mcc_generated_files/memory.c: 69:     __nop();
  3465     04F9  0000               	nop
  3466     04FA                     l2462:
  3467                           
  3468                           ;mcc_generated_files/memory.c: 70:     INTCONbits.GIE = GIEBitValue;
  3469     04FA  0140               	movlb	0	; select bank0
  3470     04FB  0C31               	rrf	FLASH_ReadWord@GIEBitValue,w
  3471     04FC  1C03               	skipc
  3472     04FD  138B               	bcf	11,7	;volatile
  3473     04FE  1803               	skipnc
  3474     04FF  178B               	bsf	11,7	;volatile
  3475     0500                     l2464:
  3476                           
  3477                           ;mcc_generated_files/memory.c: 72:     return ((uint16_t)((NVMDATH << 8) | NVMDATL));
  3478     0500  0150               	movlb	16	; select bank16
  3479     0501  081D               	movf	29,w	;volatile
  3480     0502  0140               	movlb	0	; select bank0
  3481     0503  00B0               	movwf	?_FLASH_ReadWord+1
  3482     0504  0150               	movlb	16	; select bank16
  3483     0505  081C               	movf	28,w	;volatile
  3484     0506  0140               	movlb	0	; select bank0
  3485     0507  00AF               	movwf	?_FLASH_ReadWord
  3486     0508                     l531:
  3487     0508  0008               	return
  3488     0509                     __end_of_FLASH_ReadWord:
  3489                           
  3490                           	psect	text7
  3491     05C5                     __ptext7:	
  3492 ;; *************** function _getSensorBoardType *****************
  3493 ;; Defined at:
  3494 ;;		line 35 in file "sensor.c"
  3495 ;; Parameters:    Size  Location     Type
  3496 ;;		None
  3497 ;; Auto vars:     Size  Location     Type
  3498 ;;		None
  3499 ;; Return value:  Size  Location     Type
  3500 ;;                  1    wreg      unsigned char 
  3501 ;; Registers used:
  3502 ;;		wreg, status,2, status,0
  3503 ;; Tracked objects:
  3504 ;;		On entry : 0/0
  3505 ;;		On exit  : 0/0
  3506 ;;		Unchanged: 0/0
  3507 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3508 ;;      Params:         0       0       0       0
  3509 ;;      Locals:         0       0       0       0
  3510 ;;      Temps:          0       2       0       0
  3511 ;;      Totals:         0       2       0       0
  3512 ;;Total ram usage:        2 bytes
  3513 ;; Hardware stack levels used: 1
  3514 ;; Hardware stack levels required when called: 7
  3515 ;; This function calls:
  3516 ;;		Nothing
  3517 ;; This function is called by:
  3518 ;;		_main
  3519 ;; This function uses a non-reentrant model
  3520 ;;
  3521                           
  3522     05C5                     _getSensorBoardType:	
  3523                           ;psect for function _getSensorBoardType
  3524                           
  3525     05C5                     l2658:	
  3526                           ;incstack = 0
  3527                           ; Regs used in _getSensorBoardType: [wreg+status,2+status,0]
  3528                           
  3529                           
  3530                           ;sensor.c: 37:     return (((PORTC & 0x3C)) >>2 | (PORTA & 0x30));
  3531     05C5  3030               	movlw	48
  3532     05C6  0140               	movlb	0	; select bank0
  3533     05C7  050C               	andwf	12,w	;volatile
  3534     05C8  00AF               	movwf	??_getSensorBoardType
  3535     05C9  080E               	movf	14,w	;volatile
  3536     05CA  00B0               	movwf	??_getSensorBoardType+1
  3537     05CB  3002               	movlw	2
  3538     05CC                     u1045:
  3539     05CC  36B0               	lsrf	??_getSensorBoardType+1,f
  3540     05CD  0B89               	decfsz	9,f
  3541     05CE  2DCC               	goto	u1045
  3542     05CF  0830               	movf	??_getSensorBoardType+1,w
  3543     05D0  390F               	andlw	15
  3544     05D1  042F               	iorwf	??_getSensorBoardType,w
  3545     05D2                     l60:
  3546     05D2  0008               	return
  3547     05D3                     __end_of_getSensorBoardType:
  3548                           
  3549                           	psect	text8
  3550     0660                     __ptext8:	
  3551 ;; *************** function _error_signal *****************
  3552 ;; Defined at:
  3553 ;;		line 53 in file "sensor.c"
  3554 ;; Parameters:    Size  Location     Type
  3555 ;;		None
  3556 ;; Auto vars:     Size  Location     Type
  3557 ;;		None
  3558 ;; Return value:  Size  Location     Type
  3559 ;;                  1    wreg      void 
  3560 ;; Registers used:
  3561 ;;		None
  3562 ;; Tracked objects:
  3563 ;;		On entry : 0/0
  3564 ;;		On exit  : 0/0
  3565 ;;		Unchanged: 0/0
  3566 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3567 ;;      Params:         0       0       0       0
  3568 ;;      Locals:         0       0       0       0
  3569 ;;      Temps:          0       0       0       0
  3570 ;;      Totals:         0       0       0       0
  3571 ;;Total ram usage:        0 bytes
  3572 ;; Hardware stack levels used: 1
  3573 ;; Hardware stack levels required when called: 7
  3574 ;; This function calls:
  3575 ;;		Nothing
  3576 ;; This function is called by:
  3577 ;;		_main
  3578 ;; This function uses a non-reentrant model
  3579 ;;
  3580                           
  3581     0660                     _error_signal:	
  3582                           ;psect for function _error_signal
  3583                           
  3584     0660                     l2674:	
  3585                           ;incstack = 0
  3586                           ; Regs used in _error_signal: []
  3587                           
  3588                           
  3589                           ;sensor.c: 55:     error_flag = 1;
  3590     0660  0140               	movlb	0	; select bank0
  3591     0661  01DD               	clrf	_error_flag
  3592     0662  0ADD               	incf	_error_flag,f
  3593     0663                     l68:
  3594     0663  0008               	return
  3595     0664                     __end_of_error_signal:
  3596                           
  3597                           	psect	text9
  3598     0585                     __ptext9:	
  3599 ;; *************** function _SensorBoardType_validation *****************
  3600 ;; Defined at:
  3601 ;;		line 40 in file "sensor.c"
  3602 ;; Parameters:    Size  Location     Type
  3603 ;;  SensorBoardT    1    wreg     unsigned char 
  3604 ;; Auto vars:     Size  Location     Type
  3605 ;;  SensorBoardT    1   15[BANK0 ] unsigned char 
  3606 ;; Return value:  Size  Location     Type
  3607 ;;                  1    wreg      unsigned char 
  3608 ;; Registers used:
  3609 ;;		wreg, status,2, status,0
  3610 ;; Tracked objects:
  3611 ;;		On entry : 0/0
  3612 ;;		On exit  : 0/0
  3613 ;;		Unchanged: 0/0
  3614 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3615 ;;      Params:         0       0       0       0
  3616 ;;      Locals:         0       1       0       0
  3617 ;;      Temps:          0       0       0       0
  3618 ;;      Totals:         0       1       0       0
  3619 ;;Total ram usage:        1 bytes
  3620 ;; Hardware stack levels used: 1
  3621 ;; Hardware stack levels required when called: 7
  3622 ;; This function calls:
  3623 ;;		Nothing
  3624 ;; This function is called by:
  3625 ;;		_main
  3626 ;; This function uses a non-reentrant model
  3627 ;;
  3628                           
  3629     0585                     _SensorBoardType_validation:	
  3630                           ;psect for function _SensorBoardType_validation
  3631                           
  3632                           
  3633                           ;incstack = 0
  3634                           ; Regs used in _SensorBoardType_validation: [wreg+status,2+status,0]
  3635                           ;SensorBoardType_validation@SensorBoardType stored from wreg
  3636     0585  0140               	movlb	0	; select bank0
  3637     0586  00AF               	movwf	SensorBoardType_validation@SensorBoardType
  3638     0587                     l2662:
  3639                           
  3640                           ;sensor.c: 40: uint8_t SensorBoardType_validation (uint8_t SensorBoardType);sensor.c: 41
      +                          : {;sensor.c: 42:     if(SensorBoardType>=1)
  3641     0587  082F               	movf	SensorBoardType_validation@SensorBoardType,w
  3642     0588  1903               	btfsc	3,2
  3643     0589  2D8B               	goto	u1051
  3644     058A  2D8C               	goto	u1050
  3645     058B                     u1051:
  3646     058B  2D94               	goto	l2670
  3647     058C                     u1050:
  3648     058C                     l2664:
  3649                           
  3650                           ;sensor.c: 43:     {;sensor.c: 44:         if(SensorBoardType<=12)
  3651     058C  300D               	movlw	13
  3652     058D  022F               	subwf	SensorBoardType_validation@SensorBoardType,w
  3653     058E  1803               	skipnc
  3654     058F  2D91               	goto	u1061
  3655     0590  2D92               	goto	u1060
  3656     0591                     u1061:
  3657     0591  2D94               	goto	l2670
  3658     0592                     u1060:
  3659     0592                     l2666:
  3660                           
  3661                           ;sensor.c: 45:         {;sensor.c: 46:             return(1);
  3662     0592  3001               	movlw	1
  3663     0593  2D95               	goto	l65
  3664     0594                     l2670:
  3665                           
  3666                           ;sensor.c: 50:     return(0);
  3667     0594  3000               	movlw	0
  3668     0595                     l65:
  3669     0595  0008               	return
  3670     0596                     __end_of_SensorBoardType_validation:
  3671                           
  3672                           	psect	text10
  3673     0596                     __ptext10:	
  3674 ;; *************** function _SYSTEM_Initialize *****************
  3675 ;; Defined at:
  3676 ;;		line 50 in file "mcc_generated_files/mcc.c"
  3677 ;; Parameters:    Size  Location     Type
  3678 ;;		None
  3679 ;; Auto vars:     Size  Location     Type
  3680 ;;		None
  3681 ;; Return value:  Size  Location     Type
  3682 ;;                  1    wreg      void 
  3683 ;; Registers used:
  3684 ;;		wreg, status,2, status,0, pclath, cstack
  3685 ;; Tracked objects:
  3686 ;;		On entry : 0/0
  3687 ;;		On exit  : 0/0
  3688 ;;		Unchanged: 0/0
  3689 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3690 ;;      Params:         0       0       0       0
  3691 ;;      Locals:         0       0       0       0
  3692 ;;      Temps:          0       0       0       0
  3693 ;;      Totals:         0       0       0       0
  3694 ;;Total ram usage:        0 bytes
  3695 ;; Hardware stack levels used: 1
  3696 ;; Hardware stack levels required when called: 9
  3697 ;; This function calls:
  3698 ;;		_I2C1_Initialize
  3699 ;;		_OSCILLATOR_Initialize
  3700 ;;		_PIN_MANAGER_Initialize
  3701 ;;		_TMR0_Initialize
  3702 ;;		_WDT_Initialize
  3703 ;; This function is called by:
  3704 ;;		_main
  3705 ;; This function uses a non-reentrant model
  3706 ;;
  3707                           
  3708     0596                     _SYSTEM_Initialize:	
  3709                           ;psect for function _SYSTEM_Initialize
  3710                           
  3711     0596                     l2680:	
  3712                           ;incstack = 0
  3713                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  3714                           
  3715                           
  3716                           ;mcc_generated_files/mcc.c: 53:     I2C1_Initialize();
  3717     0596  3185  25ED  3185   	fcall	_I2C1_Initialize
  3718                           
  3719                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
  3720     0599  3184  2465  3185   	fcall	_PIN_MANAGER_Initialize
  3721                           
  3722                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
  3723     059C  3186  261A  3185   	fcall	_OSCILLATOR_Initialize
  3724     059F                     l2682:
  3725                           
  3726                           ;mcc_generated_files/mcc.c: 56:     WDT_Initialize();
  3727     059F  3186  2668  3185   	fcall	_WDT_Initialize
  3728     05A2                     l2684:
  3729                           
  3730                           ;mcc_generated_files/mcc.c: 57:     TMR0_Initialize();
  3731     05A2  3185  2570  3185   	fcall	_TMR0_Initialize
  3732     05A5                     l598:
  3733     05A5  0008               	return
  3734     05A6                     __end_of_SYSTEM_Initialize:
  3735                           
  3736                           	psect	text11
  3737     0668                     __ptext11:	
  3738 ;; *************** function _WDT_Initialize *****************
  3739 ;; Defined at:
  3740 ;;		line 70 in file "mcc_generated_files/mcc.c"
  3741 ;; Parameters:    Size  Location     Type
  3742 ;;		None
  3743 ;; Auto vars:     Size  Location     Type
  3744 ;;		None
  3745 ;; Return value:  Size  Location     Type
  3746 ;;                  1    wreg      void 
  3747 ;; Registers used:
  3748 ;;		status,2
  3749 ;; Tracked objects:
  3750 ;;		On entry : 0/0
  3751 ;;		On exit  : 0/0
  3752 ;;		Unchanged: 0/0
  3753 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3754 ;;      Params:         0       0       0       0
  3755 ;;      Locals:         0       0       0       0
  3756 ;;      Temps:          0       0       0       0
  3757 ;;      Totals:         0       0       0       0
  3758 ;;Total ram usage:        0 bytes
  3759 ;; Hardware stack levels used: 1
  3760 ;; Hardware stack levels required when called: 7
  3761 ;; This function calls:
  3762 ;;		Nothing
  3763 ;; This function is called by:
  3764 ;;		_SYSTEM_Initialize
  3765 ;; This function uses a non-reentrant model
  3766 ;;
  3767                           
  3768     0668                     _WDT_Initialize:	
  3769                           ;psect for function _WDT_Initialize
  3770                           
  3771     0668                     l2626:	
  3772                           ;incstack = 0
  3773                           ; Regs used in _WDT_Initialize: [status,2]
  3774                           
  3775                           
  3776                           ;mcc_generated_files/mcc.c: 73:     WDTCON = 0x00;
  3777     0668  0150               	movlb	16	; select bank16
  3778     0669  018C               	clrf	12	;volatile
  3779     066A                     l604:
  3780     066A  0008               	return
  3781     066B                     __end_of_WDT_Initialize:
  3782                           
  3783                           	psect	text12
  3784     0570                     __ptext12:	
  3785 ;; *************** function _TMR0_Initialize *****************
  3786 ;; Defined at:
  3787 ;;		line 71 in file "mcc_generated_files/tmr0.c"
  3788 ;; Parameters:    Size  Location     Type
  3789 ;;		None
  3790 ;; Auto vars:     Size  Location     Type
  3791 ;;		None
  3792 ;; Return value:  Size  Location     Type
  3793 ;;                  1    wreg      void 
  3794 ;; Registers used:
  3795 ;;		wreg, status,2, status,0, pclath, cstack
  3796 ;; Tracked objects:
  3797 ;;		On entry : 0/0
  3798 ;;		On exit  : 0/0
  3799 ;;		Unchanged: 0/0
  3800 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3801 ;;      Params:         0       0       0       0
  3802 ;;      Locals:         0       0       0       0
  3803 ;;      Temps:          0       0       0       0
  3804 ;;      Totals:         0       0       0       0
  3805 ;;Total ram usage:        0 bytes
  3806 ;; Hardware stack levels used: 1
  3807 ;; Hardware stack levels required when called: 8
  3808 ;; This function calls:
  3809 ;;		_TMR0_SetInterruptHandler
  3810 ;; This function is called by:
  3811 ;;		_SYSTEM_Initialize
  3812 ;; This function uses a non-reentrant model
  3813 ;;
  3814                           
  3815     0570                     _TMR0_Initialize:	
  3816                           ;psect for function _TMR0_Initialize
  3817                           
  3818     0570                     l2608:	
  3819                           ;incstack = 0
  3820                           ; Regs used in _TMR0_Initialize: [wreg+status,2+status,0+pclath+cstack]
  3821                           
  3822                           
  3823                           ;mcc_generated_files/tmr0.c: 76:     T0CON1 = 0x69;
  3824     0570  3069               	movlw	105
  3825     0571  014B               	movlb	11	; select bank11
  3826     0572  009F               	movwf	31	;volatile
  3827                           
  3828                           ;mcc_generated_files/tmr0.c: 79:     TMR0H = 0x9B;
  3829     0573  309B               	movlw	155
  3830     0574  009D               	movwf	29	;volatile
  3831     0575                     l2610:
  3832                           
  3833                           ;mcc_generated_files/tmr0.c: 82:     TMR0L = 0x00;
  3834     0575  019C               	clrf	28	;volatile
  3835     0576                     l2612:
  3836                           
  3837                           ;mcc_generated_files/tmr0.c: 85:     PIR0bits.TMR0IF = 0;
  3838     0576  014E               	movlb	14	; select bank14
  3839     0577  128C               	bcf	12,5	;volatile
  3840     0578                     l2614:
  3841                           
  3842                           ;mcc_generated_files/tmr0.c: 88:     PIE0bits.TMR0IE = 1;
  3843     0578  1696               	bsf	22,5	;volatile
  3844     0579                     l2616:
  3845                           
  3846                           ;mcc_generated_files/tmr0.c: 91:     TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandl
      +                          er);
  3847     0579  303B               	movlw	low _TMR0_DefaultInterruptHandler
  3848     057A  0140               	movlb	0	; select bank0
  3849     057B  00AF               	movwf	TMR0_SetInterruptHandler@InterruptHandler
  3850     057C  3004               	movlw	high _TMR0_DefaultInterruptHandler
  3851     057D  00B0               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1
  3852     057E  3186  2614  3185   	fcall	_TMR0_SetInterruptHandler
  3853     0581                     l2618:
  3854                           
  3855                           ;mcc_generated_files/tmr0.c: 94:     T0CON0 = 0x80;
  3856     0581  3080               	movlw	128
  3857     0582  014B               	movlb	11	; select bank11
  3858     0583  009E               	movwf	30	;volatile
  3859     0584                     l469:
  3860     0584  0008               	return
  3861     0585                     __end_of_TMR0_Initialize:
  3862                           
  3863                           	psect	text13
  3864     0614                     __ptext13:	
  3865 ;; *************** function _TMR0_SetInterruptHandler *****************
  3866 ;; Defined at:
  3867 ;;		line 146 in file "mcc_generated_files/tmr0.c"
  3868 ;; Parameters:    Size  Location     Type
  3869 ;;  InterruptHan    2   15[BANK0 ] PTR FTN()void 
  3870 ;;		 -> TMR0_DefaultInterruptHandler(1), 
  3871 ;; Auto vars:     Size  Location     Type
  3872 ;;		None
  3873 ;; Return value:  Size  Location     Type
  3874 ;;                  1    wreg      void 
  3875 ;; Registers used:
  3876 ;;		wreg
  3877 ;; Tracked objects:
  3878 ;;		On entry : 0/0
  3879 ;;		On exit  : 0/0
  3880 ;;		Unchanged: 0/0
  3881 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3882 ;;      Params:         0       2       0       0
  3883 ;;      Locals:         0       0       0       0
  3884 ;;      Temps:          0       0       0       0
  3885 ;;      Totals:         0       2       0       0
  3886 ;;Total ram usage:        2 bytes
  3887 ;; Hardware stack levels used: 1
  3888 ;; Hardware stack levels required when called: 7
  3889 ;; This function calls:
  3890 ;;		Nothing
  3891 ;; This function is called by:
  3892 ;;		_TMR0_Initialize
  3893 ;; This function uses a non-reentrant model
  3894 ;;
  3895                           
  3896     0614                     _TMR0_SetInterruptHandler:	
  3897                           ;psect for function _TMR0_SetInterruptHandler
  3898                           
  3899     0614                     l2468:	
  3900                           ;incstack = 0
  3901                           ; Regs used in _TMR0_SetInterruptHandler: [wreg]
  3902                           
  3903                           
  3904                           ;mcc_generated_files/tmr0.c: 147:     TMR0_InterruptHandler = InterruptHandler;
  3905     0614  0140               	movlb	0	; select bank0
  3906     0615  0830               	movf	TMR0_SetInterruptHandler@InterruptHandler+1,w
  3907     0616  00E0               	movwf	_TMR0_InterruptHandler+1
  3908     0617  082F               	movf	TMR0_SetInterruptHandler@InterruptHandler,w
  3909     0618  00DF               	movwf	_TMR0_InterruptHandler
  3910     0619                     l491:
  3911     0619  0008               	return
  3912     061A                     __end_of_TMR0_SetInterruptHandler:
  3913                           
  3914                           	psect	text14
  3915     0465                     __ptext14:	
  3916 ;; *************** function _PIN_MANAGER_Initialize *****************
  3917 ;; Defined at:
  3918 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  3919 ;; Parameters:    Size  Location     Type
  3920 ;;		None
  3921 ;; Auto vars:     Size  Location     Type
  3922 ;;		None
  3923 ;; Return value:  Size  Location     Type
  3924 ;;                  1    wreg      void 
  3925 ;; Registers used:
  3926 ;;		wreg, status,2
  3927 ;; Tracked objects:
  3928 ;;		On entry : 0/0
  3929 ;;		On exit  : 0/0
  3930 ;;		Unchanged: 0/0
  3931 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3932 ;;      Params:         0       0       0       0
  3933 ;;      Locals:         0       0       0       0
  3934 ;;      Temps:          0       0       0       0
  3935 ;;      Totals:         0       0       0       0
  3936 ;;Total ram usage:        0 bytes
  3937 ;; Hardware stack levels used: 1
  3938 ;; Hardware stack levels required when called: 7
  3939 ;; This function calls:
  3940 ;;		Nothing
  3941 ;; This function is called by:
  3942 ;;		_SYSTEM_Initialize
  3943 ;; This function uses a non-reentrant model
  3944 ;;
  3945                           
  3946     0465                     _PIN_MANAGER_Initialize:	
  3947                           ;psect for function _PIN_MANAGER_Initialize
  3948                           
  3949     0465                     l2538:	
  3950                           ;incstack = 0
  3951                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  3952                           
  3953                           
  3954                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
  3955     0465  0140               	movlb	0	; select bank0
  3956     0466  0198               	clrf	24	;volatile
  3957                           
  3958                           ;mcc_generated_files/pin_manager.c: 61:     LATC = 0x00;
  3959     0467  019A               	clrf	26	;volatile
  3960     0468                     l2540:
  3961                           
  3962                           ;mcc_generated_files/pin_manager.c: 66:     TRISA = 0x3B;
  3963     0468  303B               	movlw	59
  3964     0469  0092               	movwf	18	;volatile
  3965     046A                     l2542:
  3966                           
  3967                           ;mcc_generated_files/pin_manager.c: 67:     TRISC = 0x3F;
  3968     046A  303F               	movlw	63
  3969     046B  0094               	movwf	20	;volatile
  3970                           
  3971                           ;mcc_generated_files/pin_manager.c: 72:     ANSELC = 0x00;
  3972     046C  017E               	movlb	62	; select bank62
  3973     046D  01CE               	clrf	78	;volatile
  3974     046E                     l2544:
  3975                           
  3976                           ;mcc_generated_files/pin_manager.c: 73:     ANSELA = 0x07;
  3977     046E  3007               	movlw	7
  3978     046F  00B8               	movwf	56	;volatile
  3979     0470                     l2546:
  3980                           
  3981                           ;mcc_generated_files/pin_manager.c: 78:     WPUA = 0x00;
  3982     0470  01B9               	clrf	57	;volatile
  3983     0471                     l2548:
  3984                           
  3985                           ;mcc_generated_files/pin_manager.c: 79:     WPUC = 0x00;
  3986     0471  01CF               	clrf	79	;volatile
  3987     0472                     l2550:
  3988                           
  3989                           ;mcc_generated_files/pin_manager.c: 84:     ODCONA = 0x00;
  3990     0472  01BA               	clrf	58	;volatile
  3991     0473                     l2552:
  3992                           
  3993                           ;mcc_generated_files/pin_manager.c: 85:     ODCONC = 0x00;
  3994     0473  01D0               	clrf	80	;volatile
  3995     0474                     l2554:
  3996                           
  3997                           ;mcc_generated_files/pin_manager.c: 90:     SLRCONA = 0x37;
  3998     0474  3037               	movlw	55
  3999     0475  00BB               	movwf	59	;volatile
  4000     0476                     l2556:
  4001                           
  4002                           ;mcc_generated_files/pin_manager.c: 91:     SLRCONC = 0x3F;
  4003     0476  303F               	movlw	63
  4004     0477  00D1               	movwf	81	;volatile
  4005     0478                     l2558:
  4006                           
  4007                           ;mcc_generated_files/pin_manager.c: 96:     INLVLA = 0x3F;
  4008     0478  303F               	movlw	63
  4009     0479  00BC               	movwf	60	;volatile
  4010     047A                     l2560:
  4011                           
  4012                           ;mcc_generated_files/pin_manager.c: 97:     INLVLC = 0x3F;
  4013     047A  303F               	movlw	63
  4014     047B  00D2               	movwf	82	;volatile
  4015     047C                     l2562:
  4016                           
  4017                           ;mcc_generated_files/pin_manager.c: 106:     RC0PPS = 0x07;
  4018     047C  3007               	movlw	7
  4019     047D  00A0               	movwf	32	;volatile
  4020     047E                     l2564:
  4021                           
  4022                           ;mcc_generated_files/pin_manager.c: 107:     SSP1CLKPPS = 0x10;
  4023     047E  3010               	movlw	16
  4024     047F  017D               	movlb	61	; select bank61
  4025     0480  00C5               	movwf	69	;volatile
  4026     0481                     l2566:
  4027                           
  4028                           ;mcc_generated_files/pin_manager.c: 108:     RC1PPS = 0x08;
  4029     0481  3008               	movlw	8
  4030     0482  017E               	movlb	62	; select bank62
  4031     0483  00A1               	movwf	33	;volatile
  4032     0484                     l2568:
  4033                           
  4034                           ;mcc_generated_files/pin_manager.c: 109:     SSP1DATPPS = 0x11;
  4035     0484  3011               	movlw	17
  4036     0485  017D               	movlb	61	; select bank61
  4037     0486  00C6               	movwf	70	;volatile
  4038     0487                     l107:
  4039     0487  0008               	return
  4040     0488                     __end_of_PIN_MANAGER_Initialize:
  4041                           
  4042                           	psect	text15
  4043     061A                     __ptext15:	
  4044 ;; *************** function _OSCILLATOR_Initialize *****************
  4045 ;; Defined at:
  4046 ;;		line 60 in file "mcc_generated_files/mcc.c"
  4047 ;; Parameters:    Size  Location     Type
  4048 ;;		None
  4049 ;; Auto vars:     Size  Location     Type
  4050 ;;		None
  4051 ;; Return value:  Size  Location     Type
  4052 ;;                  1    wreg      void 
  4053 ;; Registers used:
  4054 ;;		wreg, status,2
  4055 ;; Tracked objects:
  4056 ;;		On entry : 0/0
  4057 ;;		On exit  : 0/0
  4058 ;;		Unchanged: 0/0
  4059 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4060 ;;      Params:         0       0       0       0
  4061 ;;      Locals:         0       0       0       0
  4062 ;;      Temps:          0       0       0       0
  4063 ;;      Totals:         0       0       0       0
  4064 ;;Total ram usage:        0 bytes
  4065 ;; Hardware stack levels used: 1
  4066 ;; Hardware stack levels required when called: 7
  4067 ;; This function calls:
  4068 ;;		Nothing
  4069 ;; This function is called by:
  4070 ;;		_SYSTEM_Initialize
  4071 ;; This function uses a non-reentrant model
  4072 ;;
  4073                           
  4074     061A                     _OSCILLATOR_Initialize:	
  4075                           ;psect for function _OSCILLATOR_Initialize
  4076                           
  4077     061A                     l2620:	
  4078                           ;incstack = 0
  4079                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  4080                           
  4081                           
  4082                           ;mcc_generated_files/mcc.c: 63:     OSCEN = 0x00;
  4083     061A  0151               	movlb	17	; select bank17
  4084     061B  0191               	clrf	17	;volatile
  4085     061C                     l2622:
  4086                           
  4087                           ;mcc_generated_files/mcc.c: 65:     OSCFRQ = 0x03;
  4088     061C  3003               	movlw	3
  4089     061D  0093               	movwf	19	;volatile
  4090     061E                     l2624:
  4091                           
  4092                           ;mcc_generated_files/mcc.c: 67:     OSCTUNE = 0x00;
  4093     061E  0192               	clrf	18	;volatile
  4094     061F                     l601:
  4095     061F  0008               	return
  4096     0620                     __end_of_OSCILLATOR_Initialize:
  4097                           
  4098                           	psect	text16
  4099     05ED                     __ptext16:	
  4100 ;; *************** function _I2C1_Initialize *****************
  4101 ;; Defined at:
  4102 ;;		line 112 in file "mcc_generated_files/i2c1_slave.c"
  4103 ;; Parameters:    Size  Location     Type
  4104 ;;		None
  4105 ;; Auto vars:     Size  Location     Type
  4106 ;;		None
  4107 ;; Return value:  Size  Location     Type
  4108 ;;                  1    wreg      void 
  4109 ;; Registers used:
  4110 ;;		wreg, status,2, status,0
  4111 ;; Tracked objects:
  4112 ;;		On entry : 0/0
  4113 ;;		On exit  : 0/0
  4114 ;;		Unchanged: 0/0
  4115 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4116 ;;      Params:         0       0       0       0
  4117 ;;      Locals:         0       0       0       0
  4118 ;;      Temps:          0       1       0       0
  4119 ;;      Totals:         0       1       0       0
  4120 ;;Total ram usage:        1 bytes
  4121 ;; Hardware stack levels used: 1
  4122 ;; Hardware stack levels required when called: 7
  4123 ;; This function calls:
  4124 ;;		Nothing
  4125 ;; This function is called by:
  4126 ;;		_SYSTEM_Initialize
  4127 ;;		_I2C1_Enable
  4128 ;; This function uses a non-reentrant model
  4129 ;;
  4130                           
  4131     05ED                     _I2C1_Initialize:	
  4132                           ;psect for function _I2C1_Initialize
  4133                           
  4134     05ED                     l2570:	
  4135                           ;incstack = 0
  4136                           ; Regs used in _I2C1_Initialize: [wreg+status,2+status,0]
  4137                           
  4138                           
  4139                           ;mcc_generated_files/i2c1_slave.c: 114:     SSP1STAT = 0x40;
  4140     05ED  3040               	movlw	64
  4141     05EE  0143               	movlb	3	; select bank3
  4142     05EF  008F               	movwf	15	;volatile
  4143     05F0                     l2572:
  4144                           
  4145                           ;mcc_generated_files/i2c1_slave.c: 115:     SSP1CON1 |= 0x06;
  4146     05F0  3006               	movlw	6
  4147     05F1  0140               	movlb	0	; select bank0
  4148     05F2  00AF               	movwf	??_I2C1_Initialize
  4149     05F3  082F               	movf	??_I2C1_Initialize,w
  4150     05F4  0143               	movlb	3	; select bank3
  4151     05F5  0490               	iorwf	16,f	;volatile
  4152     05F6                     l2574:
  4153                           
  4154                           ;mcc_generated_files/i2c1_slave.c: 116:     SSP1CON2 = 0x00;
  4155     05F6  0191               	clrf	17	;volatile
  4156     05F7                     l2576:
  4157                           
  4158                           ;mcc_generated_files/i2c1_slave.c: 117:     SSP1CON1bits.SSPEN = 0;
  4159     05F7  1290               	bcf	16,5	;volatile
  4160     05F8                     l278:
  4161     05F8  0008               	return
  4162     05F9                     __end_of_I2C1_Initialize:
  4163                           
  4164                           	psect	text17
  4165     0389                     __ptext17:	
  4166 ;; *************** function _I2C1_Open *****************
  4167 ;; Defined at:
  4168 ;;		line 120 in file "mcc_generated_files/i2c1_slave.c"
  4169 ;; Parameters:    Size  Location     Type
  4170 ;;		None
  4171 ;; Auto vars:     Size  Location     Type
  4172 ;;		None
  4173 ;; Return value:  Size  Location     Type
  4174 ;;                  1    wreg      void 
  4175 ;; Registers used:
  4176 ;;		wreg, status,2, status,0, pclath, cstack
  4177 ;; Tracked objects:
  4178 ;;		On entry : 0/0
  4179 ;;		On exit  : 0/0
  4180 ;;		Unchanged: 0/0
  4181 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4182 ;;      Params:         0       0       0       0
  4183 ;;      Locals:         0       0       0       0
  4184 ;;      Temps:          0       0       0       0
  4185 ;;      Totals:         0       0       0       0
  4186 ;;Total ram usage:        0 bytes
  4187 ;; Hardware stack levels used: 1
  4188 ;; Hardware stack levels required when called: 8
  4189 ;; This function calls:
  4190 ;;		_I2C1_SlaveEnableIrq
  4191 ;;		_I2C1_SlaveOpen
  4192 ;;		_I2C1_SlaveSetAddrIntHandler
  4193 ;;		_I2C1_SlaveSetBusColIntHandler
  4194 ;;		_I2C1_SlaveSetIsrHandler
  4195 ;;		_I2C1_SlaveSetReadIntHandler
  4196 ;;		_I2C1_SlaveSetSlaveAddr
  4197 ;;		_I2C1_SlaveSetSlaveMask
  4198 ;;		_I2C1_SlaveSetWrColIntHandler
  4199 ;;		_I2C1_SlaveSetWriteIntHandler
  4200 ;; This function is called by:
  4201 ;;		_main
  4202 ;; This function uses a non-reentrant model
  4203 ;;
  4204                           
  4205     0389                     _I2C1_Open:	
  4206                           ;psect for function _I2C1_Open
  4207                           
  4208     0389                     l2676:	
  4209                           ;incstack = 0
  4210                           ; Regs used in _I2C1_Open: [wreg+status,2+status,0+pclath+cstack]
  4211                           
  4212                           
  4213                           ;mcc_generated_files/i2c1_slave.c: 122:     I2C1_SlaveOpen();
  4214     0389  3185  25A6  3183   	fcall	_I2C1_SlaveOpen
  4215                           
  4216                           ;mcc_generated_files/i2c1_slave.c: 123:     I2C1_SlaveSetSlaveAddr(0x77);
  4217     038C  3077               	movlw	119
  4218     038D  3186  2632  3183   	fcall	_I2C1_SlaveSetSlaveAddr
  4219                           
  4220                           ;mcc_generated_files/i2c1_slave.c: 124:     I2C1_SlaveSetSlaveMask(0);
  4221     0390  3000               	movlw	0
  4222     0391  3186  262C  3183   	fcall	_I2C1_SlaveSetSlaveMask
  4223                           
  4224                           ;mcc_generated_files/i2c1_slave.c: 125:     I2C1_SlaveSetIsrHandler(I2C1_Isr);
  4225     0394  3000               	movlw	low _I2C1_Isr
  4226     0395  0140               	movlb	0	; select bank0
  4227     0396  00AF               	movwf	I2C1_SlaveSetIsrHandler@handler
  4228     0397  3002               	movlw	high _I2C1_Isr
  4229     0398  00B0               	movwf	I2C1_SlaveSetIsrHandler@handler+1
  4230     0399  3186  263E  3183   	fcall	_I2C1_SlaveSetIsrHandler
  4231                           
  4232                           ;mcc_generated_files/i2c1_slave.c: 126:     I2C1_SlaveSetBusColIntHandler(I2C1_SlaveDefB
      +                          usColInterruptHandler);
  4233     039C  3000               	movlw	0
  4234     039D  0140               	movlb	0	; select bank0
  4235     039E  00AF               	movwf	I2C1_SlaveSetBusColIntHandler@handler
  4236     039F  3000               	movlw	0
  4237     03A0  00B0               	movwf	I2C1_SlaveSetBusColIntHandler@handler+1
  4238     03A1  3186  2644  3183   	fcall	_I2C1_SlaveSetBusColIntHandler
  4239                           
  4240                           ;mcc_generated_files/i2c1_slave.c: 127:     I2C1_SlaveSetWriteIntHandler(I2C1_SlaveDefWr
      +                          InterruptHandler);
  4241     03A4  3050               	movlw	low _I2C1_SlaveDefWrInterruptHandler
  4242     03A5  0140               	movlb	0	; select bank0
  4243     03A6  00AF               	movwf	I2C1_SlaveSetWriteIntHandler@handler
  4244     03A7  3006               	movlw	high _I2C1_SlaveDefWrInterruptHandler
  4245     03A8  00B0               	movwf	I2C1_SlaveSetWriteIntHandler@handler+1
  4246     03A9  3186  2620  3183   	fcall	_I2C1_SlaveSetWriteIntHandler
  4247                           
  4248                           ;mcc_generated_files/i2c1_slave.c: 128:     I2C1_SlaveSetReadIntHandler(I2C1_SlaveDefRdI
      +                          nterruptHandler);
  4249     03AC  3025               	movlw	low _I2C1_SlaveDefRdInterruptHandler
  4250     03AD  0140               	movlb	0	; select bank0
  4251     03AE  00AF               	movwf	I2C1_SlaveSetReadIntHandler@handler
  4252     03AF  3005               	movlw	high _I2C1_SlaveDefRdInterruptHandler
  4253     03B0  00B0               	movwf	I2C1_SlaveSetReadIntHandler@handler+1
  4254     03B1  3186  2638  3183   	fcall	_I2C1_SlaveSetReadIntHandler
  4255                           
  4256                           ;mcc_generated_files/i2c1_slave.c: 129:     I2C1_SlaveSetAddrIntHandler(I2C1_SlaveDefAdd
      +                          rInterruptHandler);
  4257     03B4  3007               	movlw	low _I2C1_SlaveDefAddrInterruptHandler
  4258     03B5  0140               	movlb	0	; select bank0
  4259     03B6  00AF               	movwf	I2C1_SlaveSetAddrIntHandler@handler
  4260     03B7  3006               	movlw	high _I2C1_SlaveDefAddrInterruptHandler
  4261     03B8  00B0               	movwf	I2C1_SlaveSetAddrIntHandler@handler+1
  4262     03B9  3186  264A  3183   	fcall	_I2C1_SlaveSetAddrIntHandler
  4263                           
  4264                           ;mcc_generated_files/i2c1_slave.c: 130:     I2C1_SlaveSetWrColIntHandler(I2C1_SlaveDefWr
      +                          ColInterruptHandler);
  4265     03BC  3000               	movlw	0
  4266     03BD  0140               	movlb	0	; select bank0
  4267     03BE  00AF               	movwf	I2C1_SlaveSetWrColIntHandler@handler
  4268     03BF  3000               	movlw	0
  4269     03C0  00B0               	movwf	I2C1_SlaveSetWrColIntHandler@handler+1
  4270     03C1  3186  2626  3183   	fcall	_I2C1_SlaveSetWrColIntHandler
  4271     03C4                     l2678:
  4272                           
  4273                           ;mcc_generated_files/i2c1_slave.c: 131:     I2C1_SlaveEnableIrq();
  4274     03C4  3186  266B  3183   	fcall	_I2C1_SlaveEnableIrq
  4275     03C7                     l281:
  4276     03C7  0008               	return
  4277     03C8                     __end_of_I2C1_Open:
  4278                           
  4279                           	psect	text18
  4280     0620                     __ptext18:	
  4281 ;; *************** function _I2C1_SlaveSetWriteIntHandler *****************
  4282 ;; Defined at:
  4283 ;;		line 277 in file "mcc_generated_files/i2c1_slave.c"
  4284 ;; Parameters:    Size  Location     Type
  4285 ;;  handler         2   15[BANK0 ] PTR FTN()void 
  4286 ;;		 -> I2C1_SlaveDefWrInterruptHandler(1), 
  4287 ;; Auto vars:     Size  Location     Type
  4288 ;;		None
  4289 ;; Return value:  Size  Location     Type
  4290 ;;                  1    wreg      void 
  4291 ;; Registers used:
  4292 ;;		wreg
  4293 ;; Tracked objects:
  4294 ;;		On entry : 0/0
  4295 ;;		On exit  : 0/0
  4296 ;;		Unchanged: 0/0
  4297 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4298 ;;      Params:         0       2       0       0
  4299 ;;      Locals:         0       0       0       0
  4300 ;;      Temps:          0       0       0       0
  4301 ;;      Totals:         0       2       0       0
  4302 ;;Total ram usage:        2 bytes
  4303 ;; Hardware stack levels used: 1
  4304 ;; Hardware stack levels required when called: 7
  4305 ;; This function calls:
  4306 ;;		Nothing
  4307 ;; This function is called by:
  4308 ;;		_I2C1_Open
  4309 ;; This function uses a non-reentrant model
  4310 ;;
  4311                           
  4312     0620                     _I2C1_SlaveSetWriteIntHandler:	
  4313                           ;psect for function _I2C1_SlaveSetWriteIntHandler
  4314                           
  4315     0620                     l2598:	
  4316                           ;incstack = 0
  4317                           ; Regs used in _I2C1_SlaveSetWriteIntHandler: [wreg]
  4318                           
  4319                           
  4320                           ;mcc_generated_files/i2c1_slave.c: 278:     I2C1_SlaveWrInterruptHandler = handler;
  4321     0620  0140               	movlb	0	; select bank0
  4322     0621  0830               	movf	I2C1_SlaveSetWriteIntHandler@handler+1,w
  4323     0622  00CD               	movwf	_I2C1_SlaveWrInterruptHandler+1
  4324     0623  082F               	movf	I2C1_SlaveSetWriteIntHandler@handler,w
  4325     0624  00CC               	movwf	_I2C1_SlaveWrInterruptHandler
  4326     0625                     l340:
  4327     0625  0008               	return
  4328     0626                     __end_of_I2C1_SlaveSetWriteIntHandler:
  4329                           
  4330                           	psect	text19
  4331     0626                     __ptext19:	
  4332 ;; *************** function _I2C1_SlaveSetWrColIntHandler *****************
  4333 ;; Defined at:
  4334 ;;		line 312 in file "mcc_generated_files/i2c1_slave.c"
  4335 ;; Parameters:    Size  Location     Type
  4336 ;;  handler         2   15[BANK0 ] PTR FTN()void 
  4337 ;;		 -> I2C1_SlaveDefWrColInterruptHandler(1), 
  4338 ;; Auto vars:     Size  Location     Type
  4339 ;;		None
  4340 ;; Return value:  Size  Location     Type
  4341 ;;                  1    wreg      void 
  4342 ;; Registers used:
  4343 ;;		wreg
  4344 ;; Tracked objects:
  4345 ;;		On entry : 0/0
  4346 ;;		On exit  : 0/0
  4347 ;;		Unchanged: 0/0
  4348 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4349 ;;      Params:         0       2       0       0
  4350 ;;      Locals:         0       0       0       0
  4351 ;;      Temps:          0       0       0       0
  4352 ;;      Totals:         0       2       0       0
  4353 ;;Total ram usage:        2 bytes
  4354 ;; Hardware stack levels used: 1
  4355 ;; Hardware stack levels required when called: 7
  4356 ;; This function calls:
  4357 ;;		Nothing
  4358 ;; This function is called by:
  4359 ;;		_I2C1_Open
  4360 ;; This function uses a non-reentrant model
  4361 ;;
  4362                           
  4363     0626                     _I2C1_SlaveSetWrColIntHandler:	
  4364                           ;psect for function _I2C1_SlaveSetWrColIntHandler
  4365                           
  4366     0626                     l2604:	
  4367                           ;incstack = 0
  4368                           ; Regs used in _I2C1_SlaveSetWrColIntHandler: [wreg]
  4369                           
  4370                           
  4371                           ;mcc_generated_files/i2c1_slave.c: 313:     I2C1_SlaveWrColInterruptHandler = handler;
  4372     0626  0140               	movlb	0	; select bank0
  4373     0627  0830               	movf	I2C1_SlaveSetWrColIntHandler@handler+1,w
  4374     0628  00C7               	movwf	_I2C1_SlaveWrColInterruptHandler+1
  4375     0629  082F               	movf	I2C1_SlaveSetWrColIntHandler@handler,w
  4376     062A  00C6               	movwf	_I2C1_SlaveWrColInterruptHandler
  4377     062B                     l360:
  4378     062B  0008               	return
  4379     062C                     __end_of_I2C1_SlaveSetWrColIntHandler:
  4380                           
  4381                           	psect	text20
  4382     062C                     __ptext20:	
  4383 ;; *************** function _I2C1_SlaveSetSlaveMask *****************
  4384 ;; Defined at:
  4385 ;;		line 369 in file "mcc_generated_files/i2c1_slave.c"
  4386 ;; Parameters:    Size  Location     Type
  4387 ;;  maskAddr        1    wreg     unsigned char 
  4388 ;; Auto vars:     Size  Location     Type
  4389 ;;  maskAddr        1   15[BANK0 ] unsigned char 
  4390 ;; Return value:  Size  Location     Type
  4391 ;;                  1    wreg      void 
  4392 ;; Registers used:
  4393 ;;		wreg, status,2, status,0
  4394 ;; Tracked objects:
  4395 ;;		On entry : 0/0
  4396 ;;		On exit  : 0/0
  4397 ;;		Unchanged: 0/0
  4398 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4399 ;;      Params:         0       0       0       0
  4400 ;;      Locals:         0       1       0       0
  4401 ;;      Temps:          0       0       0       0
  4402 ;;      Totals:         0       1       0       0
  4403 ;;Total ram usage:        1 bytes
  4404 ;; Hardware stack levels used: 1
  4405 ;; Hardware stack levels required when called: 7
  4406 ;; This function calls:
  4407 ;;		Nothing
  4408 ;; This function is called by:
  4409 ;;		_I2C1_Open
  4410 ;; This function uses a non-reentrant model
  4411 ;;
  4412                           
  4413     062C                     _I2C1_SlaveSetSlaveMask:	
  4414                           ;psect for function _I2C1_SlaveSetSlaveMask
  4415                           
  4416                           
  4417                           ;incstack = 0
  4418                           ; Regs used in _I2C1_SlaveSetSlaveMask: [wreg+status,2+status,0]
  4419                           ;I2C1_SlaveSetSlaveMask@maskAddr stored from wreg
  4420     062C  0140               	movlb	0	; select bank0
  4421     062D  00AF               	movwf	I2C1_SlaveSetSlaveMask@maskAddr
  4422     062E                     l2592:
  4423                           
  4424                           ;mcc_generated_files/i2c1_slave.c: 369: static __attribute__((inline)) void I2C1_SlaveSe
      +                          tSlaveMask(uint8_t maskAddr);mcc_generated_files/i2c1_slave.c: 370: {;mcc_generated_file
      +                          s/i2c1_slave.c: 371:     SSP1MSK = (uint8_t) (maskAddr << 1);
  4425     062E  352F               	lslf	I2C1_SlaveSetSlaveMask@maskAddr,w
  4426     062F  0143               	movlb	3	; select bank3
  4427     0630  008E               	movwf	14	;volatile
  4428     0631                     l390:
  4429     0631  0008               	return
  4430     0632                     __end_of_I2C1_SlaveSetSlaveMask:
  4431                           
  4432                           	psect	text21
  4433     0632                     __ptext21:	
  4434 ;; *************** function _I2C1_SlaveSetSlaveAddr *****************
  4435 ;; Defined at:
  4436 ;;		line 364 in file "mcc_generated_files/i2c1_slave.c"
  4437 ;; Parameters:    Size  Location     Type
  4438 ;;  slaveAddr       1    wreg     unsigned char 
  4439 ;; Auto vars:     Size  Location     Type
  4440 ;;  slaveAddr       1   15[BANK0 ] unsigned char 
  4441 ;; Return value:  Size  Location     Type
  4442 ;;                  1    wreg      void 
  4443 ;; Registers used:
  4444 ;;		wreg, status,2, status,0
  4445 ;; Tracked objects:
  4446 ;;		On entry : 0/0
  4447 ;;		On exit  : 0/0
  4448 ;;		Unchanged: 0/0
  4449 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4450 ;;      Params:         0       0       0       0
  4451 ;;      Locals:         0       1       0       0
  4452 ;;      Temps:          0       0       0       0
  4453 ;;      Totals:         0       1       0       0
  4454 ;;Total ram usage:        1 bytes
  4455 ;; Hardware stack levels used: 1
  4456 ;; Hardware stack levels required when called: 7
  4457 ;; This function calls:
  4458 ;;		Nothing
  4459 ;; This function is called by:
  4460 ;;		_I2C1_Open
  4461 ;; This function uses a non-reentrant model
  4462 ;;
  4463                           
  4464     0632                     _I2C1_SlaveSetSlaveAddr:	
  4465                           ;psect for function _I2C1_SlaveSetSlaveAddr
  4466                           
  4467                           
  4468                           ;incstack = 0
  4469                           ; Regs used in _I2C1_SlaveSetSlaveAddr: [wreg+status,2+status,0]
  4470                           ;I2C1_SlaveSetSlaveAddr@slaveAddr stored from wreg
  4471     0632  0140               	movlb	0	; select bank0
  4472     0633  00AF               	movwf	I2C1_SlaveSetSlaveAddr@slaveAddr
  4473     0634                     l2590:
  4474                           
  4475                           ;mcc_generated_files/i2c1_slave.c: 364: static __attribute__((inline)) void I2C1_SlaveSe
      +                          tSlaveAddr(uint8_t slaveAddr);mcc_generated_files/i2c1_slave.c: 365: {;mcc_generated_fil
      +                          es/i2c1_slave.c: 366:     SSP1ADD = (uint8_t) (slaveAddr << 1);
  4476     0634  352F               	lslf	I2C1_SlaveSetSlaveAddr@slaveAddr,w
  4477     0635  0143               	movlb	3	; select bank3
  4478     0636  008D               	movwf	13	;volatile
  4479     0637                     l387:
  4480     0637  0008               	return
  4481     0638                     __end_of_I2C1_SlaveSetSlaveAddr:
  4482                           
  4483                           	psect	text22
  4484     0638                     __ptext22:	
  4485 ;; *************** function _I2C1_SlaveSetReadIntHandler *****************
  4486 ;; Defined at:
  4487 ;;		line 240 in file "mcc_generated_files/i2c1_slave.c"
  4488 ;; Parameters:    Size  Location     Type
  4489 ;;  handler         2   15[BANK0 ] PTR FTN()void 
  4490 ;;		 -> I2C1_SlaveDefRdInterruptHandler(1), 
  4491 ;; Auto vars:     Size  Location     Type
  4492 ;;		None
  4493 ;; Return value:  Size  Location     Type
  4494 ;;                  1    wreg      void 
  4495 ;; Registers used:
  4496 ;;		wreg
  4497 ;; Tracked objects:
  4498 ;;		On entry : 0/0
  4499 ;;		On exit  : 0/0
  4500 ;;		Unchanged: 0/0
  4501 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4502 ;;      Params:         0       2       0       0
  4503 ;;      Locals:         0       0       0       0
  4504 ;;      Temps:          0       0       0       0
  4505 ;;      Totals:         0       2       0       0
  4506 ;;Total ram usage:        2 bytes
  4507 ;; Hardware stack levels used: 1
  4508 ;; Hardware stack levels required when called: 7
  4509 ;; This function calls:
  4510 ;;		Nothing
  4511 ;; This function is called by:
  4512 ;;		_I2C1_Open
  4513 ;; This function uses a non-reentrant model
  4514 ;;
  4515                           
  4516     0638                     _I2C1_SlaveSetReadIntHandler:	
  4517                           ;psect for function _I2C1_SlaveSetReadIntHandler
  4518                           
  4519     0638                     l2600:	
  4520                           ;incstack = 0
  4521                           ; Regs used in _I2C1_SlaveSetReadIntHandler: [wreg]
  4522                           
  4523                           
  4524                           ;mcc_generated_files/i2c1_slave.c: 241:     I2C1_SlaveRdInterruptHandler = handler;
  4525     0638  0140               	movlb	0	; select bank0
  4526     0639  0830               	movf	I2C1_SlaveSetReadIntHandler@handler+1,w
  4527     063A  00CF               	movwf	_I2C1_SlaveRdInterruptHandler+1
  4528     063B  082F               	movf	I2C1_SlaveSetReadIntHandler@handler,w
  4529     063C  00CE               	movwf	_I2C1_SlaveRdInterruptHandler
  4530     063D                     l327:
  4531     063D  0008               	return
  4532     063E                     __end_of_I2C1_SlaveSetReadIntHandler:
  4533                           
  4534                           	psect	text23
  4535     063E                     __ptext23:	
  4536 ;; *************** function _I2C1_SlaveSetIsrHandler *****************
  4537 ;; Defined at:
  4538 ;;		line 234 in file "mcc_generated_files/i2c1_slave.c"
  4539 ;; Parameters:    Size  Location     Type
  4540 ;;  handler         2   15[BANK0 ] PTR FTN()void 
  4541 ;;		 -> I2C1_Isr(1), 
  4542 ;; Auto vars:     Size  Location     Type
  4543 ;;		None
  4544 ;; Return value:  Size  Location     Type
  4545 ;;                  1    wreg      void 
  4546 ;; Registers used:
  4547 ;;		wreg
  4548 ;; Tracked objects:
  4549 ;;		On entry : 0/0
  4550 ;;		On exit  : 0/0
  4551 ;;		Unchanged: 0/0
  4552 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4553 ;;      Params:         0       2       0       0
  4554 ;;      Locals:         0       0       0       0
  4555 ;;      Temps:          0       0       0       0
  4556 ;;      Totals:         0       2       0       0
  4557 ;;Total ram usage:        2 bytes
  4558 ;; Hardware stack levels used: 1
  4559 ;; Hardware stack levels required when called: 7
  4560 ;; This function calls:
  4561 ;;		Nothing
  4562 ;; This function is called by:
  4563 ;;		_I2C1_Open
  4564 ;; This function uses a non-reentrant model
  4565 ;;
  4566                           
  4567     063E                     _I2C1_SlaveSetIsrHandler:	
  4568                           ;psect for function _I2C1_SlaveSetIsrHandler
  4569                           
  4570     063E                     l2594:	
  4571                           ;incstack = 0
  4572                           ; Regs used in _I2C1_SlaveSetIsrHandler: [wreg]
  4573                           
  4574                           
  4575                           ;mcc_generated_files/i2c1_slave.c: 234: void I2C1_SlaveSetIsrHandler(i2c1InterruptHandle
      +                          r handler);mcc_generated_files/i2c1_slave.c: 235: {;mcc_generated_files/i2c1_slave.c: 23
      +                          6:     MSSP1_InterruptHandler = handler;
  4576     063E  0140               	movlb	0	; select bank0
  4577     063F  0830               	movf	I2C1_SlaveSetIsrHandler@handler+1,w
  4578     0640  00D1               	movwf	_MSSP1_InterruptHandler+1
  4579     0641  082F               	movf	I2C1_SlaveSetIsrHandler@handler,w
  4580     0642  00D0               	movwf	_MSSP1_InterruptHandler
  4581     0643                     l324:
  4582     0643  0008               	return
  4583     0644                     __end_of_I2C1_SlaveSetIsrHandler:
  4584                           
  4585                           	psect	text24
  4586     0644                     __ptext24:	
  4587 ;; *************** function _I2C1_SlaveSetBusColIntHandler *****************
  4588 ;; Defined at:
  4589 ;;		line 328 in file "mcc_generated_files/i2c1_slave.c"
  4590 ;; Parameters:    Size  Location     Type
  4591 ;;  handler         2   15[BANK0 ] PTR FTN()void 
  4592 ;;		 -> I2C1_SlaveDefBusColInterruptHandler(1), 
  4593 ;; Auto vars:     Size  Location     Type
  4594 ;;		None
  4595 ;; Return value:  Size  Location     Type
  4596 ;;                  1    wreg      void 
  4597 ;; Registers used:
  4598 ;;		wreg
  4599 ;; Tracked objects:
  4600 ;;		On entry : 0/0
  4601 ;;		On exit  : 0/0
  4602 ;;		Unchanged: 0/0
  4603 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4604 ;;      Params:         0       2       0       0
  4605 ;;      Locals:         0       0       0       0
  4606 ;;      Temps:          0       0       0       0
  4607 ;;      Totals:         0       2       0       0
  4608 ;;Total ram usage:        2 bytes
  4609 ;; Hardware stack levels used: 1
  4610 ;; Hardware stack levels required when called: 7
  4611 ;; This function calls:
  4612 ;;		Nothing
  4613 ;; This function is called by:
  4614 ;;		_I2C1_Open
  4615 ;; This function uses a non-reentrant model
  4616 ;;
  4617                           
  4618     0644                     _I2C1_SlaveSetBusColIntHandler:	
  4619                           ;psect for function _I2C1_SlaveSetBusColIntHandler
  4620                           
  4621     0644                     l2596:	
  4622                           ;incstack = 0
  4623                           ; Regs used in _I2C1_SlaveSetBusColIntHandler: [wreg]
  4624                           
  4625                           
  4626                           ;mcc_generated_files/i2c1_slave.c: 329:     I2C1_SlaveBusColInterruptHandler = handler;
  4627     0644  0140               	movlb	0	; select bank0
  4628     0645  0830               	movf	I2C1_SlaveSetBusColIntHandler@handler+1,w
  4629     0646  00C9               	movwf	_I2C1_SlaveBusColInterruptHandler+1
  4630     0647  082F               	movf	I2C1_SlaveSetBusColIntHandler@handler,w
  4631     0648  00C8               	movwf	_I2C1_SlaveBusColInterruptHandler
  4632     0649                     l370:
  4633     0649  0008               	return
  4634     064A                     __end_of_I2C1_SlaveSetBusColIntHandler:
  4635                           
  4636                           	psect	text25
  4637     064A                     __ptext25:	
  4638 ;; *************** function _I2C1_SlaveSetAddrIntHandler *****************
  4639 ;; Defined at:
  4640 ;;		line 294 in file "mcc_generated_files/i2c1_slave.c"
  4641 ;; Parameters:    Size  Location     Type
  4642 ;;  handler         2   15[BANK0 ] PTR FTN()void 
  4643 ;;		 -> I2C1_SlaveDefAddrInterruptHandler(1), 
  4644 ;; Auto vars:     Size  Location     Type
  4645 ;;		None
  4646 ;; Return value:  Size  Location     Type
  4647 ;;                  1    wreg      void 
  4648 ;; Registers used:
  4649 ;;		wreg
  4650 ;; Tracked objects:
  4651 ;;		On entry : 0/0
  4652 ;;		On exit  : 0/0
  4653 ;;		Unchanged: 0/0
  4654 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4655 ;;      Params:         0       2       0       0
  4656 ;;      Locals:         0       0       0       0
  4657 ;;      Temps:          0       0       0       0
  4658 ;;      Totals:         0       2       0       0
  4659 ;;Total ram usage:        2 bytes
  4660 ;; Hardware stack levels used: 1
  4661 ;; Hardware stack levels required when called: 7
  4662 ;; This function calls:
  4663 ;;		Nothing
  4664 ;; This function is called by:
  4665 ;;		_I2C1_Open
  4666 ;; This function uses a non-reentrant model
  4667 ;;
  4668                           
  4669     064A                     _I2C1_SlaveSetAddrIntHandler:	
  4670                           ;psect for function _I2C1_SlaveSetAddrIntHandler
  4671                           
  4672     064A                     l2602:	
  4673                           ;incstack = 0
  4674                           ; Regs used in _I2C1_SlaveSetAddrIntHandler: [wreg]
  4675                           
  4676                           
  4677                           ;mcc_generated_files/i2c1_slave.c: 295:     I2C1_SlaveAddrInterruptHandler = handler;
  4678     064A  0140               	movlb	0	; select bank0
  4679     064B  0830               	movf	I2C1_SlaveSetAddrIntHandler@handler+1,w
  4680     064C  00CB               	movwf	_I2C1_SlaveAddrInterruptHandler+1
  4681     064D  082F               	movf	I2C1_SlaveSetAddrIntHandler@handler,w
  4682     064E  00CA               	movwf	_I2C1_SlaveAddrInterruptHandler
  4683     064F                     l350:
  4684     064F  0008               	return
  4685     0650                     __end_of_I2C1_SlaveSetAddrIntHandler:
  4686                           
  4687                           	psect	text26
  4688     05A6                     __ptext26:	
  4689 ;; *************** function _I2C1_SlaveOpen *****************
  4690 ;; Defined at:
  4691 ;;		line 343 in file "mcc_generated_files/i2c1_slave.c"
  4692 ;; Parameters:    Size  Location     Type
  4693 ;;		None
  4694 ;; Auto vars:     Size  Location     Type
  4695 ;;		None
  4696 ;; Return value:  Size  Location     Type
  4697 ;;                  1    wreg      _Bool 
  4698 ;; Registers used:
  4699 ;;		wreg, status,2, status,0
  4700 ;; Tracked objects:
  4701 ;;		On entry : 0/0
  4702 ;;		On exit  : 0/0
  4703 ;;		Unchanged: 0/0
  4704 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4705 ;;      Params:         0       0       0       0
  4706 ;;      Locals:         0       0       0       0
  4707 ;;      Temps:          0       1       0       0
  4708 ;;      Totals:         0       1       0       0
  4709 ;;Total ram usage:        1 bytes
  4710 ;; Hardware stack levels used: 1
  4711 ;; Hardware stack levels required when called: 7
  4712 ;; This function calls:
  4713 ;;		Nothing
  4714 ;; This function is called by:
  4715 ;;		_I2C1_Open
  4716 ;; This function uses a non-reentrant model
  4717 ;;
  4718                           
  4719     05A6                     _I2C1_SlaveOpen:	
  4720                           ;psect for function _I2C1_SlaveOpen
  4721                           
  4722     05A6                     l2578:	
  4723                           ;incstack = 0
  4724                           ; Regs used in _I2C1_SlaveOpen: [wreg+status,2+status,0]
  4725                           
  4726                           
  4727                           ;mcc_generated_files/i2c1_slave.c: 345:     if(!SSP1CON1bits.SSPEN)
  4728     05A6  0143               	movlb	3	; select bank3
  4729     05A7  1A90               	btfsc	16,5	;volatile
  4730     05A8  2DAA               	goto	u981
  4731     05A9  2DAB               	goto	u980
  4732     05AA                     u981:
  4733     05AA  2DB5               	goto	l381
  4734     05AB                     u980:
  4735     05AB                     l2580:
  4736                           
  4737                           ;mcc_generated_files/i2c1_slave.c: 346:     {;mcc_generated_files/i2c1_slave.c: 347:    
      +                               SSP1STAT = 0x40;
  4738     05AB  3040               	movlw	64
  4739     05AC  008F               	movwf	15	;volatile
  4740     05AD                     l2582:
  4741                           
  4742                           ;mcc_generated_files/i2c1_slave.c: 348:         SSP1CON1 |= 0x06;
  4743     05AD  3006               	movlw	6
  4744     05AE  0140               	movlb	0	; select bank0
  4745     05AF  00AF               	movwf	??_I2C1_SlaveOpen
  4746     05B0  082F               	movf	??_I2C1_SlaveOpen,w
  4747     05B1  0143               	movlb	3	; select bank3
  4748     05B2  0490               	iorwf	16,f	;volatile
  4749     05B3                     l2584:
  4750                           
  4751                           ;mcc_generated_files/i2c1_slave.c: 349:         SSP1CON2 = 0x00;
  4752     05B3  0191               	clrf	17	;volatile
  4753     05B4                     l2586:
  4754                           
  4755                           ;mcc_generated_files/i2c1_slave.c: 350:         SSP1CON1bits.SSPEN = 1;
  4756     05B4  1690               	bsf	16,5	;volatile
  4757     05B5                     l381:
  4758     05B5  0008               	return
  4759     05B6                     __end_of_I2C1_SlaveOpen:
  4760                           
  4761                           	psect	text27
  4762     066B                     __ptext27:	
  4763 ;; *************** function _I2C1_SlaveEnableIrq *****************
  4764 ;; Defined at:
  4765 ;;		line 374 in file "mcc_generated_files/i2c1_slave.c"
  4766 ;; Parameters:    Size  Location     Type
  4767 ;;		None
  4768 ;; Auto vars:     Size  Location     Type
  4769 ;;		None
  4770 ;; Return value:  Size  Location     Type
  4771 ;;                  1    wreg      void 
  4772 ;; Registers used:
  4773 ;;		None
  4774 ;; Tracked objects:
  4775 ;;		On entry : 0/0
  4776 ;;		On exit  : 0/0
  4777 ;;		Unchanged: 0/0
  4778 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4779 ;;      Params:         0       0       0       0
  4780 ;;      Locals:         0       0       0       0
  4781 ;;      Temps:          0       0       0       0
  4782 ;;      Totals:         0       0       0       0
  4783 ;;Total ram usage:        0 bytes
  4784 ;; Hardware stack levels used: 1
  4785 ;; Hardware stack levels required when called: 7
  4786 ;; This function calls:
  4787 ;;		Nothing
  4788 ;; This function is called by:
  4789 ;;		_I2C1_Open
  4790 ;; This function uses a non-reentrant model
  4791 ;;
  4792                           
  4793     066B                     _I2C1_SlaveEnableIrq:	
  4794                           ;psect for function _I2C1_SlaveEnableIrq
  4795                           
  4796     066B                     l2606:	
  4797                           ;incstack = 0
  4798                           ; Regs used in _I2C1_SlaveEnableIrq: []
  4799                           
  4800                           
  4801                           ;mcc_generated_files/i2c1_slave.c: 376:     PIE1bits.SSP1IE = 1;
  4802     066B  014E               	movlb	14	; select bank14
  4803     066C  1497               	bsf	23,1	;volatile
  4804     066D                     l393:
  4805     066D  0008               	return
  4806     066E                     __end_of_I2C1_SlaveEnableIrq:
  4807                           
  4808                           	psect	intentry
  4809     0004                     __pintentry:	
  4810 ;; *************** function _INTERRUPT_InterruptManager *****************
  4811 ;; Defined at:
  4812 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  4813 ;; Parameters:    Size  Location     Type
  4814 ;;		None
  4815 ;; Auto vars:     Size  Location     Type
  4816 ;;		None
  4817 ;; Return value:  Size  Location     Type
  4818 ;;                  1    wreg      void 
  4819 ;; Registers used:
  4820 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4821 ;; Tracked objects:
  4822 ;;		On entry : 0/0
  4823 ;;		On exit  : 0/0
  4824 ;;		Unchanged: 0/0
  4825 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4826 ;;      Params:         0       0       0       0
  4827 ;;      Locals:         0       0       0       0
  4828 ;;      Temps:          0       0       0       0
  4829 ;;      Totals:         0       0       0       0
  4830 ;;Total ram usage:        0 bytes
  4831 ;; Hardware stack levels used: 1
  4832 ;; Hardware stack levels required when called: 6
  4833 ;; This function calls:
  4834 ;;		NULL
  4835 ;;		_I2C1_Isr
  4836 ;;		_TMR0_ISR
  4837 ;; This function is called by:
  4838 ;;		Interrupt level 1
  4839 ;; This function uses a non-reentrant model
  4840 ;;
  4841                           
  4842     0004                     _INTERRUPT_InterruptManager:
  4843                           
  4844                           ;incstack = 0
  4845     0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
  4846                           
  4847                           ; Regs used in _INTERRUPT_InterruptManager: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4848     0005  3180               	pagesel	$
  4849     0006                     i1l2354:
  4850                           
  4851                           ;mcc_generated_files/interrupt_manager.c: 55:     if(PIE0bits.TMR0IE == 1 && PIR0bits.TM
      +                          R0IF == 1)
  4852     0006  014E               	movlb	14	; select bank14
  4853     0007  1E96               	btfss	22,5	;volatile
  4854     0008  280A               	goto	u84_21
  4855     0009  280B               	goto	u84_20
  4856     000A                     u84_21:
  4857     000A  2813               	goto	i1l149
  4858     000B                     u84_20:
  4859     000B                     i1l2356:
  4860     000B  1E8C               	btfss	12,5	;volatile
  4861     000C  280E               	goto	u85_21
  4862     000D  280F               	goto	u85_20
  4863     000E                     u85_21:
  4864     000E  2813               	goto	i1l149
  4865     000F                     u85_20:
  4866     000F                     i1l2358:
  4867                           
  4868                           ;mcc_generated_files/interrupt_manager.c: 56:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 57:         TMR0_ISR();
  4869     000F  3185  25B6  3180   	fcall	_TMR0_ISR
  4870                           
  4871                           ;mcc_generated_files/interrupt_manager.c: 58:     }
  4872     0012  282F               	goto	i1l157
  4873     0013                     i1l149:	
  4874                           ;mcc_generated_files/interrupt_manager.c: 59:     else if(INTCONbits.PEIE == 1)
  4875                           
  4876     0013  1F0B               	btfss	11,6	;volatile
  4877     0014  2816               	goto	u86_21
  4878     0015  2817               	goto	u86_20
  4879     0016                     u86_21:
  4880     0016  282F               	goto	i1l157
  4881     0017                     u86_20:
  4882     0017                     i1l2360:
  4883                           
  4884                           ;mcc_generated_files/interrupt_manager.c: 60:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 61:         if(PIE1bits.BCL1IE == 1 && PIR1bits.BCL1IF == 1)
  4885     0017  1D17               	btfss	23,2	;volatile
  4886     0018  281A               	goto	u87_21
  4887     0019  281B               	goto	u87_20
  4888     001A                     u87_21:
  4889     001A  2826               	goto	i1l152
  4890     001B                     u87_20:
  4891     001B                     i1l2362:
  4892     001B  1D0D               	btfss	13,2	;volatile
  4893     001C  281E               	goto	u88_21
  4894     001D  281F               	goto	u88_20
  4895     001E                     u88_21:
  4896     001E  2826               	goto	i1l152
  4897     001F                     u88_20:
  4898     001F                     i1l2364:
  4899                           
  4900                           ;mcc_generated_files/interrupt_manager.c: 62:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 63:             MSSP1_InterruptHandler();
  4901     001F  0140               	movlb	0	; select bank0
  4902     0020  0851               	movf	_MSSP1_InterruptHandler+1,w
  4903     0021  008A               	movwf	10
  4904     0022  0850               	movf	_MSSP1_InterruptHandler,w
  4905     0023  000A               	callw
  4906     0024  3180               	pagesel	$
  4907                           
  4908                           ;mcc_generated_files/interrupt_manager.c: 64:         }
  4909     0025  282F               	goto	i1l157
  4910     0026                     i1l152:	
  4911                           ;mcc_generated_files/interrupt_manager.c: 65:         else if(PIE1bits.SSP1IE == 1 && PI
      +                          R1bits.SSP1IF == 1)
  4912                           
  4913     0026  1C97               	btfss	23,1	;volatile
  4914     0027  2829               	goto	u89_21
  4915     0028  282A               	goto	u89_20
  4916     0029                     u89_21:
  4917     0029  282F               	goto	i1l156
  4918     002A                     u89_20:
  4919     002A                     i1l2366:
  4920     002A  1C8D               	btfss	13,1	;volatile
  4921     002B  282D               	goto	u90_21
  4922     002C  282E               	goto	u90_20
  4923     002D                     u90_21:
  4924     002D  282F               	goto	i1l156
  4925     002E                     u90_20:
  4926     002E  281F               	goto	i1l2364
  4927     002F                     i1l156:	
  4928                           ;mcc_generated_files/interrupt_manager.c: 76:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 78:     }
  4929                           
  4930     002F                     i1l157:
  4931     002F  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  4932     0030  0009               	retfie
  4933     0031                     __end_of_INTERRUPT_InterruptManager:
  4934                           
  4935                           	psect	text29
  4936     05B6                     __ptext29:	
  4937 ;; *************** function _TMR0_ISR *****************
  4938 ;; Defined at:
  4939 ;;		line 131 in file "mcc_generated_files/tmr0.c"
  4940 ;; Parameters:    Size  Location     Type
  4941 ;;		None
  4942 ;; Auto vars:     Size  Location     Type
  4943 ;;		None
  4944 ;; Return value:  Size  Location     Type
  4945 ;;                  1    wreg      void 
  4946 ;; Registers used:
  4947 ;;		wreg, status,2, status,0, pclath, cstack
  4948 ;; Tracked objects:
  4949 ;;		On entry : 0/0
  4950 ;;		On exit  : 0/0
  4951 ;;		Unchanged: 0/0
  4952 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4953 ;;      Params:         0       0       0       0
  4954 ;;      Locals:         0       0       0       0
  4955 ;;      Temps:          0       0       0       0
  4956 ;;      Totals:         0       0       0       0
  4957 ;;Total ram usage:        0 bytes
  4958 ;; Hardware stack levels used: 1
  4959 ;; Hardware stack levels required when called: 1
  4960 ;; This function calls:
  4961 ;;		NULL
  4962 ;;		_TMR0_DefaultInterruptHandler
  4963 ;; This function is called by:
  4964 ;;		_INTERRUPT_InterruptManager
  4965 ;; This function uses a non-reentrant model
  4966 ;;
  4967                           
  4968     05B6                     _TMR0_ISR:	
  4969                           ;psect for function _TMR0_ISR
  4970                           
  4971     05B6                     i1l2296:	
  4972                           ;incstack = 0
  4973                           ; Regs used in _TMR0_ISR: [wreg+status,2+status,0+pclath+cstack]
  4974                           
  4975                           
  4976                           ;mcc_generated_files/tmr0.c: 134:     PIR0bits.TMR0IF = 0;
  4977     05B6  014E               	movlb	14	; select bank14
  4978     05B7  128C               	bcf	12,5	;volatile
  4979     05B8                     i1l2298:
  4980                           
  4981                           ;mcc_generated_files/tmr0.c: 136:     if(TMR0_InterruptHandler)
  4982     05B8  0140               	movlb	0	; select bank0
  4983     05B9  085F               	movf	_TMR0_InterruptHandler,w
  4984     05BA  0460               	iorwf	_TMR0_InterruptHandler+1,w
  4985     05BB  1903               	btfsc	3,2
  4986     05BC  2DBE               	goto	u77_21
  4987     05BD  2DBF               	goto	u77_20
  4988     05BE                     u77_21:
  4989     05BE  2DC4               	goto	i1l488
  4990     05BF                     u77_20:
  4991     05BF                     i1l2300:
  4992                           
  4993                           ;mcc_generated_files/tmr0.c: 137:     {;mcc_generated_files/tmr0.c: 138:         TMR0_In
      +                          terruptHandler();
  4994     05BF  0860               	movf	_TMR0_InterruptHandler+1,w
  4995     05C0  008A               	movwf	10
  4996     05C1  085F               	movf	_TMR0_InterruptHandler,w
  4997     05C2  000A               	callw
  4998     05C3  3185               	pagesel	$
  4999     05C4                     i1l488:
  5000     05C4  0008               	return
  5001     05C5                     __end_of_TMR0_ISR:
  5002                           
  5003                           	psect	text30
  5004     043B                     __ptext30:	
  5005 ;; *************** function _TMR0_DefaultInterruptHandler *****************
  5006 ;; Defined at:
  5007 ;;		line 152 in file "mcc_generated_files/tmr0.c"
  5008 ;; Parameters:    Size  Location     Type
  5009 ;;		None
  5010 ;; Auto vars:     Size  Location     Type
  5011 ;;		None
  5012 ;; Return value:  Size  Location     Type
  5013 ;;                  1    wreg      void 
  5014 ;; Registers used:
  5015 ;;		wreg, status,2, status,0
  5016 ;; Tracked objects:
  5017 ;;		On entry : 0/0
  5018 ;;		On exit  : 0/0
  5019 ;;		Unchanged: 0/0
  5020 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5021 ;;      Params:         0       0       0       0
  5022 ;;      Locals:         0       0       0       0
  5023 ;;      Temps:          1       0       0       0
  5024 ;;      Totals:         1       0       0       0
  5025 ;;Total ram usage:        1 bytes
  5026 ;; Hardware stack levels used: 1
  5027 ;; This function calls:
  5028 ;;		Nothing
  5029 ;; This function is called by:
  5030 ;;		_TMR0_Initialize
  5031 ;;		_TMR0_ISR
  5032 ;; This function uses a non-reentrant model
  5033 ;;
  5034                           
  5035     043B                     _TMR0_DefaultInterruptHandler:	
  5036                           ;psect for function _TMR0_DefaultInterruptHandler
  5037                           
  5038     043B                     i1l2226:	
  5039                           ;incstack = 0
  5040                           ; Regs used in _TMR0_DefaultInterruptHandler: [wreg+status,2+status,0]
  5041                           
  5042                           
  5043                           ;mcc_generated_files/tmr0.c: 156:     LED_timer++;
  5044     043B  3001               	movlw	1
  5045     043C  00F0               	movwf	??_TMR0_DefaultInterruptHandler
  5046     043D  0870               	movf	??_TMR0_DefaultInterruptHandler,w
  5047     043E  0140               	movlb	0	; select bank0
  5048     043F  07DB               	addwf	_LED_timer,f
  5049                           
  5050                           ;mcc_generated_files/tmr0.c: 159:     if(error_flag == 1)
  5051     0440  035D               	decf	_error_flag,w
  5052     0441  1D03               	btfss	3,2
  5053     0442  2C44               	goto	u64_21
  5054     0443  2C45               	goto	u64_20
  5055     0444                     u64_21:
  5056     0444  2C55               	goto	i1l2234
  5057     0445                     u64_20:
  5058     0445                     i1l2228:
  5059                           
  5060                           ;mcc_generated_files/tmr0.c: 160:     {;mcc_generated_files/tmr0.c: 161:         if(LED_
      +                          timer == 5)
  5061     0445  3005               	movlw	5
  5062     0446  065B               	xorwf	_LED_timer,w
  5063     0447  1D03               	btfss	3,2
  5064     0448  2C4A               	goto	u65_21
  5065     0449  2C4B               	goto	u65_20
  5066     044A                     u65_21:
  5067     044A  2C4C               	goto	i1l2230
  5068     044B                     u65_20:
  5069     044B                     i1l496:	
  5070                           ;mcc_generated_files/tmr0.c: 162:         {;mcc_generated_files/tmr0.c: 163:            
      +                           do { LATAbits.LATA2 = 1; } while(0);
  5071                           
  5072     044B  1518               	bsf	24,2	;volatile
  5073     044C                     i1l2230:
  5074                           
  5075                           ;mcc_generated_files/tmr0.c: 165:         if(LED_timer == 10)
  5076     044C  300A               	movlw	10
  5077     044D  065B               	xorwf	_LED_timer,w
  5078     044E  1D03               	btfss	3,2
  5079     044F  2C51               	goto	u66_21
  5080     0450  2C52               	goto	u66_20
  5081     0451                     u66_21:
  5082     0451  2C64               	goto	i1l508
  5083     0452                     u66_20:
  5084     0452                     i1l499:	
  5085                           ;mcc_generated_files/tmr0.c: 166:         {;mcc_generated_files/tmr0.c: 167:            
      +                           do { LATAbits.LATA2 = 0; } while(0);
  5086                           
  5087     0452  1118               	bcf	24,2	;volatile
  5088     0453                     i1l2232:
  5089                           
  5090                           ;mcc_generated_files/tmr0.c: 168:             LED_timer = 0;
  5091     0453  01DB               	clrf	_LED_timer
  5092     0454  2C64               	goto	i1l508
  5093     0455                     i1l2234:
  5094                           
  5095                           ;mcc_generated_files/tmr0.c: 171:         if(LED_timer == 50)
  5096     0455  3032               	movlw	50
  5097     0456  065B               	xorwf	_LED_timer,w
  5098     0457  1D03               	btfss	3,2
  5099     0458  2C5A               	goto	u67_21
  5100     0459  2C5B               	goto	u67_20
  5101     045A                     u67_21:
  5102     045A  2C5C               	goto	i1l2236
  5103     045B                     u67_20:
  5104     045B                     i1l503:	
  5105                           ;mcc_generated_files/tmr0.c: 172:         {;mcc_generated_files/tmr0.c: 173:            
      +                           do { LATAbits.LATA2 = 1; } while(0);
  5106                           
  5107     045B  1518               	bsf	24,2	;volatile
  5108     045C                     i1l2236:
  5109                           
  5110                           ;mcc_generated_files/tmr0.c: 175:         if(LED_timer == 100)
  5111     045C  3064               	movlw	100
  5112     045D  065B               	xorwf	_LED_timer,w
  5113     045E  1D03               	btfss	3,2
  5114     045F  2C61               	goto	u68_21
  5115     0460  2C62               	goto	u68_20
  5116     0461                     u68_21:
  5117     0461  2C64               	goto	i1l508
  5118     0462                     u68_20:
  5119     0462                     i1l506:	
  5120                           ;mcc_generated_files/tmr0.c: 176:         {;mcc_generated_files/tmr0.c: 177:            
      +                           do { LATAbits.LATA2 = 0; } while(0);
  5121                           
  5122     0462  1118               	bcf	24,2	;volatile
  5123     0463  2C53               	goto	i1l2232
  5124     0464                     i1l508:
  5125     0464  0008               	return
  5126     0465                     __end_of_TMR0_DefaultInterruptHandler:
  5127                           
  5128                           	psect	text31
  5129     0200                     __ptext31:	
  5130 ;; *************** function _I2C1_Isr *****************
  5131 ;; Defined at:
  5132 ;;		line 169 in file "mcc_generated_files/i2c1_slave.c"
  5133 ;; Parameters:    Size  Location     Type
  5134 ;;		None
  5135 ;; Auto vars:     Size  Location     Type
  5136 ;;		None
  5137 ;; Return value:  Size  Location     Type
  5138 ;;                  1    wreg      void 
  5139 ;; Registers used:
  5140 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5141 ;; Tracked objects:
  5142 ;;		On entry : 0/0
  5143 ;;		On exit  : 0/0
  5144 ;;		Unchanged: 0/0
  5145 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5146 ;;      Params:         0       0       0       0
  5147 ;;      Locals:         0       0       0       0
  5148 ;;      Temps:          0       2       0       0
  5149 ;;      Totals:         0       2       0       0
  5150 ;;Total ram usage:        2 bytes
  5151 ;; Hardware stack levels used: 1
  5152 ;; Hardware stack levels required when called: 5
  5153 ;; This function calls:
  5154 ;;		_I2C1_SlaveAddrCallBack
  5155 ;;		_I2C1_SlaveClearIrq
  5156 ;;		_I2C1_SlaveIsAddr
  5157 ;;		_I2C1_SlaveIsRead
  5158 ;;		_I2C1_SlaveIsRxBufFull
  5159 ;;		_I2C1_SlaveIsTxBufEmpty
  5160 ;;		_I2C1_SlaveRdCallBack
  5161 ;;		_I2C1_SlaveReleaseClock
  5162 ;;		_I2C1_SlaveWrCallBack
  5163 ;; This function is called by:
  5164 ;;		_I2C1_Open
  5165 ;;		_INTERRUPT_InterruptManager
  5166 ;; This function uses a non-reentrant model
  5167 ;;
  5168                           
  5169     0200                     _I2C1_Isr:	
  5170                           ;psect for function _I2C1_Isr
  5171                           
  5172     0200                     i1l2306:	
  5173                           ;incstack = 0
  5174                           ; Regs used in _I2C1_Isr: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5175                           
  5176                           
  5177                           ;mcc_generated_files/i2c1_slave.c: 171:     I2C1_SlaveClearIrq();
  5178     0200  3186  2671  3182   	fcall	_I2C1_SlaveClearIrq
  5179     0203                     i1l2308:
  5180                           
  5181                           ;mcc_generated_files/i2c1_slave.c: 174:     if(I2C1_SlaveIsAddr())
  5182     0203  3186  2600  3182   	fcall	_I2C1_SlaveIsAddr
  5183     0206  3A00               	xorlw	0
  5184     0207  1903               	skipnz
  5185     0208  2A0A               	goto	u78_21
  5186     0209  2A0B               	goto	u78_20
  5187     020A                     u78_21:
  5188     020A  2A1B               	goto	i1l2316
  5189     020B                     u78_20:
  5190     020B                     i1l2310:
  5191                           
  5192                           ;mcc_generated_files/i2c1_slave.c: 175:     {;mcc_generated_files/i2c1_slave.c: 182:    
      +                               if(I2C1_SlaveIsRead())
  5193     020B  3186  265B  3182   	fcall	_I2C1_SlaveIsRead
  5194     020E  3A00               	xorlw	0
  5195     020F  1903               	skipnz
  5196     0210  2A12               	goto	u79_21
  5197     0211  2A13               	goto	u79_20
  5198     0212                     u79_21:
  5199     0212  2A17               	goto	i1l2314
  5200     0213                     u79_20:
  5201     0213                     i1l2312:
  5202                           
  5203                           ;mcc_generated_files/i2c1_slave.c: 183:         {;mcc_generated_files/i2c1_slave.c: 184:
      +                                       i2c1SlaveState = I2C1_ADDR_TX;
  5204     0213  3001               	movlw	1
  5205     0214  0140               	movlb	0	; select bank0
  5206     0215  00D4               	movwf	_i2c1SlaveState	;volatile
  5207                           
  5208                           ;mcc_generated_files/i2c1_slave.c: 185:         }
  5209     0216  2A53               	goto	i1l2340
  5210     0217                     i1l2314:
  5211                           
  5212                           ;mcc_generated_files/i2c1_slave.c: 187:         {;mcc_generated_files/i2c1_slave.c: 188:
      +                                       i2c1SlaveState = I2C1_ADDR_RX;
  5213     0217  3002               	movlw	2
  5214     0218  0140               	movlb	0	; select bank0
  5215     0219  00D4               	movwf	_i2c1SlaveState	;volatile
  5216     021A  2A53               	goto	i1l2340
  5217     021B                     i1l2316:
  5218                           
  5219                           ;mcc_generated_files/i2c1_slave.c: 192:     {;mcc_generated_files/i2c1_slave.c: 193:    
      +                               if(I2C1_SlaveIsRead())
  5220     021B  3186  265B  3182   	fcall	_I2C1_SlaveIsRead
  5221     021E  3A00               	xorlw	0
  5222     021F  1903               	skipnz
  5223     0220  2A22               	goto	u80_21
  5224     0221  2A23               	goto	u80_20
  5225     0222                     u80_21:
  5226     0222  2A27               	goto	i1l2320
  5227     0223                     u80_20:
  5228     0223                     i1l2318:
  5229                           
  5230                           ;mcc_generated_files/i2c1_slave.c: 194:         {;mcc_generated_files/i2c1_slave.c: 195:
      +                                       i2c1SlaveState = I2C1_DATA_TX;
  5231     0223  3003               	movlw	3
  5232     0224  0140               	movlb	0	; select bank0
  5233     0225  00D4               	movwf	_i2c1SlaveState	;volatile
  5234                           
  5235                           ;mcc_generated_files/i2c1_slave.c: 196:         }
  5236     0226  2A53               	goto	i1l2340
  5237     0227                     i1l2320:
  5238                           
  5239                           ;mcc_generated_files/i2c1_slave.c: 198:         {;mcc_generated_files/i2c1_slave.c: 199:
      +                                       i2c1SlaveState = I2C1_DATA_RX;
  5240     0227  3004               	movlw	4
  5241     0228  0140               	movlb	0	; select bank0
  5242     0229  00D4               	movwf	_i2c1SlaveState	;volatile
  5243     022A  2A53               	goto	i1l2340
  5244     022B                     i1l2322:
  5245                           
  5246                           ;mcc_generated_files/i2c1_slave.c: 206:             I2C1_SlaveAddrCallBack();
  5247     022B  3185  25E0  3182   	fcall	_I2C1_SlaveAddrCallBack
  5248     022E                     i1l2324:
  5249                           
  5250                           ;mcc_generated_files/i2c1_slave.c: 207:             if(I2C1_SlaveIsTxBufEmpty())
  5251     022E  3185  25F9  3182   	fcall	_I2C1_SlaveIsTxBufEmpty
  5252     0231  3A00               	xorlw	0
  5253     0232  1903               	skipnz
  5254     0233  2A35               	goto	u81_21
  5255     0234  2A36               	goto	u81_20
  5256     0235                     u81_21:
  5257     0235  2A69               	goto	i1l2342
  5258     0236                     u81_20:
  5259     0236                     i1l2326:
  5260                           
  5261                           ;mcc_generated_files/i2c1_slave.c: 208:             {;mcc_generated_files/i2c1_slave.c: 
      +                          209:                 I2C1_SlaveWrCallBack();
  5262     0236  3185  25D3  3182   	fcall	_I2C1_SlaveWrCallBack
  5263     0239  2A69               	goto	i1l2342
  5264     023A                     i1l2328:
  5265                           
  5266                           ;mcc_generated_files/i2c1_slave.c: 213:             I2C1_SlaveAddrCallBack();
  5267     023A  3185  25E0  3182   	fcall	_I2C1_SlaveAddrCallBack
  5268                           
  5269                           ;mcc_generated_files/i2c1_slave.c: 214:             break;
  5270     023D  2A69               	goto	i1l2342
  5271     023E                     i1l2330:
  5272                           
  5273                           ;mcc_generated_files/i2c1_slave.c: 216:             if(I2C1_SlaveIsTxBufEmpty())
  5274     023E  3185  25F9  3182   	fcall	_I2C1_SlaveIsTxBufEmpty
  5275     0241  3A00               	xorlw	0
  5276     0242  1903               	skipnz
  5277     0243  2A45               	goto	u82_21
  5278     0244  2A46               	goto	u82_20
  5279     0245                     u82_21:
  5280     0245  2A69               	goto	i1l2342
  5281     0246                     u82_20:
  5282     0246  2A36               	goto	i1l2326
  5283     0247                     i1l2334:
  5284                           
  5285                           ;mcc_generated_files/i2c1_slave.c: 222:             if(I2C1_SlaveIsRxBufFull())
  5286     0247  3186  2664  3182   	fcall	_I2C1_SlaveIsRxBufFull
  5287     024A  3A00               	xorlw	0
  5288     024B  1903               	skipnz
  5289     024C  2A4E               	goto	u83_21
  5290     024D  2A4F               	goto	u83_20
  5291     024E                     u83_21:
  5292     024E  2A69               	goto	i1l2342
  5293     024F                     u83_20:
  5294     024F                     i1l2336:
  5295                           
  5296                           ;mcc_generated_files/i2c1_slave.c: 223:             {;mcc_generated_files/i2c1_slave.c: 
      +                          224:                 I2C1_SlaveRdCallBack();
  5297     024F  3185  2559  3182   	fcall	_I2C1_SlaveRdCallBack
  5298     0252  2A69               	goto	i1l2342
  5299     0253                     i1l2340:
  5300     0253  0854               	movf	_i2c1SlaveState,w	;volatile
  5301     0254  00AD               	movwf	??_I2C1_Isr
  5302     0255  01AE               	clrf	??_I2C1_Isr+1
  5303                           
  5304                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5305                           ; Switch size 1, requested type "simple"
  5306                           ; Number of cases is 1, Range of values is 0 to 0
  5307                           ; switch strategies available:
  5308                           ; Name         Instructions Cycles
  5309                           ; simple_byte            4     3 (average)
  5310                           ; direct_byte            8     6 (fixed)
  5311                           ; jumptable            260     6 (fixed)
  5312                           ;	Chosen strategy is simple_byte
  5313     0256  082E               	movf	??_I2C1_Isr+1,w
  5314     0257  3A00               	xorlw	0	; case 0
  5315     0258  1903               	skipnz
  5316     0259  2A5B               	goto	i1l2720
  5317     025A  2A69               	goto	i1l2342
  5318     025B                     i1l2720:
  5319                           
  5320                           ; Switch size 1, requested type "simple"
  5321                           ; Number of cases is 4, Range of values is 1 to 4
  5322                           ; switch strategies available:
  5323                           ; Name         Instructions Cycles
  5324                           ; simple_byte           13     7 (average)
  5325                           ; direct_byte           17     9 (fixed)
  5326                           ; jumptable            263     9 (fixed)
  5327                           ;	Chosen strategy is simple_byte
  5328     025B  082D               	movf	??_I2C1_Isr,w
  5329     025C  3A01               	xorlw	1	; case 1
  5330     025D  1903               	skipnz
  5331     025E  2A2B               	goto	i1l2322
  5332     025F  3A03               	xorlw	3	; case 2
  5333     0260  1903               	skipnz
  5334     0261  2A3A               	goto	i1l2328
  5335     0262  3A01               	xorlw	1	; case 3
  5336     0263  1903               	skipnz
  5337     0264  2A3E               	goto	i1l2330
  5338     0265  3A07               	xorlw	7	; case 4
  5339     0266  1903               	skipnz
  5340     0267  2A47               	goto	i1l2334
  5341     0268  2A69               	goto	i1l2342
  5342     0269                     i1l2342:
  5343                           
  5344                           ;mcc_generated_files/i2c1_slave.c: 230:     I2C1_SlaveReleaseClock();
  5345     0269  3186  266E  3182   	fcall	_I2C1_SlaveReleaseClock
  5346     026C                     i1l321:
  5347     026C  0008               	return
  5348     026D                     __end_of_I2C1_Isr:
  5349                           
  5350                           	psect	text32
  5351     05D3                     __ptext32:	
  5352 ;; *************** function _I2C1_SlaveWrCallBack *****************
  5353 ;; Defined at:
  5354 ;;		line 281 in file "mcc_generated_files/i2c1_slave.c"
  5355 ;; Parameters:    Size  Location     Type
  5356 ;;		None
  5357 ;; Auto vars:     Size  Location     Type
  5358 ;;		None
  5359 ;; Return value:  Size  Location     Type
  5360 ;;                  1    wreg      void 
  5361 ;; Registers used:
  5362 ;;		wreg, status,2, status,0, pclath, cstack
  5363 ;; Tracked objects:
  5364 ;;		On entry : 0/0
  5365 ;;		On exit  : 0/0
  5366 ;;		Unchanged: 0/0
  5367 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5368 ;;      Params:         0       0       0       0
  5369 ;;      Locals:         0       0       0       0
  5370 ;;      Temps:          0       0       0       0
  5371 ;;      Totals:         0       0       0       0
  5372 ;;Total ram usage:        0 bytes
  5373 ;; Hardware stack levels used: 1
  5374 ;; Hardware stack levels required when called: 2
  5375 ;; This function calls:
  5376 ;;		NULL
  5377 ;;		_I2C1_SlaveDefWrInterruptHandler
  5378 ;; This function is called by:
  5379 ;;		_I2C1_Isr
  5380 ;; This function uses a non-reentrant model
  5381 ;;
  5382                           
  5383     05D3                     _I2C1_SlaveWrCallBack:	
  5384                           ;psect for function _I2C1_SlaveWrCallBack
  5385                           
  5386     05D3                     i1l2196:	
  5387                           ;incstack = 0
  5388                           ; Regs used in _I2C1_SlaveWrCallBack: [wreg+status,2+status,0+pclath+cstack]
  5389                           
  5390                           
  5391                           ;mcc_generated_files/i2c1_slave.c: 283:     if (I2C1_SlaveWrInterruptHandler)
  5392     05D3  0140               	movlb	0	; select bank0
  5393     05D4  084C               	movf	_I2C1_SlaveWrInterruptHandler,w
  5394     05D5  044D               	iorwf	_I2C1_SlaveWrInterruptHandler+1,w
  5395     05D6  1903               	btfsc	3,2
  5396     05D7  2DD9               	goto	u61_21
  5397     05D8  2DDA               	goto	u61_20
  5398     05D9                     u61_21:
  5399     05D9  2DDF               	goto	i1l344
  5400     05DA                     u61_20:
  5401     05DA                     i1l2198:
  5402                           
  5403                           ;mcc_generated_files/i2c1_slave.c: 284:     {;mcc_generated_files/i2c1_slave.c: 285:    
      +                               I2C1_SlaveWrInterruptHandler();
  5404     05DA  084D               	movf	_I2C1_SlaveWrInterruptHandler+1,w
  5405     05DB  008A               	movwf	10
  5406     05DC  084C               	movf	_I2C1_SlaveWrInterruptHandler,w
  5407     05DD  000A               	callw
  5408     05DE  3185               	pagesel	$
  5409     05DF                     i1l344:
  5410     05DF  0008               	return
  5411     05E0                     __end_of_I2C1_SlaveWrCallBack:
  5412                           
  5413                           	psect	text33
  5414     0650                     __ptext33:	
  5415 ;; *************** function _I2C1_SlaveDefWrInterruptHandler *****************
  5416 ;; Defined at:
  5417 ;;		line 289 in file "mcc_generated_files/i2c1_slave.c"
  5418 ;; Parameters:    Size  Location     Type
  5419 ;;		None
  5420 ;; Auto vars:     Size  Location     Type
  5421 ;;		None
  5422 ;; Return value:  Size  Location     Type
  5423 ;;                  1    wreg      void 
  5424 ;; Registers used:
  5425 ;;		wreg, status,2, status,0, pclath, cstack
  5426 ;; Tracked objects:
  5427 ;;		On entry : 0/0
  5428 ;;		On exit  : 0/0
  5429 ;;		Unchanged: 0/0
  5430 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5431 ;;      Params:         0       0       0       0
  5432 ;;      Locals:         0       0       0       0
  5433 ;;      Temps:          0       0       0       0
  5434 ;;      Totals:         0       0       0       0
  5435 ;;Total ram usage:        0 bytes
  5436 ;; Hardware stack levels used: 1
  5437 ;; Hardware stack levels required when called: 1
  5438 ;; This function calls:
  5439 ;;		_I2C1_SlaveSendTxData
  5440 ;; This function is called by:
  5441 ;;		_I2C1_Open
  5442 ;;		_I2C1_SlaveWrCallBack
  5443 ;; This function uses a non-reentrant model
  5444 ;;
  5445                           
  5446     0650                     _I2C1_SlaveDefWrInterruptHandler:	
  5447                           ;psect for function _I2C1_SlaveDefWrInterruptHandler
  5448                           
  5449     0650                     i1l2032:	
  5450                           ;incstack = 0
  5451                           ; Regs used in _I2C1_SlaveDefWrInterruptHandler: [wreg+status,2+status,0+pclath+cstack]
  5452                           
  5453                           
  5454                           ;mcc_generated_files/i2c1_slave.c: 290:     I2C1_SlaveSendTxData(i2c1WrData);
  5455     0650  0140               	movlb	0	; select bank0
  5456     0651  0857               	movf	_i2c1WrData,w	;volatile
  5457     0652  3186  2656  3186   	fcall	_I2C1_SlaveSendTxData
  5458     0655                     i1l347:
  5459     0655  0008               	return
  5460     0656                     __end_of_I2C1_SlaveDefWrInterruptHandler:
  5461                           
  5462                           	psect	text34
  5463     0656                     __ptext34:	
  5464 ;; *************** function _I2C1_SlaveSendTxData *****************
  5465 ;; Defined at:
  5466 ;;		line 424 in file "mcc_generated_files/i2c1_slave.c"
  5467 ;; Parameters:    Size  Location     Type
  5468 ;;  data            1    wreg     unsigned char 
  5469 ;; Auto vars:     Size  Location     Type
  5470 ;;  data            1    0[COMMON] unsigned char 
  5471 ;; Return value:  Size  Location     Type
  5472 ;;                  1    wreg      void 
  5473 ;; Registers used:
  5474 ;;		wreg
  5475 ;; Tracked objects:
  5476 ;;		On entry : 0/0
  5477 ;;		On exit  : 0/0
  5478 ;;		Unchanged: 0/0
  5479 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5480 ;;      Params:         0       0       0       0
  5481 ;;      Locals:         1       0       0       0
  5482 ;;      Temps:          0       0       0       0
  5483 ;;      Totals:         1       0       0       0
  5484 ;;Total ram usage:        1 bytes
  5485 ;; Hardware stack levels used: 1
  5486 ;; This function calls:
  5487 ;;		Nothing
  5488 ;; This function is called by:
  5489 ;;		_I2C1_SlaveDefWrInterruptHandler
  5490 ;;		_I2C1_Write
  5491 ;; This function uses a non-reentrant model
  5492 ;;
  5493                           
  5494     0656                     _I2C1_SlaveSendTxData:	
  5495                           ;psect for function _I2C1_SlaveSendTxData
  5496                           
  5497                           
  5498                           ;incstack = 0
  5499                           ; Regs used in _I2C1_SlaveSendTxData: [wreg]
  5500                           ;I2C1_SlaveSendTxData@data stored from wreg
  5501     0656  00F0               	movwf	I2C1_SlaveSendTxData@data
  5502     0657                     i1l1942:
  5503                           
  5504                           ;mcc_generated_files/i2c1_slave.c: 424: static __attribute__((inline)) void I2C1_SlaveSe
      +                          ndTxData(uint8_t data);mcc_generated_files/i2c1_slave.c: 425: {;mcc_generated_files/i2c1
      +                          _slave.c: 426:     SSP1BUF = data;
  5505     0657  0870               	movf	I2C1_SlaveSendTxData@data,w
  5506     0658  0143               	movlb	3	; select bank3
  5507     0659  008C               	movwf	12	;volatile
  5508     065A                     i1l423:
  5509     065A  0008               	return
  5510     065B                     __end_of_I2C1_SlaveSendTxData:
  5511                           
  5512                           	psect	text35
  5513     066E                     __ptext35:	
  5514 ;; *************** function _I2C1_SlaveReleaseClock *****************
  5515 ;; Defined at:
  5516 ;;		line 394 in file "mcc_generated_files/i2c1_slave.c"
  5517 ;; Parameters:    Size  Location     Type
  5518 ;;		None
  5519 ;; Auto vars:     Size  Location     Type
  5520 ;;		None
  5521 ;; Return value:  Size  Location     Type
  5522 ;;                  1    wreg      void 
  5523 ;; Registers used:
  5524 ;;		None
  5525 ;; Tracked objects:
  5526 ;;		On entry : 0/0
  5527 ;;		On exit  : 0/0
  5528 ;;		Unchanged: 0/0
  5529 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5530 ;;      Params:         0       0       0       0
  5531 ;;      Locals:         0       0       0       0
  5532 ;;      Temps:          0       0       0       0
  5533 ;;      Totals:         0       0       0       0
  5534 ;;Total ram usage:        0 bytes
  5535 ;; Hardware stack levels used: 1
  5536 ;; This function calls:
  5537 ;;		Nothing
  5538 ;; This function is called by:
  5539 ;;		_I2C1_Isr
  5540 ;; This function uses a non-reentrant model
  5541 ;;
  5542                           
  5543     066E                     _I2C1_SlaveReleaseClock:	
  5544                           ;psect for function _I2C1_SlaveReleaseClock
  5545                           
  5546     066E                     i1l2212:	
  5547                           ;incstack = 0
  5548                           ; Regs used in _I2C1_SlaveReleaseClock: []
  5549                           
  5550                           
  5551                           ;mcc_generated_files/i2c1_slave.c: 396:     SSP1CON1bits.CKP = 1;
  5552     066E  0143               	movlb	3	; select bank3
  5553     066F  1610               	bsf	16,4	;volatile
  5554     0670                     i1l405:
  5555     0670  0008               	return
  5556     0671                     __end_of_I2C1_SlaveReleaseClock:
  5557                           
  5558                           	psect	text36
  5559     0559                     __ptext36:	
  5560 ;; *************** function _I2C1_SlaveRdCallBack *****************
  5561 ;; Defined at:
  5562 ;;		line 244 in file "mcc_generated_files/i2c1_slave.c"
  5563 ;; Parameters:    Size  Location     Type
  5564 ;;		None
  5565 ;; Auto vars:     Size  Location     Type
  5566 ;;		None
  5567 ;; Return value:  Size  Location     Type
  5568 ;;                  1    wreg      void 
  5569 ;; Registers used:
  5570 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5571 ;; Tracked objects:
  5572 ;;		On entry : 0/0
  5573 ;;		On exit  : 0/0
  5574 ;;		Unchanged: 0/0
  5575 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5576 ;;      Params:         0       0       0       0
  5577 ;;      Locals:         0       0       0       0
  5578 ;;      Temps:          0       0       0       0
  5579 ;;      Totals:         0       0       0       0
  5580 ;;Total ram usage:        0 bytes
  5581 ;; Hardware stack levels used: 1
  5582 ;; Hardware stack levels required when called: 4
  5583 ;; This function calls:
  5584 ;;		NULL
  5585 ;;		_I2C1_SlaveDefRdInterruptHandler
  5586 ;;		_data_recv_handler
  5587 ;; This function is called by:
  5588 ;;		_I2C1_Isr
  5589 ;; This function uses a non-reentrant model
  5590 ;;
  5591                           
  5592     0559                     _I2C1_SlaveRdCallBack:	
  5593                           ;psect for function _I2C1_SlaveRdCallBack
  5594                           
  5595     0559                     i1l2204:	
  5596                           ;incstack = 0
  5597                           ; Regs used in _I2C1_SlaveRdCallBack: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5598                           
  5599                           
  5600                           ;mcc_generated_files/i2c1_slave.c: 246:     if (I2C1_SlaveRdInterruptHandler)
  5601     0559  0140               	movlb	0	; select bank0
  5602     055A  084E               	movf	_I2C1_SlaveRdInterruptHandler,w
  5603     055B  044F               	iorwf	_I2C1_SlaveRdInterruptHandler+1,w
  5604     055C  1903               	btfsc	3,2
  5605     055D  2D5F               	goto	u62_21
  5606     055E  2D60               	goto	u62_20
  5607     055F                     u62_21:
  5608     055F  2D6F               	goto	i1l332
  5609     0560                     u62_20:
  5610     0560                     i1l2206:
  5611                           
  5612                           ;mcc_generated_files/i2c1_slave.c: 247:     {;mcc_generated_files/i2c1_slave.c: 249:    
      +                               I2C1_SlaveRdInterruptHandler();
  5613     0560  084F               	movf	_I2C1_SlaveRdInterruptHandler+1,w
  5614     0561  008A               	movwf	10
  5615     0562  084E               	movf	_I2C1_SlaveRdInterruptHandler,w
  5616     0563  000A               	callw
  5617     0564  3185               	pagesel	$
  5618     0565                     i1l2208:
  5619                           
  5620                           ;mcc_generated_files/i2c1_slave.c: 251:         if(i2cReadCnt == 5 - 1)
  5621     0565  3004               	movlw	4
  5622     0566  0140               	movlb	0	; select bank0
  5623     0567  0658               	xorwf	_i2cReadCnt@i2c1_slave$F753,w	;volatile
  5624     0568  1D03               	btfss	3,2
  5625     0569  2D6B               	goto	u63_21
  5626     056A  2D6C               	goto	u63_20
  5627     056B                     u63_21:
  5628     056B  2D6F               	goto	i1l332
  5629     056C                     u63_20:
  5630     056C                     i1l2210:
  5631                           
  5632                           ;mcc_generated_files/i2c1_slave.c: 252:         {;mcc_generated_files/i2c1_slave.c: 253:
      +                                       data_recv_handler();
  5633     056C  3184  2406  3185   	fcall	_data_recv_handler
  5634     056F                     i1l332:
  5635     056F  0008               	return
  5636     0570                     __end_of_I2C1_SlaveRdCallBack:
  5637                           
  5638                           	psect	text37
  5639     0406                     __ptext37:	
  5640 ;; *************** function _data_recv_handler *****************
  5641 ;; Defined at:
  5642 ;;		line 26 in file "flash_memory_filling.c"
  5643 ;; Parameters:    Size  Location     Type
  5644 ;;		None
  5645 ;; Auto vars:     Size  Location     Type
  5646 ;;  i               2   11[BANK0 ] unsigned short 
  5647 ;; Return value:  Size  Location     Type
  5648 ;;                  1    wreg      void 
  5649 ;; Registers used:
  5650 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5651 ;; Tracked objects:
  5652 ;;		On entry : 0/0
  5653 ;;		On exit  : 0/0
  5654 ;;		Unchanged: 0/0
  5655 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5656 ;;      Params:         0       0       0       0
  5657 ;;      Locals:         0       2       0       0
  5658 ;;      Temps:          0       2       0       0
  5659 ;;      Totals:         0       4       0       0
  5660 ;;Total ram usage:        4 bytes
  5661 ;; Hardware stack levels used: 1
  5662 ;; Hardware stack levels required when called: 3
  5663 ;; This function calls:
  5664 ;;		i1_FLASH_WriteWord
  5665 ;; This function is called by:
  5666 ;;		_I2C1_SlaveRdCallBack
  5667 ;; This function uses a non-reentrant model
  5668 ;;
  5669                           
  5670     0406                     _data_recv_handler:	
  5671                           ;psect for function _data_recv_handler
  5672                           
  5673     0406                     i1l2008:	
  5674                           ;incstack = 0
  5675                           ; Regs used in _data_recv_handler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5676                           
  5677                           
  5678                           ;flash_memory_filling.c: 28:     command = i2cDataRead[0] & 0x80;
  5679     0406  0140               	movlb	0	; select bank0
  5680     0407  0841               	movf	_i2cDataRead,w	;volatile
  5681     0408  3980               	andlw	128
  5682     0409  00DA               	movwf	_command
  5683     040A                     i1l2010:
  5684                           
  5685                           ;flash_memory_filling.c: 31:     if(command)
  5686     040A  085A               	movf	_command,w
  5687     040B  1903               	btfsc	3,2
  5688     040C  2C0E               	goto	u52_21
  5689     040D  2C0F               	goto	u52_20
  5690     040E                     u52_21:
  5691     040E  2C38               	goto	i1l41
  5692     040F                     u52_20:
  5693     040F                     i1l2012:
  5694                           
  5695                           ;flash_memory_filling.c: 32:     {;flash_memory_filling.c: 33:         for(uint16_t i = 
      +                          1; i < 5; i++)
  5696     040F  3001               	movlw	1
  5697     0410  00AB               	movwf	data_recv_handler@i
  5698     0411  3000               	movlw	0
  5699     0412  00AC               	movwf	data_recv_handler@i+1
  5700     0413                     i1l2016:
  5701                           
  5702                           ;flash_memory_filling.c: 34:         {;flash_memory_filling.c: 35:             FLASH_Wri
      +                          teWord(0x780 + (i + 1), ramBuff, (uint16_t)i2cDataRead[i]);
  5703     0413  082B               	movf	data_recv_handler@i,w
  5704     0414  3E81               	addlw	129
  5705     0415  00A0               	movwf	i1FLASH_WriteWord@flashAddr
  5706     0416  3007               	movlw	7
  5707     0417  3D2C               	addwfc	data_recv_handler@i+1,w
  5708     0418  00A1               	movwf	i1FLASH_WriteWord@flashAddr+1
  5709     0419  30A0               	movlw	(low (_ramBuff| 0))& (0+255)
  5710     041A  00A2               	movwf	i1FLASH_WriteWord@ramBuf
  5711     041B  082B               	movf	data_recv_handler@i,w
  5712     041C  3E41               	addlw	(low (_i2cDataRead| 0))& (0+255)
  5713     041D  0086               	movwf	6
  5714     041E  0187               	clrf	7
  5715     041F  0801               	movf	1,w
  5716     0420  00A9               	movwf	??_data_recv_handler
  5717     0421  01AA               	clrf	??_data_recv_handler+1
  5718     0422  0829               	movf	??_data_recv_handler,w
  5719     0423  00A3               	movwf	i1FLASH_WriteWord@word
  5720     0424  082A               	movf	??_data_recv_handler+1,w
  5721     0425  00A4               	movwf	i1FLASH_WriteWord@word+1
  5722     0426  3183  23C8  3184   	fcall	i1_FLASH_WriteWord
  5723     0429                     i1l2018:
  5724                           
  5725                           ;flash_memory_filling.c: 36:         }
  5726     0429  3001               	movlw	1
  5727     042A  0140               	movlb	0	; select bank0
  5728     042B  07AB               	addwf	data_recv_handler@i,f
  5729     042C  3000               	movlw	0
  5730     042D  3DAC               	addwfc	data_recv_handler@i+1,f
  5731     042E                     i1l2020:
  5732     042E  3000               	movlw	0
  5733     042F  022C               	subwf	data_recv_handler@i+1,w
  5734     0430  3005               	movlw	5
  5735     0431  1903               	skipnz
  5736     0432  022B               	subwf	data_recv_handler@i,w
  5737     0433  1C03               	skipc
  5738     0434  2C36               	goto	u53_21
  5739     0435  2C37               	goto	u53_20
  5740     0436                     u53_21:
  5741     0436  2C13               	goto	i1l2016
  5742     0437                     u53_20:
  5743     0437  2C3A               	goto	i1l46
  5744     0438                     i1l41:	
  5745                           ;flash_memory_filling.c: 40:     else if(~command)
  5746                           
  5747                           
  5748                           ;flash_memory_filling.c: 41:     {;flash_memory_filling.c: 42:        debug = 1;
  5749     0438  01DE               	clrf	_debug
  5750     0439  0ADE               	incf	_debug,f
  5751     043A                     i1l46:
  5752     043A  0008               	return
  5753     043B                     __end_of_data_recv_handler:
  5754                           
  5755                           	psect	text38
  5756     03C8                     __ptext38:	
  5757 ;; *************** function i1_FLASH_WriteWord *****************
  5758 ;; Defined at:
  5759 ;;		line 75 in file "mcc_generated_files/memory.c"
  5760 ;; Parameters:    Size  Location     Type
  5761 ;;  flashAddr       2    0[BANK0 ] unsigned short 
  5762 ;;  ramBuf          1    2[BANK0 ] PTR unsigned short 
  5763 ;;		 -> ramBuff(64), 
  5764 ;;  word            2    3[BANK0 ] unsigned short 
  5765 ;; Auto vars:     Size  Location     Type
  5766 ;;  blockStartAd    2    6[BANK0 ] unsigned short 
  5767 ;;  i               1    8[BANK0 ] unsigned char 
  5768 ;;  offset          1    5[BANK0 ] unsigned char 
  5769 ;; Return value:  Size  Location     Type
  5770 ;;                  1    wreg      void 
  5771 ;; Registers used:
  5772 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5773 ;; Tracked objects:
  5774 ;;		On entry : 0/0
  5775 ;;		On exit  : 0/0
  5776 ;;		Unchanged: 0/0
  5777 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5778 ;;      Params:         0       5       0       0
  5779 ;;      Locals:         0       4       0       0
  5780 ;;      Temps:          1       0       0       0
  5781 ;;      Totals:         1       9       0       0
  5782 ;;Total ram usage:       10 bytes
  5783 ;; Hardware stack levels used: 1
  5784 ;; Hardware stack levels required when called: 2
  5785 ;; This function calls:
  5786 ;;		i1_FLASH_ReadWord
  5787 ;;		i1_FLASH_WriteBlock
  5788 ;; This function is called by:
  5789 ;;		_data_recv_handler
  5790 ;; This function uses a non-reentrant model
  5791 ;;
  5792                           
  5793     03C8                     i1_FLASH_WriteWord:	
  5794                           ;psect for function i1_FLASH_WriteWord
  5795                           
  5796     03C8                     i1l1968:	
  5797                           ;incstack = 0
  5798                           ; Regs used in i1_FLASH_WriteWord: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5799                           
  5800                           
  5801                           ;mcc_generated_files/memory.c: 75: void FLASH_WriteWord(uint16_t flashAddr, uint16_t *ra
      +                          mBuf, uint16_t word);mcc_generated_files/memory.c: 76: {;mcc_generated_files/memory.c: 7
      +                          7:     uint16_t blockStartAddr = (uint16_t)(flashAddr & ((0x800 -1) ^ (32 -1)));
  5802     03C8  30E0               	movlw	224
  5803     03C9  0140               	movlb	0	; select bank0
  5804     03CA  0520               	andwf	i1FLASH_WriteWord@flashAddr,w
  5805     03CB  00A6               	movwf	i1FLASH_WriteWord@blockStartAddr
  5806     03CC  3007               	movlw	7
  5807     03CD  0521               	andwf	i1FLASH_WriteWord@flashAddr+1,w
  5808     03CE  00A7               	movwf	i1FLASH_WriteWord@blockStartAddr+1
  5809     03CF                     i1l1970:
  5810                           
  5811                           ;mcc_generated_files/memory.c: 78:     uint8_t offset = (uint8_t)(flashAddr & (32 -1));
  5812     03CF  0820               	movf	i1FLASH_WriteWord@flashAddr,w
  5813     03D0  391F               	andlw	31
  5814     03D1  00A5               	movwf	i1FLASH_WriteWord@offset
  5815                           
  5816                           ;mcc_generated_files/memory.c: 79:     uint8_t i;;mcc_generated_files/memory.c: 82:     
      +                          for (i=0; i<32; i++)
  5817     03D2  01A8               	clrf	i1FLASH_WriteWord@i
  5818     03D3                     i1l1976:
  5819                           
  5820                           ;mcc_generated_files/memory.c: 83:     {;mcc_generated_files/memory.c: 84:         ramBu
      +                          f[i] = FLASH_ReadWord((blockStartAddr+i));
  5821     03D3  0828               	movf	i1FLASH_WriteWord@i,w
  5822     03D4  0726               	addwf	i1FLASH_WriteWord@blockStartAddr,w
  5823     03D5  00F0               	movwf	i1FLASH_ReadWord@flashAddr
  5824     03D6  0827               	movf	i1FLASH_WriteWord@blockStartAddr+1,w
  5825     03D7  1803               	skipnc
  5826     03D8  0A27               	incf	i1FLASH_WriteWord@blockStartAddr+1,w
  5827     03D9  00F1               	movwf	i1FLASH_ReadWord@flashAddr+1
  5828     03DA  3185  2540  3183   	fcall	i1_FLASH_ReadWord
  5829     03DD  0140               	movlb	0	; select bank0
  5830     03DE  3528               	lslf	i1FLASH_WriteWord@i,w
  5831     03DF  0722               	addwf	i1FLASH_WriteWord@ramBuf,w
  5832     03E0  00FD               	movwf	??i1_FLASH_WriteWord
  5833     03E1  087D               	movf	??i1_FLASH_WriteWord,w
  5834     03E2  0086               	movwf	6
  5835     03E3  0187               	clrf	7
  5836     03E4  0870               	movf	?i1_FLASH_ReadWord,w
  5837     03E5  3FC0               	movwi [0]fsr1
  5838     03E6  0871               	movf	?i1_FLASH_ReadWord+1,w
  5839     03E7  3FC1               	movwi [1]fsr1
  5840     03E8                     i1l1978:
  5841                           
  5842                           ;mcc_generated_files/memory.c: 85:     }
  5843     03E8  3001               	movlw	1
  5844     03E9  00FD               	movwf	??i1_FLASH_WriteWord
  5845     03EA  087D               	movf	??i1_FLASH_WriteWord,w
  5846     03EB  07A8               	addwf	i1FLASH_WriteWord@i,f
  5847     03EC                     i1l1980:
  5848     03EC  3020               	movlw	32
  5849     03ED  0228               	subwf	i1FLASH_WriteWord@i,w
  5850     03EE  1C03               	skipc
  5851     03EF  2BF1               	goto	u51_21
  5852     03F0  2BF2               	goto	u51_20
  5853     03F1                     u51_21:
  5854     03F1  2BD3               	goto	i1l1976
  5855     03F2                     u51_20:
  5856     03F2                     i1l1982:
  5857                           
  5858                           ;mcc_generated_files/memory.c: 88:     ramBuf[offset] = word;
  5859     03F2  3525               	lslf	i1FLASH_WriteWord@offset,w
  5860     03F3  0722               	addwf	i1FLASH_WriteWord@ramBuf,w
  5861     03F4  00FD               	movwf	??i1_FLASH_WriteWord
  5862     03F5  087D               	movf	??i1_FLASH_WriteWord,w
  5863     03F6  0086               	movwf	6
  5864     03F7  0187               	clrf	7
  5865     03F8  0823               	movf	i1FLASH_WriteWord@word,w
  5866     03F9  3FC0               	movwi [0]fsr1
  5867     03FA  0824               	movf	i1FLASH_WriteWord@word+1,w
  5868     03FB  3FC1               	movwi [1]fsr1
  5869     03FC                     i1l1984:
  5870                           
  5871                           ;mcc_generated_files/memory.c: 91:     FLASH_WriteBlock(blockStartAddr, ramBuf);
  5872     03FC  0827               	movf	i1FLASH_WriteWord@blockStartAddr+1,w
  5873     03FD  00F4               	movwf	i1FLASH_WriteBlock@writeAddr+1
  5874     03FE  0826               	movf	i1FLASH_WriteWord@blockStartAddr,w
  5875     03FF  00F3               	movwf	i1FLASH_WriteBlock@writeAddr
  5876     0400  0822               	movf	i1FLASH_WriteWord@ramBuf,w
  5877     0401  00F5               	movwf	i1FLASH_WriteBlock@flashWordArray
  5878     0402  3182  22D9  3183   	fcall	i1_FLASH_WriteBlock
  5879     0405                     i1l536:
  5880     0405  0008               	return
  5881     0406                     __end_ofi1_FLASH_WriteWord:
  5882                           
  5883                           	psect	text39
  5884     02D9                     __ptext39:	
  5885 ;; *************** function i1_FLASH_WriteBlock *****************
  5886 ;; Defined at:
  5887 ;;		line 94 in file "mcc_generated_files/memory.c"
  5888 ;; Parameters:    Size  Location     Type
  5889 ;;  writeAddr       2    3[COMMON] unsigned short 
  5890 ;;  flashWordArr    1    5[COMMON] PTR unsigned short 
  5891 ;;		 -> ramBuff(64), 
  5892 ;; Auto vars:     Size  Location     Type
  5893 ;;  blockStartAd    2    9[COMMON] unsigned short 
  5894 ;;  i               1   12[COMMON] unsigned char 
  5895 ;;  GIEBitValue     1   11[COMMON] unsigned char 
  5896 ;; Return value:  Size  Location     Type
  5897 ;;                  1    wreg      char 
  5898 ;; Registers used:
  5899 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5900 ;; Tracked objects:
  5901 ;;		On entry : 0/0
  5902 ;;		On exit  : 0/0
  5903 ;;		Unchanged: 0/0
  5904 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5905 ;;      Params:         3       0       0       0
  5906 ;;      Locals:         4       0       0       0
  5907 ;;      Temps:          3       0       0       0
  5908 ;;      Totals:        10       0       0       0
  5909 ;;Total ram usage:       10 bytes
  5910 ;; Hardware stack levels used: 1
  5911 ;; Hardware stack levels required when called: 1
  5912 ;; This function calls:
  5913 ;;		i1_FLASH_EraseBlock
  5914 ;; This function is called by:
  5915 ;;		i1_FLASH_WriteWord
  5916 ;; This function uses a non-reentrant model
  5917 ;;
  5918                           
  5919     02D9                     i1_FLASH_WriteBlock:	
  5920                           ;psect for function i1_FLASH_WriteBlock
  5921                           
  5922     02D9                     i1l1888:	
  5923                           ;incstack = 0
  5924                           ; Regs used in i1_FLASH_WriteBlock: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5925                           
  5926                           
  5927                           ;mcc_generated_files/memory.c: 94: int8_t FLASH_WriteBlock(uint16_t writeAddr, uint16_t 
      +                          *flashWordArray);mcc_generated_files/memory.c: 95: {;mcc_generated_files/memory.c: 96:  
      +                             uint16_t blockStartAddr = (uint16_t )(writeAddr & ((0x800 -1) ^ (32 -1)));
  5928     02D9  30E0               	movlw	224
  5929     02DA  0573               	andwf	i1FLASH_WriteBlock@writeAddr,w
  5930     02DB  00F9               	movwf	i1FLASH_WriteBlock@blockStartAddr
  5931     02DC  3007               	movlw	7
  5932     02DD  0574               	andwf	i1FLASH_WriteBlock@writeAddr+1,w
  5933     02DE  00FA               	movwf	i1FLASH_WriteBlock@blockStartAddr+1
  5934     02DF                     i1l1890:
  5935                           
  5936                           ;mcc_generated_files/memory.c: 97:     uint8_t GIEBitValue = INTCONbits.GIE;
  5937     02DF  3000               	movlw	0
  5938     02E0  1B8B               	btfsc	11,7	;volatile
  5939     02E1  3001               	movlw	1
  5940     02E2  00FB               	movwf	i1FLASH_WriteBlock@GIEBitValue
  5941     02E3                     i1l1892:
  5942                           
  5943                           ;mcc_generated_files/memory.c: 98:     uint8_t i;;mcc_generated_files/memory.c: 102:    
      +                           if( writeAddr != blockStartAddr )
  5944     02E3  087A               	movf	i1FLASH_WriteBlock@blockStartAddr+1,w
  5945     02E4  0674               	xorwf	i1FLASH_WriteBlock@writeAddr+1,w
  5946     02E5  1D03               	skipz
  5947     02E6  2AE9               	goto	u48_25
  5948     02E7  0879               	movf	i1FLASH_WriteBlock@blockStartAddr,w
  5949     02E8  0673               	xorwf	i1FLASH_WriteBlock@writeAddr,w
  5950     02E9                     u48_25:
  5951     02E9  1903               	skipnz
  5952     02EA  2AEC               	goto	u48_21
  5953     02EB  2AED               	goto	u48_20
  5954     02EC                     u48_21:
  5955     02EC  2AEE               	goto	i1l539
  5956     02ED                     u48_20:
  5957     02ED  2B37               	goto	i1l540
  5958     02EE                     i1l539:	
  5959                           ;mcc_generated_files/memory.c: 105:     }
  5960                           
  5961                           
  5962                           ;mcc_generated_files/memory.c: 107:     INTCONbits.GIE = 0;
  5963     02EE  138B               	bcf	11,7	;volatile
  5964     02EF                     i1l1896:
  5965                           
  5966                           ;mcc_generated_files/memory.c: 110:     FLASH_EraseBlock(writeAddr);
  5967     02EF  0874               	movf	i1FLASH_WriteBlock@writeAddr+1,w
  5968     02F0  00F1               	movwf	i1FLASH_EraseBlock@startAddr+1
  5969     02F1  0873               	movf	i1FLASH_WriteBlock@writeAddr,w
  5970     02F2  00F0               	movwf	i1FLASH_EraseBlock@startAddr
  5971     02F3  3185  2509  3182   	fcall	i1_FLASH_EraseBlock
  5972     02F6                     i1l1898:
  5973                           
  5974                           ;mcc_generated_files/memory.c: 113:     NVMCON1bits.NVMREGS = 0;
  5975     02F6  0150               	movlb	16	; select bank16
  5976     02F7  131E               	bcf	30,6	;volsfr
  5977     02F8                     i1l1900:
  5978                           
  5979                           ;mcc_generated_files/memory.c: 114:     NVMCON1bits.WREN = 1;
  5980     02F8  151E               	bsf	30,2	;volsfr
  5981     02F9                     i1l1902:
  5982                           
  5983                           ;mcc_generated_files/memory.c: 115:     NVMCON1bits.LWLO = 1;
  5984     02F9  169E               	bsf	30,5	;volsfr
  5985     02FA                     i1l1904:
  5986                           
  5987                           ;mcc_generated_files/memory.c: 117:     for (i=0; i<32; i++)
  5988     02FA  01FC               	clrf	i1FLASH_WriteBlock@i
  5989     02FB                     i1l1910:
  5990                           
  5991                           ;mcc_generated_files/memory.c: 118:     {;mcc_generated_files/memory.c: 120:         NVM
      +                          ADRL = (writeAddr & 0xFF);
  5992     02FB  0873               	movf	i1FLASH_WriteBlock@writeAddr,w
  5993     02FC  0150               	movlb	16	; select bank16
  5994     02FD  009A               	movwf	26	;volatile
  5995     02FE                     i1l1912:
  5996                           
  5997                           ;mcc_generated_files/memory.c: 122:         NVMADRH = ((writeAddr & 0xFF00) >> 8);
  5998     02FE  0874               	movf	i1FLASH_WriteBlock@writeAddr+1,w
  5999     02FF  009B               	movwf	27	;volatile
  6000     0300                     i1l1914:
  6001                           
  6002                           ;mcc_generated_files/memory.c: 125:         NVMDATL = flashWordArray[i];
  6003     0300  357C               	lslf	i1FLASH_WriteBlock@i,w
  6004     0301  0775               	addwf	i1FLASH_WriteBlock@flashWordArray,w
  6005     0302  00F6               	movwf	??i1_FLASH_WriteBlock
  6006     0303  0876               	movf	??i1_FLASH_WriteBlock,w
  6007     0304  0086               	movwf	6
  6008     0305  0187               	clrf	7
  6009     0306  0801               	movf	1,w
  6010     0307  009C               	movwf	28	;volatile
  6011     0308                     i1l1916:
  6012                           
  6013                           ;mcc_generated_files/memory.c: 126:         NVMDATH = ((flashWordArray[i] & 0xFF00) >> 8
      +                          );
  6014     0308  357C               	lslf	i1FLASH_WriteBlock@i,w
  6015     0309  0775               	addwf	i1FLASH_WriteBlock@flashWordArray,w
  6016     030A  00F6               	movwf	??i1_FLASH_WriteBlock
  6017     030B  0876               	movf	??i1_FLASH_WriteBlock,w
  6018     030C  0086               	movwf	6
  6019     030D  0187               	clrf	7
  6020     030E  3F40               	moviw [0]fsr1
  6021     030F  00F7               	movwf	??i1_FLASH_WriteBlock+1
  6022     0310  3F41               	moviw [1]fsr1
  6023     0311  00F8               	movwf	??i1_FLASH_WriteBlock+2
  6024     0312  0878               	movf	??i1_FLASH_WriteBlock+2,w
  6025     0313  009D               	movwf	29	;volatile
  6026     0314                     i1l1918:
  6027                           
  6028                           ;mcc_generated_files/memory.c: 128:         if(i == (32 -1))
  6029     0314  301F               	movlw	31
  6030     0315  067C               	xorwf	i1FLASH_WriteBlock@i,w
  6031     0316  1D03               	btfss	3,2
  6032     0317  2B19               	goto	u49_21
  6033     0318  2B1A               	goto	u49_20
  6034     0319                     u49_21:
  6035     0319  2B1B               	goto	i1l1922
  6036     031A                     u49_20:
  6037     031A                     i1l1920:
  6038                           
  6039                           ;mcc_generated_files/memory.c: 129:         {;mcc_generated_files/memory.c: 131:        
      +                               NVMCON1bits.LWLO = 0;
  6040     031A  129E               	bcf	30,5	;volsfr
  6041     031B                     i1l1922:
  6042                           
  6043                           ;mcc_generated_files/memory.c: 134:         NVMCON2 = 0x55;
  6044     031B  3055               	movlw	85
  6045     031C  009F               	movwf	31	;volsfr
  6046                           
  6047                           ;mcc_generated_files/memory.c: 135:         NVMCON2 = 0xAA;
  6048     031D  30AA               	movlw	170
  6049     031E  009F               	movwf	31	;volsfr
  6050     031F                     i1l1924:
  6051                           
  6052                           ;mcc_generated_files/memory.c: 136:         NVMCON1bits.WR = 1;
  6053     031F  149E               	bsf	30,1	;volsfr
  6054     0320                     i1l1926:
  6055                           
  6056                           ;mcc_generated_files/memory.c: 137:         __nop();
  6057     0320  0000               	nop
  6058     0321                     i1l1928:
  6059                           
  6060                           ;mcc_generated_files/memory.c: 138:         __nop();
  6061     0321  0000               	nop
  6062                           
  6063                           ;mcc_generated_files/memory.c: 140:      writeAddr++;
  6064     0322  3001               	movlw	1
  6065     0323  07F3               	addwf	i1FLASH_WriteBlock@writeAddr,f
  6066     0324  3000               	movlw	0
  6067     0325  3DF4               	addwfc	i1FLASH_WriteBlock@writeAddr+1,f
  6068     0326                     i1l1930:
  6069                           
  6070                           ;mcc_generated_files/memory.c: 141:     }
  6071     0326  3001               	movlw	1
  6072     0327  00F6               	movwf	??i1_FLASH_WriteBlock
  6073     0328  0876               	movf	??i1_FLASH_WriteBlock,w
  6074     0329  07FC               	addwf	i1FLASH_WriteBlock@i,f
  6075     032A                     i1l1932:
  6076     032A  3020               	movlw	32
  6077     032B  027C               	subwf	i1FLASH_WriteBlock@i,w
  6078     032C  1C03               	skipc
  6079     032D  2B2F               	goto	u50_21
  6080     032E  2B30               	goto	u50_20
  6081     032F                     u50_21:
  6082     032F  2AFB               	goto	i1l1910
  6083     0330                     u50_20:
  6084     0330                     i1l542:
  6085                           
  6086                           ;mcc_generated_files/memory.c: 143:     NVMCON1bits.WREN = 0;
  6087     0330  0150               	movlb	16	; select bank16
  6088     0331  111E               	bcf	30,2	;volsfr
  6089     0332                     i1l1934:
  6090                           
  6091                           ;mcc_generated_files/memory.c: 144:     INTCONbits.GIE = GIEBitValue;
  6092     0332  0C7B               	rrf	i1FLASH_WriteBlock@GIEBitValue,w
  6093     0333  1C03               	skipc
  6094     0334  138B               	bcf	11,7	;volatile
  6095     0335  1803               	skipnc
  6096     0336  178B               	bsf	11,7	;volatile
  6097     0337                     i1l540:
  6098     0337  0008               	return
  6099     0338                     __end_ofi1_FLASH_WriteBlock:
  6100                           
  6101                           	psect	text40
  6102     0509                     __ptext40:	
  6103 ;; *************** function i1_FLASH_EraseBlock *****************
  6104 ;; Defined at:
  6105 ;;		line 149 in file "mcc_generated_files/memory.c"
  6106 ;; Parameters:    Size  Location     Type
  6107 ;;  startAddr       2    0[COMMON] unsigned short 
  6108 ;; Auto vars:     Size  Location     Type
  6109 ;;  GIEBitValue     1    2[COMMON] unsigned char 
  6110 ;; Return value:  Size  Location     Type
  6111 ;;                  1    wreg      void 
  6112 ;; Registers used:
  6113 ;;		wreg, status,2, status,0
  6114 ;; Tracked objects:
  6115 ;;		On entry : 0/0
  6116 ;;		On exit  : 0/0
  6117 ;;		Unchanged: 0/0
  6118 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6119 ;;      Params:         2       0       0       0
  6120 ;;      Locals:         1       0       0       0
  6121 ;;      Temps:          0       0       0       0
  6122 ;;      Totals:         3       0       0       0
  6123 ;;Total ram usage:        3 bytes
  6124 ;; Hardware stack levels used: 1
  6125 ;; This function calls:
  6126 ;;		Nothing
  6127 ;; This function is called by:
  6128 ;;		i1_FLASH_WriteBlock
  6129 ;; This function uses a non-reentrant model
  6130 ;;
  6131                           
  6132     0509                     i1_FLASH_EraseBlock:	
  6133                           ;psect for function i1_FLASH_EraseBlock
  6134                           
  6135     0509                     i1l1842:	
  6136                           ;incstack = 0
  6137                           ; Regs used in i1_FLASH_EraseBlock: [wreg+status,2+status,0]
  6138                           
  6139                           
  6140                           ;mcc_generated_files/memory.c: 149: void FLASH_EraseBlock(uint16_t startAddr);mcc_genera
      +                          ted_files/memory.c: 150: {;mcc_generated_files/memory.c: 151:     uint8_t GIEBitValue = 
      +                          INTCONbits.GIE;
  6141     0509  3000               	movlw	0
  6142     050A  1B8B               	btfsc	11,7	;volatile
  6143     050B  3001               	movlw	1
  6144     050C  00F2               	movwf	i1FLASH_EraseBlock@GIEBitValue
  6145     050D                     i1l1844:
  6146                           
  6147                           ;mcc_generated_files/memory.c: 154:     INTCONbits.GIE = 0;
  6148     050D  138B               	bcf	11,7	;volatile
  6149     050E                     i1l1846:
  6150                           
  6151                           ;mcc_generated_files/memory.c: 156:     NVMADRL = (startAddr & 0xFF);
  6152     050E  0870               	movf	i1FLASH_EraseBlock@startAddr,w
  6153     050F  0150               	movlb	16	; select bank16
  6154     0510  009A               	movwf	26	;volatile
  6155     0511                     i1l1848:
  6156                           
  6157                           ;mcc_generated_files/memory.c: 158:     NVMADRH = ((startAddr & 0xFF00) >> 8);
  6158     0511  0871               	movf	i1FLASH_EraseBlock@startAddr+1,w
  6159     0512  009B               	movwf	27	;volatile
  6160     0513                     i1l1850:
  6161                           
  6162                           ;mcc_generated_files/memory.c: 161:     NVMCON1bits.NVMREGS = 0;
  6163     0513  131E               	bcf	30,6	;volsfr
  6164     0514                     i1l1852:
  6165                           
  6166                           ;mcc_generated_files/memory.c: 162:     NVMCON1bits.FREE = 1;
  6167     0514  161E               	bsf	30,4	;volsfr
  6168     0515                     i1l1854:
  6169                           
  6170                           ;mcc_generated_files/memory.c: 163:     NVMCON1bits.WREN = 1;
  6171     0515  151E               	bsf	30,2	;volsfr
  6172                           
  6173                           ;mcc_generated_files/memory.c: 166:     NVMCON2 = 0x55;
  6174     0516  3055               	movlw	85
  6175     0517  009F               	movwf	31	;volsfr
  6176                           
  6177                           ;mcc_generated_files/memory.c: 167:     NVMCON2 = 0xAA;
  6178     0518  30AA               	movlw	170
  6179     0519  009F               	movwf	31	;volsfr
  6180     051A                     i1l1856:
  6181                           
  6182                           ;mcc_generated_files/memory.c: 168:     NVMCON1bits.WR = 1;
  6183     051A  149E               	bsf	30,1	;volsfr
  6184     051B                     i1l1858:
  6185                           
  6186                           ;mcc_generated_files/memory.c: 169:     __nop();
  6187     051B  0000               	nop
  6188     051C                     i1l1860:
  6189                           
  6190                           ;mcc_generated_files/memory.c: 170:     __nop();
  6191     051C  0000               	nop
  6192     051D                     i1l1862:
  6193                           
  6194                           ;mcc_generated_files/memory.c: 172:     NVMCON1bits.WREN = 0;
  6195     051D  0150               	movlb	16	; select bank16
  6196     051E  111E               	bcf	30,2	;volsfr
  6197     051F                     i1l1864:
  6198                           
  6199                           ;mcc_generated_files/memory.c: 173:     INTCONbits.GIE = GIEBitValue;
  6200     051F  0C72               	rrf	i1FLASH_EraseBlock@GIEBitValue,w
  6201     0520  1C03               	skipc
  6202     0521  138B               	bcf	11,7	;volatile
  6203     0522  1803               	skipnc
  6204     0523  178B               	bsf	11,7	;volatile
  6205     0524                     i1l546:
  6206     0524  0008               	return
  6207     0525                     __end_ofi1_FLASH_EraseBlock:
  6208                           
  6209                           	psect	text41
  6210     0540                     __ptext41:	
  6211 ;; *************** function i1_FLASH_ReadWord *****************
  6212 ;; Defined at:
  6213 ;;		line 58 in file "mcc_generated_files/memory.c"
  6214 ;; Parameters:    Size  Location     Type
  6215 ;;  flashAddr       2    0[COMMON] unsigned short 
  6216 ;; Auto vars:     Size  Location     Type
  6217 ;;  GIEBitValue     1    2[COMMON] unsigned char 
  6218 ;; Return value:  Size  Location     Type
  6219 ;;                  2    0[COMMON] unsigned short 
  6220 ;; Registers used:
  6221 ;;		wreg, status,2, status,0
  6222 ;; Tracked objects:
  6223 ;;		On entry : 0/0
  6224 ;;		On exit  : 0/0
  6225 ;;		Unchanged: 0/0
  6226 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6227 ;;      Params:         2       0       0       0
  6228 ;;      Locals:         1       0       0       0
  6229 ;;      Temps:          0       0       0       0
  6230 ;;      Totals:         3       0       0       0
  6231 ;;Total ram usage:        3 bytes
  6232 ;; Hardware stack levels used: 1
  6233 ;; This function calls:
  6234 ;;		Nothing
  6235 ;; This function is called by:
  6236 ;;		i1_FLASH_WriteWord
  6237 ;; This function uses a non-reentrant model
  6238 ;;
  6239                           
  6240     0540                     i1_FLASH_ReadWord:	
  6241                           ;psect for function i1_FLASH_ReadWord
  6242                           
  6243     0540                     i1l1866:	
  6244                           ;incstack = 0
  6245                           ; Regs used in i1_FLASH_ReadWord: [wreg+status,2+status,0]
  6246                           
  6247                           
  6248                           ;mcc_generated_files/memory.c: 58: uint16_t FLASH_ReadWord(uint16_t flashAddr);mcc_gener
      +                          ated_files/memory.c: 59: {;mcc_generated_files/memory.c: 60:     uint8_t GIEBitValue = I
      +                          NTCONbits.GIE;
  6249     0540  3000               	movlw	0
  6250     0541  1B8B               	btfsc	11,7	;volatile
  6251     0542  3001               	movlw	1
  6252     0543  00F2               	movwf	i1FLASH_ReadWord@GIEBitValue
  6253     0544                     i1l1868:
  6254                           
  6255                           ;mcc_generated_files/memory.c: 62:     INTCONbits.GIE = 0;
  6256     0544  138B               	bcf	11,7	;volatile
  6257     0545                     i1l1870:
  6258                           
  6259                           ;mcc_generated_files/memory.c: 63:     NVMADRL = (flashAddr & 0x00FF);
  6260     0545  0870               	movf	i1FLASH_ReadWord@flashAddr,w
  6261     0546  0150               	movlb	16	; select bank16
  6262     0547  009A               	movwf	26	;volatile
  6263     0548                     i1l1872:
  6264                           
  6265                           ;mcc_generated_files/memory.c: 64:     NVMADRH = ((flashAddr & 0xFF00) >> 8);
  6266     0548  0871               	movf	i1FLASH_ReadWord@flashAddr+1,w
  6267     0549  009B               	movwf	27	;volatile
  6268     054A                     i1l1874:
  6269                           
  6270                           ;mcc_generated_files/memory.c: 66:     NVMCON1bits.NVMREGS = 0;
  6271     054A  131E               	bcf	30,6	;volsfr
  6272     054B                     i1l1876:
  6273                           
  6274                           ;mcc_generated_files/memory.c: 67:     NVMCON1bits.RD = 1;
  6275     054B  141E               	bsf	30,0	;volsfr
  6276     054C                     i1l1878:
  6277                           
  6278                           ;mcc_generated_files/memory.c: 68:     __nop();
  6279     054C  0000               	nop
  6280     054D                     i1l1880:
  6281                           
  6282                           ;mcc_generated_files/memory.c: 69:     __nop();
  6283     054D  0000               	nop
  6284     054E                     i1l1882:
  6285                           
  6286                           ;mcc_generated_files/memory.c: 70:     INTCONbits.GIE = GIEBitValue;
  6287     054E  0C72               	rrf	i1FLASH_ReadWord@GIEBitValue,w
  6288     054F  1C03               	skipc
  6289     0550  138B               	bcf	11,7	;volatile
  6290     0551  1803               	skipnc
  6291     0552  178B               	bsf	11,7	;volatile
  6292     0553                     i1l1884:
  6293                           
  6294                           ;mcc_generated_files/memory.c: 72:     return ((uint16_t)((NVMDATH << 8) | NVMDATL));
  6295     0553  0150               	movlb	16	; select bank16
  6296     0554  081D               	movf	29,w	;volatile
  6297     0555  00F1               	movwf	?i1_FLASH_ReadWord+1
  6298     0556  081C               	movf	28,w	;volatile
  6299     0557  00F0               	movwf	?i1_FLASH_ReadWord
  6300     0558                     i1l531:
  6301     0558  0008               	return
  6302     0559                     __end_ofi1_FLASH_ReadWord:
  6303                           
  6304                           	psect	text42
  6305     0525                     __ptext42:	
  6306 ;; *************** function _I2C1_SlaveDefRdInterruptHandler *****************
  6307 ;; Defined at:
  6308 ;;		line 259 in file "mcc_generated_files/i2c1_slave.c"
  6309 ;; Parameters:    Size  Location     Type
  6310 ;;		None
  6311 ;; Auto vars:     Size  Location     Type
  6312 ;;		None
  6313 ;; Return value:  Size  Location     Type
  6314 ;;                  1    wreg      void 
  6315 ;; Registers used:
  6316 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6317 ;; Tracked objects:
  6318 ;;		On entry : 0/0
  6319 ;;		On exit  : 0/0
  6320 ;;		Unchanged: 0/0
  6321 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6322 ;;      Params:         0       0       0       0
  6323 ;;      Locals:         0       0       0       0
  6324 ;;      Temps:          1       0       0       0
  6325 ;;      Totals:         1       0       0       0
  6326 ;;Total ram usage:        1 bytes
  6327 ;; Hardware stack levels used: 1
  6328 ;; Hardware stack levels required when called: 1
  6329 ;; This function calls:
  6330 ;;		_I2C1_SlaveGetRxData
  6331 ;; This function is called by:
  6332 ;;		_I2C1_Open
  6333 ;;		_I2C1_SlaveRdCallBack
  6334 ;; This function uses a non-reentrant model
  6335 ;;
  6336                           
  6337     0525                     _I2C1_SlaveDefRdInterruptHandler:	
  6338                           ;psect for function _I2C1_SlaveDefRdInterruptHandler
  6339                           
  6340     0525                     i1l2022:	
  6341                           ;incstack = 0
  6342                           ; Regs used in _I2C1_SlaveDefRdInterruptHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pcl
      +                          ath+cstack]
  6343                           
  6344                           
  6345                           ;mcc_generated_files/i2c1_slave.c: 261:     i2c1RdData = I2C1_SlaveGetRxData();
  6346     0525  3186  2674  3185   	fcall	_I2C1_SlaveGetRxData
  6347     0528  0140               	movlb	0	; select bank0
  6348     0529  00D6               	movwf	_i2c1RdData	;volatile
  6349     052A                     i1l2024:
  6350                           
  6351                           ;mcc_generated_files/i2c1_slave.c: 263:     if(i2cReadCnt < 5)
  6352     052A  3005               	movlw	5
  6353     052B  0258               	subwf	_i2cReadCnt@i2c1_slave$F753,w	;volatile
  6354     052C  1803               	skipnc
  6355     052D  2D2F               	goto	u54_21
  6356     052E  2D30               	goto	u54_20
  6357     052F                     u54_21:
  6358     052F  2D37               	goto	i1l2028
  6359     0530                     u54_20:
  6360     0530                     i1l2026:
  6361                           
  6362                           ;mcc_generated_files/i2c1_slave.c: 264:     {;mcc_generated_files/i2c1_slave.c: 265:    
      +                               i2cDataRead[i2cReadCnt] = i2c1RdData;
  6363     0530  0858               	movf	_i2cReadCnt@i2c1_slave$F753,w
  6364     0531  3E41               	addlw	(low (_i2cDataRead| 0))& (0+255)
  6365     0532  0086               	movwf	6
  6366     0533  0187               	clrf	7
  6367     0534  0856               	movf	_i2c1RdData,w	;volatile
  6368     0535  0081               	movwf	1
  6369                           
  6370                           ;mcc_generated_files/i2c1_slave.c: 266:     }
  6371     0536  2D3A               	goto	i1l2030
  6372     0537                     i1l2028:
  6373                           
  6374                           ;mcc_generated_files/i2c1_slave.c: 268:     {;mcc_generated_files/i2c1_slave.c: 269:    
      +                               I2C1_SlaveGetRxData();
  6375     0537  3186  2674  3185   	fcall	_I2C1_SlaveGetRxData
  6376     053A                     i1l2030:
  6377                           
  6378                           ;mcc_generated_files/i2c1_slave.c: 272:     i2cReadCnt++;
  6379     053A  3001               	movlw	1
  6380     053B  00F0               	movwf	??_I2C1_SlaveDefRdInterruptHandler
  6381     053C  0870               	movf	??_I2C1_SlaveDefRdInterruptHandler,w
  6382     053D  0140               	movlb	0	; select bank0
  6383     053E  07D8               	addwf	_i2cReadCnt@i2c1_slave$F753,f	;volatile
  6384     053F                     i1l337:
  6385     053F  0008               	return
  6386     0540                     __end_of_I2C1_SlaveDefRdInterruptHandler:
  6387                           
  6388                           	psect	text43
  6389     05F9                     __ptext43:	
  6390 ;; *************** function _I2C1_SlaveIsTxBufEmpty *****************
  6391 ;; Defined at:
  6392 ;;		line 414 in file "mcc_generated_files/i2c1_slave.c"
  6393 ;; Parameters:    Size  Location     Type
  6394 ;;		None
  6395 ;; Auto vars:     Size  Location     Type
  6396 ;;		None
  6397 ;; Return value:  Size  Location     Type
  6398 ;;                  1    wreg      _Bool 
  6399 ;; Registers used:
  6400 ;;		wreg, status,0
  6401 ;; Tracked objects:
  6402 ;;		On entry : 0/0
  6403 ;;		On exit  : 0/0
  6404 ;;		Unchanged: 0/0
  6405 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6406 ;;      Params:         0       0       0       0
  6407 ;;      Locals:         0       0       0       0
  6408 ;;      Temps:          0       0       0       0
  6409 ;;      Totals:         0       0       0       0
  6410 ;;Total ram usage:        0 bytes
  6411 ;; Hardware stack levels used: 1
  6412 ;; This function calls:
  6413 ;;		Nothing
  6414 ;; This function is called by:
  6415 ;;		_I2C1_Isr
  6416 ;; This function uses a non-reentrant model
  6417 ;;
  6418                           
  6419     05F9                     _I2C1_SlaveIsTxBufEmpty:	
  6420                           ;psect for function _I2C1_SlaveIsTxBufEmpty
  6421                           
  6422     05F9                     i1l2192:	
  6423                           ;incstack = 0
  6424                           ; Regs used in _I2C1_SlaveIsTxBufEmpty: [wreg+status,0]
  6425                           
  6426                           
  6427                           ;mcc_generated_files/i2c1_slave.c: 416:     return !SSP1STATbits.BF;
  6428     05F9  1003               	clrc
  6429     05FA  0143               	movlb	3	; select bank3
  6430     05FB  1C0F               	btfss	15,0	;volatile
  6431     05FC  1403               	setc
  6432     05FD  3000               	movlw	0
  6433     05FE  3D09               	addwfc	9,w
  6434     05FF                     i1l417:
  6435     05FF  0008               	return
  6436     0600                     __end_of_I2C1_SlaveIsTxBufEmpty:
  6437                           
  6438                           	psect	text44
  6439     0664                     __ptext44:	
  6440 ;; *************** function _I2C1_SlaveIsRxBufFull *****************
  6441 ;; Defined at:
  6442 ;;		line 419 in file "mcc_generated_files/i2c1_slave.c"
  6443 ;; Parameters:    Size  Location     Type
  6444 ;;		None
  6445 ;; Auto vars:     Size  Location     Type
  6446 ;;		None
  6447 ;; Return value:  Size  Location     Type
  6448 ;;                  1    wreg      _Bool 
  6449 ;; Registers used:
  6450 ;;		wreg, status,2, status,0
  6451 ;; Tracked objects:
  6452 ;;		On entry : 0/0
  6453 ;;		On exit  : 0/0
  6454 ;;		Unchanged: 0/0
  6455 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6456 ;;      Params:         0       0       0       0
  6457 ;;      Locals:         0       0       0       0
  6458 ;;      Temps:          0       0       0       0
  6459 ;;      Totals:         0       0       0       0
  6460 ;;Total ram usage:        0 bytes
  6461 ;; Hardware stack levels used: 1
  6462 ;; This function calls:
  6463 ;;		Nothing
  6464 ;; This function is called by:
  6465 ;;		_I2C1_Isr
  6466 ;; This function uses a non-reentrant model
  6467 ;;
  6468                           
  6469     0664                     _I2C1_SlaveIsRxBufFull:	
  6470                           ;psect for function _I2C1_SlaveIsRxBufFull
  6471                           
  6472     0664                     i1l2200:	
  6473                           ;incstack = 0
  6474                           ; Regs used in _I2C1_SlaveIsRxBufFull: [wreg+status,2+status,0]
  6475                           
  6476                           
  6477                           ;mcc_generated_files/i2c1_slave.c: 421:     return SSP1STATbits.BF;
  6478     0664  0143               	movlb	3	; select bank3
  6479     0665  080F               	movf	15,w	;volatile
  6480     0666  3901               	andlw	1
  6481     0667                     i1l420:
  6482     0667  0008               	return
  6483     0668                     __end_of_I2C1_SlaveIsRxBufFull:
  6484                           
  6485                           	psect	text45
  6486     065B                     __ptext45:	
  6487 ;; *************** function _I2C1_SlaveIsRead *****************
  6488 ;; Defined at:
  6489 ;;		line 384 in file "mcc_generated_files/i2c1_slave.c"
  6490 ;; Parameters:    Size  Location     Type
  6491 ;;		None
  6492 ;; Auto vars:     Size  Location     Type
  6493 ;;		None
  6494 ;; Return value:  Size  Location     Type
  6495 ;;                  1    wreg      _Bool 
  6496 ;; Registers used:
  6497 ;;		wreg, status,2, status,0
  6498 ;; Tracked objects:
  6499 ;;		On entry : 0/0
  6500 ;;		On exit  : 0/0
  6501 ;;		Unchanged: 0/0
  6502 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6503 ;;      Params:         0       0       0       0
  6504 ;;      Locals:         0       0       0       0
  6505 ;;      Temps:          0       0       0       0
  6506 ;;      Totals:         0       0       0       0
  6507 ;;Total ram usage:        0 bytes
  6508 ;; Hardware stack levels used: 1
  6509 ;; This function calls:
  6510 ;;		Nothing
  6511 ;; This function is called by:
  6512 ;;		_I2C1_Isr
  6513 ;;		_I2C1_IsRead
  6514 ;; This function uses a non-reentrant model
  6515 ;;
  6516                           
  6517     065B                     _I2C1_SlaveIsRead:	
  6518                           ;psect for function _I2C1_SlaveIsRead
  6519                           
  6520     065B                     i1l2178:	
  6521                           ;incstack = 0
  6522                           ; Regs used in _I2C1_SlaveIsRead: [wreg+status,2+status,0]
  6523                           
  6524                           
  6525                           ;mcc_generated_files/i2c1_slave.c: 386:     return (SSP1STATbits.R_nW);
  6526     065B  0143               	movlb	3	; select bank3
  6527     065C  0C0F               	rrf	15,w	;volatile
  6528     065D  0C89               	rrf	9,f
  6529     065E  3901               	andlw	1
  6530     065F                     i1l399:
  6531     065F  0008               	return
  6532     0660                     __end_of_I2C1_SlaveIsRead:
  6533                           
  6534                           	psect	text46
  6535     0600                     __ptext46:	
  6536 ;; *************** function _I2C1_SlaveIsAddr *****************
  6537 ;; Defined at:
  6538 ;;		line 379 in file "mcc_generated_files/i2c1_slave.c"
  6539 ;; Parameters:    Size  Location     Type
  6540 ;;		None
  6541 ;; Auto vars:     Size  Location     Type
  6542 ;;		None
  6543 ;; Return value:  Size  Location     Type
  6544 ;;                  1    wreg      _Bool 
  6545 ;; Registers used:
  6546 ;;		wreg, status,0
  6547 ;; Tracked objects:
  6548 ;;		On entry : 0/0
  6549 ;;		On exit  : 0/0
  6550 ;;		Unchanged: 0/0
  6551 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6552 ;;      Params:         0       0       0       0
  6553 ;;      Locals:         0       0       0       0
  6554 ;;      Temps:          0       0       0       0
  6555 ;;      Totals:         0       0       0       0
  6556 ;;Total ram usage:        0 bytes
  6557 ;; Hardware stack levels used: 1
  6558 ;; This function calls:
  6559 ;;		Nothing
  6560 ;; This function is called by:
  6561 ;;		_I2C1_Isr
  6562 ;; This function uses a non-reentrant model
  6563 ;;
  6564                           
  6565     0600                     _I2C1_SlaveIsAddr:	
  6566                           ;psect for function _I2C1_SlaveIsAddr
  6567                           
  6568     0600                     i1l2184:	
  6569                           ;incstack = 0
  6570                           ; Regs used in _I2C1_SlaveIsAddr: [wreg+status,0]
  6571                           
  6572                           
  6573                           ;mcc_generated_files/i2c1_slave.c: 381:     return !(SSP1STATbits.D_nA);
  6574     0600  1003               	clrc
  6575     0601  0143               	movlb	3	; select bank3
  6576     0602  1E8F               	btfss	15,5	;volatile
  6577     0603  1403               	setc
  6578     0604  3000               	movlw	0
  6579     0605  3D09               	addwfc	9,w
  6580     0606                     i1l396:
  6581     0606  0008               	return
  6582     0607                     __end_of_I2C1_SlaveIsAddr:
  6583                           
  6584                           	psect	text47
  6585     0671                     __ptext47:	
  6586 ;; *************** function _I2C1_SlaveClearIrq *****************
  6587 ;; Defined at:
  6588 ;;		line 389 in file "mcc_generated_files/i2c1_slave.c"
  6589 ;; Parameters:    Size  Location     Type
  6590 ;;		None
  6591 ;; Auto vars:     Size  Location     Type
  6592 ;;		None
  6593 ;; Return value:  Size  Location     Type
  6594 ;;                  1    wreg      void 
  6595 ;; Registers used:
  6596 ;;		None
  6597 ;; Tracked objects:
  6598 ;;		On entry : 0/0
  6599 ;;		On exit  : 0/0
  6600 ;;		Unchanged: 0/0
  6601 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6602 ;;      Params:         0       0       0       0
  6603 ;;      Locals:         0       0       0       0
  6604 ;;      Temps:          0       0       0       0
  6605 ;;      Totals:         0       0       0       0
  6606 ;;Total ram usage:        0 bytes
  6607 ;; Hardware stack levels used: 1
  6608 ;; This function calls:
  6609 ;;		Nothing
  6610 ;; This function is called by:
  6611 ;;		_I2C1_Isr
  6612 ;; This function uses a non-reentrant model
  6613 ;;
  6614                           
  6615     0671                     _I2C1_SlaveClearIrq:	
  6616                           ;psect for function _I2C1_SlaveClearIrq
  6617                           
  6618     0671                     i1l2182:	
  6619                           ;incstack = 0
  6620                           ; Regs used in _I2C1_SlaveClearIrq: []
  6621                           
  6622                           
  6623                           ;mcc_generated_files/i2c1_slave.c: 391:     PIR1bits.SSP1IF = 0;
  6624     0671  014E               	movlb	14	; select bank14
  6625     0672  108D               	bcf	13,1	;volatile
  6626     0673                     i1l402:
  6627     0673  0008               	return
  6628     0674                     __end_of_I2C1_SlaveClearIrq:
  6629                           
  6630                           	psect	text48
  6631     05E0                     __ptext48:	
  6632 ;; *************** function _I2C1_SlaveAddrCallBack *****************
  6633 ;; Defined at:
  6634 ;;		line 298 in file "mcc_generated_files/i2c1_slave.c"
  6635 ;; Parameters:    Size  Location     Type
  6636 ;;		None
  6637 ;; Auto vars:     Size  Location     Type
  6638 ;;		None
  6639 ;; Return value:  Size  Location     Type
  6640 ;;                  1    wreg      void 
  6641 ;; Registers used:
  6642 ;;		wreg, status,2, status,0, pclath, cstack
  6643 ;; Tracked objects:
  6644 ;;		On entry : 0/0
  6645 ;;		On exit  : 0/0
  6646 ;;		Unchanged: 0/0
  6647 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6648 ;;      Params:         0       0       0       0
  6649 ;;      Locals:         0       0       0       0
  6650 ;;      Temps:          0       0       0       0
  6651 ;;      Totals:         0       0       0       0
  6652 ;;Total ram usage:        0 bytes
  6653 ;; Hardware stack levels used: 1
  6654 ;; Hardware stack levels required when called: 2
  6655 ;; This function calls:
  6656 ;;		NULL
  6657 ;;		_I2C1_SlaveDefAddrInterruptHandler
  6658 ;; This function is called by:
  6659 ;;		_I2C1_Isr
  6660 ;; This function uses a non-reentrant model
  6661 ;;
  6662                           
  6663     05E0                     _I2C1_SlaveAddrCallBack:	
  6664                           ;psect for function _I2C1_SlaveAddrCallBack
  6665                           
  6666     05E0                     i1l2188:	
  6667                           ;incstack = 0
  6668                           ; Regs used in _I2C1_SlaveAddrCallBack: [wreg+status,2+status,0+pclath+cstack]
  6669                           
  6670                           
  6671                           ;mcc_generated_files/i2c1_slave.c: 300:     if (I2C1_SlaveAddrInterruptHandler) {
  6672     05E0  0140               	movlb	0	; select bank0
  6673     05E1  084A               	movf	_I2C1_SlaveAddrInterruptHandler,w
  6674     05E2  044B               	iorwf	_I2C1_SlaveAddrInterruptHandler+1,w
  6675     05E3  1903               	btfsc	3,2
  6676     05E4  2DE6               	goto	u60_21
  6677     05E5  2DE7               	goto	u60_20
  6678     05E6                     u60_21:
  6679     05E6  2DEC               	goto	i1l354
  6680     05E7                     u60_20:
  6681     05E7                     i1l2190:
  6682                           
  6683                           ;mcc_generated_files/i2c1_slave.c: 301:         I2C1_SlaveAddrInterruptHandler();
  6684     05E7  084B               	movf	_I2C1_SlaveAddrInterruptHandler+1,w
  6685     05E8  008A               	movwf	10
  6686     05E9  084A               	movf	_I2C1_SlaveAddrInterruptHandler,w
  6687     05EA  000A               	callw
  6688     05EB  3185               	pagesel	$
  6689     05EC                     i1l354:
  6690     05EC  0008               	return
  6691     05ED                     __end_of_I2C1_SlaveAddrCallBack:
  6692                           
  6693                           	psect	text49
  6694     0607                     __ptext49:	
  6695 ;; *************** function _I2C1_SlaveDefAddrInterruptHandler *****************
  6696 ;; Defined at:
  6697 ;;		line 305 in file "mcc_generated_files/i2c1_slave.c"
  6698 ;; Parameters:    Size  Location     Type
  6699 ;;		None
  6700 ;; Auto vars:     Size  Location     Type
  6701 ;;		None
  6702 ;; Return value:  Size  Location     Type
  6703 ;;                  1    wreg      void 
  6704 ;; Registers used:
  6705 ;;		wreg, status,2, pclath, cstack
  6706 ;; Tracked objects:
  6707 ;;		On entry : 0/0
  6708 ;;		On exit  : 0/0
  6709 ;;		Unchanged: 0/0
  6710 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6711 ;;      Params:         0       0       0       0
  6712 ;;      Locals:         0       0       0       0
  6713 ;;      Temps:          0       0       0       0
  6714 ;;      Totals:         0       0       0       0
  6715 ;;Total ram usage:        0 bytes
  6716 ;; Hardware stack levels used: 1
  6717 ;; Hardware stack levels required when called: 1
  6718 ;; This function calls:
  6719 ;;		_I2C1_SlaveGetRxData
  6720 ;; This function is called by:
  6721 ;;		_I2C1_Open
  6722 ;;		_I2C1_SlaveAddrCallBack
  6723 ;; This function uses a non-reentrant model
  6724 ;;
  6725                           
  6726     0607                     _I2C1_SlaveDefAddrInterruptHandler:	
  6727                           ;psect for function _I2C1_SlaveDefAddrInterruptHandler
  6728                           
  6729     0607                     i1l2034:	
  6730                           ;incstack = 0
  6731                           ; Regs used in _I2C1_SlaveDefAddrInterruptHandler: [wreg+status,2+pclath+cstack]
  6732                           
  6733                           
  6734                           ;mcc_generated_files/i2c1_slave.c: 306:     i2c1SlaveAddr = I2C1_SlaveGetRxData();
  6735     0607  3186  2674  3186   	fcall	_I2C1_SlaveGetRxData
  6736     060A  0140               	movlb	0	; select bank0
  6737     060B  00D5               	movwf	_i2c1SlaveAddr	;volatile
  6738     060C                     i1l2036:
  6739                           
  6740                           ;mcc_generated_files/i2c1_slave.c: 308:     i2cReadCnt = 0;
  6741     060C  01D8               	clrf	_i2cReadCnt@i2c1_slave$F753	;volatile
  6742     060D                     i1l357:
  6743     060D  0008               	return
  6744     060E                     __end_of_I2C1_SlaveDefAddrInterruptHandler:
  6745                           
  6746                           	psect	text50
  6747     0674                     __ptext50:	
  6748 ;; *************** function _I2C1_SlaveGetRxData *****************
  6749 ;; Defined at:
  6750 ;;		line 429 in file "mcc_generated_files/i2c1_slave.c"
  6751 ;; Parameters:    Size  Location     Type
  6752 ;;		None
  6753 ;; Auto vars:     Size  Location     Type
  6754 ;;		None
  6755 ;; Return value:  Size  Location     Type
  6756 ;;                  1    wreg      unsigned char 
  6757 ;; Registers used:
  6758 ;;		wreg
  6759 ;; Tracked objects:
  6760 ;;		On entry : 0/0
  6761 ;;		On exit  : 0/0
  6762 ;;		Unchanged: 0/0
  6763 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6764 ;;      Params:         0       0       0       0
  6765 ;;      Locals:         0       0       0       0
  6766 ;;      Temps:          0       0       0       0
  6767 ;;      Totals:         0       0       0       0
  6768 ;;Total ram usage:        0 bytes
  6769 ;; Hardware stack levels used: 1
  6770 ;; This function calls:
  6771 ;;		Nothing
  6772 ;; This function is called by:
  6773 ;;		_I2C1_SlaveDefRdInterruptHandler
  6774 ;;		_I2C1_SlaveDefAddrInterruptHandler
  6775 ;;		_I2C1_Read
  6776 ;; This function uses a non-reentrant model
  6777 ;;
  6778                           
  6779     0674                     _I2C1_SlaveGetRxData:	
  6780                           ;psect for function _I2C1_SlaveGetRxData
  6781                           
  6782     0674                     i1l1938:	
  6783                           ;incstack = 0
  6784                           ; Regs used in _I2C1_SlaveGetRxData: [wreg]
  6785                           
  6786                           
  6787                           ;mcc_generated_files/i2c1_slave.c: 431:     return SSP1BUF;
  6788     0674  0143               	movlb	3	; select bank3
  6789     0675  080C               	movf	12,w	;volatile
  6790     0676                     i1l426:
  6791     0676  0008               	return
  6792     0677                     __end_of_I2C1_SlaveGetRxData:
  6793     007E                     btemp	set	126	;btemp
  6794     007E                     int$flags	set	126
  6795     007E                     wtemp0	set	126
  6796                           
  6797                           	psect	idloc
  6798                           
  6799                           ;Config register IDLOC0 @ 0x8000
  6800                           ;	unspecified, using default values
  6801     8000                     	org	32768
  6802     8000  3FFF               	dw	16383
  6803                           
  6804                           ;Config register IDLOC1 @ 0x8001
  6805                           ;	unspecified, using default values
  6806     8001                     	org	32769
  6807     8001  3FFF               	dw	16383
  6808                           
  6809                           ;Config register IDLOC2 @ 0x8002
  6810                           ;	unspecified, using default values
  6811     8002                     	org	32770
  6812     8002  3FFF               	dw	16383
  6813                           
  6814                           ;Config register IDLOC3 @ 0x8003
  6815                           ;	unspecified, using default values
  6816     8003                     	org	32771
  6817     8003  3FFF               	dw	16383
  6818                           
  6819                           	psect	config
  6820                           
  6821                           ;Config register CONFIG1 @ 0x8007
  6822                           ;	External Oscillator Mode Selection bits
  6823                           ;	FEXTOSC = OFF, Oscillator not enabled
  6824                           ;	Power-up Default Value for COSC bits
  6825                           ;	RSTOSC = HFINTOSC_32MHZ, HFINTOSC (32 MHz)
  6826                           ;	Clock Out Enable bit
  6827                           ;	CLKOUTEN = OFF, CLKOUT function is disabled; I/O function on RA4
  6828                           ;	VDD Range Analog Calibration Selection bit
  6829                           ;	VDDAR = HI, Internal analog systems are calibrated for operation between VDD = 2.3V - 
      +                          5.5V
  6830     8007                     	org	32775
  6831     8007  3FCD               	dw	16333
  6832                           
  6833                           ;Config register CONFIG2 @ 0x8008
  6834                           ;	Master Clear Enable bit
  6835                           ;	MCLRE = EXTMCLR, If LVP = 0, MCLR pin is MCLR; If LVP = 1, RA3 pin function is MCLR
  6836                           ;	Power-up Timer Selection bits
  6837                           ;	PWRTS = PWRT_OFF, PWRT is disabled
  6838                           ;	WDT Operating Mode bits
  6839                           ;	WDTE = OFF, WDT disabled; SEN is ignored
  6840                           ;	Brown-out Reset Enable bits
  6841                           ;	BOREN = ON, Brown-out Reset Enabled, SBOREN bit is ignored
  6842                           ;	Brown-out Reset Voltage Selection bit
  6843                           ;	BORV = LO, Brown-out Reset Voltage (VBOR) set to 1.9V
  6844                           ;	PPSLOCKED One-Way Set Enable bit
  6845                           ;	PPS1WAY = ON, The PPSLOCKED bit can be set once after an unlocking sequence is execute
      +                          d; once PPSLOCKED is set, all future changes to PPS registers are prevented
  6846                           ;	Stack Overflow/Underflow Reset Enable bit
  6847                           ;	STVREN = ON, Stack Overflow or Underflow will cause a reset
  6848     8008                     	org	32776
  6849     8008  3FE7               	dw	16359
  6850                           
  6851                           ;Config register CONFIG3 @ 0x8009
  6852                           ;	unspecified, using default values
  6853     8009                     	org	32777
  6854     8009  3FFF               	dw	16383
  6855                           
  6856                           ;Config register CONFIG4 @ 0x800A
  6857                           ;	Boot Block Size Selection bits
  6858                           ;	BBSIZE = BB512, 512 words boot block size
  6859                           ;	Boot Block Enable bit
  6860                           ;	BBEN = OFF, Boot Block is disabled
  6861                           ;	SAF Enable bit
  6862                           ;	SAFEN = ON, SAF is enabled
  6863                           ;	Application Block Write Protection bit
  6864                           ;	WRTAPP = OFF, Application Block is not write-protected
  6865                           ;	Boot Block Write Protection bit
  6866                           ;	WRTB = OFF, Boot Block is not write-protected
  6867                           ;	Configuration Registers Write Protection bit
  6868                           ;	WRTC = OFF, Configuration Registers are not write-protected
  6869                           ;	Storage Area Flash (SAF) Write Protection bit
  6870                           ;	WRTSAF = OFF, SAF is not write-protected
  6871                           ;	Low Voltage Programming Enable bit
  6872                           ;	LVP = ON, Low Voltage programming enabled. MCLR/Vpp pin function is MCLR. MCLRE Config
      +                          uration bit is ignored.
  6873     800A                     	org	32778
  6874     800A  3FEF               	dw	16367
  6875                           
  6876                           ;Config register CONFIG5 @ 0x800B
  6877                           ;	User Program Flash Memory Code Protection bit
  6878                           ;	CP = OFF, User Program Flash Memory code protection is disabled
  6879     800B                     	org	32779
  6880     800B  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         94
    Persistent  34
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     33      65
    BANK1            80      9      73
    BANK2            80      0       0

Pointer List with Targets:

    FLASH_WriteBlock@flashWordArray	PTR unsigned short  size(1) Largest target is 64
		 -> ramBuff(BANK1[64]), 

    FLASH_WriteWord@ramBuf	PTR unsigned short  size(1) Largest target is 64
		 -> ramBuff(BANK1[64]), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_DefaultInterruptHandler(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_DefaultInterruptHandler(), NULL(), 

    I2C1_SlaveSetBusColIntHandler@handler	PTR FTN()void  size(2) Largest target is 1
		 -> I2C1_SlaveDefBusColInterruptHandler(), 

    I2C1_SlaveBusColInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), I2C1_SlaveDefBusColInterruptHandler(), 

    I2C1_SlaveSetWrColIntHandler@handler	PTR FTN()void  size(2) Largest target is 1
		 -> I2C1_SlaveDefWrColInterruptHandler(), 

    I2C1_SlaveWrColInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), I2C1_SlaveDefWrColInterruptHandler(), 

    I2C1_SlaveSetAddrIntHandler@handler	PTR FTN()void  size(2) Largest target is 1
		 -> I2C1_SlaveDefAddrInterruptHandler(), 

    I2C1_SlaveAddrInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), I2C1_SlaveDefAddrInterruptHandler(), 

    I2C1_SlaveSetWriteIntHandler@handler	PTR FTN()void  size(2) Largest target is 1
		 -> I2C1_SlaveDefWrInterruptHandler(), 

    I2C1_SlaveWrInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), I2C1_SlaveDefWrInterruptHandler(), 

    I2C1_SlaveSetReadIntHandler@handler	PTR FTN()void  size(2) Largest target is 1
		 -> I2C1_SlaveDefRdInterruptHandler(), 

    I2C1_SlaveRdInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), I2C1_SlaveDefRdInterruptHandler(), 

    I2C1_SlaveSetIsrHandler@handler	PTR FTN()void  size(2) Largest target is 1
		 -> I2C1_Isr(), 

    MSSP1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), I2C1_Isr(), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _TMR0_ISR->_TMR0_DefaultInterruptHandler
    _I2C1_SlaveDefWrInterruptHandler->_I2C1_SlaveSendTxData
    _data_recv_handler->i1_FLASH_WriteWord
    i1_FLASH_WriteWord->i1_FLASH_WriteBlock
    i1_FLASH_WriteBlock->i1_FLASH_EraseBlock

Critical Paths under _main in BANK0

    _memory_initialize->_FLASH_WriteWord
    _FLASH_WriteWord->_FLASH_WriteBlock
    _FLASH_WriteBlock->_FLASH_EraseBlock
    _TMR0_Initialize->_TMR0_SetInterruptHandler
    _I2C1_Open->_I2C1_SlaveSetAddrIntHandler
    _I2C1_Open->_I2C1_SlaveSetBusColIntHandler
    _I2C1_Open->_I2C1_SlaveSetIsrHandler
    _I2C1_Open->_I2C1_SlaveSetReadIntHandler
    _I2C1_Open->_I2C1_SlaveSetWrColIntHandler
    _I2C1_Open->_I2C1_SlaveSetWriteIntHandler

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    _INTERRUPT_InterruptManager->_I2C1_Isr
    _I2C1_SlaveRdCallBack->_data_recv_handler
    _data_recv_handler->i1_FLASH_WriteWord

Critical Paths under _main in BANK1

    _main->_memory_initialize
    _memory_initialize->_FLASH_WriteWord

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0    6545
                                              8 BANK1      1     1      0
                          _I2C1_Open
                  _SYSTEM_Initialize
         _SensorBoardType_validation
                       _error_signal
                 _getSensorBoardType
                  _memory_initialize
 ---------------------------------------------------------------------------------
 (1) _memory_initialize                                    3     3      0    5509
                                              5 BANK1      3     3      0
                     _FLASH_ReadWord
                    _FLASH_WriteWord
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4    1216
                                             15 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) _FLASH_WriteWord                                     10     5      5    3831
                                             28 BANK0      5     0      5
                                              0 BANK1      5     5      0
                     _FLASH_ReadWord
                   _FLASH_WriteBlock
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (3) _FLASH_WriteBlock                                    10     7      3     815
                                             18 BANK0     10     7      3
                   _FLASH_EraseBlock
 ---------------------------------------------------------------------------------
 (4) _FLASH_EraseBlock                                     3     1      2     186
                                             15 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (3) _FLASH_ReadWord                                       3     1      2     276
                                             15 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (1) _getSensorBoardType                                   2     2      0       0
                                             15 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _error_signal                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SensorBoardType_validation                           1     1      0      62
                                             15 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     121
                    _I2C1_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR0_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      0     0      0     121
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR0_SetInterruptHandler                             2     0      2     121
                                             15 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C1_Initialize                                      1     1      0       0
                                             15 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _I2C1_Open                                            0     0      0     788
                _I2C1_SlaveEnableIrq
                     _I2C1_SlaveOpen
        _I2C1_SlaveSetAddrIntHandler
      _I2C1_SlaveSetBusColIntHandler
            _I2C1_SlaveSetIsrHandler
        _I2C1_SlaveSetReadIntHandler
             _I2C1_SlaveSetSlaveAddr
             _I2C1_SlaveSetSlaveMask
       _I2C1_SlaveSetWrColIntHandler
       _I2C1_SlaveSetWriteIntHandler
 ---------------------------------------------------------------------------------
 (2) _I2C1_SlaveSetWriteIntHandler                         2     0      2     121
                                             15 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _I2C1_SlaveSetWrColIntHandler                         2     0      2     121
                                             15 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _I2C1_SlaveSetSlaveMask                               1     1      0      31
                                             15 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _I2C1_SlaveSetSlaveAddr                               1     1      0      31
                                             15 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _I2C1_SlaveSetReadIntHandler                          2     0      2     121
                                             15 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _I2C1_SlaveSetIsrHandler                              2     0      2     121
                                             15 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _I2C1_SlaveSetBusColIntHandler                        2     0      2     121
                                             15 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _I2C1_SlaveSetAddrIntHandler                          2     0      2     121
                                             15 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _I2C1_SlaveOpen                                       1     1      0       0
                                             15 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _I2C1_SlaveEnableIrq                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _INTERRUPT_InterruptManager                           0     0      0    1031
                                NULL *
                           _I2C1_Isr *
                           _TMR0_ISR
 ---------------------------------------------------------------------------------
 (6) _TMR0_ISR                                             0     0      0       0
                                NULL *
       _TMR0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (7) _TMR0_DefaultInterruptHandler                         1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (6) _I2C1_Isr                                             2     2      0    1031
                                             13 BANK0      2     2      0
             _I2C1_SlaveAddrCallBack
                 _I2C1_SlaveClearIrq
                   _I2C1_SlaveIsAddr
                   _I2C1_SlaveIsRead
              _I2C1_SlaveIsRxBufFull
             _I2C1_SlaveIsTxBufEmpty
               _I2C1_SlaveRdCallBack
             _I2C1_SlaveReleaseClock
               _I2C1_SlaveWrCallBack
 ---------------------------------------------------------------------------------
 (7) _I2C1_SlaveWrCallBack                                 0     0      0      22
                                NULL *
    _I2C1_SlaveDefWrInterruptHandler *
 ---------------------------------------------------------------------------------
 (8) _I2C1_SlaveDefWrInterruptHandler                      0     0      0      22
               _I2C1_SlaveSendTxData
 ---------------------------------------------------------------------------------
 (9) _I2C1_SlaveSendTxData                                 1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (7) _I2C1_SlaveReleaseClock                               0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C1_SlaveRdCallBack                                 0     0      0    1009
                                NULL *
    _I2C1_SlaveDefRdInterruptHandler *
                  _data_recv_handler
 ---------------------------------------------------------------------------------
 (8) _data_recv_handler                                    4     4      0    1009
                                              9 BANK0      4     4      0
                  i1_FLASH_WriteWord
 ---------------------------------------------------------------------------------
 (9) i1_FLASH_WriteWord                                   10     5      5     919
                                             13 COMMON     1     1      0
                                              0 BANK0      9     4      5
                   i1_FLASH_ReadWord
                 i1_FLASH_WriteBlock
 ---------------------------------------------------------------------------------
 (10) i1_FLASH_WriteBlock                                 10     7      3     458
                                              3 COMMON    10     7      3
                 i1_FLASH_EraseBlock
 ---------------------------------------------------------------------------------
 (11) i1_FLASH_EraseBlock                                  3     1      2      93
                                              0 COMMON     3     1      2
 ---------------------------------------------------------------------------------
 (10) i1_FLASH_ReadWord                                    3     1      2      93
                                              0 COMMON     3     1      2
 ---------------------------------------------------------------------------------
 (8) _I2C1_SlaveDefRdInterruptHandler                      1     1      0       0
                                              0 COMMON     1     1      0
                _I2C1_SlaveGetRxData
 ---------------------------------------------------------------------------------
 (7) _I2C1_SlaveIsTxBufEmpty                               0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C1_SlaveIsRxBufFull                                0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C1_SlaveIsRead                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C1_SlaveIsAddr                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C1_SlaveClearIrq                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C1_SlaveAddrCallBack                               0     0      0       0
                                NULL *
  _I2C1_SlaveDefAddrInterruptHandler *
 ---------------------------------------------------------------------------------
 (8) _I2C1_SlaveDefAddrInterruptHandler                    0     0      0       0
                _I2C1_SlaveGetRxData
 ---------------------------------------------------------------------------------
 (9) _I2C1_SlaveGetRxData                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (7) NULL(Fake)                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C1_Open
     _I2C1_SlaveEnableIrq
     _I2C1_SlaveOpen
     _I2C1_SlaveSetAddrIntHandler
     _I2C1_SlaveSetBusColIntHandler
     _I2C1_SlaveSetIsrHandler
     _I2C1_SlaveSetReadIntHandler
     _I2C1_SlaveSetSlaveAddr
     _I2C1_SlaveSetSlaveMask
     _I2C1_SlaveSetWrColIntHandler
     _I2C1_SlaveSetWriteIntHandler
   _SYSTEM_Initialize
     _I2C1_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
     _WDT_Initialize
   _SensorBoardType_validation
   _error_signal
   _getSensorBoardType
   _memory_initialize
     _FLASH_ReadWord
     _FLASH_WriteWord
       _FLASH_ReadWord
       _FLASH_WriteBlock
         _FLASH_EraseBlock
       ___wmul (ARG)
     ___wmul

 _INTERRUPT_InterruptManager (ROOT)
   NULL(Fake) *
   _I2C1_Isr *
     _I2C1_SlaveAddrCallBack
       NULL(Fake) *
       _I2C1_SlaveDefAddrInterruptHandler *
         _I2C1_SlaveGetRxData
     _I2C1_SlaveClearIrq
     _I2C1_SlaveIsAddr
     _I2C1_SlaveIsRead
     _I2C1_SlaveIsRxBufFull
     _I2C1_SlaveIsTxBufEmpty
     _I2C1_SlaveRdCallBack
       NULL(Fake) *
       _I2C1_SlaveDefRdInterruptHandler *
         _I2C1_SlaveGetRxData
       _data_recv_handler *
         i1_FLASH_WriteWord
           i1_FLASH_ReadWord
           i1_FLASH_WriteBlock
             i1_FLASH_EraseBlock
     _I2C1_SlaveReleaseClock
     _I2C1_SlaveWrCallBack
       NULL(Fake) *
       _I2C1_SlaveDefWrInterruptHandler *
         _I2C1_SlaveSendTxData
   _TMR0_ISR *
     NULL(Fake) *
     _TMR0_DefaultInterruptHandler *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM              F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     21      41       5       81.2%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      9      49       7       91.2%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
ABS                  0      0      98      10        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
DATA                 0      0      98      11        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%
BITSFR32             0      0       0      33        0.0%
SFR32                0      0       0      33        0.0%
BITSFR33             0      0       0      34        0.0%
SFR33                0      0       0      34        0.0%
BITSFR34             0      0       0      35        0.0%
SFR34                0      0       0      35        0.0%
BITSFR35             0      0       0      36        0.0%
SFR35                0      0       0      36        0.0%
BITSFR36             0      0       0      37        0.0%
SFR36                0      0       0      37        0.0%
BITSFR37             0      0       0      38        0.0%
SFR37                0      0       0      38        0.0%
BITSFR38             0      0       0      39        0.0%
SFR38                0      0       0      39        0.0%
BITSFR39             0      0       0      40        0.0%
SFR39                0      0       0      40        0.0%
BITSFR40             0      0       0      41        0.0%
SFR40                0      0       0      41        0.0%
BITSFR41             0      0       0      42        0.0%
SFR41                0      0       0      42        0.0%
BITSFR42             0      0       0      43        0.0%
SFR42                0      0       0      43        0.0%
BITSFR43             0      0       0      44        0.0%
SFR43                0      0       0      44        0.0%
BITSFR44             0      0       0      45        0.0%
SFR44                0      0       0      45        0.0%
BITSFR45             0      0       0      46        0.0%
SFR45                0      0       0      46        0.0%
BITSFR46             0      0       0      47        0.0%
SFR46                0      0       0      47        0.0%
BITSFR47             0      0       0      48        0.0%
SFR47                0      0       0      48        0.0%
BITSFR48             0      0       0      49        0.0%
SFR48                0      0       0      49        0.0%
BITSFR49             0      0       0      50        0.0%
SFR49                0      0       0      50        0.0%
BITSFR50             0      0       0      51        0.0%
SFR50                0      0       0      51        0.0%
BITSFR51             0      0       0      52        0.0%
SFR51                0      0       0      52        0.0%
BITSFR52             0      0       0      53        0.0%
SFR52                0      0       0      53        0.0%
BITSFR53             0      0       0      54        0.0%
SFR53                0      0       0      54        0.0%
BITSFR54             0      0       0      55        0.0%
SFR54                0      0       0      55        0.0%
BITSFR55             0      0       0      56        0.0%
SFR55                0      0       0      56        0.0%
BITSFR56             0      0       0      57        0.0%
SFR56                0      0       0      57        0.0%
BITSFR57             0      0       0      58        0.0%
SFR57                0      0       0      58        0.0%
BITSFR58             0      0       0      59        0.0%
SFR58                0      0       0      59        0.0%
BITSFR59             0      0       0      60        0.0%
SFR59                0      0       0      60        0.0%
BITSFR60             0      0       0      61        0.0%
SFR60                0      0       0      61        0.0%
BITSFR61             0      0       0      62        0.0%
SFR61                0      0       0      62        0.0%
BITSFR62             0      0       0      63        0.0%
SFR62                0      0       0      63        0.0%
BITSFR63             0      0       0      64        0.0%
SFR63                0      0       0      64        0.0%


Microchip Technology PIC Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Tue Apr 25 11:16:08 2023

            i1FLASH_EraseBlock@GIEBitValue 0072                   ??_I2C1_SlaveAddrCallBack 0070  
                                       l60 05D2                                         l38 01FF  
                                       l65 0595                                         l68 0663  
                      ___wmul@multiplicand 0031                                        l107 0487  
                                      l324 0643                                        l340 0625  
                                      l350 064F                                        l327 063D  
                                      l360 062B                                        l281 03C7  
                                      l601 061F                                        l370 0649  
                                      l531 0508                                        l604 066A  
                                      l540 02D8                                        l381 05B5  
                                      l390 0631                                        l278 05F8  
                                      l542 02D0                                        l536 0388  
                                      l720 04B4                                        l393 066D  
                                      l546 04E8                                        l722 04C8  
                                      l650 04A7                                        l387 0637  
                                      l491 0619                                        l539 0283  
                                      l469 0584                                        l649 04A7  
                                      l598 05A5                   __end_of_I2C1_SlaveIsAddr 0607  
                                      u940 0282                                        u941 0281  
                                      u950 02B7                                        u951 02B6  
                                      u960 02D0                                        u961 02CF  
                                      u945 027E                                        u970 036E  
                                      u971 036D                                        u980 05AB  
                                      u981 05AA                                        u990 04B0  
                                      u991 04AF                   __end_of_I2C1_SlaveIsRead 0660  
                                      wreg 0009                          _data_recv_handler 0406  
                         ?_FLASH_WriteWord 003C             FLASH_WriteBlock@flashWordArray 0034  
                       ?_data_recv_handler 0070                                       l2500 02B0  
                                     l2430 04D6                                       l2422 04C9  
                                     l2510 02C0                                       l2502 02B7  
                                     l2600 0638                                       l2440 04DF  
                                     l2432 04D7                                       l2424 04CE  
                                     l2512 02C6                                       l2504 02B9  
                                     l2520 0338                           __end_of_I2C1_Isr 026D  
                                     l2602 064A                                       l2610 0575  
                                     l2450 04EF                                       l2442 04E0  
                                     l2434 04D8                                       l2426 04CF  
                                     l2514 02CA                                       l2506 02BE  
                                     l2530 0363                                       l2522 0342  
                                     l2604 0626                                       l2620 061A  
                                     l2540 0468                                       l2612 0576  
                                     l2460 04F9                                       l2452 04F2  
                                     l2444 04E2                                       l2436 04DD  
                                     l2428 04D2                                       l2516 02D2  
                                     l2508 02BF                                       l2532 0368  
                                     l2606 066B                                       l2622 061C  
                                     l2550 0472                                       l2542 046A  
                                     l2614 0578                                       l2462 04FA  
                                     l2454 04F6                                       l2446 04E9  
                                     l2438 04DE                                       l2470 026D  
                                     l2534 036E                                       l2630 04AC  
                                     l2624 061E                                       l2560 047A  
                                     l2552 0473                                       l2544 046E  
                                     l2616 0579                                       l2608 0570  
                                     l2464 0500                                       l2456 04F7  
                                     l2448 04EE                                       l2480 028B  
                                     l2472 0274                                       l2536 037B  
                                     l2528 0348                                       l2632 04B0  
                                     l2570 05ED                                       l2562 047C  
                                     l2554 0474                                       l2546 0470  
                                     l2538 0465                                       l2618 0581  
                                     l2626 0668                                       l2458 04F8  
                                     l2482 028D                                       l2474 0278  
                                     l2634 04B9                                       l2650 015F  
                                     l2642 00E5                                       l2580 05AB  
                                     l2572 05F0                                       l2564 047E  
                                     l2556 0476                                       l2548 0471  
                                     l2468 0614                                       l2492 0291  
                                     l2484 028E                                       l2636 04BE  
                                     l2628 04A9                                       l2652 0187  
                                     l2644 00F5                                       l2582 05AD  
                                     l2590 0634                                       l2574 05F6  
                                     l2566 0481                                       l2558 0478  
                                     l2670 0594                                       l2662 0587  
                                     l2494 0294                                       l2486 028F  
                                     l2478 0284                                       l2638 04C4  
                                     l2654 01AF                                       l2646 010F  
                                     l2584 05B3                                       l2592 062E  
                                     l2576 05F7                                       l2568 0484  
                                     l2680 0596                                       l2664 058C  
                                     l2496 0298                                       l2656 01D7  
                                     l2648 0137                                       l2586 05B4  
                                     l2578 05A6                                       l2594 063E  
                                     l2682 059F                                       l2666 0592  
                                     l2674 0660                                       l2658 05C5  
                                     l2498 02A2                                       l2690 0499  
                                     l2596 0644                                       l2676 0389  
                                     l2684 05A2                                       l2692 049F  
                                     l2598 0620                                       l2678 03C4  
                                     l2694 04A2                                       l2696 04A5  
                                     l2688 0488                                       l2698 04A6  
                                     u1020 04C4                                       u1021 04C3  
                                     u1005 04B5                                       u1030 00F5  
                                     u1015 04BA                                       u1031 00F4  
                                     u1050 058C                                       u1051 058B  
                                     u1060 0592                                       u1061 0591  
                                     u1045 05CC                                       u1070 0499  
                                     u1071 0498                                       _LATA 0018  
                                     _LATC 001A                                       i1l41 0438  
                                     i1l46 043A                                       _WPUA 1F39  
                                     _WPUC 1F4F                                       _main 0488  
                      ??_data_recv_handler 0029         I2C1_SlaveSetAddrIntHandler@handler 002F  
                                     fsr0h 0005                                       fsr1h 0007  
                                     indf0 0000                                       fsr0l 0004  
                                     indf1 0001                                       fsr1l 0006  
                                     btemp 007E                          ?_FLASH_WriteBlock 0032  
                                     start 0031                                 _i2c1RdData 0056  
                       ??_FLASH_WriteBlock 0035                                 _i2c1WrData 0057  
       I2C1_SlaveSetReadIntHandler@handler 002F               _I2C1_SlaveRdInterruptHandler 004E  
             _I2C1_SlaveWrInterruptHandler 004C                           ??_I2C1_SlaveOpen 002F  
                  __end_of_TMR0_Initialize 0585             ??_TMR0_DefaultInterruptHandler 0070  
            __end_of_OSCILLATOR_Initialize 0620                          __end_of_I2C1_Open 03C8  
                                    ?_main 0070                  __end_of_data_recv_handler 043B  
                                    i1l152 0026                                      i1l321 026C  
                                    i1l402 0673                                      i1l420 0667  
                                    i1l332 056F                                      i1l156 002F  
                                    i1l405 0670                                      i1l157 002F  
                                    i1l149 0013                                      i1l423 065A  
                                    i1l503 045B                                      i1l344 05DF  
                                    i1l417 05FF                                      i1l337 053F  
                                    i1l426 0676                                      i1l354 05EC  
                                    i1l506 0462                                      i1l531 0558  
                                    i1l347 0655                                      i1l540 0337  
                                    i1l508 0464                                      i1l357 060D  
                                    i1l542 0330                                      i1l536 0405  
                                    i1l546 0524                                      i1l539 02EE  
                                    i1l396 0606                                      i1l399 065F  
                                    i1l496 044B                                      i1l488 05C4  
                                    i1l499 0452         __end_of_SensorBoardType_validation 0596  
               _SensorBoardType_validation 0585                                      _OSCEN 0891  
                                    _TMR0H 059D                                      _TMR0L 059C  
                                    u50_20 0330                                      u50_21 032F  
                                    u51_20 03F2                                      u51_21 03F1  
                                    _PORTA 000C                                      _PORTC 000E  
                                    u60_20 05E7                                      u52_20 040F  
                                    u60_21 05E6                                      u52_21 040E  
                                    u53_20 0437                                      u61_20 05DA  
                                    u53_21 0436                                      u61_21 05D9  
                                    u54_20 0530                                      u62_20 0560  
                                    u54_21 052F                                      u62_21 055F  
                                    u63_20 056C                                      u63_21 056B  
                                    u48_20 02ED                                      u80_20 0223  
                                    u64_20 0445                                      u48_21 02EC  
                                    u80_21 0222                                      u64_21 0444  
                                    u48_25 02E9                                      u49_20 031A  
                                    u81_20 0236                                      u65_20 044B  
                                    u49_21 0319                                      u81_21 0235  
                                    u65_21 044A                                      _TRISA 0012  
                                    _TRISC 0014                                      u82_20 0246  
                                    u66_20 0452                                      u90_20 002E  
                                    u82_21 0245                                      u66_21 0451  
                                    u90_21 002D                                      u83_20 024F  
                                    u67_20 045B                                      u83_21 024E  
                                    u67_21 045A                                      u68_20 0462  
                                    u84_20 000B                                      u68_21 0461  
                                    u84_21 000A                                      u77_20 05BF  
                                    u85_20 000F                                      u77_21 05BE  
                                    u85_21 000E                                      u78_20 020B  
                                    u86_20 0017                                      u78_21 020A  
                                    u86_21 0016                                      u79_20 0213  
                                    u87_20 001B                                      u79_21 0212  
                                    u87_21 001A                                      u88_20 001F  
                                    u88_21 001E                                      u89_20 002A  
                                    u89_21 0029                  ?_TMR0_SetInterruptHandler 002F  
                        ??_I2C1_Initialize 002F                           __end_of_TMR0_ISR 05C5  
           I2C1_SlaveSetSlaveMask@maskAddr 002F                                      _debug 005E  
                           _WDT_Initialize 0668                                 _i2cReadCnt 005C  
                           _i2c1SlaveState 0054                                      pclath 000A  
                                    status 0003                                      wtemp0 007E  
                          __initialization 00D0                               __end_of_main 04A9  
              ?_INTERRUPT_InterruptManager 0070                                     ??_main 0041  
                       _I2C1_SlaveClearIrq 0671                          ?i1_FLASH_ReadWord 0070  
               _i2cReadCnt@i2c1_slave$F183 0059                 _i2cReadCnt@i2c1_slave$F753 0058  
                       ??i1_FLASH_ReadWord 0072                     __end_of_WDT_Initialize 066B  
                      ?_I2C1_SlaveClearIrq 0070                  FLASH_WriteBlock@writeAddr 0032  
                  ?_I2C1_SlaveReleaseClock 0070                                     _ANSELA 1F38  
                                   _ANSELC 1F4E                                     _T0CON0 059E  
                                   _T0CON1 059F                                     _RC0PPS 1F20  
                                   _RC1PPS 1F21                         _getSensorBoardType 05C5  
                                   i1l2010 040A                                     i1l2020 042E  
                                   i1l2012 040F                                     i1l2030 053A  
                                   i1l2022 0525                                     i1l2200 0664  
                                   i1l2024 052A                                     i1l2016 0413  
                                   i1l2008 0406                                     i1l2032 0650  
                                   i1l2034 0607                                     i1l2026 0530  
                                   i1l2018 0429                                     i1l2210 056C  
                                   i1l2036 060C                                     i1l2028 0537  
                                   i1l2204 0559                                     i1l2212 066E  
                                   i1l2300 05BF                                     i1l2206 0560  
                                   i1l2310 020B                                     i1l2230 044C  
                                   i1l2208 0565                                     i1l2320 0227  
                                   i1l2312 0213                                     i1l2232 0453  
                                   _ODCONA 1F3A                                     i1l2330 023E  
                                   i1l2322 022B                                     i1l2314 0217  
                                   i1l2306 0200                                     i1l2234 0455  
                                   i1l2226 043B                                     _ODCONC 1F50  
                                   i1l2324 022E                                     i1l2340 0253  
                                   i1l2316 021B                                     i1l2308 0203  
                                   i1l2236 045C                                     i1l2228 0445  
                                   i1l2190 05E7                                     i1l2182 0671  
                                   i1l2334 0247                                     i1l2326 0236  
                                   i1l2342 0269                                     i1l2318 0223  
                                   i1l2184 0600                                     i1l2192 05F9  
                                   i1l2336 024F                                     i1l2328 023A  
                                   i1l2360 0017                                     i1l2178 065B  
                                   i1l2362 001B                                     i1l2354 0006  
                                   i1l2188 05E0                                     i1l1900 02F8  
                                   i1l2196 05D3                                     i1l2364 001F  
                                   i1l2356 000B                                     i1l1910 02FB  
                                   i1l1902 02F9                                     i1l2198 05DA  
                                   i1l2366 002A                                     i1l2358 000F  
                                   i1l1920 031A                                     i1l1912 02FE  
                                   i1l1904 02FA                                     i1l2720 025B  
                                   i1l2296 05B6                                     i1l1850 0513  
                                   i1l1842 0509                                     i1l1930 0326  
                                   i1l1922 031B                                     i1l1914 0300  
                                   i1l2298 05B8                                     i1l1860 051C  
                                   i1l1852 0514                                     i1l1844 050D  
                                   i1l1932 032A                                     i1l1924 031F  
                                   i1l1916 0308                                     i1l1870 0545  
                                   i1l1862 051D                                     i1l1854 0515  
                                   i1l1846 050E                                     i1l1934 0332  
                                   i1l1926 0320                                     i1l1918 0314  
                                   i1l1942 0657                                     i1l1880 054D  
                                   i1l1872 0548                                     i1l1864 051F  
                                   i1l1856 051A                                     i1l1848 0511  
                                   i1l1928 0321                                     i1l1938 0674  
                                   i1l1882 054E                                     i1l1874 054A  
                                   i1l1866 0540                                     i1l1858 051B  
                                   i1l1890 02DF                                     i1l1970 03CF  
                                   i1l1884 0553                                     i1l1876 054B  
                                   i1l1868 0544                                     i1l1892 02E3  
                                   i1l1980 03EC                                     i1l1878 054C  
                                   i1l1982 03F2                                     i1l1896 02EF  
                                   i1l1888 02D9                                     i1l1984 03FC  
                                   i1l1976 03D3                                     i1l1968 03C8  
                                   i1l1898 02F6                                     i1l1978 03E8  
                                   _INLVLA 1F3C                                     _INLVLC 1F52  
                                   _OSCFRQ 0893                                     _WDTCON 080C  
                              _i2cDataRead 0041                        ?_getSensorBoardType 0070  
                     ??_I2C1_SlaveClearIrq 0070                              ?_error_signal 0070  
                                   ___wmul 04A9              FLASH_WriteWord@blockStartAddr 00E2  
                      FLASH_WriteWord@word 003F                           ?_TMR0_Initialize 0070  
                                ?_I2C1_Isr 0070                    ?_I2C1_SlaveSetSlaveAddr 0070  
                  ?_I2C1_SlaveSetSlaveMask 0070       __end_of_I2C1_SlaveSetWrColIntHandler 062C  
             _I2C1_SlaveSetWrColIntHandler 0626                    FLASH_ReadWord@flashAddr 002F  
                     ??_getSensorBoardType 002F       I2C1_SlaveSetBusColIntHandler@handler 002F  
                          ?_WDT_Initialize 0070             __end_of_I2C1_SlaveReleaseClock 0671  
 TMR0_SetInterruptHandler@InterruptHandler 002F                     _I2C1_SlaveAddrCallBack 05E0  
                        _SYSTEM_Initialize 0596                  i1FLASH_ReadWord@flashAddr 0070  
                  __end_of__initialization 00E0        I2C1_SlaveSetWrColIntHandler@handler 002F  
                       ?_SYSTEM_Initialize 0070                             ??_error_signal 002F  
                           __pcstackCOMMON 0070                i1FLASH_WriteBlock@writeAddr 0073  
               __end_ofi1_FLASH_EraseBlock 0525                        ??_SYSTEM_Initialize 0031  
                                ?_TMR0_ISR 0070             __end_of_I2C1_SlaveSetSlaveAddr 0638  
                         FLASH_WriteWord@i 00E4             __end_of_I2C1_SlaveSetSlaveMask 0632  
                               ??_I2C1_Isr 002D                          ?_I2C1_SlaveIsAddr 0070  
                        ?_I2C1_SlaveIsRead 0070                FLASH_WriteBlock@GIEBitValue 003A  
                       ??_I2C1_SlaveIsAddr 0070                         ??_I2C1_SlaveIsRead 0070  
                __end_of_SYSTEM_Initialize 05A6                                 __pbssBANK0 0041  
                               __pbssBANK1 00A0                       memory_initialize@TAG 00E7  
                      _I2C1_SlaveEnableIrq 066B                        _I2C1_SlaveGetRxData 0674  
                    _I2C1_SlaveIsRxBufFull 0664                                 __pmaintext 0488  
            ?_I2C1_SlaveSetWriteIntHandler 002F           __end_of_TMR0_SetInterruptHandler 061A  
                                  ?___wmul 002F                                 ??_TMR0_ISR 0071  
                               __pintentry 0004                            _I2C1_Initialize 05ED  
                     ?_I2C1_SlaveEnableIrq 0070                       ?_I2C1_SlaveGetRxData 0070  
                           _FLASH_ReadWord 04E9                ?_SensorBoardType_validation 0070  
                                _I2C1_Open 0389                                    _NVMADRH 081B  
                                  _NVMADRL 081A                                    _NVMDATH 081D  
                                  _OSCTUNE 0892                                    _NVMDATL 081C  
                                  _NVMCON2 081F                                    _SSP1ADD 018D  
                                  _SLRCONA 1F3B                                    _SLRCONC 1F51  
                                  _SSP1BUF 018C                          i1_FLASH_WriteWord 03C8  
                                  _SSP1MSK 018E                   ?_I2C1_SlaveSetIsrHandler 002F  
                       ?i1_FLASH_WriteWord 0020                           _FLASH_EraseBlock 04C9  
           ?_I2C1_SlaveSetBusColIntHandler 002F                        ??i1_FLASH_WriteWord 007D  
SensorBoardType_validation@SensorBoardType 002F                      ??_I2C1_SlaveEnableIrq 002F  
                    ??_I2C1_SlaveGetRxData 0070                     __end_of_FLASH_ReadWord 0509  
                               _error_flag 005D           i1FLASH_WriteBlock@blockStartAddr 0079  
                                  __ptext1 00E3                                    __ptext2 04A9  
                                  __ptext3 0338                                    __ptext4 026D  
                                  __ptext5 04C9                                    __ptext6 04E9  
                                  __ptext7 05C5                                    __ptext8 0660  
                                  __ptext9 0585                                    _command 005A  
                        _memory_initialize 00E3             _I2C1_SlaveAddrInterruptHandler 004A  
                                  _ramBuff 00A0                      _OSCILLATOR_Initialize 061A  
                __end_ofi1_FLASH_WriteWord 0406                         ?_memory_initialize 0070  
          I2C1_SlaveSetSlaveAddr@slaveAddr 002F                   ??_PIN_MANAGER_Initialize 002F  
                               ?_I2C1_Open 0070                   ??_I2C1_SlaveIsTxBufEmpty 0070  
                                  main@TAG 00E8                       __end_of_error_signal 0664  
                         _default_in_flash 0040                                    clrloop0 060F  
               __end_ofi1_FLASH_WriteBlock 0338                       end_of_initialization 00E0  
                      ??_memory_initialize 00E5                                  _LED_timer 005B  
                   ?_I2C1_SlaveIsRxBufFull 0070                         i1FLASH_WriteWord@i 0028  
          _I2C1_SlaveWrColInterruptHandler 0046                    __end_of_I2C1_Initialize 05F9  
             __end_of_I2C1_SlaveRdCallBack 0570                  FLASH_ReadWord@GIEBitValue 0031  
                __end_of_memory_initialize 0200             ??_I2C1_SlaveSetWriteIntHandler 0031  
                          ?_FLASH_ReadWord 002F                           ??_WDT_Initialize 002F  
                 _TMR0_SetInterruptHandler 0614            __end_of_I2C1_SlaveSetIsrHandler 0644  
                  ?_I2C1_SlaveAddrCallBack 0070             I2C1_SlaveSetIsrHandler@handler 002F  
                        FLASH_WriteBlock@i 003B                          ??_FLASH_WriteWord 00E0  
                           __end_of___wmul 04C9                              _i2c1SlaveAddr 0055  
                         _FLASH_WriteBlock 026D                     ?_OSCILLATOR_Initialize 0070  
           __end_of_I2C1_SlaveAddrCallBack 05ED               __end_of_I2C1_SlaveSendTxData 065B  
                      start_initialization 00D0                                ??_I2C1_Open 0031  
                       i1_FLASH_EraseBlock 0509               __end_of_I2C1_SlaveWrCallBack 05E0  
              i1FLASH_ReadWord@GIEBitValue 0072                        ?i1_FLASH_EraseBlock 0070  
                 I2C1_SlaveSendTxData@data 0070                           ?_I2C1_Initialize 0070  
                                 ??___wmul 0033                       ??i1_FLASH_EraseBlock 0072  
              FLASH_EraseBlock@GIEBitValue 0031                   __end_of_FLASH_EraseBlock 04E9  
  __end_of_I2C1_SlaveDefRdInterruptHandler 0540          ??_I2C1_SlaveDefRdInterruptHandler 0070  
         ?_I2C1_SlaveDefRdInterruptHandler 0070            _I2C1_SlaveDefRdInterruptHandler 0525  
  __end_of_I2C1_SlaveDefWrInterruptHandler 0656          ??_I2C1_SlaveDefWrInterruptHandler 0071  
         ?_I2C1_SlaveDefWrInterruptHandler 0070            _I2C1_SlaveDefWrInterruptHandler 0650  
                                ___latbits 0000                              __pcstackBANK0 0020  
                            __pcstackBANK1 00E0                       _I2C1_SlaveRdCallBack 0559  
             ?_I2C1_SlaveSetAddrIntHandler 002F                           i1_FLASH_ReadWord 0540  
                    _TMR0_InterruptHandler 005F                                  __pnvBANK0 005F  
                   _PIN_MANAGER_Initialize 0465                     _MSSP1_InterruptHandler 0050  
                   _I2C1_SlaveIsTxBufEmpty 05F9                               _error_signal 0660  
             ?_I2C1_SlaveSetReadIntHandler 002F                   __end_of_default_in_flash 00D0  
                    i1FLASH_WriteWord@word 0023            ??_I2C1_SlaveSetBusColIntHandler 0031  
                                 _I2C1_Isr 0200               ??_INTERRUPT_InterruptManager 007E  
                 ??_I2C1_SlaveReleaseClock 0070              i1FLASH_WriteBlock@GIEBitValue 007B  
      __end_of_I2C1_SlaveSetAddrIntHandler 0650                _I2C1_SlaveSetAddrIntHandler 064A  
                           _I2C1_SlaveOpen 05A6                      ?_I2C1_SlaveRdCallBack 0070  
                  i1FLASH_WriteWord@ramBuf 0022                    i1FLASH_WriteWord@offset 0025  
                  ??_I2C1_SlaveIsRxBufFull 0070              ?_I2C1_SlaveSetWrColIntHandler 002F  
                 FLASH_WriteWord@flashAddr 003C             FLASH_WriteBlock@blockStartAddr 0038  
            ??_I2C1_SlaveSetAddrIntHandler 0031                          ??_TMR0_Initialize 0031  
                           ___wmul@product 0033                                   _LATAbits 0018  
                                clear_ram0 060E                                   _PIE0bits 0716  
                                 _PIE1bits 0717                   ??_I2C1_SlaveSetSlaveAddr 002F  
      __end_of_I2C1_SlaveSetReadIntHandler 063E                _I2C1_SlaveSetReadIntHandler 0638  
                 ??_I2C1_SlaveSetSlaveMask 002F                __end_of_I2C1_SlaveEnableIrq 066E  
               ??_TMR0_SetInterruptHandler 0031                                   _PIR0bits 070C  
              __end_of_I2C1_SlaveGetRxData 0677                                   _PIR1bits 070D  
                FLASH_EraseBlock@startAddr 002F                       _I2C1_SlaveSendTxData 0656  
                         ??_FLASH_ReadWord 0031                   _default_in_flash_absaddr 0040  
                       i1_FLASH_WriteBlock 02D9                       _I2C1_SlaveWrCallBack 05D3  
                                 _SSP1CON1 0190                                   _SSP1CON2 0191  
                                 _TMR0_ISR 05B6                                   _SSP1STAT 018F  
         i1FLASH_WriteBlock@flashWordArray 0075              ??_I2C1_SlaveSetReadIntHandler 0031  
                      ?i1_FLASH_WriteBlock 0073                          ___wmul@multiplier 002F  
                   __end_of_I2C1_SlaveOpen 05B6                 i1FLASH_WriteWord@flashAddr 0020  
                       data_recv_handler@i 002B            i1FLASH_WriteWord@blockStartAddr 0026  
         _I2C1_SlaveBusColInterruptHandler 0048                            _FLASH_WriteWord 0338  
       _I2C1_SlaveDefWrColInterruptHandler 0000                       ??i1_FLASH_WriteBlock 0076  
                 __end_of_FLASH_WriteBlock 02D9  __end_of_I2C1_SlaveDefAddrInterruptHandler 060E  
      ??_I2C1_SlaveDefAddrInterruptHandler 0070         ?_I2C1_SlaveDefAddrInterruptHandler 0070  
        _I2C1_SlaveDefAddrInterruptHandler 0607                           _I2C1_SlaveIsAddr 0600  
                         _I2C1_SlaveIsRead 065B                      ?_I2C1_SlaveSendTxData 0070  
                    ?_I2C1_SlaveWrCallBack 0070                    ??_OSCILLATOR_Initialize 002F  
                 __p_default_in_flash_text 0040        _I2C1_SlaveDefBusColInterruptHandler 0000  
                          ?_I2C1_SlaveOpen 0070                     ??_I2C1_SlaveRdCallBack 007E  
    __end_of_I2C1_SlaveSetBusColIntHandler 064A              _I2C1_SlaveSetBusColIntHandler 0644  
                               _T0CON0bits 059E                i1FLASH_EraseBlock@startAddr 0070  
                                 __ptext10 0596                                   __ptext11 0668  
                                 __ptext20 062C                                   __ptext12 0570  
                                 __ptext21 0632                                   __ptext13 0614  
                                 __ptext30 043B                                   __ptext22 0638  
                                 __ptext14 0465                                   __ptext31 0200  
                                 __ptext23 063E                                   __ptext15 061A  
                                 __ptext40 0509                                   __ptext32 05D3  
                                 __ptext24 0644                                   __ptext16 05ED  
                                 __ptext41 0540                                   __ptext33 0650  
                                 __ptext25 064A                                   __ptext17 0389  
                                 __ptext50 0674                                   __ptext42 0525  
                                 __ptext34 0656                                   __ptext26 05A6  
                                 __ptext18 0620                                   __ptext43 05F9  
                                 __ptext35 066E                                   __ptext27 066B  
                                 __ptext19 0626                                   __ptext44 0664  
                                 __ptext36 0559                                   __ptext45 065B  
                                 __ptext37 0406                                   __ptext29 05B6  
                                 __ptext46 0600                                   __ptext38 03C8  
                                 __ptext47 0671                                   __ptext39 02D9  
                                 __ptext48 05E0                                   __ptext49 0607  
                             _SSP1CON1bits 0190                               _SSP1CON2bits 0191  
                    FLASH_WriteWord@ramBuf 003E                      FLASH_WriteWord@offset 00E1  
     __end_of_I2C1_SlaveSetWriteIntHandler 0626               _I2C1_SlaveSetWriteIntHandler 0620  
           ??_I2C1_SlaveSetWrColIntHandler 0031       __end_of_TMR0_DefaultInterruptHandler 0465  
             _TMR0_DefaultInterruptHandler 043B                 __end_of_I2C1_SlaveClearIrq 0674  
                  _I2C1_SlaveSetIsrHandler 063E                                   int$flags 007E  
       __end_of_INTERRUPT_InterruptManager 0031                 _INTERRUPT_InterruptManager 0004  
                             _SSP1STATbits 018F                          ?_FLASH_EraseBlock 002F  
                 __end_ofi1_FLASH_ReadWord 0559                 __end_of_getSensorBoardType 05D3  
                       ??_FLASH_EraseBlock 0031                                 _INTCONbits 000B  
                      i1FLASH_WriteBlock@i 007C                    __end_of_FLASH_WriteWord 0389  
             ??_SensorBoardType_validation 002F                                _NVMCON1bits 081E  
              _i2cReadCnt@i2c1_slave$F1136 0052                _i2cReadCnt@i2c1_slave$F1099 0053  
                                 intlevel1 0000                     _I2C1_SlaveReleaseClock 066E  
                  ?_PIN_MANAGER_Initialize 0070                    ?_I2C1_SlaveIsTxBufEmpty 0070  
                   ??_I2C1_SlaveSendTxData 0070                     ??_I2C1_SlaveWrCallBack 0071  
            ?_TMR0_DefaultInterruptHandler 0070        I2C1_SlaveSetWriteIntHandler@handler 002F  
                               _SSP1DATPPS 1EC6                                 _SSP1CLKPPS 1EC5  
                   _I2C1_SlaveSetSlaveAddr 0632                            _TMR0_Initialize 0570  
                   _I2C1_SlaveSetSlaveMask 062C             __end_of_PIN_MANAGER_Initialize 0488  
           __end_of_I2C1_SlaveIsTxBufEmpty 0600              __end_of_I2C1_SlaveIsRxBufFull 0668  
                ??_I2C1_SlaveSetIsrHandler 0031  
