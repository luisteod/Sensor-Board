

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Fri Apr 14 15:42:59 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	16F15223
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	_default_in_flash_text,global,class=STRCODE,delta=2,noexec
     5                           	psect	_status_in_flash_text,global,class=STRCODE,delta=2,noexec
     6                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	clrtext,global,class=CODE,delta=2
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    14                           	psect	text1,local,class=CODE,merge=1,delta=2
    15                           	psect	text2,local,class=CODE,merge=1,delta=2
    16                           	psect	text3,local,class=CODE,merge=1,delta=2
    17                           	psect	text4,local,class=CODE,merge=1,delta=2
    18                           	psect	text5,local,class=CODE,merge=1,delta=2
    19                           	psect	text6,local,class=CODE,merge=1,delta=2
    20                           	psect	text7,local,class=CODE,merge=1,delta=2
    21                           	psect	text8,local,class=CODE,merge=1,delta=2
    22                           	psect	text9,local,class=CODE,merge=1,delta=2
    23                           	psect	text10,local,class=CODE,merge=1,delta=2
    24                           	psect	text11,local,class=CODE,merge=1,delta=2
    25                           	psect	text12,local,class=CODE,merge=1,delta=2
    26                           	psect	text13,local,class=CODE,merge=1,delta=2
    27                           	psect	text14,local,class=CODE,merge=1,delta=2
    28                           	psect	intentry,global,class=CODE,delta=2
    29                           	psect	text16,local,class=CODE,merge=1,delta=2
    30                           	psect	text17,local,class=CODE,merge=1,delta=2
    31                           	psect	text18,local,class=CODE,merge=1,delta=2
    32                           	psect	text19,local,class=CODE,merge=1,delta=2
    33                           	psect	text20,local,class=CODE,merge=1,delta=2
    34                           	psect	text21,local,class=CODE,merge=1,inline,delta=2
    35                           	psect	text22,local,class=CODE,merge=1,inline,delta=2
    36                           	psect	text23,local,class=CODE,merge=1,delta=2
    37                           	psect	text24,local,class=CODE,merge=1,delta=2
    38                           	psect	text25,local,class=CODE,merge=1,inline,delta=2
    39                           	psect	text26,local,class=CODE,merge=1,inline,delta=2
    40                           	psect	text27,local,class=CODE,merge=1,inline,delta=2
    41                           	psect	text28,local,class=CODE,merge=1,inline,delta=2
    42                           	psect	text29,local,class=CODE,merge=1,inline,delta=2
    43                           	psect	text30,local,class=CODE,merge=1,delta=2
    44                           	psect	text31,local,class=CODE,merge=1,delta=2
    45                           	psect	text32,local,class=CODE,merge=1,inline,delta=2
    46                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    47                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    48                           	dabs	1,0x7E,2
    49     0000                     
    50                           ; Generated 19/07/2022 GMT
    51                           ; 
    52                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
    53                           ; All rights reserved.
    54                           ; 
    55                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    56                           ; 
    57                           ; Redistribution and use in source and binary forms, with or without modification, are
    58                           ; permitted provided that the following conditions are met:
    59                           ; 
    60                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    61                           ;        conditions and the following disclaimer.
    62                           ; 
    63                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    64                           ;        of conditions and the following disclaimer in the documentation and/or other
    65                           ;        materials provided with the distribution. Publication is not required when
    66                           ;        this file is used in an embedded application.
    67                           ; 
    68                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    69                           ;        software without specific prior written permission.
    70                           ; 
    71                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    72                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    73                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    74                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    75                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    76                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    77                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    78                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    79                           ; 
    80                           ; 
    81                           ; Code-generator required, PIC16F15223 Definitions
    82                           ; 
    83                           ; SFR Addresses
    84     0000                     	;# 
    85     0001                     	;# 
    86     0002                     	;# 
    87     0003                     	;# 
    88     0004                     	;# 
    89     0005                     	;# 
    90     0006                     	;# 
    91     0007                     	;# 
    92     0008                     	;# 
    93     0009                     	;# 
    94     000A                     	;# 
    95     000B                     	;# 
    96     000C                     	;# 
    97     000E                     	;# 
    98     0012                     	;# 
    99     0014                     	;# 
   100     0018                     	;# 
   101     001A                     	;# 
   102     009A                     	;# 
   103     009B                     	;# 
   104     009B                     	;# 
   105     009C                     	;# 
   106     009D                     	;# 
   107     009E                     	;# 
   108     009F                     	;# 
   109     010E                     	;# 
   110     010F                     	;# 
   111     0119                     	;# 
   112     011A                     	;# 
   113     011B                     	;# 
   114     011B                     	;# 
   115     011C                     	;# 
   116     011D                     	;# 
   117     011E                     	;# 
   118     011F                     	;# 
   119     018C                     	;# 
   120     018D                     	;# 
   121     018E                     	;# 
   122     018F                     	;# 
   123     0190                     	;# 
   124     0191                     	;# 
   125     0192                     	;# 
   126     020C                     	;# 
   127     020D                     	;# 
   128     020E                     	;# 
   129     020E                     	;# 
   130     020F                     	;# 
   131     020F                     	;# 
   132     0210                     	;# 
   133     0210                     	;# 
   134     0211                     	;# 
   135     0211                     	;# 
   136     028C                     	;# 
   137     028C                     	;# 
   138     028D                     	;# 
   139     028D                     	;# 
   140     028E                     	;# 
   141     028F                     	;# 
   142     0290                     	;# 
   143     0291                     	;# 
   144     030C                     	;# 
   145     030C                     	;# 
   146     030D                     	;# 
   147     030E                     	;# 
   148     030F                     	;# 
   149     0310                     	;# 
   150     0310                     	;# 
   151     0311                     	;# 
   152     0312                     	;# 
   153     0313                     	;# 
   154     0314                     	;# 
   155     0314                     	;# 
   156     0315                     	;# 
   157     0316                     	;# 
   158     0318                     	;# 
   159     0318                     	;# 
   160     0319                     	;# 
   161     031A                     	;# 
   162     059C                     	;# 
   163     059C                     	;# 
   164     059D                     	;# 
   165     059D                     	;# 
   166     059E                     	;# 
   167     059F                     	;# 
   168     070C                     	;# 
   169     070D                     	;# 
   170     070E                     	;# 
   171     0716                     	;# 
   172     0717                     	;# 
   173     0718                     	;# 
   174     080C                     	;# 
   175     0811                     	;# 
   176     0813                     	;# 
   177     0814                     	;# 
   178     081A                     	;# 
   179     081A                     	;# 
   180     081B                     	;# 
   181     081C                     	;# 
   182     081C                     	;# 
   183     081D                     	;# 
   184     081E                     	;# 
   185     081F                     	;# 
   186     088E                     	;# 
   187     0890                     	;# 
   188     0891                     	;# 
   189     0892                     	;# 
   190     0893                     	;# 
   191     090C                     	;# 
   192     1E8F                     	;# 
   193     1E90                     	;# 
   194     1E91                     	;# 
   195     1E92                     	;# 
   196     1E93                     	;# 
   197     1E9C                     	;# 
   198     1EA1                     	;# 
   199     1EA2                     	;# 
   200     1EC3                     	;# 
   201     1EC5                     	;# 
   202     1EC6                     	;# 
   203     1EC7                     	;# 
   204     1ECB                     	;# 
   205     1ECB                     	;# 
   206     1ECB                     	;# 
   207     1ECC                     	;# 
   208     1ECC                     	;# 
   209     1ECC                     	;# 
   210     1F10                     	;# 
   211     1F11                     	;# 
   212     1F12                     	;# 
   213     1F14                     	;# 
   214     1F15                     	;# 
   215     1F20                     	;# 
   216     1F21                     	;# 
   217     1F22                     	;# 
   218     1F23                     	;# 
   219     1F24                     	;# 
   220     1F25                     	;# 
   221     1F38                     	;# 
   222     1F39                     	;# 
   223     1F3A                     	;# 
   224     1F3B                     	;# 
   225     1F3C                     	;# 
   226     1F3D                     	;# 
   227     1F3E                     	;# 
   228     1F3F                     	;# 
   229     1F4E                     	;# 
   230     1F4F                     	;# 
   231     1F50                     	;# 
   232     1F51                     	;# 
   233     1F52                     	;# 
   234     1F53                     	;# 
   235     1F54                     	;# 
   236     1F55                     	;# 
   237     1FE4                     	;# 
   238     1FE5                     	;# 
   239     1FE6                     	;# 
   240     1FE7                     	;# 
   241     1FE8                     	;# 
   242     1FE8                     	;# 
   243     1FE9                     	;# 
   244     1FEA                     	;# 
   245     1FEB                     	;# 
   246     1FED                     	;# 
   247     1FEE                     	;# 
   248     1FEF                     	;# 
   249     0000                     	;# 
   250     0001                     	;# 
   251     0002                     	;# 
   252     0003                     	;# 
   253     0004                     	;# 
   254     0005                     	;# 
   255     0006                     	;# 
   256     0007                     	;# 
   257     0008                     	;# 
   258     0009                     	;# 
   259     000A                     	;# 
   260     000B                     	;# 
   261     000C                     	;# 
   262     000E                     	;# 
   263     0012                     	;# 
   264     0014                     	;# 
   265     0018                     	;# 
   266     001A                     	;# 
   267     009A                     	;# 
   268     009B                     	;# 
   269     009B                     	;# 
   270     009C                     	;# 
   271     009D                     	;# 
   272     009E                     	;# 
   273     009F                     	;# 
   274     010E                     	;# 
   275     010F                     	;# 
   276     0119                     	;# 
   277     011A                     	;# 
   278     011B                     	;# 
   279     011B                     	;# 
   280     011C                     	;# 
   281     011D                     	;# 
   282     011E                     	;# 
   283     011F                     	;# 
   284     018C                     	;# 
   285     018D                     	;# 
   286     018E                     	;# 
   287     018F                     	;# 
   288     0190                     	;# 
   289     0191                     	;# 
   290     0192                     	;# 
   291     020C                     	;# 
   292     020D                     	;# 
   293     020E                     	;# 
   294     020E                     	;# 
   295     020F                     	;# 
   296     020F                     	;# 
   297     0210                     	;# 
   298     0210                     	;# 
   299     0211                     	;# 
   300     0211                     	;# 
   301     028C                     	;# 
   302     028C                     	;# 
   303     028D                     	;# 
   304     028D                     	;# 
   305     028E                     	;# 
   306     028F                     	;# 
   307     0290                     	;# 
   308     0291                     	;# 
   309     030C                     	;# 
   310     030C                     	;# 
   311     030D                     	;# 
   312     030E                     	;# 
   313     030F                     	;# 
   314     0310                     	;# 
   315     0310                     	;# 
   316     0311                     	;# 
   317     0312                     	;# 
   318     0313                     	;# 
   319     0314                     	;# 
   320     0314                     	;# 
   321     0315                     	;# 
   322     0316                     	;# 
   323     0318                     	;# 
   324     0318                     	;# 
   325     0319                     	;# 
   326     031A                     	;# 
   327     059C                     	;# 
   328     059C                     	;# 
   329     059D                     	;# 
   330     059D                     	;# 
   331     059E                     	;# 
   332     059F                     	;# 
   333     070C                     	;# 
   334     070D                     	;# 
   335     070E                     	;# 
   336     0716                     	;# 
   337     0717                     	;# 
   338     0718                     	;# 
   339     080C                     	;# 
   340     0811                     	;# 
   341     0813                     	;# 
   342     0814                     	;# 
   343     081A                     	;# 
   344     081A                     	;# 
   345     081B                     	;# 
   346     081C                     	;# 
   347     081C                     	;# 
   348     081D                     	;# 
   349     081E                     	;# 
   350     081F                     	;# 
   351     088E                     	;# 
   352     0890                     	;# 
   353     0891                     	;# 
   354     0892                     	;# 
   355     0893                     	;# 
   356     090C                     	;# 
   357     1E8F                     	;# 
   358     1E90                     	;# 
   359     1E91                     	;# 
   360     1E92                     	;# 
   361     1E93                     	;# 
   362     1E9C                     	;# 
   363     1EA1                     	;# 
   364     1EA2                     	;# 
   365     1EC3                     	;# 
   366     1EC5                     	;# 
   367     1EC6                     	;# 
   368     1EC7                     	;# 
   369     1ECB                     	;# 
   370     1ECB                     	;# 
   371     1ECB                     	;# 
   372     1ECC                     	;# 
   373     1ECC                     	;# 
   374     1ECC                     	;# 
   375     1F10                     	;# 
   376     1F11                     	;# 
   377     1F12                     	;# 
   378     1F14                     	;# 
   379     1F15                     	;# 
   380     1F20                     	;# 
   381     1F21                     	;# 
   382     1F22                     	;# 
   383     1F23                     	;# 
   384     1F24                     	;# 
   385     1F25                     	;# 
   386     1F38                     	;# 
   387     1F39                     	;# 
   388     1F3A                     	;# 
   389     1F3B                     	;# 
   390     1F3C                     	;# 
   391     1F3D                     	;# 
   392     1F3E                     	;# 
   393     1F3F                     	;# 
   394     1F4E                     	;# 
   395     1F4F                     	;# 
   396     1F50                     	;# 
   397     1F51                     	;# 
   398     1F52                     	;# 
   399     1F53                     	;# 
   400     1F54                     	;# 
   401     1F55                     	;# 
   402     1FE4                     	;# 
   403     1FE5                     	;# 
   404     1FE6                     	;# 
   405     1FE7                     	;# 
   406     1FE8                     	;# 
   407     1FE8                     	;# 
   408     1FE9                     	;# 
   409     1FEA                     	;# 
   410     1FEB                     	;# 
   411     1FED                     	;# 
   412     1FEE                     	;# 
   413     1FEF                     	;# 
   414     0000                     	;# 
   415     0001                     	;# 
   416     0002                     	;# 
   417     0003                     	;# 
   418     0004                     	;# 
   419     0005                     	;# 
   420     0006                     	;# 
   421     0007                     	;# 
   422     0008                     	;# 
   423     0009                     	;# 
   424     000A                     	;# 
   425     000B                     	;# 
   426     000C                     	;# 
   427     000E                     	;# 
   428     0012                     	;# 
   429     0014                     	;# 
   430     0018                     	;# 
   431     001A                     	;# 
   432     009A                     	;# 
   433     009B                     	;# 
   434     009B                     	;# 
   435     009C                     	;# 
   436     009D                     	;# 
   437     009E                     	;# 
   438     009F                     	;# 
   439     010E                     	;# 
   440     010F                     	;# 
   441     0119                     	;# 
   442     011A                     	;# 
   443     011B                     	;# 
   444     011B                     	;# 
   445     011C                     	;# 
   446     011D                     	;# 
   447     011E                     	;# 
   448     011F                     	;# 
   449     018C                     	;# 
   450     018D                     	;# 
   451     018E                     	;# 
   452     018F                     	;# 
   453     0190                     	;# 
   454     0191                     	;# 
   455     0192                     	;# 
   456     020C                     	;# 
   457     020D                     	;# 
   458     020E                     	;# 
   459     020E                     	;# 
   460     020F                     	;# 
   461     020F                     	;# 
   462     0210                     	;# 
   463     0210                     	;# 
   464     0211                     	;# 
   465     0211                     	;# 
   466     028C                     	;# 
   467     028C                     	;# 
   468     028D                     	;# 
   469     028D                     	;# 
   470     028E                     	;# 
   471     028F                     	;# 
   472     0290                     	;# 
   473     0291                     	;# 
   474     030C                     	;# 
   475     030C                     	;# 
   476     030D                     	;# 
   477     030E                     	;# 
   478     030F                     	;# 
   479     0310                     	;# 
   480     0310                     	;# 
   481     0311                     	;# 
   482     0312                     	;# 
   483     0313                     	;# 
   484     0314                     	;# 
   485     0314                     	;# 
   486     0315                     	;# 
   487     0316                     	;# 
   488     0318                     	;# 
   489     0318                     	;# 
   490     0319                     	;# 
   491     031A                     	;# 
   492     059C                     	;# 
   493     059C                     	;# 
   494     059D                     	;# 
   495     059D                     	;# 
   496     059E                     	;# 
   497     059F                     	;# 
   498     070C                     	;# 
   499     070D                     	;# 
   500     070E                     	;# 
   501     0716                     	;# 
   502     0717                     	;# 
   503     0718                     	;# 
   504     080C                     	;# 
   505     0811                     	;# 
   506     0813                     	;# 
   507     0814                     	;# 
   508     081A                     	;# 
   509     081A                     	;# 
   510     081B                     	;# 
   511     081C                     	;# 
   512     081C                     	;# 
   513     081D                     	;# 
   514     081E                     	;# 
   515     081F                     	;# 
   516     088E                     	;# 
   517     0890                     	;# 
   518     0891                     	;# 
   519     0892                     	;# 
   520     0893                     	;# 
   521     090C                     	;# 
   522     1E8F                     	;# 
   523     1E90                     	;# 
   524     1E91                     	;# 
   525     1E92                     	;# 
   526     1E93                     	;# 
   527     1E9C                     	;# 
   528     1EA1                     	;# 
   529     1EA2                     	;# 
   530     1EC3                     	;# 
   531     1EC5                     	;# 
   532     1EC6                     	;# 
   533     1EC7                     	;# 
   534     1ECB                     	;# 
   535     1ECB                     	;# 
   536     1ECB                     	;# 
   537     1ECC                     	;# 
   538     1ECC                     	;# 
   539     1ECC                     	;# 
   540     1F10                     	;# 
   541     1F11                     	;# 
   542     1F12                     	;# 
   543     1F14                     	;# 
   544     1F15                     	;# 
   545     1F20                     	;# 
   546     1F21                     	;# 
   547     1F22                     	;# 
   548     1F23                     	;# 
   549     1F24                     	;# 
   550     1F25                     	;# 
   551     1F38                     	;# 
   552     1F39                     	;# 
   553     1F3A                     	;# 
   554     1F3B                     	;# 
   555     1F3C                     	;# 
   556     1F3D                     	;# 
   557     1F3E                     	;# 
   558     1F3F                     	;# 
   559     1F4E                     	;# 
   560     1F4F                     	;# 
   561     1F50                     	;# 
   562     1F51                     	;# 
   563     1F52                     	;# 
   564     1F53                     	;# 
   565     1F54                     	;# 
   566     1F55                     	;# 
   567     1FE4                     	;# 
   568     1FE5                     	;# 
   569     1FE6                     	;# 
   570     1FE7                     	;# 
   571     1FE8                     	;# 
   572     1FE8                     	;# 
   573     1FE9                     	;# 
   574     1FEA                     	;# 
   575     1FEB                     	;# 
   576     1FED                     	;# 
   577     1FEE                     	;# 
   578     1FEF                     	;# 
   579     0000                     	;# 
   580     0001                     	;# 
   581     0002                     	;# 
   582     0003                     	;# 
   583     0004                     	;# 
   584     0005                     	;# 
   585     0006                     	;# 
   586     0007                     	;# 
   587     0008                     	;# 
   588     0009                     	;# 
   589     000A                     	;# 
   590     000B                     	;# 
   591     000C                     	;# 
   592     000E                     	;# 
   593     0012                     	;# 
   594     0014                     	;# 
   595     0018                     	;# 
   596     001A                     	;# 
   597     009A                     	;# 
   598     009B                     	;# 
   599     009B                     	;# 
   600     009C                     	;# 
   601     009D                     	;# 
   602     009E                     	;# 
   603     009F                     	;# 
   604     010E                     	;# 
   605     010F                     	;# 
   606     0119                     	;# 
   607     011A                     	;# 
   608     011B                     	;# 
   609     011B                     	;# 
   610     011C                     	;# 
   611     011D                     	;# 
   612     011E                     	;# 
   613     011F                     	;# 
   614     018C                     	;# 
   615     018D                     	;# 
   616     018E                     	;# 
   617     018F                     	;# 
   618     0190                     	;# 
   619     0191                     	;# 
   620     0192                     	;# 
   621     020C                     	;# 
   622     020D                     	;# 
   623     020E                     	;# 
   624     020E                     	;# 
   625     020F                     	;# 
   626     020F                     	;# 
   627     0210                     	;# 
   628     0210                     	;# 
   629     0211                     	;# 
   630     0211                     	;# 
   631     028C                     	;# 
   632     028C                     	;# 
   633     028D                     	;# 
   634     028D                     	;# 
   635     028E                     	;# 
   636     028F                     	;# 
   637     0290                     	;# 
   638     0291                     	;# 
   639     030C                     	;# 
   640     030C                     	;# 
   641     030D                     	;# 
   642     030E                     	;# 
   643     030F                     	;# 
   644     0310                     	;# 
   645     0310                     	;# 
   646     0311                     	;# 
   647     0312                     	;# 
   648     0313                     	;# 
   649     0314                     	;# 
   650     0314                     	;# 
   651     0315                     	;# 
   652     0316                     	;# 
   653     0318                     	;# 
   654     0318                     	;# 
   655     0319                     	;# 
   656     031A                     	;# 
   657     059C                     	;# 
   658     059C                     	;# 
   659     059D                     	;# 
   660     059D                     	;# 
   661     059E                     	;# 
   662     059F                     	;# 
   663     070C                     	;# 
   664     070D                     	;# 
   665     070E                     	;# 
   666     0716                     	;# 
   667     0717                     	;# 
   668     0718                     	;# 
   669     080C                     	;# 
   670     0811                     	;# 
   671     0813                     	;# 
   672     0814                     	;# 
   673     081A                     	;# 
   674     081A                     	;# 
   675     081B                     	;# 
   676     081C                     	;# 
   677     081C                     	;# 
   678     081D                     	;# 
   679     081E                     	;# 
   680     081F                     	;# 
   681     088E                     	;# 
   682     0890                     	;# 
   683     0891                     	;# 
   684     0892                     	;# 
   685     0893                     	;# 
   686     090C                     	;# 
   687     1E8F                     	;# 
   688     1E90                     	;# 
   689     1E91                     	;# 
   690     1E92                     	;# 
   691     1E93                     	;# 
   692     1E9C                     	;# 
   693     1EA1                     	;# 
   694     1EA2                     	;# 
   695     1EC3                     	;# 
   696     1EC5                     	;# 
   697     1EC6                     	;# 
   698     1EC7                     	;# 
   699     1ECB                     	;# 
   700     1ECB                     	;# 
   701     1ECB                     	;# 
   702     1ECC                     	;# 
   703     1ECC                     	;# 
   704     1ECC                     	;# 
   705     1F10                     	;# 
   706     1F11                     	;# 
   707     1F12                     	;# 
   708     1F14                     	;# 
   709     1F15                     	;# 
   710     1F20                     	;# 
   711     1F21                     	;# 
   712     1F22                     	;# 
   713     1F23                     	;# 
   714     1F24                     	;# 
   715     1F25                     	;# 
   716     1F38                     	;# 
   717     1F39                     	;# 
   718     1F3A                     	;# 
   719     1F3B                     	;# 
   720     1F3C                     	;# 
   721     1F3D                     	;# 
   722     1F3E                     	;# 
   723     1F3F                     	;# 
   724     1F4E                     	;# 
   725     1F4F                     	;# 
   726     1F50                     	;# 
   727     1F51                     	;# 
   728     1F52                     	;# 
   729     1F53                     	;# 
   730     1F54                     	;# 
   731     1F55                     	;# 
   732     1FE4                     	;# 
   733     1FE5                     	;# 
   734     1FE6                     	;# 
   735     1FE7                     	;# 
   736     1FE8                     	;# 
   737     1FE8                     	;# 
   738     1FE9                     	;# 
   739     1FEA                     	;# 
   740     1FEB                     	;# 
   741     1FED                     	;# 
   742     1FEE                     	;# 
   743     1FEF                     	;# 
   744     0000                     	;# 
   745     0001                     	;# 
   746     0002                     	;# 
   747     0003                     	;# 
   748     0004                     	;# 
   749     0005                     	;# 
   750     0006                     	;# 
   751     0007                     	;# 
   752     0008                     	;# 
   753     0009                     	;# 
   754     000A                     	;# 
   755     000B                     	;# 
   756     000C                     	;# 
   757     000E                     	;# 
   758     0012                     	;# 
   759     0014                     	;# 
   760     0018                     	;# 
   761     001A                     	;# 
   762     009A                     	;# 
   763     009B                     	;# 
   764     009B                     	;# 
   765     009C                     	;# 
   766     009D                     	;# 
   767     009E                     	;# 
   768     009F                     	;# 
   769     010E                     	;# 
   770     010F                     	;# 
   771     0119                     	;# 
   772     011A                     	;# 
   773     011B                     	;# 
   774     011B                     	;# 
   775     011C                     	;# 
   776     011D                     	;# 
   777     011E                     	;# 
   778     011F                     	;# 
   779     018C                     	;# 
   780     018D                     	;# 
   781     018E                     	;# 
   782     018F                     	;# 
   783     0190                     	;# 
   784     0191                     	;# 
   785     0192                     	;# 
   786     020C                     	;# 
   787     020D                     	;# 
   788     020E                     	;# 
   789     020E                     	;# 
   790     020F                     	;# 
   791     020F                     	;# 
   792     0210                     	;# 
   793     0210                     	;# 
   794     0211                     	;# 
   795     0211                     	;# 
   796     028C                     	;# 
   797     028C                     	;# 
   798     028D                     	;# 
   799     028D                     	;# 
   800     028E                     	;# 
   801     028F                     	;# 
   802     0290                     	;# 
   803     0291                     	;# 
   804     030C                     	;# 
   805     030C                     	;# 
   806     030D                     	;# 
   807     030E                     	;# 
   808     030F                     	;# 
   809     0310                     	;# 
   810     0310                     	;# 
   811     0311                     	;# 
   812     0312                     	;# 
   813     0313                     	;# 
   814     0314                     	;# 
   815     0314                     	;# 
   816     0315                     	;# 
   817     0316                     	;# 
   818     0318                     	;# 
   819     0318                     	;# 
   820     0319                     	;# 
   821     031A                     	;# 
   822     059C                     	;# 
   823     059C                     	;# 
   824     059D                     	;# 
   825     059D                     	;# 
   826     059E                     	;# 
   827     059F                     	;# 
   828     070C                     	;# 
   829     070D                     	;# 
   830     070E                     	;# 
   831     0716                     	;# 
   832     0717                     	;# 
   833     0718                     	;# 
   834     080C                     	;# 
   835     0811                     	;# 
   836     0813                     	;# 
   837     0814                     	;# 
   838     081A                     	;# 
   839     081A                     	;# 
   840     081B                     	;# 
   841     081C                     	;# 
   842     081C                     	;# 
   843     081D                     	;# 
   844     081E                     	;# 
   845     081F                     	;# 
   846     088E                     	;# 
   847     0890                     	;# 
   848     0891                     	;# 
   849     0892                     	;# 
   850     0893                     	;# 
   851     090C                     	;# 
   852     1E8F                     	;# 
   853     1E90                     	;# 
   854     1E91                     	;# 
   855     1E92                     	;# 
   856     1E93                     	;# 
   857     1E9C                     	;# 
   858     1EA1                     	;# 
   859     1EA2                     	;# 
   860     1EC3                     	;# 
   861     1EC5                     	;# 
   862     1EC6                     	;# 
   863     1EC7                     	;# 
   864     1ECB                     	;# 
   865     1ECB                     	;# 
   866     1ECB                     	;# 
   867     1ECC                     	;# 
   868     1ECC                     	;# 
   869     1ECC                     	;# 
   870     1F10                     	;# 
   871     1F11                     	;# 
   872     1F12                     	;# 
   873     1F14                     	;# 
   874     1F15                     	;# 
   875     1F20                     	;# 
   876     1F21                     	;# 
   877     1F22                     	;# 
   878     1F23                     	;# 
   879     1F24                     	;# 
   880     1F25                     	;# 
   881     1F38                     	;# 
   882     1F39                     	;# 
   883     1F3A                     	;# 
   884     1F3B                     	;# 
   885     1F3C                     	;# 
   886     1F3D                     	;# 
   887     1F3E                     	;# 
   888     1F3F                     	;# 
   889     1F4E                     	;# 
   890     1F4F                     	;# 
   891     1F50                     	;# 
   892     1F51                     	;# 
   893     1F52                     	;# 
   894     1F53                     	;# 
   895     1F54                     	;# 
   896     1F55                     	;# 
   897     1FE4                     	;# 
   898     1FE5                     	;# 
   899     1FE6                     	;# 
   900     1FE7                     	;# 
   901     1FE8                     	;# 
   902     1FE8                     	;# 
   903     1FE9                     	;# 
   904     1FEA                     	;# 
   905     1FEB                     	;# 
   906     1FED                     	;# 
   907     1FEE                     	;# 
   908     1FEF                     	;# 
   909     0000                     	;# 
   910     0001                     	;# 
   911     0002                     	;# 
   912     0003                     	;# 
   913     0004                     	;# 
   914     0005                     	;# 
   915     0006                     	;# 
   916     0007                     	;# 
   917     0008                     	;# 
   918     0009                     	;# 
   919     000A                     	;# 
   920     000B                     	;# 
   921     000C                     	;# 
   922     000E                     	;# 
   923     0012                     	;# 
   924     0014                     	;# 
   925     0018                     	;# 
   926     001A                     	;# 
   927     009A                     	;# 
   928     009B                     	;# 
   929     009B                     	;# 
   930     009C                     	;# 
   931     009D                     	;# 
   932     009E                     	;# 
   933     009F                     	;# 
   934     010E                     	;# 
   935     010F                     	;# 
   936     0119                     	;# 
   937     011A                     	;# 
   938     011B                     	;# 
   939     011B                     	;# 
   940     011C                     	;# 
   941     011D                     	;# 
   942     011E                     	;# 
   943     011F                     	;# 
   944     018C                     	;# 
   945     018D                     	;# 
   946     018E                     	;# 
   947     018F                     	;# 
   948     0190                     	;# 
   949     0191                     	;# 
   950     0192                     	;# 
   951     020C                     	;# 
   952     020D                     	;# 
   953     020E                     	;# 
   954     020E                     	;# 
   955     020F                     	;# 
   956     020F                     	;# 
   957     0210                     	;# 
   958     0210                     	;# 
   959     0211                     	;# 
   960     0211                     	;# 
   961     028C                     	;# 
   962     028C                     	;# 
   963     028D                     	;# 
   964     028D                     	;# 
   965     028E                     	;# 
   966     028F                     	;# 
   967     0290                     	;# 
   968     0291                     	;# 
   969     030C                     	;# 
   970     030C                     	;# 
   971     030D                     	;# 
   972     030E                     	;# 
   973     030F                     	;# 
   974     0310                     	;# 
   975     0310                     	;# 
   976     0311                     	;# 
   977     0312                     	;# 
   978     0313                     	;# 
   979     0314                     	;# 
   980     0314                     	;# 
   981     0315                     	;# 
   982     0316                     	;# 
   983     0318                     	;# 
   984     0318                     	;# 
   985     0319                     	;# 
   986     031A                     	;# 
   987     059C                     	;# 
   988     059C                     	;# 
   989     059D                     	;# 
   990     059D                     	;# 
   991     059E                     	;# 
   992     059F                     	;# 
   993     070C                     	;# 
   994     070D                     	;# 
   995     070E                     	;# 
   996     0716                     	;# 
   997     0717                     	;# 
   998     0718                     	;# 
   999     080C                     	;# 
  1000     0811                     	;# 
  1001     0813                     	;# 
  1002     0814                     	;# 
  1003     081A                     	;# 
  1004     081A                     	;# 
  1005     081B                     	;# 
  1006     081C                     	;# 
  1007     081C                     	;# 
  1008     081D                     	;# 
  1009     081E                     	;# 
  1010     081F                     	;# 
  1011     088E                     	;# 
  1012     0890                     	;# 
  1013     0891                     	;# 
  1014     0892                     	;# 
  1015     0893                     	;# 
  1016     090C                     	;# 
  1017     1E8F                     	;# 
  1018     1E90                     	;# 
  1019     1E91                     	;# 
  1020     1E92                     	;# 
  1021     1E93                     	;# 
  1022     1E9C                     	;# 
  1023     1EA1                     	;# 
  1024     1EA2                     	;# 
  1025     1EC3                     	;# 
  1026     1EC5                     	;# 
  1027     1EC6                     	;# 
  1028     1EC7                     	;# 
  1029     1ECB                     	;# 
  1030     1ECB                     	;# 
  1031     1ECB                     	;# 
  1032     1ECC                     	;# 
  1033     1ECC                     	;# 
  1034     1ECC                     	;# 
  1035     1F10                     	;# 
  1036     1F11                     	;# 
  1037     1F12                     	;# 
  1038     1F14                     	;# 
  1039     1F15                     	;# 
  1040     1F20                     	;# 
  1041     1F21                     	;# 
  1042     1F22                     	;# 
  1043     1F23                     	;# 
  1044     1F24                     	;# 
  1045     1F25                     	;# 
  1046     1F38                     	;# 
  1047     1F39                     	;# 
  1048     1F3A                     	;# 
  1049     1F3B                     	;# 
  1050     1F3C                     	;# 
  1051     1F3D                     	;# 
  1052     1F3E                     	;# 
  1053     1F3F                     	;# 
  1054     1F4E                     	;# 
  1055     1F4F                     	;# 
  1056     1F50                     	;# 
  1057     1F51                     	;# 
  1058     1F52                     	;# 
  1059     1F53                     	;# 
  1060     1F54                     	;# 
  1061     1F55                     	;# 
  1062     1FE4                     	;# 
  1063     1FE5                     	;# 
  1064     1FE6                     	;# 
  1065     1FE7                     	;# 
  1066     1FE8                     	;# 
  1067     1FE8                     	;# 
  1068     1FE9                     	;# 
  1069     1FEA                     	;# 
  1070     1FEB                     	;# 
  1071     1FED                     	;# 
  1072     1FEE                     	;# 
  1073     1FEF                     	;# 
  1074     0000                     	;# 
  1075     0001                     	;# 
  1076     0002                     	;# 
  1077     0003                     	;# 
  1078     0004                     	;# 
  1079     0005                     	;# 
  1080     0006                     	;# 
  1081     0007                     	;# 
  1082     0008                     	;# 
  1083     0009                     	;# 
  1084     000A                     	;# 
  1085     000B                     	;# 
  1086     000C                     	;# 
  1087     000E                     	;# 
  1088     0012                     	;# 
  1089     0014                     	;# 
  1090     0018                     	;# 
  1091     001A                     	;# 
  1092     009A                     	;# 
  1093     009B                     	;# 
  1094     009B                     	;# 
  1095     009C                     	;# 
  1096     009D                     	;# 
  1097     009E                     	;# 
  1098     009F                     	;# 
  1099     010E                     	;# 
  1100     010F                     	;# 
  1101     0119                     	;# 
  1102     011A                     	;# 
  1103     011B                     	;# 
  1104     011B                     	;# 
  1105     011C                     	;# 
  1106     011D                     	;# 
  1107     011E                     	;# 
  1108     011F                     	;# 
  1109     018C                     	;# 
  1110     018D                     	;# 
  1111     018E                     	;# 
  1112     018F                     	;# 
  1113     0190                     	;# 
  1114     0191                     	;# 
  1115     0192                     	;# 
  1116     020C                     	;# 
  1117     020D                     	;# 
  1118     020E                     	;# 
  1119     020E                     	;# 
  1120     020F                     	;# 
  1121     020F                     	;# 
  1122     0210                     	;# 
  1123     0210                     	;# 
  1124     0211                     	;# 
  1125     0211                     	;# 
  1126     028C                     	;# 
  1127     028C                     	;# 
  1128     028D                     	;# 
  1129     028D                     	;# 
  1130     028E                     	;# 
  1131     028F                     	;# 
  1132     0290                     	;# 
  1133     0291                     	;# 
  1134     030C                     	;# 
  1135     030C                     	;# 
  1136     030D                     	;# 
  1137     030E                     	;# 
  1138     030F                     	;# 
  1139     0310                     	;# 
  1140     0310                     	;# 
  1141     0311                     	;# 
  1142     0312                     	;# 
  1143     0313                     	;# 
  1144     0314                     	;# 
  1145     0314                     	;# 
  1146     0315                     	;# 
  1147     0316                     	;# 
  1148     0318                     	;# 
  1149     0318                     	;# 
  1150     0319                     	;# 
  1151     031A                     	;# 
  1152     059C                     	;# 
  1153     059C                     	;# 
  1154     059D                     	;# 
  1155     059D                     	;# 
  1156     059E                     	;# 
  1157     059F                     	;# 
  1158     070C                     	;# 
  1159     070D                     	;# 
  1160     070E                     	;# 
  1161     0716                     	;# 
  1162     0717                     	;# 
  1163     0718                     	;# 
  1164     080C                     	;# 
  1165     0811                     	;# 
  1166     0813                     	;# 
  1167     0814                     	;# 
  1168     081A                     	;# 
  1169     081A                     	;# 
  1170     081B                     	;# 
  1171     081C                     	;# 
  1172     081C                     	;# 
  1173     081D                     	;# 
  1174     081E                     	;# 
  1175     081F                     	;# 
  1176     088E                     	;# 
  1177     0890                     	;# 
  1178     0891                     	;# 
  1179     0892                     	;# 
  1180     0893                     	;# 
  1181     090C                     	;# 
  1182     1E8F                     	;# 
  1183     1E90                     	;# 
  1184     1E91                     	;# 
  1185     1E92                     	;# 
  1186     1E93                     	;# 
  1187     1E9C                     	;# 
  1188     1EA1                     	;# 
  1189     1EA2                     	;# 
  1190     1EC3                     	;# 
  1191     1EC5                     	;# 
  1192     1EC6                     	;# 
  1193     1EC7                     	;# 
  1194     1ECB                     	;# 
  1195     1ECB                     	;# 
  1196     1ECB                     	;# 
  1197     1ECC                     	;# 
  1198     1ECC                     	;# 
  1199     1ECC                     	;# 
  1200     1F10                     	;# 
  1201     1F11                     	;# 
  1202     1F12                     	;# 
  1203     1F14                     	;# 
  1204     1F15                     	;# 
  1205     1F20                     	;# 
  1206     1F21                     	;# 
  1207     1F22                     	;# 
  1208     1F23                     	;# 
  1209     1F24                     	;# 
  1210     1F25                     	;# 
  1211     1F38                     	;# 
  1212     1F39                     	;# 
  1213     1F3A                     	;# 
  1214     1F3B                     	;# 
  1215     1F3C                     	;# 
  1216     1F3D                     	;# 
  1217     1F3E                     	;# 
  1218     1F3F                     	;# 
  1219     1F4E                     	;# 
  1220     1F4F                     	;# 
  1221     1F50                     	;# 
  1222     1F51                     	;# 
  1223     1F52                     	;# 
  1224     1F53                     	;# 
  1225     1F54                     	;# 
  1226     1F55                     	;# 
  1227     1FE4                     	;# 
  1228     1FE5                     	;# 
  1229     1FE6                     	;# 
  1230     1FE7                     	;# 
  1231     1FE8                     	;# 
  1232     1FE8                     	;# 
  1233     1FE9                     	;# 
  1234     1FEA                     	;# 
  1235     1FEB                     	;# 
  1236     1FED                     	;# 
  1237     1FEE                     	;# 
  1238     1FEF                     	;# 
  1239     0000                     	;# 
  1240     0001                     	;# 
  1241     0002                     	;# 
  1242     0003                     	;# 
  1243     0004                     	;# 
  1244     0005                     	;# 
  1245     0006                     	;# 
  1246     0007                     	;# 
  1247     0008                     	;# 
  1248     0009                     	;# 
  1249     000A                     	;# 
  1250     000B                     	;# 
  1251     000C                     	;# 
  1252     000E                     	;# 
  1253     0012                     	;# 
  1254     0014                     	;# 
  1255     0018                     	;# 
  1256     001A                     	;# 
  1257     009A                     	;# 
  1258     009B                     	;# 
  1259     009B                     	;# 
  1260     009C                     	;# 
  1261     009D                     	;# 
  1262     009E                     	;# 
  1263     009F                     	;# 
  1264     010E                     	;# 
  1265     010F                     	;# 
  1266     0119                     	;# 
  1267     011A                     	;# 
  1268     011B                     	;# 
  1269     011B                     	;# 
  1270     011C                     	;# 
  1271     011D                     	;# 
  1272     011E                     	;# 
  1273     011F                     	;# 
  1274     018C                     	;# 
  1275     018D                     	;# 
  1276     018E                     	;# 
  1277     018F                     	;# 
  1278     0190                     	;# 
  1279     0191                     	;# 
  1280     0192                     	;# 
  1281     020C                     	;# 
  1282     020D                     	;# 
  1283     020E                     	;# 
  1284     020E                     	;# 
  1285     020F                     	;# 
  1286     020F                     	;# 
  1287     0210                     	;# 
  1288     0210                     	;# 
  1289     0211                     	;# 
  1290     0211                     	;# 
  1291     028C                     	;# 
  1292     028C                     	;# 
  1293     028D                     	;# 
  1294     028D                     	;# 
  1295     028E                     	;# 
  1296     028F                     	;# 
  1297     0290                     	;# 
  1298     0291                     	;# 
  1299     030C                     	;# 
  1300     030C                     	;# 
  1301     030D                     	;# 
  1302     030E                     	;# 
  1303     030F                     	;# 
  1304     0310                     	;# 
  1305     0310                     	;# 
  1306     0311                     	;# 
  1307     0312                     	;# 
  1308     0313                     	;# 
  1309     0314                     	;# 
  1310     0314                     	;# 
  1311     0315                     	;# 
  1312     0316                     	;# 
  1313     0318                     	;# 
  1314     0318                     	;# 
  1315     0319                     	;# 
  1316     031A                     	;# 
  1317     059C                     	;# 
  1318     059C                     	;# 
  1319     059D                     	;# 
  1320     059D                     	;# 
  1321     059E                     	;# 
  1322     059F                     	;# 
  1323     070C                     	;# 
  1324     070D                     	;# 
  1325     070E                     	;# 
  1326     0716                     	;# 
  1327     0717                     	;# 
  1328     0718                     	;# 
  1329     080C                     	;# 
  1330     0811                     	;# 
  1331     0813                     	;# 
  1332     0814                     	;# 
  1333     081A                     	;# 
  1334     081A                     	;# 
  1335     081B                     	;# 
  1336     081C                     	;# 
  1337     081C                     	;# 
  1338     081D                     	;# 
  1339     081E                     	;# 
  1340     081F                     	;# 
  1341     088E                     	;# 
  1342     0890                     	;# 
  1343     0891                     	;# 
  1344     0892                     	;# 
  1345     0893                     	;# 
  1346     090C                     	;# 
  1347     1E8F                     	;# 
  1348     1E90                     	;# 
  1349     1E91                     	;# 
  1350     1E92                     	;# 
  1351     1E93                     	;# 
  1352     1E9C                     	;# 
  1353     1EA1                     	;# 
  1354     1EA2                     	;# 
  1355     1EC3                     	;# 
  1356     1EC5                     	;# 
  1357     1EC6                     	;# 
  1358     1EC7                     	;# 
  1359     1ECB                     	;# 
  1360     1ECB                     	;# 
  1361     1ECB                     	;# 
  1362     1ECC                     	;# 
  1363     1ECC                     	;# 
  1364     1ECC                     	;# 
  1365     1F10                     	;# 
  1366     1F11                     	;# 
  1367     1F12                     	;# 
  1368     1F14                     	;# 
  1369     1F15                     	;# 
  1370     1F20                     	;# 
  1371     1F21                     	;# 
  1372     1F22                     	;# 
  1373     1F23                     	;# 
  1374     1F24                     	;# 
  1375     1F25                     	;# 
  1376     1F38                     	;# 
  1377     1F39                     	;# 
  1378     1F3A                     	;# 
  1379     1F3B                     	;# 
  1380     1F3C                     	;# 
  1381     1F3D                     	;# 
  1382     1F3E                     	;# 
  1383     1F3F                     	;# 
  1384     1F4E                     	;# 
  1385     1F4F                     	;# 
  1386     1F50                     	;# 
  1387     1F51                     	;# 
  1388     1F52                     	;# 
  1389     1F53                     	;# 
  1390     1F54                     	;# 
  1391     1F55                     	;# 
  1392     1FE4                     	;# 
  1393     1FE5                     	;# 
  1394     1FE6                     	;# 
  1395     1FE7                     	;# 
  1396     1FE8                     	;# 
  1397     1FE8                     	;# 
  1398     1FE9                     	;# 
  1399     1FEA                     	;# 
  1400     1FEB                     	;# 
  1401     1FED                     	;# 
  1402     1FEE                     	;# 
  1403     1FEF                     	;# 
  1404     0000                     	;# 
  1405     0001                     	;# 
  1406     0002                     	;# 
  1407     0003                     	;# 
  1408     0004                     	;# 
  1409     0005                     	;# 
  1410     0006                     	;# 
  1411     0007                     	;# 
  1412     0008                     	;# 
  1413     0009                     	;# 
  1414     000A                     	;# 
  1415     000B                     	;# 
  1416     000C                     	;# 
  1417     000E                     	;# 
  1418     0012                     	;# 
  1419     0014                     	;# 
  1420     0018                     	;# 
  1421     001A                     	;# 
  1422     009A                     	;# 
  1423     009B                     	;# 
  1424     009B                     	;# 
  1425     009C                     	;# 
  1426     009D                     	;# 
  1427     009E                     	;# 
  1428     009F                     	;# 
  1429     010E                     	;# 
  1430     010F                     	;# 
  1431     0119                     	;# 
  1432     011A                     	;# 
  1433     011B                     	;# 
  1434     011B                     	;# 
  1435     011C                     	;# 
  1436     011D                     	;# 
  1437     011E                     	;# 
  1438     011F                     	;# 
  1439     018C                     	;# 
  1440     018D                     	;# 
  1441     018E                     	;# 
  1442     018F                     	;# 
  1443     0190                     	;# 
  1444     0191                     	;# 
  1445     0192                     	;# 
  1446     020C                     	;# 
  1447     020D                     	;# 
  1448     020E                     	;# 
  1449     020E                     	;# 
  1450     020F                     	;# 
  1451     020F                     	;# 
  1452     0210                     	;# 
  1453     0210                     	;# 
  1454     0211                     	;# 
  1455     0211                     	;# 
  1456     028C                     	;# 
  1457     028C                     	;# 
  1458     028D                     	;# 
  1459     028D                     	;# 
  1460     028E                     	;# 
  1461     028F                     	;# 
  1462     0290                     	;# 
  1463     0291                     	;# 
  1464     030C                     	;# 
  1465     030C                     	;# 
  1466     030D                     	;# 
  1467     030E                     	;# 
  1468     030F                     	;# 
  1469     0310                     	;# 
  1470     0310                     	;# 
  1471     0311                     	;# 
  1472     0312                     	;# 
  1473     0313                     	;# 
  1474     0314                     	;# 
  1475     0314                     	;# 
  1476     0315                     	;# 
  1477     0316                     	;# 
  1478     0318                     	;# 
  1479     0318                     	;# 
  1480     0319                     	;# 
  1481     031A                     	;# 
  1482     059C                     	;# 
  1483     059C                     	;# 
  1484     059D                     	;# 
  1485     059D                     	;# 
  1486     059E                     	;# 
  1487     059F                     	;# 
  1488     070C                     	;# 
  1489     070D                     	;# 
  1490     070E                     	;# 
  1491     0716                     	;# 
  1492     0717                     	;# 
  1493     0718                     	;# 
  1494     080C                     	;# 
  1495     0811                     	;# 
  1496     0813                     	;# 
  1497     0814                     	;# 
  1498     081A                     	;# 
  1499     081A                     	;# 
  1500     081B                     	;# 
  1501     081C                     	;# 
  1502     081C                     	;# 
  1503     081D                     	;# 
  1504     081E                     	;# 
  1505     081F                     	;# 
  1506     088E                     	;# 
  1507     0890                     	;# 
  1508     0891                     	;# 
  1509     0892                     	;# 
  1510     0893                     	;# 
  1511     090C                     	;# 
  1512     1E8F                     	;# 
  1513     1E90                     	;# 
  1514     1E91                     	;# 
  1515     1E92                     	;# 
  1516     1E93                     	;# 
  1517     1E9C                     	;# 
  1518     1EA1                     	;# 
  1519     1EA2                     	;# 
  1520     1EC3                     	;# 
  1521     1EC5                     	;# 
  1522     1EC6                     	;# 
  1523     1EC7                     	;# 
  1524     1ECB                     	;# 
  1525     1ECB                     	;# 
  1526     1ECB                     	;# 
  1527     1ECC                     	;# 
  1528     1ECC                     	;# 
  1529     1ECC                     	;# 
  1530     1F10                     	;# 
  1531     1F11                     	;# 
  1532     1F12                     	;# 
  1533     1F14                     	;# 
  1534     1F15                     	;# 
  1535     1F20                     	;# 
  1536     1F21                     	;# 
  1537     1F22                     	;# 
  1538     1F23                     	;# 
  1539     1F24                     	;# 
  1540     1F25                     	;# 
  1541     1F38                     	;# 
  1542     1F39                     	;# 
  1543     1F3A                     	;# 
  1544     1F3B                     	;# 
  1545     1F3C                     	;# 
  1546     1F3D                     	;# 
  1547     1F3E                     	;# 
  1548     1F3F                     	;# 
  1549     1F4E                     	;# 
  1550     1F4F                     	;# 
  1551     1F50                     	;# 
  1552     1F51                     	;# 
  1553     1F52                     	;# 
  1554     1F53                     	;# 
  1555     1F54                     	;# 
  1556     1F55                     	;# 
  1557     1FE4                     	;# 
  1558     1FE5                     	;# 
  1559     1FE6                     	;# 
  1560     1FE7                     	;# 
  1561     1FE8                     	;# 
  1562     1FE8                     	;# 
  1563     1FE9                     	;# 
  1564     1FEA                     	;# 
  1565     1FEB                     	;# 
  1566     1FED                     	;# 
  1567     1FEE                     	;# 
  1568     1FEF                     	;# 
  1569                           
  1570 ;; Function _I2C1_SlaveDefWrColInterruptHandler is unused but had its address taken
  1571     0000                     
  1572 ;; Function _I2C1_SlaveDefBusColInterruptHandler is unused but had its address taken
  1573     0788                     _default_in_flash_absaddr	set	1928
  1574     0780                     _status_in_flash_absaddr	set	1920
  1575     0788                     _default_in_flash_absaddr	set	1928
  1576                           
  1577                           	psect	_default_in_flash_text
  1578     0788                     __p_default_in_flash_text:
  1579     0788                     _default_in_flash:
  1580     0788  3400               	retlw	0
  1581     0789  3400               	retlw	0
  1582     078A  3400               	retlw	0
  1583     078B  3400               	retlw	0
  1584     078C  3400               	retlw	0
  1585     078D  3400               	retlw	0
  1586     078E  3400               	retlw	0
  1587     078F  3400               	retlw	0
  1588     0790  3400               	retlw	0
  1589     0791  3400               	retlw	0
  1590     0792  3400               	retlw	0
  1591     0793  3400               	retlw	0
  1592     0794  3400               	retlw	0
  1593     0795  3400               	retlw	0
  1594     0796  3400               	retlw	0
  1595     0797  3400               	retlw	0
  1596     0798  3400               	retlw	0
  1597     0799  3400               	retlw	0
  1598     079A  3400               	retlw	0
  1599     079B  3400               	retlw	0
  1600     079C  3400               	retlw	0
  1601     079D  3400               	retlw	0
  1602     079E  3400               	retlw	0
  1603     079F  3400               	retlw	0
  1604     07A0  3400               	retlw	0
  1605     07A1  3400               	retlw	0
  1606     07A2  3400               	retlw	0
  1607     07A3  3400               	retlw	0
  1608     07A4  3400               	retlw	0
  1609     07A5  3400               	retlw	0
  1610     07A6  3400               	retlw	0
  1611     07A7  3400               	retlw	0
  1612     07A8  3400               	retlw	0
  1613     07A9  3400               	retlw	0
  1614     07AA  3400               	retlw	0
  1615     07AB  3400               	retlw	0
  1616     07AC  3400               	retlw	0
  1617     07AD  3400               	retlw	0
  1618     07AE  3400               	retlw	0
  1619     07AF  3400               	retlw	0
  1620     07B0  3400               	retlw	0
  1621     07B1  3400               	retlw	0
  1622     07B2  3400               	retlw	0
  1623     07B3  3400               	retlw	0
  1624     07B4  3400               	retlw	0
  1625     07B5  3400               	retlw	0
  1626     07B6  3400               	retlw	0
  1627     07B7  3400               	retlw	0
  1628     07B8  3400               	retlw	0
  1629     07B9  3400               	retlw	0
  1630     07BA  3400               	retlw	0
  1631     07BB  3400               	retlw	0
  1632     07BC  3400               	retlw	0
  1633     07BD  3400               	retlw	0
  1634     07BE  3400               	retlw	0
  1635     07BF  3400               	retlw	0
  1636     07C0  3400               	retlw	0
  1637     07C1  3400               	retlw	0
  1638     07C2  3400               	retlw	0
  1639     07C3  3400               	retlw	0
  1640     07C4  3400               	retlw	0
  1641     07C5  3400               	retlw	0
  1642     07C6  3400               	retlw	0
  1643     07C7  3400               	retlw	0
  1644     07C8  3400               	retlw	0
  1645     07C9  3400               	retlw	0
  1646     07CA  3400               	retlw	0
  1647     07CB  3400               	retlw	0
  1648     07CC  3400               	retlw	0
  1649     07CD  3400               	retlw	0
  1650     07CE  3400               	retlw	0
  1651     07CF  3400               	retlw	0
  1652     07D0                     __end_of_default_in_flash:
  1653     0780                     _status_in_flash_absaddr	set	1920
  1654                           
  1655                           	psect	_status_in_flash_text
  1656     0780                     __p_status_in_flash_text:
  1657     0780                     _status_in_flash:
  1658     0780  3400               	retlw	0
  1659     0781  3400               	retlw	0
  1660     0782  3400               	retlw	0
  1661     0783  3400               	retlw	0
  1662     0784  3400               	retlw	0
  1663     0785  3400               	retlw	0
  1664     0786  3400               	retlw	0
  1665     0787  3400               	retlw	0
  1666     0788                     __end_of_status_in_flash:
  1667                           
  1668                           	psect	nvBANK0
  1669     004D                     __pnvBANK0:
  1670     004D                     _TMR0_InterruptHandler:
  1671     004D                     	ds	2
  1672     0018                     _LATAbits	set	24
  1673     000B                     _INTCONbits	set	11
  1674     0014                     _TRISC	set	20
  1675     0012                     _TRISA	set	18
  1676     001A                     _LATC	set	26
  1677     0018                     _LATA	set	24
  1678     000C                     _PORTA	set	12
  1679     000E                     _PORTC	set	14
  1680     018C                     _SSP1BUF	set	396
  1681     0191                     _SSP1CON2bits	set	401
  1682     018F                     _SSP1STATbits	set	399
  1683     018E                     _SSP1MSK	set	398
  1684     018D                     _SSP1ADD	set	397
  1685     0190                     _SSP1CON1bits	set	400
  1686     0191                     _SSP1CON2	set	401
  1687     0190                     _SSP1CON1	set	400
  1688     018F                     _SSP1STAT	set	399
  1689     059E                     _T0CON0bits	set	1438
  1690     059E                     _T0CON0	set	1438
  1691     059C                     _TMR0L	set	1436
  1692     059D                     _TMR0H	set	1437
  1693     059F                     _T0CON1	set	1439
  1694     070D                     _PIR1bits	set	1805
  1695     0717                     _PIE1bits	set	1815
  1696     070C                     _PIR0bits	set	1804
  1697     0716                     _PIE0bits	set	1814
  1698     080C                     _WDTCON	set	2060
  1699     081F                     _NVMCON2	set	2079
  1700     081C                     _NVMDATL	set	2076
  1701     081D                     _NVMDATH	set	2077
  1702     081E                     _NVMCON1bits	set	2078
  1703     081B                     _NVMADRH	set	2075
  1704     081A                     _NVMADRL	set	2074
  1705     0892                     _OSCTUNE	set	2194
  1706     0893                     _OSCFRQ	set	2195
  1707     0891                     _OSCEN	set	2193
  1708     1EC6                     _SSP1DATPPS	set	7878
  1709     1EC5                     _SSP1CLKPPS	set	7877
  1710     1F21                     _RC1PPS	set	7969
  1711     1F20                     _RC0PPS	set	7968
  1712     1F52                     _INLVLC	set	8018
  1713     1F3C                     _INLVLA	set	7996
  1714     1F51                     _SLRCONC	set	8017
  1715     1F3B                     _SLRCONA	set	7995
  1716     1F50                     _ODCONC	set	8016
  1717     1F3A                     _ODCONA	set	7994
  1718     1F4F                     _WPUC	set	8015
  1719     1F39                     _WPUA	set	7993
  1720     1F38                     _ANSELA	set	7992
  1721     1F4E                     _ANSELC	set	8014
  1722                           
  1723                           	psect	cinit
  1724     07D0                     start_initialization:	
  1725                           ; #config settings
  1726                           
  1727     07D0                     __initialization:
  1728                           
  1729                           ; Clear objects allocated to COMMON
  1730     07D0  01F8               	clrf	__pbssCOMMON& (0+127)
  1731     07D1  01F9               	clrf	(__pbssCOMMON+1)& (0+127)
  1732     07D2  01FA               	clrf	(__pbssCOMMON+2)& (0+127)
  1733                           
  1734                           ; Clear objects allocated to BANK0
  1735     07D3  3039               	movlw	low __pbssBANK0
  1736     07D4  0084               	movwf	4
  1737     07D5  3000               	movlw	high __pbssBANK0
  1738     07D6  0085               	movwf	5
  1739     07D7  3014               	movlw	20
  1740     07D8  3182  22F7  3187   	fcall	clear_ram0
  1741     07DB                     end_of_initialization:	
  1742                           ;End of C runtime variable initialization code
  1743                           
  1744     07DB                     __end_of__initialization:
  1745     07DB  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  1746     07DC  0140               	movlb	0
  1747     07DD  2FDE               	ljmp	_main	;jump to C main() function
  1748                           
  1749                           	psect	bssCOMMON
  1750     0078                     __pbssCOMMON:
  1751     0078                     _i2cReadCnt:
  1752     0078                     	ds	1
  1753     0079                     _i2c1WrData:
  1754     0079                     	ds	1
  1755     007A                     _LED_timer:
  1756     007A                     	ds	1
  1757                           
  1758                           	psect	bssBANK0
  1759     0039                     __pbssBANK0:
  1760     0039                     _i2cDataRead:
  1761     0039                     	ds	3
  1762     003C                     memory_initialize@ramBuff:
  1763     003C                     	ds	2
  1764     003E                     _I2C1_SlaveWrColInterruptHandler:
  1765     003E                     	ds	2
  1766     0040                     _I2C1_SlaveBusColInterruptHandler:
  1767     0040                     	ds	2
  1768     0042                     _I2C1_SlaveAddrInterruptHandler:
  1769     0042                     	ds	2
  1770     0044                     _I2C1_SlaveWrInterruptHandler:
  1771     0044                     	ds	2
  1772     0046                     _I2C1_SlaveRdInterruptHandler:
  1773     0046                     	ds	2
  1774     0048                     _MSSP1_InterruptHandler:
  1775     0048                     	ds	2
  1776     004A                     _i2c1SlaveState:
  1777     004A                     	ds	1
  1778     004B                     _i2c1SlaveAddr:
  1779     004B                     	ds	1
  1780     004C                     _i2c1RdData:
  1781     004C                     	ds	1
  1782                           
  1783                           	psect	clrtext
  1784     02F7                     clear_ram0:	
  1785                           ;	Called with FSR0 containing the base address, and
  1786                           ;	WREG with the size to clear
  1787                           
  1788     02F7  0064               	clrwdt	;clear the watchdog before getting into this loop
  1789     02F8                     clrloop0:
  1790     02F8  0180               	clrf	0	;clear RAM location pointed to by FSR
  1791     02F9  3101               	addfsr 0,1
  1792     02FA  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  1793     02FB  2AF8               	goto	clrloop0	;have we reached the end yet?
  1794     02FC  3400               	retlw	0	;all done for this memory range, return
  1795                           
  1796                           	psect	cstackCOMMON
  1797     0070                     __pcstackCOMMON:
  1798     0070                     ?_TMR0_ISR:
  1799     0070                     ?_I2C1_Isr:	
  1800                           ; 1 bytes @ 0x0
  1801                           
  1802     0070                     ?_I2C1_SlaveDefWrInterruptHandler:	
  1803                           ; 1 bytes @ 0x0
  1804                           
  1805     0070                     ?_I2C1_SlaveDefRdInterruptHandler:	
  1806                           ; 1 bytes @ 0x0
  1807                           
  1808     0070                     ??_I2C1_SlaveDefRdInterruptHandler:	
  1809                           ; 1 bytes @ 0x0
  1810                           
  1811     0070                     ?_I2C1_SlaveDefAddrInterruptHandler:	
  1812                           ; 1 bytes @ 0x0
  1813                           
  1814     0070                     ??_I2C1_SlaveDefAddrInterruptHandler:	
  1815                           ; 1 bytes @ 0x0
  1816                           
  1817     0070                     ?_I2C1_SlaveGetRxData:	
  1818                           ; 1 bytes @ 0x0
  1819                           
  1820     0070                     ??_I2C1_SlaveGetRxData:	
  1821                           ; 1 bytes @ 0x0
  1822                           
  1823     0070                     ?_I2C1_SlaveSendTxData:	
  1824                           ; 1 bytes @ 0x0
  1825                           
  1826     0070                     ??_I2C1_SlaveSendTxData:	
  1827                           ; 1 bytes @ 0x0
  1828                           
  1829     0070                     ?_I2C1_SlaveIsRead:	
  1830                           ; 1 bytes @ 0x0
  1831                           
  1832     0070                     ??_I2C1_SlaveIsRead:	
  1833                           ; 1 bytes @ 0x0
  1834                           
  1835     0070                     ?_I2C1_SlaveClearIrq:	
  1836                           ; 1 bytes @ 0x0
  1837                           
  1838     0070                     ??_I2C1_SlaveClearIrq:	
  1839                           ; 1 bytes @ 0x0
  1840                           
  1841     0070                     ?_I2C1_SlaveIsAddr:	
  1842                           ; 1 bytes @ 0x0
  1843                           
  1844     0070                     ??_I2C1_SlaveIsAddr:	
  1845                           ; 1 bytes @ 0x0
  1846                           
  1847     0070                     ?_I2C1_SlaveAddrCallBack:	
  1848                           ; 1 bytes @ 0x0
  1849                           
  1850     0070                     ??_I2C1_SlaveAddrCallBack:	
  1851                           ; 1 bytes @ 0x0
  1852                           
  1853     0070                     ?_I2C1_SlaveIsTxBufEmpty:	
  1854                           ; 1 bytes @ 0x0
  1855                           
  1856     0070                     ??_I2C1_SlaveIsTxBufEmpty:	
  1857                           ; 1 bytes @ 0x0
  1858                           
  1859     0070                     ?_I2C1_SlaveWrCallBack:	
  1860                           ; 1 bytes @ 0x0
  1861                           
  1862     0070                     ?_I2C1_SlaveIsRxBufFull:	
  1863                           ; 1 bytes @ 0x0
  1864                           
  1865     0070                     ??_I2C1_SlaveIsRxBufFull:	
  1866                           ; 1 bytes @ 0x0
  1867                           
  1868     0070                     ?_I2C1_SlaveRdCallBack:	
  1869                           ; 1 bytes @ 0x0
  1870                           
  1871     0070                     ??_I2C1_SlaveRdCallBack:	
  1872                           ; 1 bytes @ 0x0
  1873                           
  1874     0070                     ?_I2C1_SlaveReleaseClock:	
  1875                           ; 1 bytes @ 0x0
  1876                           
  1877     0070                     ??_I2C1_SlaveReleaseClock:	
  1878                           ; 1 bytes @ 0x0
  1879                           
  1880     0070                     ?_TMR0_DefaultInterruptHandler:	
  1881                           ; 1 bytes @ 0x0
  1882                           
  1883     0070                     ??_TMR0_DefaultInterruptHandler:	
  1884                           ; 1 bytes @ 0x0
  1885                           
  1886     0070                     ?_OSCILLATOR_Initialize:	
  1887                           ; 1 bytes @ 0x0
  1888                           
  1889     0070                     ?_WDT_Initialize:	
  1890                           ; 1 bytes @ 0x0
  1891                           
  1892     0070                     ?_memory_initialize:	
  1893                           ; 1 bytes @ 0x0
  1894                           
  1895     0070                     ?_getSensorBoardType:	
  1896                           ; 1 bytes @ 0x0
  1897                           
  1898     0070                     ?_SensorBoardType_validation:	
  1899                           ; 1 bytes @ 0x0
  1900                           
  1901     0070                     ?_PIN_MANAGER_Initialize:	
  1902                           ; 1 bytes @ 0x0
  1903                           
  1904     0070                     ?_INTERRUPT_InterruptManager:	
  1905                           ; 1 bytes @ 0x0
  1906                           
  1907     0070                     ?_I2C1_Initialize:	
  1908                           ; 1 bytes @ 0x0
  1909                           
  1910     0070                     ?_TMR0_Initialize:	
  1911                           ; 1 bytes @ 0x0
  1912                           
  1913     0070                     ?_SYSTEM_Initialize:	
  1914                           ; 1 bytes @ 0x0
  1915                           
  1916     0070                     ?_main:	
  1917                           ; 1 bytes @ 0x0
  1918                           
  1919     0070                     memory_initialize@TAG:	
  1920                           ; 1 bytes @ 0x0
  1921                           
  1922     0070                     I2C1_SlaveSendTxData@data:	
  1923                           ; 1 bytes @ 0x0
  1924                           
  1925                           
  1926                           ; 1 bytes @ 0x0
  1927     0070                     	ds	1
  1928     0071                     ??_TMR0_ISR:
  1929     0071                     ??_I2C1_Isr:	
  1930                           ; 1 bytes @ 0x1
  1931                           
  1932     0071                     ??_I2C1_SlaveDefWrInterruptHandler:	
  1933                           ; 1 bytes @ 0x1
  1934                           
  1935     0071                     ??_I2C1_SlaveWrCallBack:	
  1936                           ; 1 bytes @ 0x1
  1937                           
  1938                           
  1939                           ; 1 bytes @ 0x1
  1940     0071                     	ds	2
  1941     0073                     ?_TMR0_SetInterruptHandler:
  1942     0073                     ?_FLASH_EraseBlock:	
  1943                           ; 1 bytes @ 0x3
  1944                           
  1945     0073                     ??_OSCILLATOR_Initialize:	
  1946                           ; 1 bytes @ 0x3
  1947                           
  1948     0073                     ??_WDT_Initialize:	
  1949                           ; 1 bytes @ 0x3
  1950                           
  1951     0073                     ??_getSensorBoardType:	
  1952                           ; 1 bytes @ 0x3
  1953                           
  1954     0073                     ??_SensorBoardType_validation:	
  1955                           ; 1 bytes @ 0x3
  1956                           
  1957     0073                     ??_PIN_MANAGER_Initialize:	
  1958                           ; 1 bytes @ 0x3
  1959                           
  1960     0073                     ??_INTERRUPT_InterruptManager:	
  1961                           ; 1 bytes @ 0x3
  1962                           
  1963     0073                     ??_I2C1_Initialize:	
  1964                           ; 1 bytes @ 0x3
  1965                           
  1966     0073                     ?_FLASH_ReadWord:	
  1967                           ; 1 bytes @ 0x3
  1968                           
  1969     0073                     SensorBoardType_validation@SensorBoardType:	
  1970                           ; 2 bytes @ 0x3
  1971                           
  1972     0073                     TMR0_SetInterruptHandler@InterruptHandler:	
  1973                           ; 1 bytes @ 0x3
  1974                           
  1975     0073                     FLASH_ReadWord@flashAddr:	
  1976                           ; 2 bytes @ 0x3
  1977                           
  1978     0073                     FLASH_EraseBlock@startAddr:	
  1979                           ; 2 bytes @ 0x3
  1980                           
  1981                           
  1982                           ; 2 bytes @ 0x3
  1983     0073                     	ds	2
  1984     0075                     ??_FLASH_ReadWord:
  1985     0075                     ??_TMR0_SetInterruptHandler:	
  1986                           ; 1 bytes @ 0x5
  1987                           
  1988     0075                     ??_FLASH_EraseBlock:	
  1989                           ; 1 bytes @ 0x5
  1990                           
  1991     0075                     ??_TMR0_Initialize:	
  1992                           ; 1 bytes @ 0x5
  1993                           
  1994     0075                     ??_SYSTEM_Initialize:	
  1995                           ; 1 bytes @ 0x5
  1996                           
  1997     0075                     FLASH_ReadWord@GIEBitValue:	
  1998                           ; 1 bytes @ 0x5
  1999                           
  2000     0075                     FLASH_EraseBlock@GIEBitValue:	
  2001                           ; 1 bytes @ 0x5
  2002                           
  2003                           
  2004                           ; 1 bytes @ 0x5
  2005     0075                     	ds	1
  2006     0076                     ??_FLASH_WriteWord:
  2007                           
  2008                           ; 1 bytes @ 0x6
  2009     0076                     	ds	2
  2010     0078                     ??_memory_initialize:
  2011                           
  2012                           	psect	cstackBANK0
  2013     0020                     __pcstackBANK0:	
  2014                           ; 1 bytes @ 0x8
  2015                           
  2016     0020                     ?_FLASH_WriteBlock:
  2017     0020                     FLASH_WriteBlock@writeAddr:	
  2018                           ; 1 bytes @ 0x0
  2019                           
  2020                           
  2021                           ; 2 bytes @ 0x0
  2022     0020                     	ds	2
  2023     0022                     FLASH_WriteBlock@flashWordArray:
  2024                           
  2025                           ; 2 bytes @ 0x2
  2026     0022                     	ds	2
  2027     0024                     ??_FLASH_WriteBlock:
  2028                           
  2029                           ; 1 bytes @ 0x4
  2030     0024                     	ds	4
  2031     0028                     FLASH_WriteBlock@blockStartAddr:
  2032                           
  2033                           ; 2 bytes @ 0x8
  2034     0028                     	ds	2
  2035     002A                     FLASH_WriteBlock@GIEBitValue:
  2036                           
  2037                           ; 1 bytes @ 0xA
  2038     002A                     	ds	1
  2039     002B                     FLASH_WriteBlock@i:
  2040                           
  2041                           ; 1 bytes @ 0xB
  2042     002B                     	ds	1
  2043     002C                     ?_FLASH_WriteWord:
  2044     002C                     FLASH_WriteWord@flashAddr:	
  2045                           ; 1 bytes @ 0xC
  2046                           
  2047                           
  2048                           ; 2 bytes @ 0xC
  2049     002C                     	ds	2
  2050     002E                     FLASH_WriteWord@ramBuf:
  2051                           
  2052                           ; 2 bytes @ 0xE
  2053     002E                     	ds	2
  2054     0030                     FLASH_WriteWord@word:
  2055                           
  2056                           ; 2 bytes @ 0x10
  2057     0030                     	ds	2
  2058     0032                     FLASH_WriteWord@offset:
  2059                           
  2060                           ; 1 bytes @ 0x12
  2061     0032                     	ds	1
  2062     0033                     FLASH_WriteWord@blockStartAddr:
  2063                           
  2064                           ; 2 bytes @ 0x13
  2065     0033                     	ds	2
  2066     0035                     FLASH_WriteWord@i:
  2067                           
  2068                           ; 1 bytes @ 0x15
  2069     0035                     	ds	1
  2070     0036                     ??_main:
  2071                           
  2072                           ; 1 bytes @ 0x16
  2073     0036                     	ds	1
  2074     0037                     main@i:
  2075                           
  2076                           ; 1 bytes @ 0x17
  2077     0037                     	ds	1
  2078     0038                     main@TAG:
  2079                           
  2080                           ; 1 bytes @ 0x18
  2081     0038                     	ds	1
  2082                           
  2083                           	psect	maintext
  2084     07DE                     __pmaintext:	
  2085 ;;
  2086 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  2087 ;;
  2088 ;; *************** function _main *****************
  2089 ;; Defined at:
  2090 ;;		line 49 in file "main.c"
  2091 ;; Parameters:    Size  Location     Type
  2092 ;;		None
  2093 ;; Auto vars:     Size  Location     Type
  2094 ;;  i               1   23[BANK0 ] unsigned char 
  2095 ;;  TAG             1   24[BANK0 ] unsigned char 
  2096 ;; Return value:  Size  Location     Type
  2097 ;;                  1    wreg      void 
  2098 ;; Registers used:
  2099 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2100 ;; Tracked objects:
  2101 ;;		On entry : B3F/0
  2102 ;;		On exit  : 0/0
  2103 ;;		Unchanged: 0/0
  2104 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2105 ;;      Params:         0       0       0       0
  2106 ;;      Locals:         0       2       0       0
  2107 ;;      Temps:          0       1       0       0
  2108 ;;      Totals:         0       3       0       0
  2109 ;;Total ram usage:        3 bytes
  2110 ;; Hardware stack levels required when called: 9
  2111 ;; This function calls:
  2112 ;;		_SYSTEM_Initialize
  2113 ;;		_SensorBoardType_validation
  2114 ;;		_getSensorBoardType
  2115 ;;		_memory_initialize
  2116 ;; This function is called by:
  2117 ;;		Startup code after reset
  2118 ;; This function uses a non-reentrant model
  2119 ;;
  2120                           
  2121     07DE                     _main:	
  2122                           ;psect for function _main
  2123                           
  2124     07DE                     l2061:	
  2125                           ;incstack = 0
  2126                           ; Regs used in _main: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2127                           
  2128                           
  2129                           ;main.c: 52:     SYSTEM_Initialize();
  2130     07DE  3182  2284  3187   	fcall	_SYSTEM_Initialize
  2131                           
  2132                           ;main.c: 54:     uint8_t TAG = getSensorBoardType();
  2133     07E1  3182  22A3  3187   	fcall	_getSensorBoardType
  2134     07E4  0140               	movlb	0	; select bank0
  2135     07E5  00B8               	movwf	main@TAG
  2136                           
  2137                           ;main.c: 55:     if(SensorBoardType_validation(TAG)){
  2138     07E6  0838               	movf	main@TAG,w
  2139     07E7  3182  2274  3187   	fcall	_SensorBoardType_validation
  2140     07EA  3A00               	xorlw	0
  2141     07EB  1903               	skipnz
  2142     07EC  2FEE               	goto	u701
  2143     07ED  2FEF               	goto	u700
  2144     07EE                     u701:
  2145     07EE  2FF4               	goto	l2065
  2146     07EF                     u700:
  2147     07EF                     l2063:
  2148                           
  2149                           ;main.c: 57:         memory_initialize(TAG);
  2150     07EF  0140               	movlb	0	; select bank0
  2151     07F0  0838               	movf	main@TAG,w
  2152     07F1  3180  2032  3187   	fcall	_memory_initialize
  2153     07F4                     l2065:
  2154                           
  2155                           ;main.c: 70:     (INTCONbits.GIE = 1);
  2156     07F4  178B               	bsf	11,7	;volatile
  2157     07F5                     l2067:
  2158                           
  2159                           ;main.c: 73:     (INTCONbits.PEIE = 1);
  2160     07F5  170B               	bsf	11,6	;volatile
  2161     07F6                     l2069:
  2162                           
  2163                           ;main.c: 82:     {;main.c: 84:         uint8_t i = 10;
  2164     07F6  300A               	movlw	10
  2165     07F7  0140               	movlb	0	; select bank0
  2166     07F8  00B7               	movwf	main@i
  2167     07F9                     l2071:
  2168                           
  2169                           ;main.c: 85:         i++;
  2170     07F9  3001               	movlw	1
  2171     07FA  00B6               	movwf	??_main
  2172     07FB  0836               	movf	??_main,w
  2173     07FC  07B7               	addwf	main@i,f
  2174     07FD                     l2073:
  2175     07FD  2FF6               	goto	l2069
  2176     07FE  2831               	ljmp	start
  2177     07FF                     __end_of_main:
  2178                           
  2179                           	psect	text1
  2180     0032                     __ptext1:	
  2181 ;; *************** function _memory_initialize *****************
  2182 ;; Defined at:
  2183 ;;		line 21 in file "flash_memory_filling.c"
  2184 ;; Parameters:    Size  Location     Type
  2185 ;;  TAG             1    wreg     unsigned char 
  2186 ;; Auto vars:     Size  Location     Type
  2187 ;;  TAG             1    0[COMMON] unsigned char 
  2188 ;; Return value:  Size  Location     Type
  2189 ;;                  1    wreg      void 
  2190 ;; Registers used:
  2191 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2192 ;; Tracked objects:
  2193 ;;		On entry : 0/0
  2194 ;;		On exit  : 0/0
  2195 ;;		Unchanged: 0/0
  2196 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2197 ;;      Params:         0       0       0       0
  2198 ;;      Locals:         0       0       0       0
  2199 ;;      Temps:          0       0       0       0
  2200 ;;      Totals:         0       0       0       0
  2201 ;;Total ram usage:        0 bytes
  2202 ;; Hardware stack levels used: 1
  2203 ;; Hardware stack levels required when called: 8
  2204 ;; This function calls:
  2205 ;;		_FLASH_ReadWord
  2206 ;;		_FLASH_WriteWord
  2207 ;; This function is called by:
  2208 ;;		_main
  2209 ;; This function uses a non-reentrant model
  2210 ;;
  2211                           
  2212     0032                     _memory_initialize:	
  2213                           ;psect for function _memory_initialize
  2214                           
  2215     0032                     l2057:	
  2216                           ;incstack = 0
  2217                           ; Regs used in _memory_initialize: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2218                           
  2219                           
  2220                           ;flash_memory_filling.c: 21: void memory_initialize(uint8_t TAG);flash_memory_filling.c:
      +                           22: {;flash_memory_filling.c: 24:     static uint16_t *ramBuff;;flash_memory_filling.c:
      +                           26:     if(FLASH_ReadWord(0x780) != 0x55)
  2221     0032  3080               	movlw	128
  2222     0033  00F3               	movwf	FLASH_ReadWord@flashAddr
  2223     0034  3007               	movlw	7
  2224     0035  00F4               	movwf	FLASH_ReadWord@flashAddr+1
  2225     0036  3182  221E  3180   	fcall	_FLASH_ReadWord
  2226     0039  3055               	movlw	85
  2227     003A  0673               	xorwf	?_FLASH_ReadWord,w
  2228     003B  0474               	iorwf	?_FLASH_ReadWord+1,w
  2229     003C  1903               	btfsc	3,2
  2230     003D  283F               	goto	u691
  2231     003E  2840               	goto	u690
  2232     003F                     u691:
  2233     003F  28B1               	goto	l32
  2234     0040                     u690:
  2235     0040                     l2059:
  2236                           
  2237                           ;flash_memory_filling.c: 27:     {;flash_memory_filling.c: 31:         FLASH_WriteWord(0
      +                          x780, ramBuff, 0x55);
  2238     0040  3080               	movlw	128
  2239     0041  0140               	movlb	0	; select bank0
  2240     0042  00AC               	movwf	FLASH_WriteWord@flashAddr
  2241     0043  3007               	movlw	7
  2242     0044  00AD               	movwf	FLASH_WriteWord@flashAddr+1
  2243     0045  3000               	movlw	0
  2244     0046  00AE               	movwf	FLASH_WriteWord@ramBuf
  2245     0047  00AF               	movwf	FLASH_WriteWord@ramBuf+1
  2246     0048  3055               	movlw	85
  2247     0049  00B0               	movwf	FLASH_WriteWord@word
  2248     004A  3000               	movlw	0
  2249     004B  00B1               	movwf	FLASH_WriteWord@word+1
  2250     004C  3181  2195  3180   	fcall	_FLASH_WriteWord
  2251                           
  2252                           ;flash_memory_filling.c: 32:         FLASH_WriteWord(0x780 + 1, ramBuff, 0x00 );
  2253     004F  3081               	movlw	129
  2254     0050  0140               	movlb	0	; select bank0
  2255     0051  00AC               	movwf	FLASH_WriteWord@flashAddr
  2256     0052  3007               	movlw	7
  2257     0053  00AD               	movwf	FLASH_WriteWord@flashAddr+1
  2258     0054  3000               	movlw	0
  2259     0055  00AE               	movwf	FLASH_WriteWord@ramBuf
  2260     0056  00AF               	movwf	FLASH_WriteWord@ramBuf+1
  2261     0057  3000               	movlw	0
  2262     0058  00B0               	movwf	FLASH_WriteWord@word
  2263     0059  00B1               	movwf	FLASH_WriteWord@word+1
  2264     005A  3181  2195  3180   	fcall	_FLASH_WriteWord
  2265                           
  2266                           ;flash_memory_filling.c: 33:         FLASH_WriteWord(0x780 + 2, ramBuff, 0);
  2267     005D  3082               	movlw	130
  2268     005E  0140               	movlb	0	; select bank0
  2269     005F  00AC               	movwf	FLASH_WriteWord@flashAddr
  2270     0060  3007               	movlw	7
  2271     0061  00AD               	movwf	FLASH_WriteWord@flashAddr+1
  2272     0062  3000               	movlw	0
  2273     0063  00AE               	movwf	FLASH_WriteWord@ramBuf
  2274     0064  00AF               	movwf	FLASH_WriteWord@ramBuf+1
  2275     0065  3000               	movlw	0
  2276     0066  00B0               	movwf	FLASH_WriteWord@word
  2277     0067  00B1               	movwf	FLASH_WriteWord@word+1
  2278     0068  3181  2195  3180   	fcall	_FLASH_WriteWord
  2279                           
  2280                           ;flash_memory_filling.c: 34:         FLASH_WriteWord(0x780 + 3, ramBuff, 0);
  2281     006B  3083               	movlw	131
  2282     006C  0140               	movlb	0	; select bank0
  2283     006D  00AC               	movwf	FLASH_WriteWord@flashAddr
  2284     006E  3007               	movlw	7
  2285     006F  00AD               	movwf	FLASH_WriteWord@flashAddr+1
  2286     0070  3000               	movlw	0
  2287     0071  00AE               	movwf	FLASH_WriteWord@ramBuf
  2288     0072  00AF               	movwf	FLASH_WriteWord@ramBuf+1
  2289     0073  3000               	movlw	0
  2290     0074  00B0               	movwf	FLASH_WriteWord@word
  2291     0075  00B1               	movwf	FLASH_WriteWord@word+1
  2292     0076  3181  2195  3180   	fcall	_FLASH_WriteWord
  2293                           
  2294                           ;flash_memory_filling.c: 35:         FLASH_WriteWord(0x780 + 4, ramBuff, 0);
  2295     0079  3084               	movlw	132
  2296     007A  0140               	movlb	0	; select bank0
  2297     007B  00AC               	movwf	FLASH_WriteWord@flashAddr
  2298     007C  3007               	movlw	7
  2299     007D  00AD               	movwf	FLASH_WriteWord@flashAddr+1
  2300     007E  3000               	movlw	0
  2301     007F  00AE               	movwf	FLASH_WriteWord@ramBuf
  2302     0080  00AF               	movwf	FLASH_WriteWord@ramBuf+1
  2303     0081  3000               	movlw	0
  2304     0082  00B0               	movwf	FLASH_WriteWord@word
  2305     0083  00B1               	movwf	FLASH_WriteWord@word+1
  2306     0084  3181  2195  3180   	fcall	_FLASH_WriteWord
  2307                           
  2308                           ;flash_memory_filling.c: 36:         FLASH_WriteWord(0x780 + 5, ramBuff, 0);
  2309     0087  3085               	movlw	133
  2310     0088  0140               	movlb	0	; select bank0
  2311     0089  00AC               	movwf	FLASH_WriteWord@flashAddr
  2312     008A  3007               	movlw	7
  2313     008B  00AD               	movwf	FLASH_WriteWord@flashAddr+1
  2314     008C  3000               	movlw	0
  2315     008D  00AE               	movwf	FLASH_WriteWord@ramBuf
  2316     008E  00AF               	movwf	FLASH_WriteWord@ramBuf+1
  2317     008F  3000               	movlw	0
  2318     0090  00B0               	movwf	FLASH_WriteWord@word
  2319     0091  00B1               	movwf	FLASH_WriteWord@word+1
  2320     0092  3181  2195  3180   	fcall	_FLASH_WriteWord
  2321                           
  2322                           ;flash_memory_filling.c: 37:         FLASH_WriteWord(0x780 + 6, ramBuff, 0);
  2323     0095  3086               	movlw	134
  2324     0096  0140               	movlb	0	; select bank0
  2325     0097  00AC               	movwf	FLASH_WriteWord@flashAddr
  2326     0098  3007               	movlw	7
  2327     0099  00AD               	movwf	FLASH_WriteWord@flashAddr+1
  2328     009A  3000               	movlw	0
  2329     009B  00AE               	movwf	FLASH_WriteWord@ramBuf
  2330     009C  00AF               	movwf	FLASH_WriteWord@ramBuf+1
  2331     009D  3000               	movlw	0
  2332     009E  00B0               	movwf	FLASH_WriteWord@word
  2333     009F  00B1               	movwf	FLASH_WriteWord@word+1
  2334     00A0  3181  2195  3180   	fcall	_FLASH_WriteWord
  2335                           
  2336                           ;flash_memory_filling.c: 38:         FLASH_WriteWord(0x780 + 7, ramBuff, 0);
  2337     00A3  3087               	movlw	135
  2338     00A4  0140               	movlb	0	; select bank0
  2339     00A5  00AC               	movwf	FLASH_WriteWord@flashAddr
  2340     00A6  3007               	movlw	7
  2341     00A7  00AD               	movwf	FLASH_WriteWord@flashAddr+1
  2342     00A8  3000               	movlw	0
  2343     00A9  00AE               	movwf	FLASH_WriteWord@ramBuf
  2344     00AA  00AF               	movwf	FLASH_WriteWord@ramBuf+1
  2345     00AB  3000               	movlw	0
  2346     00AC  00B0               	movwf	FLASH_WriteWord@word
  2347     00AD  00B1               	movwf	FLASH_WriteWord@word+1
  2348     00AE  3181  2195  3180   	fcall	_FLASH_WriteWord
  2349     00B1                     l32:
  2350     00B1  0008               	return
  2351     00B2                     __end_of_memory_initialize:
  2352                           
  2353                           	psect	text2
  2354     0195                     __ptext2:	
  2355 ;; *************** function _FLASH_WriteWord *****************
  2356 ;; Defined at:
  2357 ;;		line 75 in file "mcc_generated_files/memory.c"
  2358 ;; Parameters:    Size  Location     Type
  2359 ;;  flashAddr       2   12[BANK0 ] unsigned short 
  2360 ;;  ramBuf          2   14[BANK0 ] PTR unsigned short 
  2361 ;;		 -> NULL(0), 
  2362 ;;  word            2   16[BANK0 ] unsigned short 
  2363 ;; Auto vars:     Size  Location     Type
  2364 ;;  blockStartAd    2   19[BANK0 ] unsigned short 
  2365 ;;  i               1   21[BANK0 ] unsigned char 
  2366 ;;  offset          1   18[BANK0 ] unsigned char 
  2367 ;; Return value:  Size  Location     Type
  2368 ;;                  1    wreg      void 
  2369 ;; Registers used:
  2370 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2371 ;; Tracked objects:
  2372 ;;		On entry : 0/0
  2373 ;;		On exit  : 0/0
  2374 ;;		Unchanged: 0/0
  2375 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2376 ;;      Params:         0       6       0       0
  2377 ;;      Locals:         0       4       0       0
  2378 ;;      Temps:          2       0       0       0
  2379 ;;      Totals:         2      10       0       0
  2380 ;;Total ram usage:       12 bytes
  2381 ;; Hardware stack levels used: 1
  2382 ;; Hardware stack levels required when called: 7
  2383 ;; This function calls:
  2384 ;;		_FLASH_ReadWord
  2385 ;;		_FLASH_WriteBlock
  2386 ;; This function is called by:
  2387 ;;		_memory_initialize
  2388 ;; This function uses a non-reentrant model
  2389 ;;
  2390                           
  2391     0195                     _FLASH_WriteWord:	
  2392                           ;psect for function _FLASH_WriteWord
  2393                           
  2394     0195                     l2039:	
  2395                           ;incstack = 0
  2396                           ; Regs used in _FLASH_WriteWord: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2397                           
  2398                           
  2399                           ;mcc_generated_files/memory.c: 75: void FLASH_WriteWord(uint16_t flashAddr, uint16_t *ra
      +                          mBuf, uint16_t word);mcc_generated_files/memory.c: 76: {;mcc_generated_files/memory.c: 7
      +                          7:     uint16_t blockStartAddr = (uint16_t)(flashAddr & ((0x800 -1) ^ (32 -1)));
  2400     0195  30E0               	movlw	224
  2401     0196  0140               	movlb	0	; select bank0
  2402     0197  052C               	andwf	FLASH_WriteWord@flashAddr,w
  2403     0198  00B3               	movwf	FLASH_WriteWord@blockStartAddr
  2404     0199  3007               	movlw	7
  2405     019A  052D               	andwf	FLASH_WriteWord@flashAddr+1,w
  2406     019B  00B4               	movwf	FLASH_WriteWord@blockStartAddr+1
  2407     019C                     l2041:
  2408                           
  2409                           ;mcc_generated_files/memory.c: 78:     uint8_t offset = (uint8_t)(flashAddr & (32 -1));
  2410     019C  082C               	movf	FLASH_WriteWord@flashAddr,w
  2411     019D  391F               	andlw	31
  2412     019E  00B2               	movwf	FLASH_WriteWord@offset
  2413                           
  2414                           ;mcc_generated_files/memory.c: 79:     uint8_t i;;mcc_generated_files/memory.c: 82:     
      +                          for (i=0; i<32; i++)
  2415     019F  01B5               	clrf	FLASH_WriteWord@i
  2416     01A0                     l2047:
  2417                           
  2418                           ;mcc_generated_files/memory.c: 83:     {;mcc_generated_files/memory.c: 84:         ramBu
      +                          f[i] = FLASH_ReadWord((blockStartAddr+i));
  2419     01A0  0835               	movf	FLASH_WriteWord@i,w
  2420     01A1  0733               	addwf	FLASH_WriteWord@blockStartAddr,w
  2421     01A2  00F3               	movwf	FLASH_ReadWord@flashAddr
  2422     01A3  0834               	movf	FLASH_WriteWord@blockStartAddr+1,w
  2423     01A4  1803               	skipnc
  2424     01A5  0A34               	incf	FLASH_WriteWord@blockStartAddr+1,w
  2425     01A6  00F4               	movwf	FLASH_ReadWord@flashAddr+1
  2426     01A7  3182  221E  3181   	fcall	_FLASH_ReadWord
  2427     01AA  0140               	movlb	0	; select bank0
  2428     01AB  0835               	movf	FLASH_WriteWord@i,w
  2429     01AC  00F6               	movwf	??_FLASH_WriteWord
  2430     01AD  01F7               	clrf	??_FLASH_WriteWord+1
  2431     01AE  35F6               	lslf	??_FLASH_WriteWord,f
  2432     01AF  0DF7               	rlf	??_FLASH_WriteWord+1,f
  2433     01B0  0876               	movf	??_FLASH_WriteWord,w
  2434     01B1  072E               	addwf	FLASH_WriteWord@ramBuf,w
  2435     01B2  0086               	movwf	6
  2436     01B3  0877               	movf	??_FLASH_WriteWord+1,w
  2437     01B4  3D2F               	addwfc	FLASH_WriteWord@ramBuf+1,w
  2438     01B5  0087               	movwf	7
  2439     01B6  0873               	movf	?_FLASH_ReadWord,w
  2440     01B7  3FC0               	movwi [0]fsr1
  2441     01B8  0874               	movf	?_FLASH_ReadWord+1,w
  2442     01B9  3FC1               	movwi [1]fsr1
  2443     01BA                     l2049:
  2444                           
  2445                           ;mcc_generated_files/memory.c: 85:     }
  2446     01BA  3001               	movlw	1
  2447     01BB  00F6               	movwf	??_FLASH_WriteWord
  2448     01BC  0876               	movf	??_FLASH_WriteWord,w
  2449     01BD  07B5               	addwf	FLASH_WriteWord@i,f
  2450     01BE                     l2051:
  2451     01BE  3020               	movlw	32
  2452     01BF  0235               	subwf	FLASH_WriteWord@i,w
  2453     01C0  1C03               	skipc
  2454     01C1  29C3               	goto	u681
  2455     01C2  29C4               	goto	u680
  2456     01C3                     u681:
  2457     01C3  29A0               	goto	l2047
  2458     01C4                     u680:
  2459     01C4                     l2053:
  2460                           
  2461                           ;mcc_generated_files/memory.c: 88:     ramBuf[offset] = word;
  2462     01C4  0832               	movf	FLASH_WriteWord@offset,w
  2463     01C5  00F6               	movwf	??_FLASH_WriteWord
  2464     01C6  01F7               	clrf	??_FLASH_WriteWord+1
  2465     01C7  35F6               	lslf	??_FLASH_WriteWord,f
  2466     01C8  0DF7               	rlf	??_FLASH_WriteWord+1,f
  2467     01C9  0876               	movf	??_FLASH_WriteWord,w
  2468     01CA  072E               	addwf	FLASH_WriteWord@ramBuf,w
  2469     01CB  0086               	movwf	6
  2470     01CC  0877               	movf	??_FLASH_WriteWord+1,w
  2471     01CD  3D2F               	addwfc	FLASH_WriteWord@ramBuf+1,w
  2472     01CE  0087               	movwf	7
  2473     01CF  0830               	movf	FLASH_WriteWord@word,w
  2474     01D0  3FC0               	movwi [0]fsr1
  2475     01D1  0831               	movf	FLASH_WriteWord@word+1,w
  2476     01D2  3FC1               	movwi [1]fsr1
  2477     01D3                     l2055:
  2478                           
  2479                           ;mcc_generated_files/memory.c: 91:     FLASH_WriteBlock(blockStartAddr, ramBuf);
  2480     01D3  0834               	movf	FLASH_WriteWord@blockStartAddr+1,w
  2481     01D4  00A1               	movwf	FLASH_WriteBlock@writeAddr+1
  2482     01D5  0833               	movf	FLASH_WriteWord@blockStartAddr,w
  2483     01D6  00A0               	movwf	FLASH_WriteBlock@writeAddr
  2484     01D7  082F               	movf	FLASH_WriteWord@ramBuf+1,w
  2485     01D8  00A3               	movwf	FLASH_WriteBlock@flashWordArray+1
  2486     01D9  082E               	movf	FLASH_WriteWord@ramBuf,w
  2487     01DA  00A2               	movwf	FLASH_WriteBlock@flashWordArray
  2488     01DB  3180  20B2  3181   	fcall	_FLASH_WriteBlock
  2489     01DE                     l482:
  2490     01DE  0008               	return
  2491     01DF                     __end_of_FLASH_WriteWord:
  2492                           
  2493                           	psect	text3
  2494     00B2                     __ptext3:	
  2495 ;; *************** function _FLASH_WriteBlock *****************
  2496 ;; Defined at:
  2497 ;;		line 94 in file "mcc_generated_files/memory.c"
  2498 ;; Parameters:    Size  Location     Type
  2499 ;;  writeAddr       2    0[BANK0 ] unsigned short 
  2500 ;;  flashWordArr    2    2[BANK0 ] PTR unsigned short 
  2501 ;;		 -> NULL(0), 
  2502 ;; Auto vars:     Size  Location     Type
  2503 ;;  blockStartAd    2    8[BANK0 ] unsigned short 
  2504 ;;  i               1   11[BANK0 ] unsigned char 
  2505 ;;  GIEBitValue     1   10[BANK0 ] unsigned char 
  2506 ;; Return value:  Size  Location     Type
  2507 ;;                  1    wreg      char 
  2508 ;; Registers used:
  2509 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2510 ;; Tracked objects:
  2511 ;;		On entry : 0/0
  2512 ;;		On exit  : 0/0
  2513 ;;		Unchanged: 0/0
  2514 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2515 ;;      Params:         0       4       0       0
  2516 ;;      Locals:         0       4       0       0
  2517 ;;      Temps:          0       4       0       0
  2518 ;;      Totals:         0      12       0       0
  2519 ;;Total ram usage:       12 bytes
  2520 ;; Hardware stack levels used: 1
  2521 ;; Hardware stack levels required when called: 6
  2522 ;; This function calls:
  2523 ;;		_FLASH_EraseBlock
  2524 ;; This function is called by:
  2525 ;;		_FLASH_WriteWord
  2526 ;; This function uses a non-reentrant model
  2527 ;;
  2528                           
  2529     00B2                     _FLASH_WriteBlock:	
  2530                           ;psect for function _FLASH_WriteBlock
  2531                           
  2532     00B2                     l1989:	
  2533                           ;incstack = 0
  2534                           ; Regs used in _FLASH_WriteBlock: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2535                           
  2536                           
  2537                           ;mcc_generated_files/memory.c: 94: int8_t FLASH_WriteBlock(uint16_t writeAddr, uint16_t 
      +                          *flashWordArray);mcc_generated_files/memory.c: 95: {;mcc_generated_files/memory.c: 96:  
      +                             uint16_t blockStartAddr = (uint16_t )(writeAddr & ((0x800 -1) ^ (32 -1)));
  2538     00B2  30E0               	movlw	224
  2539     00B3  0140               	movlb	0	; select bank0
  2540     00B4  0520               	andwf	FLASH_WriteBlock@writeAddr,w
  2541     00B5  00A8               	movwf	FLASH_WriteBlock@blockStartAddr
  2542     00B6  3007               	movlw	7
  2543     00B7  0521               	andwf	FLASH_WriteBlock@writeAddr+1,w
  2544     00B8  00A9               	movwf	FLASH_WriteBlock@blockStartAddr+1
  2545     00B9                     l1991:
  2546                           
  2547                           ;mcc_generated_files/memory.c: 97:     uint8_t GIEBitValue = INTCONbits.GIE;
  2548     00B9  3000               	movlw	0
  2549     00BA  1B8B               	btfsc	11,7	;volatile
  2550     00BB  3001               	movlw	1
  2551     00BC  00AA               	movwf	FLASH_WriteBlock@GIEBitValue
  2552     00BD                     l1993:
  2553                           
  2554                           ;mcc_generated_files/memory.c: 98:     uint8_t i;;mcc_generated_files/memory.c: 102:    
      +                           if( writeAddr != blockStartAddr )
  2555     00BD  0829               	movf	FLASH_WriteBlock@blockStartAddr+1,w
  2556     00BE  0621               	xorwf	FLASH_WriteBlock@writeAddr+1,w
  2557     00BF  1D03               	skipz
  2558     00C0  28C3               	goto	u655
  2559     00C1  0828               	movf	FLASH_WriteBlock@blockStartAddr,w
  2560     00C2  0620               	xorwf	FLASH_WriteBlock@writeAddr,w
  2561     00C3                     u655:
  2562     00C3  1903               	skipnz
  2563     00C4  28C6               	goto	u651
  2564     00C5  28C7               	goto	u650
  2565     00C6                     u651:
  2566     00C6  28C8               	goto	l485
  2567     00C7                     u650:
  2568     00C7  2927               	goto	l486
  2569     00C8                     l485:	
  2570                           ;mcc_generated_files/memory.c: 105:     }
  2571                           
  2572                           
  2573                           ;mcc_generated_files/memory.c: 107:     INTCONbits.GIE = 0;
  2574     00C8  138B               	bcf	11,7	;volatile
  2575     00C9                     l1997:
  2576                           
  2577                           ;mcc_generated_files/memory.c: 110:     FLASH_EraseBlock(writeAddr);
  2578     00C9  0821               	movf	FLASH_WriteBlock@writeAddr+1,w
  2579     00CA  00F4               	movwf	FLASH_EraseBlock@startAddr+1
  2580     00CB  0820               	movf	FLASH_WriteBlock@writeAddr,w
  2581     00CC  00F3               	movwf	FLASH_EraseBlock@startAddr
  2582     00CD  3182  2202  3180   	fcall	_FLASH_EraseBlock
  2583     00D0                     l1999:
  2584                           
  2585                           ;mcc_generated_files/memory.c: 113:     NVMCON1bits.NVMREGS = 0;
  2586     00D0  0150               	movlb	16	; select bank16
  2587     00D1  131E               	bcf	30,6	;volsfr
  2588     00D2                     l2001:
  2589                           
  2590                           ;mcc_generated_files/memory.c: 114:     NVMCON1bits.WREN = 1;
  2591     00D2  151E               	bsf	30,2	;volsfr
  2592     00D3                     l2003:
  2593                           
  2594                           ;mcc_generated_files/memory.c: 115:     NVMCON1bits.LWLO = 1;
  2595     00D3  169E               	bsf	30,5	;volsfr
  2596     00D4                     l2005:
  2597                           
  2598                           ;mcc_generated_files/memory.c: 117:     for (i=0; i<32; i++)
  2599     00D4  0140               	movlb	0	; select bank0
  2600     00D5  01AB               	clrf	FLASH_WriteBlock@i
  2601     00D6                     l2011:
  2602                           
  2603                           ;mcc_generated_files/memory.c: 118:     {;mcc_generated_files/memory.c: 120:         NVM
      +                          ADRL = (writeAddr & 0xFF);
  2604     00D6  0820               	movf	FLASH_WriteBlock@writeAddr,w
  2605     00D7  0150               	movlb	16	; select bank16
  2606     00D8  009A               	movwf	26	;volatile
  2607     00D9                     l2013:
  2608                           
  2609                           ;mcc_generated_files/memory.c: 122:         NVMADRH = ((writeAddr & 0xFF00) >> 8);
  2610     00D9  0140               	movlb	0	; select bank0
  2611     00DA  0821               	movf	FLASH_WriteBlock@writeAddr+1,w
  2612     00DB  0150               	movlb	16	; select bank16
  2613     00DC  009B               	movwf	27	;volatile
  2614     00DD                     l2015:
  2615                           
  2616                           ;mcc_generated_files/memory.c: 125:         NVMDATL = flashWordArray[i];
  2617     00DD  0140               	movlb	0	; select bank0
  2618     00DE  082B               	movf	FLASH_WriteBlock@i,w
  2619     00DF  00A4               	movwf	??_FLASH_WriteBlock
  2620     00E0  01A5               	clrf	??_FLASH_WriteBlock+1
  2621     00E1  35A4               	lslf	??_FLASH_WriteBlock,f
  2622     00E2  0DA5               	rlf	??_FLASH_WriteBlock+1,f
  2623     00E3  0824               	movf	??_FLASH_WriteBlock,w
  2624     00E4  0722               	addwf	FLASH_WriteBlock@flashWordArray,w
  2625     00E5  0086               	movwf	6
  2626     00E6  0825               	movf	??_FLASH_WriteBlock+1,w
  2627     00E7  3D23               	addwfc	FLASH_WriteBlock@flashWordArray+1,w
  2628     00E8  0087               	movwf	7
  2629     00E9  0801               	movf	1,w
  2630     00EA  0150               	movlb	16	; select bank16
  2631     00EB  009C               	movwf	28	;volatile
  2632     00EC                     l2017:
  2633                           
  2634                           ;mcc_generated_files/memory.c: 126:         NVMDATH = ((flashWordArray[i] & 0xFF00) >> 8
      +                          );
  2635     00EC  0140               	movlb	0	; select bank0
  2636     00ED  082B               	movf	FLASH_WriteBlock@i,w
  2637     00EE  00A4               	movwf	??_FLASH_WriteBlock
  2638     00EF  01A5               	clrf	??_FLASH_WriteBlock+1
  2639     00F0  35A4               	lslf	??_FLASH_WriteBlock,f
  2640     00F1  0DA5               	rlf	??_FLASH_WriteBlock+1,f
  2641     00F2  0824               	movf	??_FLASH_WriteBlock,w
  2642     00F3  0722               	addwf	FLASH_WriteBlock@flashWordArray,w
  2643     00F4  0086               	movwf	6
  2644     00F5  0825               	movf	??_FLASH_WriteBlock+1,w
  2645     00F6  3D23               	addwfc	FLASH_WriteBlock@flashWordArray+1,w
  2646     00F7  0087               	movwf	7
  2647     00F8  3F40               	moviw [0]fsr1
  2648     00F9  00A6               	movwf	??_FLASH_WriteBlock+2
  2649     00FA  3F41               	moviw [1]fsr1
  2650     00FB  00A7               	movwf	??_FLASH_WriteBlock+3
  2651     00FC  0827               	movf	??_FLASH_WriteBlock+3,w
  2652     00FD  0150               	movlb	16	; select bank16
  2653     00FE  009D               	movwf	29	;volatile
  2654     00FF                     l2019:
  2655                           
  2656                           ;mcc_generated_files/memory.c: 128:         if(i == (32 -1))
  2657     00FF  301F               	movlw	31
  2658     0100  0140               	movlb	0	; select bank0
  2659     0101  062B               	xorwf	FLASH_WriteBlock@i,w
  2660     0102  1D03               	btfss	3,2
  2661     0103  2905               	goto	u661
  2662     0104  2906               	goto	u660
  2663     0105                     u661:
  2664     0105  2908               	goto	l2023
  2665     0106                     u660:
  2666     0106                     l2021:
  2667                           
  2668                           ;mcc_generated_files/memory.c: 129:         {;mcc_generated_files/memory.c: 131:        
      +                               NVMCON1bits.LWLO = 0;
  2669     0106  0150               	movlb	16	; select bank16
  2670     0107  129E               	bcf	30,5	;volsfr
  2671     0108                     l2023:
  2672                           
  2673                           ;mcc_generated_files/memory.c: 134:         NVMCON2 = 0x55;
  2674     0108  3055               	movlw	85
  2675     0109  0150               	movlb	16	; select bank16
  2676     010A  009F               	movwf	31	;volsfr
  2677                           
  2678                           ;mcc_generated_files/memory.c: 135:         NVMCON2 = 0xAA;
  2679     010B  30AA               	movlw	170
  2680     010C  009F               	movwf	31	;volsfr
  2681     010D                     l2025:
  2682                           
  2683                           ;mcc_generated_files/memory.c: 136:         NVMCON1bits.WR = 1;
  2684     010D  149E               	bsf	30,1	;volsfr
  2685     010E                     l2027:
  2686                           
  2687                           ;mcc_generated_files/memory.c: 137:         __nop();
  2688     010E  0000               	nop
  2689     010F                     l2029:
  2690                           
  2691                           ;mcc_generated_files/memory.c: 138:         __nop();
  2692     010F  0000               	nop
  2693                           
  2694                           ;mcc_generated_files/memory.c: 140:      writeAddr++;
  2695     0110  3001               	movlw	1
  2696     0111  0140               	movlb	0	; select bank0
  2697     0112  07A0               	addwf	FLASH_WriteBlock@writeAddr,f
  2698     0113  3000               	movlw	0
  2699     0114  3DA1               	addwfc	FLASH_WriteBlock@writeAddr+1,f
  2700     0115                     l2031:
  2701                           
  2702                           ;mcc_generated_files/memory.c: 141:     }
  2703     0115  3001               	movlw	1
  2704     0116  00A4               	movwf	??_FLASH_WriteBlock
  2705     0117  0824               	movf	??_FLASH_WriteBlock,w
  2706     0118  07AB               	addwf	FLASH_WriteBlock@i,f
  2707     0119                     l2033:
  2708     0119  3020               	movlw	32
  2709     011A  022B               	subwf	FLASH_WriteBlock@i,w
  2710     011B  1C03               	skipc
  2711     011C  291E               	goto	u671
  2712     011D  291F               	goto	u670
  2713     011E                     u671:
  2714     011E  28D6               	goto	l2011
  2715     011F                     u670:
  2716     011F                     l488:
  2717                           
  2718                           ;mcc_generated_files/memory.c: 143:     NVMCON1bits.WREN = 0;
  2719     011F  0150               	movlb	16	; select bank16
  2720     0120  111E               	bcf	30,2	;volsfr
  2721     0121                     l2035:
  2722                           
  2723                           ;mcc_generated_files/memory.c: 144:     INTCONbits.GIE = GIEBitValue;
  2724     0121  0140               	movlb	0	; select bank0
  2725     0122  0C2A               	rrf	FLASH_WriteBlock@GIEBitValue,w
  2726     0123  1C03               	skipc
  2727     0124  138B               	bcf	11,7	;volatile
  2728     0125  1803               	skipnc
  2729     0126  178B               	bsf	11,7	;volatile
  2730     0127                     l486:
  2731     0127  0008               	return
  2732     0128                     __end_of_FLASH_WriteBlock:
  2733                           
  2734                           	psect	text4
  2735     0202                     __ptext4:	
  2736 ;; *************** function _FLASH_EraseBlock *****************
  2737 ;; Defined at:
  2738 ;;		line 149 in file "mcc_generated_files/memory.c"
  2739 ;; Parameters:    Size  Location     Type
  2740 ;;  startAddr       2    3[COMMON] unsigned short 
  2741 ;; Auto vars:     Size  Location     Type
  2742 ;;  GIEBitValue     1    5[COMMON] unsigned char 
  2743 ;; Return value:  Size  Location     Type
  2744 ;;                  1    wreg      void 
  2745 ;; Registers used:
  2746 ;;		wreg, status,2, status,0
  2747 ;; Tracked objects:
  2748 ;;		On entry : 0/0
  2749 ;;		On exit  : 0/0
  2750 ;;		Unchanged: 0/0
  2751 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2752 ;;      Params:         2       0       0       0
  2753 ;;      Locals:         1       0       0       0
  2754 ;;      Temps:          0       0       0       0
  2755 ;;      Totals:         3       0       0       0
  2756 ;;Total ram usage:        3 bytes
  2757 ;; Hardware stack levels used: 1
  2758 ;; Hardware stack levels required when called: 5
  2759 ;; This function calls:
  2760 ;;		Nothing
  2761 ;; This function is called by:
  2762 ;;		_FLASH_WriteBlock
  2763 ;; This function uses a non-reentrant model
  2764 ;;
  2765                           
  2766     0202                     _FLASH_EraseBlock:	
  2767                           ;psect for function _FLASH_EraseBlock
  2768                           
  2769     0202                     l1603:	
  2770                           ;incstack = 0
  2771                           ; Regs used in _FLASH_EraseBlock: [wreg+status,2+status,0]
  2772                           
  2773                           
  2774                           ;mcc_generated_files/memory.c: 149: void FLASH_EraseBlock(uint16_t startAddr);mcc_genera
      +                          ted_files/memory.c: 150: {;mcc_generated_files/memory.c: 151:     uint8_t GIEBitValue = 
      +                          INTCONbits.GIE;
  2775     0202  3000               	movlw	0
  2776     0203  1B8B               	btfsc	11,7	;volatile
  2777     0204  3001               	movlw	1
  2778     0205  00F5               	movwf	FLASH_EraseBlock@GIEBitValue
  2779     0206                     l1605:
  2780                           
  2781                           ;mcc_generated_files/memory.c: 154:     INTCONbits.GIE = 0;
  2782     0206  138B               	bcf	11,7	;volatile
  2783     0207                     l1607:
  2784                           
  2785                           ;mcc_generated_files/memory.c: 156:     NVMADRL = (startAddr & 0xFF);
  2786     0207  0873               	movf	FLASH_EraseBlock@startAddr,w
  2787     0208  0150               	movlb	16	; select bank16
  2788     0209  009A               	movwf	26	;volatile
  2789     020A                     l1609:
  2790                           
  2791                           ;mcc_generated_files/memory.c: 158:     NVMADRH = ((startAddr & 0xFF00) >> 8);
  2792     020A  0874               	movf	FLASH_EraseBlock@startAddr+1,w
  2793     020B  009B               	movwf	27	;volatile
  2794     020C                     l1611:
  2795                           
  2796                           ;mcc_generated_files/memory.c: 161:     NVMCON1bits.NVMREGS = 0;
  2797     020C  131E               	bcf	30,6	;volsfr
  2798     020D                     l1613:
  2799                           
  2800                           ;mcc_generated_files/memory.c: 162:     NVMCON1bits.FREE = 1;
  2801     020D  161E               	bsf	30,4	;volsfr
  2802     020E                     l1615:
  2803                           
  2804                           ;mcc_generated_files/memory.c: 163:     NVMCON1bits.WREN = 1;
  2805     020E  151E               	bsf	30,2	;volsfr
  2806                           
  2807                           ;mcc_generated_files/memory.c: 166:     NVMCON2 = 0x55;
  2808     020F  3055               	movlw	85
  2809     0210  009F               	movwf	31	;volsfr
  2810                           
  2811                           ;mcc_generated_files/memory.c: 167:     NVMCON2 = 0xAA;
  2812     0211  30AA               	movlw	170
  2813     0212  009F               	movwf	31	;volsfr
  2814     0213                     l1617:
  2815                           
  2816                           ;mcc_generated_files/memory.c: 168:     NVMCON1bits.WR = 1;
  2817     0213  149E               	bsf	30,1	;volsfr
  2818     0214                     l1619:
  2819                           
  2820                           ;mcc_generated_files/memory.c: 169:     __nop();
  2821     0214  0000               	nop
  2822     0215                     l1621:
  2823                           
  2824                           ;mcc_generated_files/memory.c: 170:     __nop();
  2825     0215  0000               	nop
  2826     0216                     l1623:
  2827                           
  2828                           ;mcc_generated_files/memory.c: 172:     NVMCON1bits.WREN = 0;
  2829     0216  0150               	movlb	16	; select bank16
  2830     0217  111E               	bcf	30,2	;volsfr
  2831     0218                     l1625:
  2832                           
  2833                           ;mcc_generated_files/memory.c: 173:     INTCONbits.GIE = GIEBitValue;
  2834     0218  0C75               	rrf	FLASH_EraseBlock@GIEBitValue,w
  2835     0219  1C03               	skipc
  2836     021A  138B               	bcf	11,7	;volatile
  2837     021B  1803               	skipnc
  2838     021C  178B               	bsf	11,7	;volatile
  2839     021D                     l492:
  2840     021D  0008               	return
  2841     021E                     __end_of_FLASH_EraseBlock:
  2842                           
  2843                           	psect	text5
  2844     021E                     __ptext5:	
  2845 ;; *************** function _FLASH_ReadWord *****************
  2846 ;; Defined at:
  2847 ;;		line 58 in file "mcc_generated_files/memory.c"
  2848 ;; Parameters:    Size  Location     Type
  2849 ;;  flashAddr       2    3[COMMON] unsigned short 
  2850 ;; Auto vars:     Size  Location     Type
  2851 ;;  GIEBitValue     1    5[COMMON] unsigned char 
  2852 ;; Return value:  Size  Location     Type
  2853 ;;                  2    3[COMMON] unsigned short 
  2854 ;; Registers used:
  2855 ;;		wreg, status,2, status,0
  2856 ;; Tracked objects:
  2857 ;;		On entry : 0/0
  2858 ;;		On exit  : 0/0
  2859 ;;		Unchanged: 0/0
  2860 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2861 ;;      Params:         2       0       0       0
  2862 ;;      Locals:         1       0       0       0
  2863 ;;      Temps:          0       0       0       0
  2864 ;;      Totals:         3       0       0       0
  2865 ;;Total ram usage:        3 bytes
  2866 ;; Hardware stack levels used: 1
  2867 ;; Hardware stack levels required when called: 5
  2868 ;; This function calls:
  2869 ;;		Nothing
  2870 ;; This function is called by:
  2871 ;;		_memory_initialize
  2872 ;;		_FLASH_WriteWord
  2873 ;; This function uses a non-reentrant model
  2874 ;;
  2875                           
  2876     021E                     _FLASH_ReadWord:	
  2877                           ;psect for function _FLASH_ReadWord
  2878                           
  2879     021E                     l1627:	
  2880                           ;incstack = 0
  2881                           ; Regs used in _FLASH_ReadWord: [wreg+status,2+status,0]
  2882                           
  2883                           
  2884                           ;mcc_generated_files/memory.c: 58: uint16_t FLASH_ReadWord(uint16_t flashAddr);mcc_gener
      +                          ated_files/memory.c: 59: {;mcc_generated_files/memory.c: 60:     uint8_t GIEBitValue = I
      +                          NTCONbits.GIE;
  2885     021E  3000               	movlw	0
  2886     021F  1B8B               	btfsc	11,7	;volatile
  2887     0220  3001               	movlw	1
  2888     0221  00F5               	movwf	FLASH_ReadWord@GIEBitValue
  2889     0222                     l1629:
  2890                           
  2891                           ;mcc_generated_files/memory.c: 62:     INTCONbits.GIE = 0;
  2892     0222  138B               	bcf	11,7	;volatile
  2893     0223                     l1631:
  2894                           
  2895                           ;mcc_generated_files/memory.c: 63:     NVMADRL = (flashAddr & 0x00FF);
  2896     0223  0873               	movf	FLASH_ReadWord@flashAddr,w
  2897     0224  0150               	movlb	16	; select bank16
  2898     0225  009A               	movwf	26	;volatile
  2899     0226                     l1633:
  2900                           
  2901                           ;mcc_generated_files/memory.c: 64:     NVMADRH = ((flashAddr & 0xFF00) >> 8);
  2902     0226  0874               	movf	FLASH_ReadWord@flashAddr+1,w
  2903     0227  009B               	movwf	27	;volatile
  2904     0228                     l1635:
  2905                           
  2906                           ;mcc_generated_files/memory.c: 66:     NVMCON1bits.NVMREGS = 0;
  2907     0228  131E               	bcf	30,6	;volsfr
  2908     0229                     l1637:
  2909                           
  2910                           ;mcc_generated_files/memory.c: 67:     NVMCON1bits.RD = 1;
  2911     0229  141E               	bsf	30,0	;volsfr
  2912     022A                     l1639:
  2913                           
  2914                           ;mcc_generated_files/memory.c: 68:     __nop();
  2915     022A  0000               	nop
  2916     022B                     l1641:
  2917                           
  2918                           ;mcc_generated_files/memory.c: 69:     __nop();
  2919     022B  0000               	nop
  2920     022C                     l1643:
  2921                           
  2922                           ;mcc_generated_files/memory.c: 70:     INTCONbits.GIE = GIEBitValue;
  2923     022C  0C75               	rrf	FLASH_ReadWord@GIEBitValue,w
  2924     022D  1C03               	skipc
  2925     022E  138B               	bcf	11,7	;volatile
  2926     022F  1803               	skipnc
  2927     0230  178B               	bsf	11,7	;volatile
  2928     0231                     l1645:
  2929                           
  2930                           ;mcc_generated_files/memory.c: 72:     return ((uint16_t)((NVMDATH << 8) | NVMDATL));
  2931     0231  0150               	movlb	16	; select bank16
  2932     0232  081D               	movf	29,w	;volatile
  2933     0233  00F4               	movwf	?_FLASH_ReadWord+1
  2934     0234  081C               	movf	28,w	;volatile
  2935     0235  00F3               	movwf	?_FLASH_ReadWord
  2936     0236                     l477:
  2937     0236  0008               	return
  2938     0237                     __end_of_FLASH_ReadWord:
  2939                           
  2940                           	psect	text6
  2941     02A3                     __ptext6:	
  2942 ;; *************** function _getSensorBoardType *****************
  2943 ;; Defined at:
  2944 ;;		line 31 in file "sensor.c"
  2945 ;; Parameters:    Size  Location     Type
  2946 ;;		None
  2947 ;; Auto vars:     Size  Location     Type
  2948 ;;		None
  2949 ;; Return value:  Size  Location     Type
  2950 ;;                  1    wreg      unsigned char 
  2951 ;; Registers used:
  2952 ;;		wreg, status,2, status,0
  2953 ;; Tracked objects:
  2954 ;;		On entry : 0/0
  2955 ;;		On exit  : 0/0
  2956 ;;		Unchanged: 0/0
  2957 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2958 ;;      Params:         0       0       0       0
  2959 ;;      Locals:         0       0       0       0
  2960 ;;      Temps:          2       0       0       0
  2961 ;;      Totals:         2       0       0       0
  2962 ;;Total ram usage:        2 bytes
  2963 ;; Hardware stack levels used: 1
  2964 ;; Hardware stack levels required when called: 5
  2965 ;; This function calls:
  2966 ;;		Nothing
  2967 ;; This function is called by:
  2968 ;;		_main
  2969 ;; This function uses a non-reentrant model
  2970 ;;
  2971                           
  2972     02A3                     _getSensorBoardType:	
  2973                           ;psect for function _getSensorBoardType
  2974                           
  2975     02A3                     l1833:	
  2976                           ;incstack = 0
  2977                           ; Regs used in _getSensorBoardType: [wreg+status,2+status,0]
  2978                           
  2979                           
  2980                           ;sensor.c: 33:     return (((PORTC & 0x3C)) >>2 | (PORTA & 0x30));
  2981     02A3  3030               	movlw	48
  2982     02A4  0140               	movlb	0	; select bank0
  2983     02A5  050C               	andwf	12,w	;volatile
  2984     02A6  00F3               	movwf	??_getSensorBoardType
  2985     02A7  080E               	movf	14,w	;volatile
  2986     02A8  00F4               	movwf	??_getSensorBoardType+1
  2987     02A9  3002               	movlw	2
  2988     02AA                     u455:
  2989     02AA  36F4               	lsrf	??_getSensorBoardType+1,f
  2990     02AB  0B89               	decfsz	9,f
  2991     02AC  2AAA               	goto	u455
  2992     02AD  0874               	movf	??_getSensorBoardType+1,w
  2993     02AE  390F               	andlw	15
  2994     02AF  0473               	iorwf	??_getSensorBoardType,w
  2995     02B0                     l39:
  2996     02B0  0008               	return
  2997     02B1                     __end_of_getSensorBoardType:
  2998                           
  2999                           	psect	text7
  3000     0274                     __ptext7:	
  3001 ;; *************** function _SensorBoardType_validation *****************
  3002 ;; Defined at:
  3003 ;;		line 36 in file "sensor.c"
  3004 ;; Parameters:    Size  Location     Type
  3005 ;;  SensorBoardT    1    wreg     unsigned char 
  3006 ;; Auto vars:     Size  Location     Type
  3007 ;;  SensorBoardT    1    3[COMMON] unsigned char 
  3008 ;; Return value:  Size  Location     Type
  3009 ;;                  1    wreg      unsigned char 
  3010 ;; Registers used:
  3011 ;;		wreg, status,2, status,0
  3012 ;; Tracked objects:
  3013 ;;		On entry : 0/0
  3014 ;;		On exit  : 0/0
  3015 ;;		Unchanged: 0/0
  3016 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3017 ;;      Params:         0       0       0       0
  3018 ;;      Locals:         1       0       0       0
  3019 ;;      Temps:          0       0       0       0
  3020 ;;      Totals:         1       0       0       0
  3021 ;;Total ram usage:        1 bytes
  3022 ;; Hardware stack levels used: 1
  3023 ;; Hardware stack levels required when called: 5
  3024 ;; This function calls:
  3025 ;;		Nothing
  3026 ;; This function is called by:
  3027 ;;		_main
  3028 ;; This function uses a non-reentrant model
  3029 ;;
  3030                           
  3031     0274                     _SensorBoardType_validation:	
  3032                           ;psect for function _SensorBoardType_validation
  3033                           
  3034                           
  3035                           ;incstack = 0
  3036                           ; Regs used in _SensorBoardType_validation: [wreg+status,2+status,0]
  3037                           ;SensorBoardType_validation@SensorBoardType stored from wreg
  3038     0274  00F3               	movwf	SensorBoardType_validation@SensorBoardType
  3039     0275                     l1837:
  3040                           
  3041                           ;sensor.c: 36: uint8_t SensorBoardType_validation (uint8_t SensorBoardType);sensor.c: 37
      +                          : {;sensor.c: 38:     if(SensorBoardType>=1)
  3042     0275  0873               	movf	SensorBoardType_validation@SensorBoardType,w
  3043     0276  1903               	btfsc	3,2
  3044     0277  2A79               	goto	u461
  3045     0278  2A7A               	goto	u460
  3046     0279                     u461:
  3047     0279  2A82               	goto	l1845
  3048     027A                     u460:
  3049     027A                     l1839:
  3050                           
  3051                           ;sensor.c: 39:     {;sensor.c: 40:         if(SensorBoardType<=12)
  3052     027A  300D               	movlw	13
  3053     027B  0273               	subwf	SensorBoardType_validation@SensorBoardType,w
  3054     027C  1803               	skipnc
  3055     027D  2A7F               	goto	u471
  3056     027E  2A80               	goto	u470
  3057     027F                     u471:
  3058     027F  2A82               	goto	l1845
  3059     0280                     u470:
  3060     0280                     l1841:
  3061                           
  3062                           ;sensor.c: 41:         {;sensor.c: 42:             return(1);
  3063     0280  3001               	movlw	1
  3064     0281  2A83               	goto	l44
  3065     0282                     l1845:
  3066                           
  3067                           ;sensor.c: 46:     return(0);
  3068     0282  3000               	movlw	0
  3069     0283                     l44:
  3070     0283  0008               	return
  3071     0284                     __end_of_SensorBoardType_validation:
  3072                           
  3073                           	psect	text8
  3074     0284                     __ptext8:	
  3075 ;; *************** function _SYSTEM_Initialize *****************
  3076 ;; Defined at:
  3077 ;;		line 50 in file "mcc_generated_files/mcc.c"
  3078 ;; Parameters:    Size  Location     Type
  3079 ;;		None
  3080 ;; Auto vars:     Size  Location     Type
  3081 ;;		None
  3082 ;; Return value:  Size  Location     Type
  3083 ;;                  1    wreg      void 
  3084 ;; Registers used:
  3085 ;;		wreg, status,2, status,0, pclath, cstack
  3086 ;; Tracked objects:
  3087 ;;		On entry : 0/0
  3088 ;;		On exit  : 0/0
  3089 ;;		Unchanged: 0/0
  3090 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3091 ;;      Params:         0       0       0       0
  3092 ;;      Locals:         0       0       0       0
  3093 ;;      Temps:          0       0       0       0
  3094 ;;      Totals:         0       0       0       0
  3095 ;;Total ram usage:        0 bytes
  3096 ;; Hardware stack levels used: 1
  3097 ;; Hardware stack levels required when called: 7
  3098 ;; This function calls:
  3099 ;;		_I2C1_Initialize
  3100 ;;		_OSCILLATOR_Initialize
  3101 ;;		_PIN_MANAGER_Initialize
  3102 ;;		_TMR0_Initialize
  3103 ;;		_WDT_Initialize
  3104 ;; This function is called by:
  3105 ;;		_main
  3106 ;; This function uses a non-reentrant model
  3107 ;;
  3108                           
  3109     0284                     _SYSTEM_Initialize:	
  3110                           ;psect for function _SYSTEM_Initialize
  3111                           
  3112     0284                     l1897:	
  3113                           ;incstack = 0
  3114                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  3115                           
  3116                           
  3117                           ;mcc_generated_files/mcc.c: 53:     I2C1_Initialize();
  3118     0284  3182  22D8  3182   	fcall	_I2C1_Initialize
  3119                           
  3120                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
  3121     0287  3181  21DF  3182   	fcall	_PIN_MANAGER_Initialize
  3122                           
  3123                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
  3124     028A  3183  2303  3182   	fcall	_OSCILLATOR_Initialize
  3125     028D                     l1899:
  3126                           
  3127                           ;mcc_generated_files/mcc.c: 56:     WDT_Initialize();
  3128     028D  3183  231C  3182   	fcall	_WDT_Initialize
  3129     0290                     l1901:
  3130                           
  3131                           ;mcc_generated_files/mcc.c: 57:     TMR0_Initialize();
  3132     0290  3182  224D  3182   	fcall	_TMR0_Initialize
  3133     0293                     l536:
  3134     0293  0008               	return
  3135     0294                     __end_of_SYSTEM_Initialize:
  3136                           
  3137                           	psect	text9
  3138     031C                     __ptext9:	
  3139 ;; *************** function _WDT_Initialize *****************
  3140 ;; Defined at:
  3141 ;;		line 70 in file "mcc_generated_files/mcc.c"
  3142 ;; Parameters:    Size  Location     Type
  3143 ;;		None
  3144 ;; Auto vars:     Size  Location     Type
  3145 ;;		None
  3146 ;; Return value:  Size  Location     Type
  3147 ;;                  1    wreg      void 
  3148 ;; Registers used:
  3149 ;;		status,2
  3150 ;; Tracked objects:
  3151 ;;		On entry : 0/0
  3152 ;;		On exit  : 0/0
  3153 ;;		Unchanged: 0/0
  3154 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3155 ;;      Params:         0       0       0       0
  3156 ;;      Locals:         0       0       0       0
  3157 ;;      Temps:          0       0       0       0
  3158 ;;      Totals:         0       0       0       0
  3159 ;;Total ram usage:        0 bytes
  3160 ;; Hardware stack levels used: 1
  3161 ;; Hardware stack levels required when called: 5
  3162 ;; This function calls:
  3163 ;;		Nothing
  3164 ;; This function is called by:
  3165 ;;		_SYSTEM_Initialize
  3166 ;; This function uses a non-reentrant model
  3167 ;;
  3168                           
  3169     031C                     _WDT_Initialize:	
  3170                           ;psect for function _WDT_Initialize
  3171                           
  3172     031C                     l1827:	
  3173                           ;incstack = 0
  3174                           ; Regs used in _WDT_Initialize: [status,2]
  3175                           
  3176                           
  3177                           ;mcc_generated_files/mcc.c: 73:     WDTCON = 0x00;
  3178     031C  0150               	movlb	16	; select bank16
  3179     031D  018C               	clrf	12	;volatile
  3180     031E                     l542:
  3181     031E  0008               	return
  3182     031F                     __end_of_WDT_Initialize:
  3183                           
  3184                           	psect	text10
  3185     024D                     __ptext10:	
  3186 ;; *************** function _TMR0_Initialize *****************
  3187 ;; Defined at:
  3188 ;;		line 67 in file "mcc_generated_files/tmr0.c"
  3189 ;; Parameters:    Size  Location     Type
  3190 ;;		None
  3191 ;; Auto vars:     Size  Location     Type
  3192 ;;		None
  3193 ;; Return value:  Size  Location     Type
  3194 ;;                  1    wreg      void 
  3195 ;; Registers used:
  3196 ;;		wreg, status,2, status,0, pclath, cstack
  3197 ;; Tracked objects:
  3198 ;;		On entry : 0/0
  3199 ;;		On exit  : 0/0
  3200 ;;		Unchanged: 0/0
  3201 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3202 ;;      Params:         0       0       0       0
  3203 ;;      Locals:         0       0       0       0
  3204 ;;      Temps:          0       0       0       0
  3205 ;;      Totals:         0       0       0       0
  3206 ;;Total ram usage:        0 bytes
  3207 ;; Hardware stack levels used: 1
  3208 ;; Hardware stack levels required when called: 6
  3209 ;; This function calls:
  3210 ;;		_TMR0_SetInterruptHandler
  3211 ;; This function is called by:
  3212 ;;		_SYSTEM_Initialize
  3213 ;; This function uses a non-reentrant model
  3214 ;;
  3215                           
  3216     024D                     _TMR0_Initialize:	
  3217                           ;psect for function _TMR0_Initialize
  3218                           
  3219     024D                     l1803:	
  3220                           ;incstack = 0
  3221                           ; Regs used in _TMR0_Initialize: [wreg+status,2+status,0+pclath+cstack]
  3222                           
  3223                           
  3224                           ;mcc_generated_files/tmr0.c: 72:     T0CON1 = 0x69;
  3225     024D  3069               	movlw	105
  3226     024E  014B               	movlb	11	; select bank11
  3227     024F  009F               	movwf	31	;volatile
  3228                           
  3229                           ;mcc_generated_files/tmr0.c: 75:     TMR0H = 0x9B;
  3230     0250  309B               	movlw	155
  3231     0251  009D               	movwf	29	;volatile
  3232     0252                     l1805:
  3233                           
  3234                           ;mcc_generated_files/tmr0.c: 78:     TMR0L = 0x00;
  3235     0252  019C               	clrf	28	;volatile
  3236     0253                     l1807:
  3237                           
  3238                           ;mcc_generated_files/tmr0.c: 81:     PIR0bits.TMR0IF = 0;
  3239     0253  014E               	movlb	14	; select bank14
  3240     0254  128C               	bcf	12,5	;volatile
  3241     0255                     l1809:
  3242                           
  3243                           ;mcc_generated_files/tmr0.c: 84:     PIE0bits.TMR0IE = 1;
  3244     0255  1696               	bsf	22,5	;volatile
  3245     0256                     l1811:
  3246                           
  3247                           ;mcc_generated_files/tmr0.c: 87:     TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandl
      +                          er);
  3248     0256  3037               	movlw	low _TMR0_DefaultInterruptHandler
  3249     0257  00F3               	movwf	TMR0_SetInterruptHandler@InterruptHandler
  3250     0258  3002               	movlw	high _TMR0_DefaultInterruptHandler
  3251     0259  00F4               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1
  3252     025A  3182  22FD  3182   	fcall	_TMR0_SetInterruptHandler
  3253     025D                     l1813:
  3254                           
  3255                           ;mcc_generated_files/tmr0.c: 90:     T0CON0 = 0x80;
  3256     025D  3080               	movlw	128
  3257     025E  014B               	movlb	11	; select bank11
  3258     025F  009E               	movwf	30	;volatile
  3259     0260                     l423:
  3260     0260  0008               	return
  3261     0261                     __end_of_TMR0_Initialize:
  3262                           
  3263                           	psect	text11
  3264     02FD                     __ptext11:	
  3265 ;; *************** function _TMR0_SetInterruptHandler *****************
  3266 ;; Defined at:
  3267 ;;		line 142 in file "mcc_generated_files/tmr0.c"
  3268 ;; Parameters:    Size  Location     Type
  3269 ;;  InterruptHan    2    3[COMMON] PTR FTN()void 
  3270 ;;		 -> TMR0_DefaultInterruptHandler(1), 
  3271 ;; Auto vars:     Size  Location     Type
  3272 ;;		None
  3273 ;; Return value:  Size  Location     Type
  3274 ;;                  1    wreg      void 
  3275 ;; Registers used:
  3276 ;;		wreg
  3277 ;; Tracked objects:
  3278 ;;		On entry : 0/0
  3279 ;;		On exit  : 0/0
  3280 ;;		Unchanged: 0/0
  3281 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3282 ;;      Params:         2       0       0       0
  3283 ;;      Locals:         0       0       0       0
  3284 ;;      Temps:          0       0       0       0
  3285 ;;      Totals:         2       0       0       0
  3286 ;;Total ram usage:        2 bytes
  3287 ;; Hardware stack levels used: 1
  3288 ;; Hardware stack levels required when called: 5
  3289 ;; This function calls:
  3290 ;;		Nothing
  3291 ;; This function is called by:
  3292 ;;		_TMR0_Initialize
  3293 ;; This function uses a non-reentrant model
  3294 ;;
  3295                           
  3296     02FD                     _TMR0_SetInterruptHandler:	
  3297                           ;psect for function _TMR0_SetInterruptHandler
  3298                           
  3299     02FD                     l1661:	
  3300                           ;incstack = 0
  3301                           ; Regs used in _TMR0_SetInterruptHandler: [wreg]
  3302                           
  3303                           
  3304                           ;mcc_generated_files/tmr0.c: 143:     TMR0_InterruptHandler = InterruptHandler;
  3305     02FD  0874               	movf	TMR0_SetInterruptHandler@InterruptHandler+1,w
  3306     02FE  0140               	movlb	0	; select bank0
  3307     02FF  00CE               	movwf	_TMR0_InterruptHandler+1
  3308     0300  0873               	movf	TMR0_SetInterruptHandler@InterruptHandler,w
  3309     0301  00CD               	movwf	_TMR0_InterruptHandler
  3310     0302                     l445:
  3311     0302  0008               	return
  3312     0303                     __end_of_TMR0_SetInterruptHandler:
  3313                           
  3314                           	psect	text12
  3315     01DF                     __ptext12:	
  3316 ;; *************** function _PIN_MANAGER_Initialize *****************
  3317 ;; Defined at:
  3318 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  3319 ;; Parameters:    Size  Location     Type
  3320 ;;		None
  3321 ;; Auto vars:     Size  Location     Type
  3322 ;;		None
  3323 ;; Return value:  Size  Location     Type
  3324 ;;                  1    wreg      void 
  3325 ;; Registers used:
  3326 ;;		wreg, status,2
  3327 ;; Tracked objects:
  3328 ;;		On entry : 0/0
  3329 ;;		On exit  : 0/0
  3330 ;;		Unchanged: 0/0
  3331 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3332 ;;      Params:         0       0       0       0
  3333 ;;      Locals:         0       0       0       0
  3334 ;;      Temps:          0       0       0       0
  3335 ;;      Totals:         0       0       0       0
  3336 ;;Total ram usage:        0 bytes
  3337 ;; Hardware stack levels used: 1
  3338 ;; Hardware stack levels required when called: 5
  3339 ;; This function calls:
  3340 ;;		Nothing
  3341 ;; This function is called by:
  3342 ;;		_SYSTEM_Initialize
  3343 ;; This function uses a non-reentrant model
  3344 ;;
  3345                           
  3346     01DF                     _PIN_MANAGER_Initialize:	
  3347                           ;psect for function _PIN_MANAGER_Initialize
  3348                           
  3349     01DF                     l1731:	
  3350                           ;incstack = 0
  3351                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  3352                           
  3353                           
  3354                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
  3355     01DF  0140               	movlb	0	; select bank0
  3356     01E0  0198               	clrf	24	;volatile
  3357                           
  3358                           ;mcc_generated_files/pin_manager.c: 61:     LATC = 0x00;
  3359     01E1  019A               	clrf	26	;volatile
  3360     01E2                     l1733:
  3361                           
  3362                           ;mcc_generated_files/pin_manager.c: 66:     TRISA = 0x3B;
  3363     01E2  303B               	movlw	59
  3364     01E3  0092               	movwf	18	;volatile
  3365     01E4                     l1735:
  3366                           
  3367                           ;mcc_generated_files/pin_manager.c: 67:     TRISC = 0x3F;
  3368     01E4  303F               	movlw	63
  3369     01E5  0094               	movwf	20	;volatile
  3370                           
  3371                           ;mcc_generated_files/pin_manager.c: 72:     ANSELC = 0x00;
  3372     01E6  017E               	movlb	62	; select bank62
  3373     01E7  01CE               	clrf	78	;volatile
  3374     01E8                     l1737:
  3375                           
  3376                           ;mcc_generated_files/pin_manager.c: 73:     ANSELA = 0x07;
  3377     01E8  3007               	movlw	7
  3378     01E9  00B8               	movwf	56	;volatile
  3379     01EA                     l1739:
  3380                           
  3381                           ;mcc_generated_files/pin_manager.c: 78:     WPUA = 0x00;
  3382     01EA  01B9               	clrf	57	;volatile
  3383     01EB                     l1741:
  3384                           
  3385                           ;mcc_generated_files/pin_manager.c: 79:     WPUC = 0x00;
  3386     01EB  01CF               	clrf	79	;volatile
  3387     01EC                     l1743:
  3388                           
  3389                           ;mcc_generated_files/pin_manager.c: 84:     ODCONA = 0x00;
  3390     01EC  01BA               	clrf	58	;volatile
  3391     01ED                     l1745:
  3392                           
  3393                           ;mcc_generated_files/pin_manager.c: 85:     ODCONC = 0x00;
  3394     01ED  01D0               	clrf	80	;volatile
  3395     01EE                     l1747:
  3396                           
  3397                           ;mcc_generated_files/pin_manager.c: 90:     SLRCONA = 0x37;
  3398     01EE  3037               	movlw	55
  3399     01EF  00BB               	movwf	59	;volatile
  3400     01F0                     l1749:
  3401                           
  3402                           ;mcc_generated_files/pin_manager.c: 91:     SLRCONC = 0x3F;
  3403     01F0  303F               	movlw	63
  3404     01F1  00D1               	movwf	81	;volatile
  3405     01F2                     l1751:
  3406                           
  3407                           ;mcc_generated_files/pin_manager.c: 96:     INLVLA = 0x3F;
  3408     01F2  303F               	movlw	63
  3409     01F3  00BC               	movwf	60	;volatile
  3410     01F4                     l1753:
  3411                           
  3412                           ;mcc_generated_files/pin_manager.c: 97:     INLVLC = 0x3F;
  3413     01F4  303F               	movlw	63
  3414     01F5  00D2               	movwf	82	;volatile
  3415     01F6                     l1755:
  3416                           
  3417                           ;mcc_generated_files/pin_manager.c: 106:     RC0PPS = 0x07;
  3418     01F6  3007               	movlw	7
  3419     01F7  00A0               	movwf	32	;volatile
  3420     01F8                     l1757:
  3421                           
  3422                           ;mcc_generated_files/pin_manager.c: 107:     SSP1CLKPPS = 0x10;
  3423     01F8  3010               	movlw	16
  3424     01F9  017D               	movlb	61	; select bank61
  3425     01FA  00C5               	movwf	69	;volatile
  3426     01FB                     l1759:
  3427                           
  3428                           ;mcc_generated_files/pin_manager.c: 108:     RC1PPS = 0x08;
  3429     01FB  3008               	movlw	8
  3430     01FC  017E               	movlb	62	; select bank62
  3431     01FD  00A1               	movwf	33	;volatile
  3432     01FE                     l1761:
  3433                           
  3434                           ;mcc_generated_files/pin_manager.c: 109:     SSP1DATPPS = 0x11;
  3435     01FE  3011               	movlw	17
  3436     01FF  017D               	movlb	61	; select bank61
  3437     0200  00C6               	movwf	70	;volatile
  3438     0201                     l83:
  3439     0201  0008               	return
  3440     0202                     __end_of_PIN_MANAGER_Initialize:
  3441                           
  3442                           	psect	text13
  3443     0303                     __ptext13:	
  3444 ;; *************** function _OSCILLATOR_Initialize *****************
  3445 ;; Defined at:
  3446 ;;		line 60 in file "mcc_generated_files/mcc.c"
  3447 ;; Parameters:    Size  Location     Type
  3448 ;;		None
  3449 ;; Auto vars:     Size  Location     Type
  3450 ;;		None
  3451 ;; Return value:  Size  Location     Type
  3452 ;;                  1    wreg      void 
  3453 ;; Registers used:
  3454 ;;		wreg, status,2
  3455 ;; Tracked objects:
  3456 ;;		On entry : 0/0
  3457 ;;		On exit  : 0/0
  3458 ;;		Unchanged: 0/0
  3459 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3460 ;;      Params:         0       0       0       0
  3461 ;;      Locals:         0       0       0       0
  3462 ;;      Temps:          0       0       0       0
  3463 ;;      Totals:         0       0       0       0
  3464 ;;Total ram usage:        0 bytes
  3465 ;; Hardware stack levels used: 1
  3466 ;; Hardware stack levels required when called: 5
  3467 ;; This function calls:
  3468 ;;		Nothing
  3469 ;; This function is called by:
  3470 ;;		_SYSTEM_Initialize
  3471 ;; This function uses a non-reentrant model
  3472 ;;
  3473                           
  3474     0303                     _OSCILLATOR_Initialize:	
  3475                           ;psect for function _OSCILLATOR_Initialize
  3476                           
  3477     0303                     l1821:	
  3478                           ;incstack = 0
  3479                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  3480                           
  3481                           
  3482                           ;mcc_generated_files/mcc.c: 63:     OSCEN = 0x00;
  3483     0303  0151               	movlb	17	; select bank17
  3484     0304  0191               	clrf	17	;volatile
  3485     0305                     l1823:
  3486                           
  3487                           ;mcc_generated_files/mcc.c: 65:     OSCFRQ = 0x03;
  3488     0305  3003               	movlw	3
  3489     0306  0093               	movwf	19	;volatile
  3490     0307                     l1825:
  3491                           
  3492                           ;mcc_generated_files/mcc.c: 67:     OSCTUNE = 0x00;
  3493     0307  0192               	clrf	18	;volatile
  3494     0308                     l539:
  3495     0308  0008               	return
  3496     0309                     __end_of_OSCILLATOR_Initialize:
  3497                           
  3498                           	psect	text14
  3499     02D8                     __ptext14:	
  3500 ;; *************** function _I2C1_Initialize *****************
  3501 ;; Defined at:
  3502 ;;		line 113 in file "mcc_generated_files/i2c1_slave.c"
  3503 ;; Parameters:    Size  Location     Type
  3504 ;;		None
  3505 ;; Auto vars:     Size  Location     Type
  3506 ;;		None
  3507 ;; Return value:  Size  Location     Type
  3508 ;;                  1    wreg      void 
  3509 ;; Registers used:
  3510 ;;		wreg, status,2, status,0
  3511 ;; Tracked objects:
  3512 ;;		On entry : 0/0
  3513 ;;		On exit  : 0/0
  3514 ;;		Unchanged: 0/0
  3515 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3516 ;;      Params:         0       0       0       0
  3517 ;;      Locals:         0       0       0       0
  3518 ;;      Temps:          1       0       0       0
  3519 ;;      Totals:         1       0       0       0
  3520 ;;Total ram usage:        1 bytes
  3521 ;; Hardware stack levels used: 1
  3522 ;; Hardware stack levels required when called: 5
  3523 ;; This function calls:
  3524 ;;		Nothing
  3525 ;; This function is called by:
  3526 ;;		_SYSTEM_Initialize
  3527 ;;		_I2C1_Enable
  3528 ;; This function uses a non-reentrant model
  3529 ;;
  3530                           
  3531     02D8                     _I2C1_Initialize:	
  3532                           ;psect for function _I2C1_Initialize
  3533                           
  3534     02D8                     l1763:	
  3535                           ;incstack = 0
  3536                           ; Regs used in _I2C1_Initialize: [wreg+status,2+status,0]
  3537                           
  3538                           
  3539                           ;mcc_generated_files/i2c1_slave.c: 115:     SSP1STAT = 0x40;
  3540     02D8  3040               	movlw	64
  3541     02D9  0143               	movlb	3	; select bank3
  3542     02DA  008F               	movwf	15	;volatile
  3543     02DB                     l1765:
  3544                           
  3545                           ;mcc_generated_files/i2c1_slave.c: 116:     SSP1CON1 |= 0x06;
  3546     02DB  3006               	movlw	6
  3547     02DC  00F3               	movwf	??_I2C1_Initialize
  3548     02DD  0873               	movf	??_I2C1_Initialize,w
  3549     02DE  0490               	iorwf	16,f	;volatile
  3550     02DF                     l1767:
  3551                           
  3552                           ;mcc_generated_files/i2c1_slave.c: 117:     SSP1CON2 = 0x00;
  3553     02DF  0191               	clrf	17	;volatile
  3554     02E0                     l1769:
  3555                           
  3556                           ;mcc_generated_files/i2c1_slave.c: 118:     SSP1CON1bits.SSPEN = 0;
  3557     02E0  1290               	bcf	16,5	;volatile
  3558     02E1                     l234:
  3559     02E1  0008               	return
  3560     02E2                     __end_of_I2C1_Initialize:
  3561                           
  3562                           	psect	intentry
  3563     0004                     __pintentry:	
  3564 ;; *************** function _INTERRUPT_InterruptManager *****************
  3565 ;; Defined at:
  3566 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  3567 ;; Parameters:    Size  Location     Type
  3568 ;;		None
  3569 ;; Auto vars:     Size  Location     Type
  3570 ;;		None
  3571 ;; Return value:  Size  Location     Type
  3572 ;;                  1    wreg      void 
  3573 ;; Registers used:
  3574 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3575 ;; Tracked objects:
  3576 ;;		On entry : 0/0
  3577 ;;		On exit  : 0/0
  3578 ;;		Unchanged: 0/0
  3579 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3580 ;;      Params:         0       0       0       0
  3581 ;;      Locals:         0       0       0       0
  3582 ;;      Temps:          0       0       0       0
  3583 ;;      Totals:         0       0       0       0
  3584 ;;Total ram usage:        0 bytes
  3585 ;; Hardware stack levels used: 1
  3586 ;; Hardware stack levels required when called: 4
  3587 ;; This function calls:
  3588 ;;		NULL
  3589 ;;		_I2C1_Isr
  3590 ;;		_TMR0_ISR
  3591 ;; This function is called by:
  3592 ;;		Interrupt level 1
  3593 ;; This function uses a non-reentrant model
  3594 ;;
  3595                           
  3596     0004                     _INTERRUPT_InterruptManager:
  3597                           
  3598                           ;incstack = 0
  3599     0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
  3600                           
  3601                           ; Regs used in _INTERRUPT_InterruptManager: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3602     0005  3180               	pagesel	$
  3603     0006                     i1l1903:
  3604                           
  3605                           ;mcc_generated_files/interrupt_manager.c: 55:     if(PIE0bits.TMR0IE == 1 && PIR0bits.TM
      +                          R0IF == 1)
  3606     0006  014E               	movlb	14	; select bank14
  3607     0007  1E96               	btfss	22,5	;volatile
  3608     0008  280A               	goto	u55_21
  3609     0009  280B               	goto	u55_20
  3610     000A                     u55_21:
  3611     000A  2813               	goto	i1l117
  3612     000B                     u55_20:
  3613     000B                     i1l1905:
  3614     000B  1E8C               	btfss	12,5	;volatile
  3615     000C  280E               	goto	u56_21
  3616     000D  280F               	goto	u56_20
  3617     000E                     u56_21:
  3618     000E  2813               	goto	i1l117
  3619     000F                     u56_20:
  3620     000F                     i1l1907:
  3621                           
  3622                           ;mcc_generated_files/interrupt_manager.c: 56:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 57:         TMR0_ISR();
  3623     000F  3182  2294  3180   	fcall	_TMR0_ISR
  3624                           
  3625                           ;mcc_generated_files/interrupt_manager.c: 58:     }
  3626     0012  282F               	goto	i1l125
  3627     0013                     i1l117:	
  3628                           ;mcc_generated_files/interrupt_manager.c: 59:     else if(INTCONbits.PEIE == 1)
  3629                           
  3630     0013  1F0B               	btfss	11,6	;volatile
  3631     0014  2816               	goto	u57_21
  3632     0015  2817               	goto	u57_20
  3633     0016                     u57_21:
  3634     0016  282F               	goto	i1l125
  3635     0017                     u57_20:
  3636     0017                     i1l1909:
  3637                           
  3638                           ;mcc_generated_files/interrupt_manager.c: 60:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 61:         if(PIE1bits.BCL1IE == 1 && PIR1bits.BCL1IF == 1)
  3639     0017  1D17               	btfss	23,2	;volatile
  3640     0018  281A               	goto	u58_21
  3641     0019  281B               	goto	u58_20
  3642     001A                     u58_21:
  3643     001A  2826               	goto	i1l120
  3644     001B                     u58_20:
  3645     001B                     i1l1911:
  3646     001B  1D0D               	btfss	13,2	;volatile
  3647     001C  281E               	goto	u59_21
  3648     001D  281F               	goto	u59_20
  3649     001E                     u59_21:
  3650     001E  2826               	goto	i1l120
  3651     001F                     u59_20:
  3652     001F                     i1l1913:
  3653                           
  3654                           ;mcc_generated_files/interrupt_manager.c: 62:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 63:             MSSP1_InterruptHandler();
  3655     001F  0140               	movlb	0	; select bank0
  3656     0020  0849               	movf	_MSSP1_InterruptHandler+1,w
  3657     0021  008A               	movwf	10
  3658     0022  0848               	movf	_MSSP1_InterruptHandler,w
  3659     0023  000A               	callw
  3660     0024  3180               	pagesel	$
  3661                           
  3662                           ;mcc_generated_files/interrupt_manager.c: 64:         }
  3663     0025  282F               	goto	i1l125
  3664     0026                     i1l120:	
  3665                           ;mcc_generated_files/interrupt_manager.c: 65:         else if(PIE1bits.SSP1IE == 1 && PI
      +                          R1bits.SSP1IF == 1)
  3666                           
  3667     0026  1C97               	btfss	23,1	;volatile
  3668     0027  2829               	goto	u60_21
  3669     0028  282A               	goto	u60_20
  3670     0029                     u60_21:
  3671     0029  282F               	goto	i1l124
  3672     002A                     u60_20:
  3673     002A                     i1l1915:
  3674     002A  1C8D               	btfss	13,1	;volatile
  3675     002B  282D               	goto	u61_21
  3676     002C  282E               	goto	u61_20
  3677     002D                     u61_21:
  3678     002D  282F               	goto	i1l124
  3679     002E                     u61_20:
  3680     002E  281F               	goto	i1l1913
  3681     002F                     i1l124:	
  3682                           ;mcc_generated_files/interrupt_manager.c: 76:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 78:     }
  3683                           
  3684     002F                     i1l125:
  3685     002F  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  3686     0030  0009               	retfie
  3687     0031                     __end_of_INTERRUPT_InterruptManager:
  3688                           
  3689                           	psect	text16
  3690     0294                     __ptext16:	
  3691 ;; *************** function _TMR0_ISR *****************
  3692 ;; Defined at:
  3693 ;;		line 127 in file "mcc_generated_files/tmr0.c"
  3694 ;; Parameters:    Size  Location     Type
  3695 ;;		None
  3696 ;; Auto vars:     Size  Location     Type
  3697 ;;		None
  3698 ;; Return value:  Size  Location     Type
  3699 ;;                  1    wreg      void 
  3700 ;; Registers used:
  3701 ;;		wreg, status,2, status,0, pclath, cstack
  3702 ;; Tracked objects:
  3703 ;;		On entry : 0/0
  3704 ;;		On exit  : 0/0
  3705 ;;		Unchanged: 0/0
  3706 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3707 ;;      Params:         0       0       0       0
  3708 ;;      Locals:         0       0       0       0
  3709 ;;      Temps:          0       0       0       0
  3710 ;;      Totals:         0       0       0       0
  3711 ;;Total ram usage:        0 bytes
  3712 ;; Hardware stack levels used: 1
  3713 ;; Hardware stack levels required when called: 1
  3714 ;; This function calls:
  3715 ;;		NULL
  3716 ;;		_TMR0_DefaultInterruptHandler
  3717 ;; This function is called by:
  3718 ;;		_INTERRUPT_InterruptManager
  3719 ;; This function uses a non-reentrant model
  3720 ;;
  3721                           
  3722     0294                     _TMR0_ISR:	
  3723                           ;psect for function _TMR0_ISR
  3724                           
  3725     0294                     i1l1849:	
  3726                           ;incstack = 0
  3727                           ; Regs used in _TMR0_ISR: [wreg+status,2+status,0+pclath+cstack]
  3728                           
  3729                           
  3730                           ;mcc_generated_files/tmr0.c: 130:     PIR0bits.TMR0IF = 0;
  3731     0294  014E               	movlb	14	; select bank14
  3732     0295  128C               	bcf	12,5	;volatile
  3733     0296                     i1l1851:
  3734                           
  3735                           ;mcc_generated_files/tmr0.c: 132:     if(TMR0_InterruptHandler)
  3736     0296  0140               	movlb	0	; select bank0
  3737     0297  084D               	movf	_TMR0_InterruptHandler,w
  3738     0298  044E               	iorwf	_TMR0_InterruptHandler+1,w
  3739     0299  1903               	btfsc	3,2
  3740     029A  2A9C               	goto	u48_21
  3741     029B  2A9D               	goto	u48_20
  3742     029C                     u48_21:
  3743     029C  2AA2               	goto	i1l442
  3744     029D                     u48_20:
  3745     029D                     i1l1853:
  3746                           
  3747                           ;mcc_generated_files/tmr0.c: 133:     {;mcc_generated_files/tmr0.c: 134:         TMR0_In
      +                          terruptHandler();
  3748     029D  084E               	movf	_TMR0_InterruptHandler+1,w
  3749     029E  008A               	movwf	10
  3750     029F  084D               	movf	_TMR0_InterruptHandler,w
  3751     02A0  000A               	callw
  3752     02A1  3182               	pagesel	$
  3753     02A2                     i1l442:
  3754     02A2  0008               	return
  3755     02A3                     __end_of_TMR0_ISR:
  3756                           
  3757                           	psect	text17
  3758     0237                     __ptext17:	
  3759 ;; *************** function _TMR0_DefaultInterruptHandler *****************
  3760 ;; Defined at:
  3761 ;;		line 148 in file "mcc_generated_files/tmr0.c"
  3762 ;; Parameters:    Size  Location     Type
  3763 ;;		None
  3764 ;; Auto vars:     Size  Location     Type
  3765 ;;		None
  3766 ;; Return value:  Size  Location     Type
  3767 ;;                  1    wreg      void 
  3768 ;; Registers used:
  3769 ;;		wreg, status,2, status,0
  3770 ;; Tracked objects:
  3771 ;;		On entry : 0/0
  3772 ;;		On exit  : 0/0
  3773 ;;		Unchanged: 0/0
  3774 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3775 ;;      Params:         0       0       0       0
  3776 ;;      Locals:         0       0       0       0
  3777 ;;      Temps:          1       0       0       0
  3778 ;;      Totals:         1       0       0       0
  3779 ;;Total ram usage:        1 bytes
  3780 ;; Hardware stack levels used: 1
  3781 ;; This function calls:
  3782 ;;		Nothing
  3783 ;; This function is called by:
  3784 ;;		_TMR0_Initialize
  3785 ;;		_TMR0_ISR
  3786 ;; This function uses a non-reentrant model
  3787 ;;
  3788                           
  3789     0237                     _TMR0_DefaultInterruptHandler:	
  3790                           ;psect for function _TMR0_DefaultInterruptHandler
  3791                           
  3792     0237                     i1l1815:	
  3793                           ;incstack = 0
  3794                           ; Regs used in _TMR0_DefaultInterruptHandler: [wreg+status,2+status,0]
  3795                           
  3796                           
  3797                           ;mcc_generated_files/tmr0.c: 151:      LED_timer++;
  3798     0237  3001               	movlw	1
  3799     0238  00F0               	movwf	??_TMR0_DefaultInterruptHandler
  3800     0239  0870               	movf	??_TMR0_DefaultInterruptHandler,w
  3801     023A  07FA               	addwf	_LED_timer,f
  3802                           
  3803                           ;mcc_generated_files/tmr0.c: 152:     if (LED_timer==10)
  3804     023B  300A               	movlw	10
  3805     023C  067A               	xorwf	_LED_timer,w
  3806     023D  1D03               	btfss	3,2
  3807     023E  2A40               	goto	u42_21
  3808     023F  2A41               	goto	u42_20
  3809     0240                     u42_21:
  3810     0240  2A43               	goto	i1l1817
  3811     0241                     u42_20:
  3812     0241                     i1l449:	
  3813                           ;mcc_generated_files/tmr0.c: 153:     {;mcc_generated_files/tmr0.c: 154:         do { LA
      +                          TAbits.LATA2 = 1; } while(0);
  3814                           
  3815     0241  0140               	movlb	0	; select bank0
  3816     0242  1518               	bsf	24,2	;volatile
  3817     0243                     i1l1817:
  3818                           
  3819                           ;mcc_generated_files/tmr0.c: 156:     if(LED_timer==20)
  3820     0243  3014               	movlw	20
  3821     0244  067A               	xorwf	_LED_timer,w
  3822     0245  1D03               	btfss	3,2
  3823     0246  2A48               	goto	u43_21
  3824     0247  2A49               	goto	u43_20
  3825     0248                     u43_21:
  3826     0248  2A4C               	goto	i1l454
  3827     0249                     u43_20:
  3828     0249                     i1l452:	
  3829                           ;mcc_generated_files/tmr0.c: 157:     {;mcc_generated_files/tmr0.c: 158:        do { LAT
      +                          Abits.LATA2 = 0; } while(0);
  3830                           
  3831     0249  0140               	movlb	0	; select bank0
  3832     024A  1118               	bcf	24,2	;volatile
  3833     024B                     i1l1819:
  3834                           
  3835                           ;mcc_generated_files/tmr0.c: 159:        LED_timer = 0;
  3836     024B  01FA               	clrf	_LED_timer
  3837     024C                     i1l454:
  3838     024C  0008               	return
  3839     024D                     __end_of_TMR0_DefaultInterruptHandler:
  3840                           
  3841                           	psect	text18
  3842     0128                     __ptext18:	
  3843 ;; *************** function _I2C1_Isr *****************
  3844 ;; Defined at:
  3845 ;;		line 170 in file "mcc_generated_files/i2c1_slave.c"
  3846 ;; Parameters:    Size  Location     Type
  3847 ;;		None
  3848 ;; Auto vars:     Size  Location     Type
  3849 ;;		None
  3850 ;; Return value:  Size  Location     Type
  3851 ;;                  1    wreg      void 
  3852 ;; Registers used:
  3853 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3854 ;; Tracked objects:
  3855 ;;		On entry : 0/0
  3856 ;;		On exit  : 0/0
  3857 ;;		Unchanged: 0/0
  3858 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3859 ;;      Params:         0       0       0       0
  3860 ;;      Locals:         0       0       0       0
  3861 ;;      Temps:          2       0       0       0
  3862 ;;      Totals:         2       0       0       0
  3863 ;;Total ram usage:        2 bytes
  3864 ;; Hardware stack levels used: 1
  3865 ;; Hardware stack levels required when called: 3
  3866 ;; This function calls:
  3867 ;;		_I2C1_SlaveAddrCallBack
  3868 ;;		_I2C1_SlaveClearIrq
  3869 ;;		_I2C1_SlaveIsAddr
  3870 ;;		_I2C1_SlaveIsRead
  3871 ;;		_I2C1_SlaveIsRxBufFull
  3872 ;;		_I2C1_SlaveIsTxBufEmpty
  3873 ;;		_I2C1_SlaveRdCallBack
  3874 ;;		_I2C1_SlaveReleaseClock
  3875 ;;		_I2C1_SlaveWrCallBack
  3876 ;; This function is called by:
  3877 ;;		_I2C1_Open
  3878 ;;		_INTERRUPT_InterruptManager
  3879 ;; This function uses a non-reentrant model
  3880 ;;
  3881                           
  3882     0128                     _I2C1_Isr:	
  3883                           ;psect for function _I2C1_Isr
  3884                           
  3885     0128                     i1l1855:	
  3886                           ;incstack = 0
  3887                           ; Regs used in _I2C1_Isr: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3888                           
  3889                           
  3890                           ;mcc_generated_files/i2c1_slave.c: 172:     I2C1_SlaveClearIrq();
  3891     0128  3183  2322  3181   	fcall	_I2C1_SlaveClearIrq
  3892     012B                     i1l1857:
  3893                           
  3894                           ;mcc_generated_files/i2c1_slave.c: 174:     if(I2C1_SlaveIsAddr())
  3895     012B  3182  22E9  3181   	fcall	_I2C1_SlaveIsAddr
  3896     012E  3A00               	xorlw	0
  3897     012F  1903               	skipnz
  3898     0130  2932               	goto	u49_21
  3899     0131  2933               	goto	u49_20
  3900     0132                     u49_21:
  3901     0132  2943               	goto	i1l1865
  3902     0133                     u49_20:
  3903     0133                     i1l1859:
  3904                           
  3905                           ;mcc_generated_files/i2c1_slave.c: 175:     {;mcc_generated_files/i2c1_slave.c: 176:    
      +                               if(I2C1_SlaveIsRead())
  3906     0133  3183  2313  3181   	fcall	_I2C1_SlaveIsRead
  3907     0136  3A00               	xorlw	0
  3908     0137  1903               	skipnz
  3909     0138  293A               	goto	u50_21
  3910     0139  293B               	goto	u50_20
  3911     013A                     u50_21:
  3912     013A  293F               	goto	i1l1863
  3913     013B                     u50_20:
  3914     013B                     i1l1861:
  3915                           
  3916                           ;mcc_generated_files/i2c1_slave.c: 177:         {;mcc_generated_files/i2c1_slave.c: 178:
      +                                       i2c1SlaveState = I2C1_ADDR_TX;
  3917     013B  3001               	movlw	1
  3918     013C  0140               	movlb	0	; select bank0
  3919     013D  00CA               	movwf	_i2c1SlaveState	;volatile
  3920                           
  3921                           ;mcc_generated_files/i2c1_slave.c: 179:         }
  3922     013E  297B               	goto	i1l1889
  3923     013F                     i1l1863:
  3924                           
  3925                           ;mcc_generated_files/i2c1_slave.c: 181:         {;mcc_generated_files/i2c1_slave.c: 182:
      +                                       i2c1SlaveState = I2C1_ADDR_RX;
  3926     013F  3002               	movlw	2
  3927     0140  0140               	movlb	0	; select bank0
  3928     0141  00CA               	movwf	_i2c1SlaveState	;volatile
  3929     0142  297B               	goto	i1l1889
  3930     0143                     i1l1865:
  3931                           
  3932                           ;mcc_generated_files/i2c1_slave.c: 186:     {;mcc_generated_files/i2c1_slave.c: 187:    
      +                               if(I2C1_SlaveIsRead())
  3933     0143  3183  2313  3181   	fcall	_I2C1_SlaveIsRead
  3934     0146  3A00               	xorlw	0
  3935     0147  1903               	skipnz
  3936     0148  294A               	goto	u51_21
  3937     0149  294B               	goto	u51_20
  3938     014A                     u51_21:
  3939     014A  294F               	goto	i1l1869
  3940     014B                     u51_20:
  3941     014B                     i1l1867:
  3942                           
  3943                           ;mcc_generated_files/i2c1_slave.c: 188:         {;mcc_generated_files/i2c1_slave.c: 189:
      +                                       i2c1SlaveState = I2C1_DATA_TX;
  3944     014B  3003               	movlw	3
  3945     014C  0140               	movlb	0	; select bank0
  3946     014D  00CA               	movwf	_i2c1SlaveState	;volatile
  3947                           
  3948                           ;mcc_generated_files/i2c1_slave.c: 190:         }
  3949     014E  297B               	goto	i1l1889
  3950     014F                     i1l1869:
  3951                           
  3952                           ;mcc_generated_files/i2c1_slave.c: 192:         {;mcc_generated_files/i2c1_slave.c: 193:
      +                                       i2c1SlaveState = I2C1_DATA_RX;
  3953     014F  3004               	movlw	4
  3954     0150  0140               	movlb	0	; select bank0
  3955     0151  00CA               	movwf	_i2c1SlaveState	;volatile
  3956     0152  297B               	goto	i1l1889
  3957     0153                     i1l1871:
  3958                           
  3959                           ;mcc_generated_files/i2c1_slave.c: 200:             I2C1_SlaveAddrCallBack();
  3960     0153  3182  22CB  3181   	fcall	_I2C1_SlaveAddrCallBack
  3961     0156                     i1l1873:
  3962                           
  3963                           ;mcc_generated_files/i2c1_slave.c: 201:             if(I2C1_SlaveIsTxBufEmpty())
  3964     0156  3182  22E2  3181   	fcall	_I2C1_SlaveIsTxBufEmpty
  3965     0159  3A00               	xorlw	0
  3966     015A  1903               	skipnz
  3967     015B  295D               	goto	u52_21
  3968     015C  295E               	goto	u52_20
  3969     015D                     u52_21:
  3970     015D  2991               	goto	i1l1891
  3971     015E                     u52_20:
  3972     015E                     i1l1875:
  3973                           
  3974                           ;mcc_generated_files/i2c1_slave.c: 202:             {;mcc_generated_files/i2c1_slave.c: 
      +                          203:                 I2C1_SlaveWrCallBack();
  3975     015E  3182  22B1  3181   	fcall	_I2C1_SlaveWrCallBack
  3976     0161  2991               	goto	i1l1891
  3977     0162                     i1l1877:
  3978                           
  3979                           ;mcc_generated_files/i2c1_slave.c: 207:             I2C1_SlaveAddrCallBack();
  3980     0162  3182  22CB  3181   	fcall	_I2C1_SlaveAddrCallBack
  3981                           
  3982                           ;mcc_generated_files/i2c1_slave.c: 208:             break;
  3983     0165  2991               	goto	i1l1891
  3984     0166                     i1l1879:
  3985                           
  3986                           ;mcc_generated_files/i2c1_slave.c: 210:             if(I2C1_SlaveIsTxBufEmpty())
  3987     0166  3182  22E2  3181   	fcall	_I2C1_SlaveIsTxBufEmpty
  3988     0169  3A00               	xorlw	0
  3989     016A  1903               	skipnz
  3990     016B  296D               	goto	u53_21
  3991     016C  296E               	goto	u53_20
  3992     016D                     u53_21:
  3993     016D  2991               	goto	i1l1891
  3994     016E                     u53_20:
  3995     016E  295E               	goto	i1l1875
  3996     016F                     i1l1883:
  3997                           
  3998                           ;mcc_generated_files/i2c1_slave.c: 216:             if(I2C1_SlaveIsRxBufFull())
  3999     016F  3183  2318  3181   	fcall	_I2C1_SlaveIsRxBufFull
  4000     0172  3A00               	xorlw	0
  4001     0173  1903               	skipnz
  4002     0174  2976               	goto	u54_21
  4003     0175  2977               	goto	u54_20
  4004     0176                     u54_21:
  4005     0176  2991               	goto	i1l1891
  4006     0177                     u54_20:
  4007     0177                     i1l1885:
  4008                           
  4009                           ;mcc_generated_files/i2c1_slave.c: 217:             {;mcc_generated_files/i2c1_slave.c: 
      +                          218:                 I2C1_SlaveRdCallBack();
  4010     0177  3182  22BE  3181   	fcall	_I2C1_SlaveRdCallBack
  4011     017A  2991               	goto	i1l1891
  4012     017B                     i1l1889:
  4013     017B  084A               	movf	_i2c1SlaveState,w	;volatile
  4014     017C  00F1               	movwf	??_I2C1_Isr
  4015     017D  01F2               	clrf	??_I2C1_Isr+1
  4016                           
  4017                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4018                           ; Switch size 1, requested type "simple"
  4019                           ; Number of cases is 1, Range of values is 0 to 0
  4020                           ; switch strategies available:
  4021                           ; Name         Instructions Cycles
  4022                           ; simple_byte            4     3 (average)
  4023                           ; direct_byte            8     6 (fixed)
  4024                           ; jumptable            260     6 (fixed)
  4025                           ;	Chosen strategy is simple_byte
  4026     017E  0872               	movf	??_I2C1_Isr+1,w
  4027     017F  3A00               	xorlw	0	; case 0
  4028     0180  1903               	skipnz
  4029     0181  2983               	goto	i1l2095
  4030     0182  2991               	goto	i1l1891
  4031     0183                     i1l2095:
  4032                           
  4033                           ; Switch size 1, requested type "simple"
  4034                           ; Number of cases is 4, Range of values is 1 to 4
  4035                           ; switch strategies available:
  4036                           ; Name         Instructions Cycles
  4037                           ; simple_byte           13     7 (average)
  4038                           ; direct_byte           17     9 (fixed)
  4039                           ; jumptable            263     9 (fixed)
  4040                           ;	Chosen strategy is simple_byte
  4041     0183  0871               	movf	??_I2C1_Isr,w
  4042     0184  3A01               	xorlw	1	; case 1
  4043     0185  1903               	skipnz
  4044     0186  2953               	goto	i1l1871
  4045     0187  3A03               	xorlw	3	; case 2
  4046     0188  1903               	skipnz
  4047     0189  2962               	goto	i1l1877
  4048     018A  3A01               	xorlw	1	; case 3
  4049     018B  1903               	skipnz
  4050     018C  2966               	goto	i1l1879
  4051     018D  3A07               	xorlw	7	; case 4
  4052     018E  1903               	skipnz
  4053     018F  296F               	goto	i1l1883
  4054     0190  2991               	goto	i1l1891
  4055     0191                     i1l1891:
  4056                           
  4057                           ;mcc_generated_files/i2c1_slave.c: 224:     I2C1_SlaveReleaseClock();
  4058     0191  3183  231F  3181   	fcall	_I2C1_SlaveReleaseClock
  4059     0194                     i1l277:
  4060     0194  0008               	return
  4061     0195                     __end_of_I2C1_Isr:
  4062                           
  4063                           	psect	text19
  4064     02B1                     __ptext19:	
  4065 ;; *************** function _I2C1_SlaveWrCallBack *****************
  4066 ;; Defined at:
  4067 ;;		line 263 in file "mcc_generated_files/i2c1_slave.c"
  4068 ;; Parameters:    Size  Location     Type
  4069 ;;		None
  4070 ;; Auto vars:     Size  Location     Type
  4071 ;;		None
  4072 ;; Return value:  Size  Location     Type
  4073 ;;                  1    wreg      void 
  4074 ;; Registers used:
  4075 ;;		wreg, status,2, status,0, pclath, cstack
  4076 ;; Tracked objects:
  4077 ;;		On entry : 0/0
  4078 ;;		On exit  : 0/0
  4079 ;;		Unchanged: 0/0
  4080 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4081 ;;      Params:         0       0       0       0
  4082 ;;      Locals:         0       0       0       0
  4083 ;;      Temps:          0       0       0       0
  4084 ;;      Totals:         0       0       0       0
  4085 ;;Total ram usage:        0 bytes
  4086 ;; Hardware stack levels used: 1
  4087 ;; Hardware stack levels required when called: 2
  4088 ;; This function calls:
  4089 ;;		NULL
  4090 ;;		_I2C1_SlaveDefWrInterruptHandler
  4091 ;; This function is called by:
  4092 ;;		_I2C1_Isr
  4093 ;; This function uses a non-reentrant model
  4094 ;;
  4095                           
  4096     02B1                     _I2C1_SlaveWrCallBack:	
  4097                           ;psect for function _I2C1_SlaveWrCallBack
  4098                           
  4099     02B1                     i1l1789:	
  4100                           ;incstack = 0
  4101                           ; Regs used in _I2C1_SlaveWrCallBack: [wreg+status,2+status,0+pclath+cstack]
  4102                           
  4103                           
  4104                           ;mcc_generated_files/i2c1_slave.c: 265:     if (I2C1_SlaveWrInterruptHandler)
  4105     02B1  0140               	movlb	0	; select bank0
  4106     02B2  0844               	movf	_I2C1_SlaveWrInterruptHandler,w
  4107     02B3  0445               	iorwf	_I2C1_SlaveWrInterruptHandler+1,w
  4108     02B4  1903               	btfsc	3,2
  4109     02B5  2AB7               	goto	u40_21
  4110     02B6  2AB8               	goto	u40_20
  4111     02B7                     u40_21:
  4112     02B7  2ABD               	goto	i1l300
  4113     02B8                     u40_20:
  4114     02B8                     i1l1791:
  4115                           
  4116                           ;mcc_generated_files/i2c1_slave.c: 266:     {;mcc_generated_files/i2c1_slave.c: 267:    
      +                               I2C1_SlaveWrInterruptHandler();
  4117     02B8  0845               	movf	_I2C1_SlaveWrInterruptHandler+1,w
  4118     02B9  008A               	movwf	10
  4119     02BA  0844               	movf	_I2C1_SlaveWrInterruptHandler,w
  4120     02BB  000A               	callw
  4121     02BC  3182               	pagesel	$
  4122     02BD                     i1l300:
  4123     02BD  0008               	return
  4124     02BE                     __end_of_I2C1_SlaveWrCallBack:
  4125                           
  4126                           	psect	text20
  4127     0309                     __ptext20:	
  4128 ;; *************** function _I2C1_SlaveDefWrInterruptHandler *****************
  4129 ;; Defined at:
  4130 ;;		line 271 in file "mcc_generated_files/i2c1_slave.c"
  4131 ;; Parameters:    Size  Location     Type
  4132 ;;		None
  4133 ;; Auto vars:     Size  Location     Type
  4134 ;;		None
  4135 ;; Return value:  Size  Location     Type
  4136 ;;                  1    wreg      void 
  4137 ;; Registers used:
  4138 ;;		wreg, status,2, status,0, pclath, cstack
  4139 ;; Tracked objects:
  4140 ;;		On entry : 0/0
  4141 ;;		On exit  : 0/0
  4142 ;;		Unchanged: 0/0
  4143 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4144 ;;      Params:         0       0       0       0
  4145 ;;      Locals:         0       0       0       0
  4146 ;;      Temps:          0       0       0       0
  4147 ;;      Totals:         0       0       0       0
  4148 ;;Total ram usage:        0 bytes
  4149 ;; Hardware stack levels used: 1
  4150 ;; Hardware stack levels required when called: 1
  4151 ;; This function calls:
  4152 ;;		_I2C1_SlaveSendTxData
  4153 ;; This function is called by:
  4154 ;;		_I2C1_Open
  4155 ;;		_I2C1_SlaveWrCallBack
  4156 ;; This function uses a non-reentrant model
  4157 ;;
  4158                           
  4159     0309                     _I2C1_SlaveDefWrInterruptHandler:	
  4160                           ;psect for function _I2C1_SlaveDefWrInterruptHandler
  4161                           
  4162     0309                     i1l1655:	
  4163                           ;incstack = 0
  4164                           ; Regs used in _I2C1_SlaveDefWrInterruptHandler: [wreg+status,2+status,0+pclath+cstack]
  4165                           
  4166                           
  4167                           ;mcc_generated_files/i2c1_slave.c: 272:     I2C1_SlaveSendTxData(i2c1WrData);
  4168     0309  0879               	movf	_i2c1WrData,w	;volatile
  4169     030A  3183  230E  3183   	fcall	_I2C1_SlaveSendTxData
  4170     030D                     i1l303:
  4171     030D  0008               	return
  4172     030E                     __end_of_I2C1_SlaveDefWrInterruptHandler:
  4173                           
  4174                           	psect	text21
  4175     030E                     __ptext21:	
  4176 ;; *************** function _I2C1_SlaveSendTxData *****************
  4177 ;; Defined at:
  4178 ;;		line 407 in file "mcc_generated_files/i2c1_slave.c"
  4179 ;; Parameters:    Size  Location     Type
  4180 ;;  data            1    wreg     unsigned char 
  4181 ;; Auto vars:     Size  Location     Type
  4182 ;;  data            1    0[COMMON] unsigned char 
  4183 ;; Return value:  Size  Location     Type
  4184 ;;                  1    wreg      void 
  4185 ;; Registers used:
  4186 ;;		wreg
  4187 ;; Tracked objects:
  4188 ;;		On entry : 0/0
  4189 ;;		On exit  : 0/0
  4190 ;;		Unchanged: 0/0
  4191 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4192 ;;      Params:         0       0       0       0
  4193 ;;      Locals:         1       0       0       0
  4194 ;;      Temps:          0       0       0       0
  4195 ;;      Totals:         1       0       0       0
  4196 ;;Total ram usage:        1 bytes
  4197 ;; Hardware stack levels used: 1
  4198 ;; This function calls:
  4199 ;;		Nothing
  4200 ;; This function is called by:
  4201 ;;		_I2C1_SlaveDefWrInterruptHandler
  4202 ;;		_I2C1_Write
  4203 ;; This function uses a non-reentrant model
  4204 ;;
  4205                           
  4206     030E                     _I2C1_SlaveSendTxData:	
  4207                           ;psect for function _I2C1_SlaveSendTxData
  4208                           
  4209                           
  4210                           ;incstack = 0
  4211                           ; Regs used in _I2C1_SlaveSendTxData: [wreg]
  4212                           ;I2C1_SlaveSendTxData@data stored from wreg
  4213     030E  00F0               	movwf	I2C1_SlaveSendTxData@data
  4214     030F                     i1l1601:
  4215                           
  4216                           ;mcc_generated_files/i2c1_slave.c: 407: static __attribute__((inline)) void I2C1_SlaveSe
      +                          ndTxData(uint8_t data);mcc_generated_files/i2c1_slave.c: 408: {;mcc_generated_files/i2c1
      +                          _slave.c: 409:     SSP1BUF = data;
  4217     030F  0870               	movf	I2C1_SlaveSendTxData@data,w
  4218     0310  0143               	movlb	3	; select bank3
  4219     0311  008C               	movwf	12	;volatile
  4220     0312                     i1l379:
  4221     0312  0008               	return
  4222     0313                     __end_of_I2C1_SlaveSendTxData:
  4223                           
  4224                           	psect	text22
  4225     031F                     __ptext22:	
  4226 ;; *************** function _I2C1_SlaveReleaseClock *****************
  4227 ;; Defined at:
  4228 ;;		line 377 in file "mcc_generated_files/i2c1_slave.c"
  4229 ;; Parameters:    Size  Location     Type
  4230 ;;		None
  4231 ;; Auto vars:     Size  Location     Type
  4232 ;;		None
  4233 ;; Return value:  Size  Location     Type
  4234 ;;                  1    wreg      void 
  4235 ;; Registers used:
  4236 ;;		None
  4237 ;; Tracked objects:
  4238 ;;		On entry : 0/0
  4239 ;;		On exit  : 0/0
  4240 ;;		Unchanged: 0/0
  4241 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4242 ;;      Params:         0       0       0       0
  4243 ;;      Locals:         0       0       0       0
  4244 ;;      Temps:          0       0       0       0
  4245 ;;      Totals:         0       0       0       0
  4246 ;;Total ram usage:        0 bytes
  4247 ;; Hardware stack levels used: 1
  4248 ;; This function calls:
  4249 ;;		Nothing
  4250 ;; This function is called by:
  4251 ;;		_I2C1_Isr
  4252 ;; This function uses a non-reentrant model
  4253 ;;
  4254                           
  4255     031F                     _I2C1_SlaveReleaseClock:	
  4256                           ;psect for function _I2C1_SlaveReleaseClock
  4257                           
  4258     031F                     i1l1801:	
  4259                           ;incstack = 0
  4260                           ; Regs used in _I2C1_SlaveReleaseClock: []
  4261                           
  4262                           
  4263                           ;mcc_generated_files/i2c1_slave.c: 379:     SSP1CON1bits.CKP = 1;
  4264     031F  0143               	movlb	3	; select bank3
  4265     0320  1610               	bsf	16,4	;volatile
  4266     0321                     i1l361:
  4267     0321  0008               	return
  4268     0322                     __end_of_I2C1_SlaveReleaseClock:
  4269                           
  4270                           	psect	text23
  4271     02BE                     __ptext23:	
  4272 ;; *************** function _I2C1_SlaveRdCallBack *****************
  4273 ;; Defined at:
  4274 ;;		line 238 in file "mcc_generated_files/i2c1_slave.c"
  4275 ;; Parameters:    Size  Location     Type
  4276 ;;		None
  4277 ;; Auto vars:     Size  Location     Type
  4278 ;;		None
  4279 ;; Return value:  Size  Location     Type
  4280 ;;                  1    wreg      void 
  4281 ;; Registers used:
  4282 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4283 ;; Tracked objects:
  4284 ;;		On entry : 0/0
  4285 ;;		On exit  : 0/0
  4286 ;;		Unchanged: 0/0
  4287 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4288 ;;      Params:         0       0       0       0
  4289 ;;      Locals:         0       0       0       0
  4290 ;;      Temps:          0       0       0       0
  4291 ;;      Totals:         0       0       0       0
  4292 ;;Total ram usage:        0 bytes
  4293 ;; Hardware stack levels used: 1
  4294 ;; Hardware stack levels required when called: 2
  4295 ;; This function calls:
  4296 ;;		NULL
  4297 ;;		_I2C1_SlaveDefRdInterruptHandler
  4298 ;; This function is called by:
  4299 ;;		_I2C1_Isr
  4300 ;; This function uses a non-reentrant model
  4301 ;;
  4302                           
  4303     02BE                     _I2C1_SlaveRdCallBack:	
  4304                           ;psect for function _I2C1_SlaveRdCallBack
  4305                           
  4306     02BE                     i1l1797:	
  4307                           ;incstack = 0
  4308                           ; Regs used in _I2C1_SlaveRdCallBack: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4309                           
  4310                           
  4311                           ;mcc_generated_files/i2c1_slave.c: 240:     if (I2C1_SlaveRdInterruptHandler)
  4312     02BE  0140               	movlb	0	; select bank0
  4313     02BF  0846               	movf	_I2C1_SlaveRdInterruptHandler,w
  4314     02C0  0447               	iorwf	_I2C1_SlaveRdInterruptHandler+1,w
  4315     02C1  1903               	btfsc	3,2
  4316     02C2  2AC4               	goto	u41_21
  4317     02C3  2AC5               	goto	u41_20
  4318     02C4                     u41_21:
  4319     02C4  2ACA               	goto	i1l287
  4320     02C5                     u41_20:
  4321     02C5                     i1l1799:
  4322                           
  4323                           ;mcc_generated_files/i2c1_slave.c: 241:     {;mcc_generated_files/i2c1_slave.c: 243:    
      +                               I2C1_SlaveRdInterruptHandler();
  4324     02C5  0847               	movf	_I2C1_SlaveRdInterruptHandler+1,w
  4325     02C6  008A               	movwf	10
  4326     02C7  0846               	movf	_I2C1_SlaveRdInterruptHandler,w
  4327     02C8  000A               	callw
  4328     02C9  3182               	pagesel	$
  4329     02CA                     i1l287:
  4330     02CA  0008               	return
  4331     02CB                     __end_of_I2C1_SlaveRdCallBack:
  4332                           
  4333                           	psect	text24
  4334     0261                     __ptext24:	
  4335 ;; *************** function _I2C1_SlaveDefRdInterruptHandler *****************
  4336 ;; Defined at:
  4337 ;;		line 248 in file "mcc_generated_files/i2c1_slave.c"
  4338 ;; Parameters:    Size  Location     Type
  4339 ;;		None
  4340 ;; Auto vars:     Size  Location     Type
  4341 ;;		None
  4342 ;; Return value:  Size  Location     Type
  4343 ;;                  1    wreg      void 
  4344 ;; Registers used:
  4345 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4346 ;; Tracked objects:
  4347 ;;		On entry : 0/0
  4348 ;;		On exit  : 0/0
  4349 ;;		Unchanged: 0/0
  4350 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4351 ;;      Params:         0       0       0       0
  4352 ;;      Locals:         0       0       0       0
  4353 ;;      Temps:          0       0       0       0
  4354 ;;      Totals:         0       0       0       0
  4355 ;;Total ram usage:        0 bytes
  4356 ;; Hardware stack levels used: 1
  4357 ;; Hardware stack levels required when called: 1
  4358 ;; This function calls:
  4359 ;;		_I2C1_SlaveGetRxData
  4360 ;; This function is called by:
  4361 ;;		_I2C1_Open
  4362 ;;		_I2C1_SlaveRdCallBack
  4363 ;; This function uses a non-reentrant model
  4364 ;;
  4365                           
  4366     0261                     _I2C1_SlaveDefRdInterruptHandler:	
  4367                           ;psect for function _I2C1_SlaveDefRdInterruptHandler
  4368                           
  4369     0261                     i1l1649:	
  4370                           ;incstack = 0
  4371                           ; Regs used in _I2C1_SlaveDefRdInterruptHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pcl
      +                          ath+cstack]
  4372                           
  4373                           
  4374                           ;mcc_generated_files/i2c1_slave.c: 250:     i2c1RdData = I2C1_SlaveGetRxData();
  4375     0261  3183  2325  3182   	fcall	_I2C1_SlaveGetRxData
  4376     0264  0140               	movlb	0	; select bank0
  4377     0265  00CC               	movwf	_i2c1RdData	;volatile
  4378                           
  4379                           ;mcc_generated_files/i2c1_slave.c: 252:     while(i2cReadCnt < 3)
  4380     0266  2A6D               	goto	i1l1653
  4381     0267                     i1l1651:
  4382                           
  4383                           ;mcc_generated_files/i2c1_slave.c: 253:     {;mcc_generated_files/i2c1_slave.c: 254:    
      +                               i2cDataRead[i2cReadCnt] = i2c1RdData;
  4384     0267  0878               	movf	_i2cReadCnt,w
  4385     0268  3E39               	addlw	(low (_i2cDataRead| 0))& (0+255)
  4386     0269  0086               	movwf	6
  4387     026A  0187               	clrf	7
  4388     026B  084C               	movf	_i2c1RdData,w	;volatile
  4389     026C  0081               	movwf	1
  4390     026D                     i1l1653:
  4391                           
  4392                           ;mcc_generated_files/i2c1_slave.c: 252:     while(i2cReadCnt < 3)
  4393     026D  3003               	movlw	3
  4394     026E  0278               	subwf	_i2cReadCnt,w	;volatile
  4395     026F  1C03               	skipc
  4396     0270  2A72               	goto	u34_21
  4397     0271  2A73               	goto	u34_20
  4398     0272                     u34_21:
  4399     0272  2A67               	goto	i1l1651
  4400     0273                     u34_20:
  4401     0273                     i1l293:
  4402     0273  0008               	return
  4403     0274                     __end_of_I2C1_SlaveDefRdInterruptHandler:
  4404                           
  4405                           	psect	text25
  4406     02E2                     __ptext25:	
  4407 ;; *************** function _I2C1_SlaveIsTxBufEmpty *****************
  4408 ;; Defined at:
  4409 ;;		line 397 in file "mcc_generated_files/i2c1_slave.c"
  4410 ;; Parameters:    Size  Location     Type
  4411 ;;		None
  4412 ;; Auto vars:     Size  Location     Type
  4413 ;;		None
  4414 ;; Return value:  Size  Location     Type
  4415 ;;                  1    wreg      _Bool 
  4416 ;; Registers used:
  4417 ;;		wreg, status,0
  4418 ;; Tracked objects:
  4419 ;;		On entry : 0/0
  4420 ;;		On exit  : 0/0
  4421 ;;		Unchanged: 0/0
  4422 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4423 ;;      Params:         0       0       0       0
  4424 ;;      Locals:         0       0       0       0
  4425 ;;      Temps:          0       0       0       0
  4426 ;;      Totals:         0       0       0       0
  4427 ;;Total ram usage:        0 bytes
  4428 ;; Hardware stack levels used: 1
  4429 ;; This function calls:
  4430 ;;		Nothing
  4431 ;; This function is called by:
  4432 ;;		_I2C1_Isr
  4433 ;; This function uses a non-reentrant model
  4434 ;;
  4435                           
  4436     02E2                     _I2C1_SlaveIsTxBufEmpty:	
  4437                           ;psect for function _I2C1_SlaveIsTxBufEmpty
  4438                           
  4439     02E2                     i1l1785:	
  4440                           ;incstack = 0
  4441                           ; Regs used in _I2C1_SlaveIsTxBufEmpty: [wreg+status,0]
  4442                           
  4443                           
  4444                           ;mcc_generated_files/i2c1_slave.c: 399:     return !SSP1STATbits.BF;
  4445     02E2  1003               	clrc
  4446     02E3  0143               	movlb	3	; select bank3
  4447     02E4  1C0F               	btfss	15,0	;volatile
  4448     02E5  1403               	setc
  4449     02E6  3000               	movlw	0
  4450     02E7  3D09               	addwfc	9,w
  4451     02E8                     i1l373:
  4452     02E8  0008               	return
  4453     02E9                     __end_of_I2C1_SlaveIsTxBufEmpty:
  4454                           
  4455                           	psect	text26
  4456     0318                     __ptext26:	
  4457 ;; *************** function _I2C1_SlaveIsRxBufFull *****************
  4458 ;; Defined at:
  4459 ;;		line 402 in file "mcc_generated_files/i2c1_slave.c"
  4460 ;; Parameters:    Size  Location     Type
  4461 ;;		None
  4462 ;; Auto vars:     Size  Location     Type
  4463 ;;		None
  4464 ;; Return value:  Size  Location     Type
  4465 ;;                  1    wreg      _Bool 
  4466 ;; Registers used:
  4467 ;;		wreg, status,2, status,0
  4468 ;; Tracked objects:
  4469 ;;		On entry : 0/0
  4470 ;;		On exit  : 0/0
  4471 ;;		Unchanged: 0/0
  4472 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4473 ;;      Params:         0       0       0       0
  4474 ;;      Locals:         0       0       0       0
  4475 ;;      Temps:          0       0       0       0
  4476 ;;      Totals:         0       0       0       0
  4477 ;;Total ram usage:        0 bytes
  4478 ;; Hardware stack levels used: 1
  4479 ;; This function calls:
  4480 ;;		Nothing
  4481 ;; This function is called by:
  4482 ;;		_I2C1_Isr
  4483 ;; This function uses a non-reentrant model
  4484 ;;
  4485                           
  4486     0318                     _I2C1_SlaveIsRxBufFull:	
  4487                           ;psect for function _I2C1_SlaveIsRxBufFull
  4488                           
  4489     0318                     i1l1793:	
  4490                           ;incstack = 0
  4491                           ; Regs used in _I2C1_SlaveIsRxBufFull: [wreg+status,2+status,0]
  4492                           
  4493                           
  4494                           ;mcc_generated_files/i2c1_slave.c: 404:     return SSP1STATbits.BF;
  4495     0318  0143               	movlb	3	; select bank3
  4496     0319  080F               	movf	15,w	;volatile
  4497     031A  3901               	andlw	1
  4498     031B                     i1l376:
  4499     031B  0008               	return
  4500     031C                     __end_of_I2C1_SlaveIsRxBufFull:
  4501                           
  4502                           	psect	text27
  4503     0313                     __ptext27:	
  4504 ;; *************** function _I2C1_SlaveIsRead *****************
  4505 ;; Defined at:
  4506 ;;		line 367 in file "mcc_generated_files/i2c1_slave.c"
  4507 ;; Parameters:    Size  Location     Type
  4508 ;;		None
  4509 ;; Auto vars:     Size  Location     Type
  4510 ;;		None
  4511 ;; Return value:  Size  Location     Type
  4512 ;;                  1    wreg      _Bool 
  4513 ;; Registers used:
  4514 ;;		wreg, status,2, status,0
  4515 ;; Tracked objects:
  4516 ;;		On entry : 0/0
  4517 ;;		On exit  : 0/0
  4518 ;;		Unchanged: 0/0
  4519 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4520 ;;      Params:         0       0       0       0
  4521 ;;      Locals:         0       0       0       0
  4522 ;;      Temps:          0       0       0       0
  4523 ;;      Totals:         0       0       0       0
  4524 ;;Total ram usage:        0 bytes
  4525 ;; Hardware stack levels used: 1
  4526 ;; This function calls:
  4527 ;;		Nothing
  4528 ;; This function is called by:
  4529 ;;		_I2C1_Isr
  4530 ;;		_I2C1_IsRead
  4531 ;; This function uses a non-reentrant model
  4532 ;;
  4533                           
  4534     0313                     _I2C1_SlaveIsRead:	
  4535                           ;psect for function _I2C1_SlaveIsRead
  4536                           
  4537     0313                     i1l1771:	
  4538                           ;incstack = 0
  4539                           ; Regs used in _I2C1_SlaveIsRead: [wreg+status,2+status,0]
  4540                           
  4541                           
  4542                           ;mcc_generated_files/i2c1_slave.c: 369:     return (SSP1STATbits.R_nW);
  4543     0313  0143               	movlb	3	; select bank3
  4544     0314  0C0F               	rrf	15,w	;volatile
  4545     0315  0C89               	rrf	9,f
  4546     0316  3901               	andlw	1
  4547     0317                     i1l355:
  4548     0317  0008               	return
  4549     0318                     __end_of_I2C1_SlaveIsRead:
  4550                           
  4551                           	psect	text28
  4552     02E9                     __ptext28:	
  4553 ;; *************** function _I2C1_SlaveIsAddr *****************
  4554 ;; Defined at:
  4555 ;;		line 362 in file "mcc_generated_files/i2c1_slave.c"
  4556 ;; Parameters:    Size  Location     Type
  4557 ;;		None
  4558 ;; Auto vars:     Size  Location     Type
  4559 ;;		None
  4560 ;; Return value:  Size  Location     Type
  4561 ;;                  1    wreg      _Bool 
  4562 ;; Registers used:
  4563 ;;		wreg, status,0
  4564 ;; Tracked objects:
  4565 ;;		On entry : 0/0
  4566 ;;		On exit  : 0/0
  4567 ;;		Unchanged: 0/0
  4568 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4569 ;;      Params:         0       0       0       0
  4570 ;;      Locals:         0       0       0       0
  4571 ;;      Temps:          0       0       0       0
  4572 ;;      Totals:         0       0       0       0
  4573 ;;Total ram usage:        0 bytes
  4574 ;; Hardware stack levels used: 1
  4575 ;; This function calls:
  4576 ;;		Nothing
  4577 ;; This function is called by:
  4578 ;;		_I2C1_Isr
  4579 ;; This function uses a non-reentrant model
  4580 ;;
  4581                           
  4582     02E9                     _I2C1_SlaveIsAddr:	
  4583                           ;psect for function _I2C1_SlaveIsAddr
  4584                           
  4585     02E9                     i1l1777:	
  4586                           ;incstack = 0
  4587                           ; Regs used in _I2C1_SlaveIsAddr: [wreg+status,0]
  4588                           
  4589                           
  4590                           ;mcc_generated_files/i2c1_slave.c: 364:     return !(SSP1STATbits.D_nA);
  4591     02E9  1003               	clrc
  4592     02EA  0143               	movlb	3	; select bank3
  4593     02EB  1E8F               	btfss	15,5	;volatile
  4594     02EC  1403               	setc
  4595     02ED  3000               	movlw	0
  4596     02EE  3D09               	addwfc	9,w
  4597     02EF                     i1l352:
  4598     02EF  0008               	return
  4599     02F0                     __end_of_I2C1_SlaveIsAddr:
  4600                           
  4601                           	psect	text29
  4602     0322                     __ptext29:	
  4603 ;; *************** function _I2C1_SlaveClearIrq *****************
  4604 ;; Defined at:
  4605 ;;		line 372 in file "mcc_generated_files/i2c1_slave.c"
  4606 ;; Parameters:    Size  Location     Type
  4607 ;;		None
  4608 ;; Auto vars:     Size  Location     Type
  4609 ;;		None
  4610 ;; Return value:  Size  Location     Type
  4611 ;;                  1    wreg      void 
  4612 ;; Registers used:
  4613 ;;		None
  4614 ;; Tracked objects:
  4615 ;;		On entry : 0/0
  4616 ;;		On exit  : 0/0
  4617 ;;		Unchanged: 0/0
  4618 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4619 ;;      Params:         0       0       0       0
  4620 ;;      Locals:         0       0       0       0
  4621 ;;      Temps:          0       0       0       0
  4622 ;;      Totals:         0       0       0       0
  4623 ;;Total ram usage:        0 bytes
  4624 ;; Hardware stack levels used: 1
  4625 ;; This function calls:
  4626 ;;		Nothing
  4627 ;; This function is called by:
  4628 ;;		_I2C1_Isr
  4629 ;; This function uses a non-reentrant model
  4630 ;;
  4631                           
  4632     0322                     _I2C1_SlaveClearIrq:	
  4633                           ;psect for function _I2C1_SlaveClearIrq
  4634                           
  4635     0322                     i1l1775:	
  4636                           ;incstack = 0
  4637                           ; Regs used in _I2C1_SlaveClearIrq: []
  4638                           
  4639                           
  4640                           ;mcc_generated_files/i2c1_slave.c: 374:     PIR1bits.SSP1IF = 0;
  4641     0322  014E               	movlb	14	; select bank14
  4642     0323  108D               	bcf	13,1	;volatile
  4643     0324                     i1l358:
  4644     0324  0008               	return
  4645     0325                     __end_of_I2C1_SlaveClearIrq:
  4646                           
  4647                           	psect	text30
  4648     02CB                     __ptext30:	
  4649 ;; *************** function _I2C1_SlaveAddrCallBack *****************
  4650 ;; Defined at:
  4651 ;;		line 280 in file "mcc_generated_files/i2c1_slave.c"
  4652 ;; Parameters:    Size  Location     Type
  4653 ;;		None
  4654 ;; Auto vars:     Size  Location     Type
  4655 ;;		None
  4656 ;; Return value:  Size  Location     Type
  4657 ;;                  1    wreg      void 
  4658 ;; Registers used:
  4659 ;;		wreg, status,2, status,0, pclath, cstack
  4660 ;; Tracked objects:
  4661 ;;		On entry : 0/0
  4662 ;;		On exit  : 0/0
  4663 ;;		Unchanged: 0/0
  4664 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4665 ;;      Params:         0       0       0       0
  4666 ;;      Locals:         0       0       0       0
  4667 ;;      Temps:          0       0       0       0
  4668 ;;      Totals:         0       0       0       0
  4669 ;;Total ram usage:        0 bytes
  4670 ;; Hardware stack levels used: 1
  4671 ;; Hardware stack levels required when called: 2
  4672 ;; This function calls:
  4673 ;;		NULL
  4674 ;;		_I2C1_SlaveDefAddrInterruptHandler
  4675 ;; This function is called by:
  4676 ;;		_I2C1_Isr
  4677 ;; This function uses a non-reentrant model
  4678 ;;
  4679                           
  4680     02CB                     _I2C1_SlaveAddrCallBack:	
  4681                           ;psect for function _I2C1_SlaveAddrCallBack
  4682                           
  4683     02CB                     i1l1781:	
  4684                           ;incstack = 0
  4685                           ; Regs used in _I2C1_SlaveAddrCallBack: [wreg+status,2+status,0+pclath+cstack]
  4686                           
  4687                           
  4688                           ;mcc_generated_files/i2c1_slave.c: 282:     if (I2C1_SlaveAddrInterruptHandler) {
  4689     02CB  0140               	movlb	0	; select bank0
  4690     02CC  0842               	movf	_I2C1_SlaveAddrInterruptHandler,w
  4691     02CD  0443               	iorwf	_I2C1_SlaveAddrInterruptHandler+1,w
  4692     02CE  1903               	btfsc	3,2
  4693     02CF  2AD1               	goto	u39_21
  4694     02D0  2AD2               	goto	u39_20
  4695     02D1                     u39_21:
  4696     02D1  2AD7               	goto	i1l310
  4697     02D2                     u39_20:
  4698     02D2                     i1l1783:
  4699                           
  4700                           ;mcc_generated_files/i2c1_slave.c: 283:         I2C1_SlaveAddrInterruptHandler();
  4701     02D2  0843               	movf	_I2C1_SlaveAddrInterruptHandler+1,w
  4702     02D3  008A               	movwf	10
  4703     02D4  0842               	movf	_I2C1_SlaveAddrInterruptHandler,w
  4704     02D5  000A               	callw
  4705     02D6  3182               	pagesel	$
  4706     02D7                     i1l310:
  4707     02D7  0008               	return
  4708     02D8                     __end_of_I2C1_SlaveAddrCallBack:
  4709                           
  4710                           	psect	text31
  4711     02F0                     __ptext31:	
  4712 ;; *************** function _I2C1_SlaveDefAddrInterruptHandler *****************
  4713 ;; Defined at:
  4714 ;;		line 288 in file "mcc_generated_files/i2c1_slave.c"
  4715 ;; Parameters:    Size  Location     Type
  4716 ;;		None
  4717 ;; Auto vars:     Size  Location     Type
  4718 ;;		None
  4719 ;; Return value:  Size  Location     Type
  4720 ;;                  1    wreg      void 
  4721 ;; Registers used:
  4722 ;;		wreg, status,2, pclath, cstack
  4723 ;; Tracked objects:
  4724 ;;		On entry : 0/0
  4725 ;;		On exit  : 0/0
  4726 ;;		Unchanged: 0/0
  4727 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4728 ;;      Params:         0       0       0       0
  4729 ;;      Locals:         0       0       0       0
  4730 ;;      Temps:          0       0       0       0
  4731 ;;      Totals:         0       0       0       0
  4732 ;;Total ram usage:        0 bytes
  4733 ;; Hardware stack levels used: 1
  4734 ;; Hardware stack levels required when called: 1
  4735 ;; This function calls:
  4736 ;;		_I2C1_SlaveGetRxData
  4737 ;; This function is called by:
  4738 ;;		_I2C1_Open
  4739 ;;		_I2C1_SlaveAddrCallBack
  4740 ;; This function uses a non-reentrant model
  4741 ;;
  4742                           
  4743     02F0                     _I2C1_SlaveDefAddrInterruptHandler:	
  4744                           ;psect for function _I2C1_SlaveDefAddrInterruptHandler
  4745                           
  4746     02F0                     i1l1657:	
  4747                           ;incstack = 0
  4748                           ; Regs used in _I2C1_SlaveDefAddrInterruptHandler: [wreg+status,2+pclath+cstack]
  4749                           
  4750                           
  4751                           ;mcc_generated_files/i2c1_slave.c: 289:     i2c1SlaveAddr = I2C1_SlaveGetRxData();
  4752     02F0  3183  2325  3182   	fcall	_I2C1_SlaveGetRxData
  4753     02F3  0140               	movlb	0	; select bank0
  4754     02F4  00CB               	movwf	_i2c1SlaveAddr	;volatile
  4755     02F5                     i1l1659:
  4756                           
  4757                           ;mcc_generated_files/i2c1_slave.c: 291:     i2cReadCnt = 0;
  4758     02F5  01F8               	clrf	_i2cReadCnt	;volatile
  4759     02F6                     i1l313:
  4760     02F6  0008               	return
  4761     02F7                     __end_of_I2C1_SlaveDefAddrInterruptHandler:
  4762                           
  4763                           	psect	text32
  4764     0325                     __ptext32:	
  4765 ;; *************** function _I2C1_SlaveGetRxData *****************
  4766 ;; Defined at:
  4767 ;;		line 412 in file "mcc_generated_files/i2c1_slave.c"
  4768 ;; Parameters:    Size  Location     Type
  4769 ;;		None
  4770 ;; Auto vars:     Size  Location     Type
  4771 ;;		None
  4772 ;; Return value:  Size  Location     Type
  4773 ;;                  1    wreg      unsigned char 
  4774 ;; Registers used:
  4775 ;;		wreg
  4776 ;; Tracked objects:
  4777 ;;		On entry : 0/0
  4778 ;;		On exit  : 0/0
  4779 ;;		Unchanged: 0/0
  4780 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4781 ;;      Params:         0       0       0       0
  4782 ;;      Locals:         0       0       0       0
  4783 ;;      Temps:          0       0       0       0
  4784 ;;      Totals:         0       0       0       0
  4785 ;;Total ram usage:        0 bytes
  4786 ;; Hardware stack levels used: 1
  4787 ;; This function calls:
  4788 ;;		Nothing
  4789 ;; This function is called by:
  4790 ;;		_I2C1_SlaveDefRdInterruptHandler
  4791 ;;		_I2C1_SlaveDefAddrInterruptHandler
  4792 ;;		_I2C1_Read
  4793 ;; This function uses a non-reentrant model
  4794 ;;
  4795                           
  4796     0325                     _I2C1_SlaveGetRxData:	
  4797                           ;psect for function _I2C1_SlaveGetRxData
  4798                           
  4799     0325                     i1l1597:	
  4800                           ;incstack = 0
  4801                           ; Regs used in _I2C1_SlaveGetRxData: [wreg]
  4802                           
  4803                           
  4804                           ;mcc_generated_files/i2c1_slave.c: 414:     return SSP1BUF;
  4805     0325  0143               	movlb	3	; select bank3
  4806     0326  080C               	movf	12,w	;volatile
  4807     0327                     i1l382:
  4808     0327  0008               	return
  4809     0328                     __end_of_I2C1_SlaveGetRxData:
  4810     007E                     btemp	set	126	;btemp
  4811     007E                     int$flags	set	126
  4812     007E                     wtemp0	set	126
  4813                           
  4814                           	psect	idloc
  4815                           
  4816                           ;Config register IDLOC0 @ 0x8000
  4817                           ;	unspecified, using default values
  4818     8000                     	org	32768
  4819     8000  3FFF               	dw	16383
  4820                           
  4821                           ;Config register IDLOC1 @ 0x8001
  4822                           ;	unspecified, using default values
  4823     8001                     	org	32769
  4824     8001  3FFF               	dw	16383
  4825                           
  4826                           ;Config register IDLOC2 @ 0x8002
  4827                           ;	unspecified, using default values
  4828     8002                     	org	32770
  4829     8002  3FFF               	dw	16383
  4830                           
  4831                           ;Config register IDLOC3 @ 0x8003
  4832                           ;	unspecified, using default values
  4833     8003                     	org	32771
  4834     8003  3FFF               	dw	16383
  4835                           
  4836                           	psect	config
  4837                           
  4838                           ;Config register CONFIG1 @ 0x8007
  4839                           ;	External Oscillator Mode Selection bits
  4840                           ;	FEXTOSC = OFF, Oscillator not enabled
  4841                           ;	Power-up Default Value for COSC bits
  4842                           ;	RSTOSC = HFINTOSC_32MHZ, HFINTOSC (32 MHz)
  4843                           ;	Clock Out Enable bit
  4844                           ;	CLKOUTEN = OFF, CLKOUT function is disabled; I/O function on RA4
  4845                           ;	VDD Range Analog Calibration Selection bit
  4846                           ;	VDDAR = HI, Internal analog systems are calibrated for operation between VDD = 2.3V - 
      +                          5.5V
  4847     8007                     	org	32775
  4848     8007  3FCD               	dw	16333
  4849                           
  4850                           ;Config register CONFIG2 @ 0x8008
  4851                           ;	Master Clear Enable bit
  4852                           ;	MCLRE = EXTMCLR, If LVP = 0, MCLR pin is MCLR; If LVP = 1, RA3 pin function is MCLR
  4853                           ;	Power-up Timer Selection bits
  4854                           ;	PWRTS = PWRT_OFF, PWRT is disabled
  4855                           ;	WDT Operating Mode bits
  4856                           ;	WDTE = OFF, WDT disabled; SEN is ignored
  4857                           ;	Brown-out Reset Enable bits
  4858                           ;	BOREN = ON, Brown-out Reset Enabled, SBOREN bit is ignored
  4859                           ;	Brown-out Reset Voltage Selection bit
  4860                           ;	BORV = LO, Brown-out Reset Voltage (VBOR) set to 1.9V
  4861                           ;	PPSLOCKED One-Way Set Enable bit
  4862                           ;	PPS1WAY = ON, The PPSLOCKED bit can be set once after an unlocking sequence is execute
      +                          d; once PPSLOCKED is set, all future changes to PPS registers are prevented
  4863                           ;	Stack Overflow/Underflow Reset Enable bit
  4864                           ;	STVREN = ON, Stack Overflow or Underflow will cause a reset
  4865     8008                     	org	32776
  4866     8008  3FE7               	dw	16359
  4867                           
  4868                           ;Config register CONFIG3 @ 0x8009
  4869                           ;	unspecified, using default values
  4870     8009                     	org	32777
  4871     8009  3FFF               	dw	16383
  4872                           
  4873                           ;Config register CONFIG4 @ 0x800A
  4874                           ;	Boot Block Size Selection bits
  4875                           ;	BBSIZE = BB512, 512 words boot block size
  4876                           ;	Boot Block Enable bit
  4877                           ;	BBEN = OFF, Boot Block is disabled
  4878                           ;	SAF Enable bit
  4879                           ;	SAFEN = ON, SAF is enabled
  4880                           ;	Application Block Write Protection bit
  4881                           ;	WRTAPP = OFF, Application Block is not write-protected
  4882                           ;	Boot Block Write Protection bit
  4883                           ;	WRTB = OFF, Boot Block is not write-protected
  4884                           ;	Configuration Registers Write Protection bit
  4885                           ;	WRTC = OFF, Configuration Registers are not write-protected
  4886                           ;	Storage Area Flash (SAF) Write Protection bit
  4887                           ;	WRTSAF = OFF, SAF is not write-protected
  4888                           ;	Low Voltage Programming Enable bit
  4889                           ;	LVP = ON, Low Voltage programming enabled. MCLR/Vpp pin function is MCLR. MCLRE Config
      +                          uration bit is ignored.
  4890     800A                     	org	32778
  4891     800A  3FEF               	dw	16367
  4892                           
  4893                           ;Config register CONFIG5 @ 0x800B
  4894                           ;	User Program Flash Memory Code Protection bit
  4895                           ;	CP = OFF, User Program Flash Memory code protection is disabled
  4896     800B                     	org	32779
  4897     800B  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         23
    Persistent  34
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      11
    BANK0            80     25      47
    BANK1            80      0       0
    BANK2            80      0       0

Pointer List with Targets:

    FLASH_WriteBlock@flashWordArray	PTR unsigned short  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    FLASH_WriteWord@ramBuf	PTR unsigned short  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_DefaultInterruptHandler(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_DefaultInterruptHandler(), NULL(), 

    I2C1_SlaveBusColInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), I2C1_SlaveDefBusColInterruptHandler(), 

    I2C1_SlaveWrColInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), I2C1_SlaveDefWrColInterruptHandler(), 

    I2C1_SlaveAddrInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), I2C1_SlaveDefAddrInterruptHandler(), 

    I2C1_SlaveWrInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), I2C1_SlaveDefWrInterruptHandler(), 

    I2C1_SlaveRdInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), I2C1_SlaveDefRdInterruptHandler(), 

    MSSP1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), I2C1_Isr(), 

    memory_initialize@ramBuff	PTR unsigned short  size(2) Largest target is 0
		 -> NULL(NULL[0]), 


Critical Paths under _main in COMMON

    _memory_initialize->_FLASH_WriteWord
    _FLASH_WriteWord->_FLASH_ReadWord
    _FLASH_WriteBlock->_FLASH_EraseBlock
    _TMR0_Initialize->_TMR0_SetInterruptHandler

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _INTERRUPT_InterruptManager->_I2C1_Isr
    _TMR0_ISR->_TMR0_DefaultInterruptHandler
    _I2C1_SlaveDefWrInterruptHandler->_I2C1_SlaveSendTxData

Critical Paths under _main in BANK0

    _memory_initialize->_FLASH_WriteWord
    _FLASH_WriteWord->_FLASH_WriteBlock

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    4001
                                             22 BANK0      3     3      0
                  _SYSTEM_Initialize
         _SensorBoardType_validation
                 _getSensorBoardType
                  _memory_initialize
 ---------------------------------------------------------------------------------
 (1) _memory_initialize                                    1     1      0    3785
                     _FLASH_ReadWord
                    _FLASH_WriteWord
 ---------------------------------------------------------------------------------
 (2) _FLASH_WriteWord                                     12     6      6    3566
                                              6 COMMON     2     2      0
                                             12 BANK0     10     4      6
                     _FLASH_ReadWord
                   _FLASH_WriteBlock
 ---------------------------------------------------------------------------------
 (3) _FLASH_WriteBlock                                    12     8      4     772
                                              0 BANK0     12     8      4
                   _FLASH_EraseBlock
 ---------------------------------------------------------------------------------
 (4) _FLASH_EraseBlock                                     3     1      2     143
                                              3 COMMON     3     1      2
 ---------------------------------------------------------------------------------
 (3) _FLASH_ReadWord                                       3     1      2     219
                                              3 COMMON     3     1      2
 ---------------------------------------------------------------------------------
 (1) _getSensorBoardType                                   2     2      0       0
                                              3 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _SensorBoardType_validation                           1     1      0      44
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0      98
                    _I2C1_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR0_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      0     0      0      98
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR0_SetInterruptHandler                             2     0      2      98
                                              3 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C1_Initialize                                      1     1      0       0
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _INTERRUPT_InterruptManager                           0     0      0      22
                                NULL *
                           _I2C1_Isr *
                           _TMR0_ISR
 ---------------------------------------------------------------------------------
 (6) _TMR0_ISR                                             0     0      0       0
                                NULL *
       _TMR0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (7) _TMR0_DefaultInterruptHandler                         1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (6) _I2C1_Isr                                             2     2      0      22
                                              1 COMMON     2     2      0
             _I2C1_SlaveAddrCallBack
                 _I2C1_SlaveClearIrq
                   _I2C1_SlaveIsAddr
                   _I2C1_SlaveIsRead
              _I2C1_SlaveIsRxBufFull
             _I2C1_SlaveIsTxBufEmpty
               _I2C1_SlaveRdCallBack
             _I2C1_SlaveReleaseClock
               _I2C1_SlaveWrCallBack
 ---------------------------------------------------------------------------------
 (7) _I2C1_SlaveWrCallBack                                 0     0      0      22
                                NULL *
    _I2C1_SlaveDefWrInterruptHandler *
 ---------------------------------------------------------------------------------
 (8) _I2C1_SlaveDefWrInterruptHandler                      0     0      0      22
               _I2C1_SlaveSendTxData
 ---------------------------------------------------------------------------------
 (9) _I2C1_SlaveSendTxData                                 1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (7) _I2C1_SlaveReleaseClock                               0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C1_SlaveRdCallBack                                 0     0      0       0
                                NULL *
    _I2C1_SlaveDefRdInterruptHandler *
 ---------------------------------------------------------------------------------
 (8) _I2C1_SlaveDefRdInterruptHandler                      0     0      0       0
                _I2C1_SlaveGetRxData
 ---------------------------------------------------------------------------------
 (7) _I2C1_SlaveIsTxBufEmpty                               0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C1_SlaveIsRxBufFull                                0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C1_SlaveIsRead                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C1_SlaveIsAddr                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C1_SlaveClearIrq                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C1_SlaveAddrCallBack                               0     0      0       0
                                NULL *
  _I2C1_SlaveDefAddrInterruptHandler *
 ---------------------------------------------------------------------------------
 (8) _I2C1_SlaveDefAddrInterruptHandler                    0     0      0       0
                _I2C1_SlaveGetRxData
 ---------------------------------------------------------------------------------
 (9) _I2C1_SlaveGetRxData                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (7) NULL(Fake)                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _I2C1_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
     _WDT_Initialize
   _SensorBoardType_validation
   _getSensorBoardType
   _memory_initialize
     _FLASH_ReadWord
     _FLASH_WriteWord
       _FLASH_ReadWord
       _FLASH_WriteBlock
         _FLASH_EraseBlock

 _INTERRUPT_InterruptManager (ROOT)
   NULL(Fake) *
   _I2C1_Isr *
     _I2C1_SlaveAddrCallBack
       NULL(Fake) *
       _I2C1_SlaveDefAddrInterruptHandler *
         _I2C1_SlaveGetRxData
     _I2C1_SlaveClearIrq
     _I2C1_SlaveIsAddr
     _I2C1_SlaveIsRead
     _I2C1_SlaveIsRxBufFull
     _I2C1_SlaveIsTxBufEmpty
     _I2C1_SlaveRdCallBack
       NULL(Fake) *
       _I2C1_SlaveDefRdInterruptHandler *
         _I2C1_SlaveGetRxData
     _I2C1_SlaveReleaseClock
     _I2C1_SlaveWrCallBack
       NULL(Fake) *
       _I2C1_SlaveDefWrInterruptHandler *
         _I2C1_SlaveSendTxData
   _TMR0_ISR *
     NULL(Fake) *
     _TMR0_DefaultInterruptHandler *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM              F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      8       B       2       78.6%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     19      2F       5       58.8%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
ABS                  0      0      3A      10        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
DATA                 0      0      3A      11        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%
BITSFR32             0      0       0      33        0.0%
SFR32                0      0       0      33        0.0%
BITSFR33             0      0       0      34        0.0%
SFR33                0      0       0      34        0.0%
BITSFR34             0      0       0      35        0.0%
SFR34                0      0       0      35        0.0%
BITSFR35             0      0       0      36        0.0%
SFR35                0      0       0      36        0.0%
BITSFR36             0      0       0      37        0.0%
SFR36                0      0       0      37        0.0%
BITSFR37             0      0       0      38        0.0%
SFR37                0      0       0      38        0.0%
BITSFR38             0      0       0      39        0.0%
SFR38                0      0       0      39        0.0%
BITSFR39             0      0       0      40        0.0%
SFR39                0      0       0      40        0.0%
BITSFR40             0      0       0      41        0.0%
SFR40                0      0       0      41        0.0%
BITSFR41             0      0       0      42        0.0%
SFR41                0      0       0      42        0.0%
BITSFR42             0      0       0      43        0.0%
SFR42                0      0       0      43        0.0%
BITSFR43             0      0       0      44        0.0%
SFR43                0      0       0      44        0.0%
BITSFR44             0      0       0      45        0.0%
SFR44                0      0       0      45        0.0%
BITSFR45             0      0       0      46        0.0%
SFR45                0      0       0      46        0.0%
BITSFR46             0      0       0      47        0.0%
SFR46                0      0       0      47        0.0%
BITSFR47             0      0       0      48        0.0%
SFR47                0      0       0      48        0.0%
BITSFR48             0      0       0      49        0.0%
SFR48                0      0       0      49        0.0%
BITSFR49             0      0       0      50        0.0%
SFR49                0      0       0      50        0.0%
BITSFR50             0      0       0      51        0.0%
SFR50                0      0       0      51        0.0%
BITSFR51             0      0       0      52        0.0%
SFR51                0      0       0      52        0.0%
BITSFR52             0      0       0      53        0.0%
SFR52                0      0       0      53        0.0%
BITSFR53             0      0       0      54        0.0%
SFR53                0      0       0      54        0.0%
BITSFR54             0      0       0      55        0.0%
SFR54                0      0       0      55        0.0%
BITSFR55             0      0       0      56        0.0%
SFR55                0      0       0      56        0.0%
BITSFR56             0      0       0      57        0.0%
SFR56                0      0       0      57        0.0%
BITSFR57             0      0       0      58        0.0%
SFR57                0      0       0      58        0.0%
BITSFR58             0      0       0      59        0.0%
SFR58                0      0       0      59        0.0%
BITSFR59             0      0       0      60        0.0%
SFR59                0      0       0      60        0.0%
BITSFR60             0      0       0      61        0.0%
SFR60                0      0       0      61        0.0%
BITSFR61             0      0       0      62        0.0%
SFR61                0      0       0      62        0.0%
BITSFR62             0      0       0      63        0.0%
SFR62                0      0       0      63        0.0%
BITSFR63             0      0       0      64        0.0%
SFR63                0      0       0      64        0.0%


Microchip Technology PIC Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Fri Apr 14 15:42:59 2023

                 ??_I2C1_SlaveAddrCallBack 0070                                         l32 00B1  
                                       l44 0283                                         l39 02B0  
                                       l83 0201                                        l234 02E1  
                                      l423 0260                                        l445 0302  
                                      l542 031E                                        l536 0293  
                                      l482 01DE                                        l539 0308  
                                      l492 021D                                        l477 0236  
                                      l485 00C8                                        l486 0127  
                                      l488 011F                   __end_of_I2C1_SlaveIsAddr 02F0  
                                      u460 027A                                        u700 07EF  
                                      u461 0279                                        u701 07EE  
                                      u470 0280                                        u471 027F  
                                      u455 02AA                                        u650 00C7  
                                      u651 00C6                                        u660 0106  
                                      u661 0105                                        u670 011F  
                                      u671 011E                                        u655 00C3  
                                      u680 01C4                                        u681 01C3  
                                      u690 0040                                        u691 003F  
                 __end_of_I2C1_SlaveIsRead 0318                                        wreg 0009  
                         ?_FLASH_WriteWord 002C             FLASH_WriteBlock@flashWordArray 0022  
                                     l2001 00D2                                       l2011 00D6  
                                     l2003 00D3                                       l2021 0106  
                                     l2013 00D9                                       l2005 00D4  
                                     l2031 0115                                       l2023 0108  
                                     l2015 00DD                                       l2033 0119  
                                     l2025 010D                                       l2017 00EC  
                                     l2041 019C                                       l2035 0121  
                                     l2027 010E                                       l2019 00FF  
                                     l2051 01BE                                       l2029 010F  
                                     l2053 01C4                                       l2061 07DE  
                                     l2055 01D3                                       l2047 01A0  
                                     l2039 0195                                       l2071 07F9  
                                     l2063 07EF                                       l2049 01BA  
                                     l2057 0032                                       l2073 07FD  
                                     l2065 07F4                                       l1611 020C  
                                     l1603 0202                                       l2059 0040  
                                     l2067 07F5                                       l1621 0215  
                                     l1613 020D                                       l1605 0206  
                                     l2069 07F6                                       l1631 0223  
                                     l1623 0216                                       l1615 020E  
                                     l1607 0207                                       l1641 022B  
                                     l1633 0226                                       l1625 0218  
                                     l1617 0213                                       l1609 020A  
                         __end_of_I2C1_Isr 0195                                       l1731 01DF  
                                     l1811 0256                                       l1803 024D  
                                     l1643 022C                                       l1635 0228  
                                     l1627 021E                                       l1619 0214  
                                     l1821 0303                                       l1741 01EB  
                                     l1733 01E2                                       l1661 02FD  
                                     l1813 025D                                       l1805 0252  
                                     l1901 0290                                       l1645 0231  
                                     l1637 0229                                       l1629 0222  
                                     l1823 0305                                       l1751 01F2  
                                     l1743 01EC                                       l1735 01E4  
                                     l1807 0253                                       l1639 022A  
                                     l1825 0307                                       l1761 01FE  
                                     l1753 01F4                                       l1745 01ED  
                                     l1737 01E8                                       l1809 0255  
                                     l1841 0280                                       l1833 02A3  
                                     l1763 02D8                                       l1755 01F6  
                                     l1747 01EE                                       l1739 01EA  
                                     l1827 031C                                       l1765 02DB  
                                     l1757 01F8                                       l1749 01F0  
                                     l1845 0282                                       l1837 0275  
                                     l1767 02DF                                       l1759 01FB  
                                     l1839 027A                                       l1769 02E0  
                                     l1991 00B9                                       l1897 0284  
                                     l1993 00BD                                       l1899 028D  
                                     l1997 00C9                                       l1989 00B2  
                                     l1999 00D0                                       _LATA 0018  
                                     _LATC 001A                                       _WPUA 1F39  
                                     _WPUC 1F4F                                       _main 07DE  
                                     fsr0h 0005                                       fsr1h 0007  
                                     indf0 0000                                       fsr0l 0004  
                                     indf1 0001                                       fsr1l 0006  
                                     btemp 007E                          ?_FLASH_WriteBlock 0020  
                                     start 0031                                 _i2c1RdData 004C  
                       ??_FLASH_WriteBlock 0024                                 _i2c1WrData 0079  
             _I2C1_SlaveRdInterruptHandler 0046               _I2C1_SlaveWrInterruptHandler 0044  
                 memory_initialize@ramBuff 003C                    __end_of_TMR0_Initialize 0261  
           ??_TMR0_DefaultInterruptHandler 0070              __end_of_OSCILLATOR_Initialize 0309  
                                    ?_main 0070                                      i1l120 0026  
                                    i1l300 02BD                                      i1l124 002F  
                                    i1l125 002F                                      i1l117 0013  
                                    i1l310 02D7                                      i1l303 030D  
                                    i1l313 02F6                                      i1l352 02EF  
                                    i1l361 0321                                      i1l442 02A2  
                                    i1l355 0317                                      i1l452 0249  
                                    i1l373 02E8                                      i1l293 0273  
                                    i1l277 0194                                      i1l382 0327  
                                    i1l358 0324                                      i1l454 024C  
                                    i1l287 02CA                                      i1l376 031B  
                                    i1l449 0241                                      i1l379 0312  
       __end_of_SensorBoardType_validation 0284                 _SensorBoardType_validation 0274  
                                    _OSCEN 0891                                      u40_20 02B8  
                                    u40_21 02B7                                      u41_20 02C5  
                                    _TMR0H 059D                                      u41_21 02C4  
                                    _TMR0L 059C                                      u34_20 0273  
                                    u50_20 013B                                      u42_20 0241  
                                    u34_21 0272                                      u50_21 013A  
                                    u42_21 0240                                      u51_20 014B  
                                    u43_20 0249                                      u51_21 014A  
                                    u43_21 0248                                      _PORTA 000C  
                                    _PORTC 000E                                      u52_20 015E  
                                    u60_20 002A                                      u52_21 015D  
                                    u60_21 0029                                      u53_20 016E  
                                    u61_20 002E                                      u53_21 016D  
                                    u61_21 002D                                      u54_20 0177  
                                    u54_21 0176                                      u39_20 02D2  
                                    u55_20 000B                                      u39_21 02D1  
                                    u55_21 000A                                      u48_20 029D  
                                    u56_20 000F                                      u48_21 029C  
                                    u56_21 000E                                      u49_20 0133  
                                    u57_20 0017                                      u49_21 0132  
                                    u57_21 0016                                      _TRISA 0012  
                                    _TRISC 0014                                      u58_20 001B  
                                    u58_21 001A                                      u59_20 001F  
                                    u59_21 001E                  ?_TMR0_SetInterruptHandler 0073  
                        ??_I2C1_Initialize 0073                           __end_of_TMR0_ISR 02A3  
                           _WDT_Initialize 031C                                 _i2cReadCnt 0078  
                           _i2c1SlaveState 004A                                      main@i 0037  
                                    pclath 000A                                      status 0003  
                                    wtemp0 007E                            __initialization 07D0  
                             __end_of_main 07FF                ?_INTERRUPT_InterruptManager 0070  
                                   ??_main 0036                         _I2C1_SlaveClearIrq 0322  
                  _status_in_flash_absaddr 0780                     __end_of_WDT_Initialize 031F  
                      ?_I2C1_SlaveClearIrq 0070                  FLASH_WriteBlock@writeAddr 0020  
                  ?_I2C1_SlaveReleaseClock 0070                                     _ANSELA 1F38  
                                   _ANSELC 1F4E                                     _T0CON0 059E  
                                   _T0CON1 059F                                     _RC0PPS 1F20  
                                   _RC1PPS 1F21                         _getSensorBoardType 02A3  
                                   i1l1601 030F                                     _ODCONA 1F3A  
                                   _ODCONC 1F50                                     i1l2095 0183  
                                   i1l1801 031F                                     i1l1651 0267  
                                   i1l1653 026D                                     i1l1655 0309  
                                   i1l1815 0237                                     i1l1911 001B  
                                   i1l1903 0006                                     i1l1657 02F0  
                                   i1l1649 0261                                     i1l1817 0243  
                                   i1l1913 001F                                     i1l1905 000B  
                                   i1l1659 02F5                                     i1l1771 0313  
                                   i1l1819 024B                                     i1l1851 0296  
                                   i1l1915 002A                                     i1l1907 000F  
                                   i1l1597 0325                                     i1l1781 02CB  
                                   i1l1861 013B                                     i1l1853 029D  
                                   i1l1909 0017                                     i1l1783 02D2  
                                   i1l1775 0322                                     i1l1791 02B8  
                                   i1l1871 0153                                     i1l1863 013F  
                                   i1l1855 0128                                     i1l1777 02E9  
                                   i1l1793 0318                                     i1l1785 02E2  
                                   i1l1873 0156                                     i1l1865 0143  
                                   i1l1857 012B                                     i1l1849 0294  
                                   i1l1883 016F                                     i1l1875 015E  
                                   i1l1891 0191                                     i1l1867 014B  
                                   i1l1859 0133                                     i1l1797 02BE  
                                   i1l1789 02B1                                     i1l1885 0177  
                                   i1l1877 0162                                     i1l1869 014F  
                                   i1l1799 02C5                                     i1l1879 0166  
                                   i1l1889 017B                                     _INLVLA 1F3C  
                                   _INLVLC 1F52                                     _OSCFRQ 0893  
                                   _WDTCON 080C                                _i2cDataRead 0039  
                      ?_getSensorBoardType 0070                       ??_I2C1_SlaveClearIrq 0070  
            FLASH_WriteWord@blockStartAddr 0033                        FLASH_WriteWord@word 0030  
                         ?_TMR0_Initialize 0070                                  ?_I2C1_Isr 0070  
                  FLASH_ReadWord@flashAddr 0073                       ??_getSensorBoardType 0073  
                          ?_WDT_Initialize 0070             __end_of_I2C1_SlaveReleaseClock 0322  
 TMR0_SetInterruptHandler@InterruptHandler 0073                     _I2C1_SlaveAddrCallBack 02CB  
                        _SYSTEM_Initialize 0284                    __end_of__initialization 07DB  
                       ?_SYSTEM_Initialize 0070                             __pcstackCOMMON 0070  
                      ??_SYSTEM_Initialize 0075                                  ?_TMR0_ISR 0070  
                         FLASH_WriteWord@i 0035                                 ??_I2C1_Isr 0071  
                        ?_I2C1_SlaveIsAddr 0070                          ?_I2C1_SlaveIsRead 0070  
              FLASH_WriteBlock@GIEBitValue 002A                         ??_I2C1_SlaveIsAddr 0070  
                       ??_I2C1_SlaveIsRead 0070                  __end_of_SYSTEM_Initialize 0294  
                               __pbssBANK0 0039                       memory_initialize@TAG 0070  
                      _I2C1_SlaveGetRxData 0325                      _I2C1_SlaveIsRxBufFull 0318  
                               __pmaintext 07DE           __end_of_TMR0_SetInterruptHandler 0303  
                               ??_TMR0_ISR 0071                                 __pintentry 0004  
                          _I2C1_Initialize 02D8                       ?_I2C1_SlaveGetRxData 0070  
                           _FLASH_ReadWord 021E                ?_SensorBoardType_validation 0070  
                                  _NVMADRH 081B                                    _NVMADRL 081A  
                                  _NVMDATH 081D                                    _OSCTUNE 0892  
                                  _NVMDATL 081C                                    _NVMCON2 081F  
                                  _SSP1ADD 018D                                    _SLRCONA 1F3B  
                                  _SLRCONC 1F51                                    _SSP1BUF 018C  
                                  _SSP1MSK 018E                           _FLASH_EraseBlock 0202  
SensorBoardType_validation@SensorBoardType 0073                      ??_I2C1_SlaveGetRxData 0070  
                   __end_of_FLASH_ReadWord 0237                                    __ptext1 0032  
                                  __ptext2 0195                                    __ptext3 00B2  
                                  __ptext4 0202                                    __ptext5 021E  
                                  __ptext6 02A3                                    __ptext7 0274  
                                  __ptext8 0284                                    __ptext9 031C  
                        _memory_initialize 0032             _I2C1_SlaveAddrInterruptHandler 0042  
                    _OSCILLATOR_Initialize 0303                         ?_memory_initialize 0070  
                 ??_PIN_MANAGER_Initialize 0073                   ??_I2C1_SlaveIsTxBufEmpty 0070  
                                  main@TAG 0038                           _default_in_flash 0788  
                                  clrloop0 02F8                       end_of_initialization 07DB  
                      ??_memory_initialize 0078                                  _LED_timer 007A  
                   ?_I2C1_SlaveIsRxBufFull 0070            _I2C1_SlaveWrColInterruptHandler 003E  
                  __end_of_I2C1_Initialize 02E2               __end_of_I2C1_SlaveRdCallBack 02CB  
                FLASH_ReadWord@GIEBitValue 0075                  __end_of_memory_initialize 00B2  
                          ?_FLASH_ReadWord 0073                           ??_WDT_Initialize 0073  
                 _TMR0_SetInterruptHandler 02FD                    ?_I2C1_SlaveAddrCallBack 0070  
                        FLASH_WriteBlock@i 002B                          ??_FLASH_WriteWord 0076  
                            _i2c1SlaveAddr 004B                           _FLASH_WriteBlock 00B2  
                   ?_OSCILLATOR_Initialize 0070             __end_of_I2C1_SlaveAddrCallBack 02D8  
             __end_of_I2C1_SlaveSendTxData 0313                        start_initialization 07D0  
             __end_of_I2C1_SlaveWrCallBack 02BE                   I2C1_SlaveSendTxData@data 0070  
                         ?_I2C1_Initialize 0070                            _status_in_flash 0780  
              FLASH_EraseBlock@GIEBitValue 0075                   __end_of_FLASH_EraseBlock 021E  
  __end_of_I2C1_SlaveDefRdInterruptHandler 0274          ??_I2C1_SlaveDefRdInterruptHandler 0070  
         ?_I2C1_SlaveDefRdInterruptHandler 0070            _I2C1_SlaveDefRdInterruptHandler 0261  
  __end_of_I2C1_SlaveDefWrInterruptHandler 030E          ??_I2C1_SlaveDefWrInterruptHandler 0071  
         ?_I2C1_SlaveDefWrInterruptHandler 0070            _I2C1_SlaveDefWrInterruptHandler 0309  
                              __pbssCOMMON 0078                                  ___latbits 0000  
                            __pcstackBANK0 0020                       _I2C1_SlaveRdCallBack 02BE  
                    _TMR0_InterruptHandler 004D                                  __pnvBANK0 004D  
                   _PIN_MANAGER_Initialize 01DF                     _MSSP1_InterruptHandler 0048  
                   _I2C1_SlaveIsTxBufEmpty 02E2                   __end_of_default_in_flash 07D0  
                                 _I2C1_Isr 0128               ??_INTERRUPT_InterruptManager 0073  
                 ??_I2C1_SlaveReleaseClock 0070                      ?_I2C1_SlaveRdCallBack 0070  
                  ??_I2C1_SlaveIsRxBufFull 0070                   FLASH_WriteWord@flashAddr 002C  
           FLASH_WriteBlock@blockStartAddr 0028                          ??_TMR0_Initialize 0075  
                                 _LATAbits 0018                                  clear_ram0 02F7  
                                 _PIE0bits 0716                                   _PIE1bits 0717  
                  __end_of_status_in_flash 0788                 ??_TMR0_SetInterruptHandler 0075  
                                 _PIR0bits 070C                __end_of_I2C1_SlaveGetRxData 0328  
                                 _PIR1bits 070D                  FLASH_EraseBlock@startAddr 0073  
                     _I2C1_SlaveSendTxData 030E                           ??_FLASH_ReadWord 0075  
                 _default_in_flash_absaddr 0788                       _I2C1_SlaveWrCallBack 02B1  
                                 _SSP1CON1 0190                                   _SSP1CON2 0191  
                                 _TMR0_ISR 0294                                   _SSP1STAT 018F  
         _I2C1_SlaveBusColInterruptHandler 0040                            _FLASH_WriteWord 0195  
       _I2C1_SlaveDefWrColInterruptHandler 0000                   __end_of_FLASH_WriteBlock 0128  
__end_of_I2C1_SlaveDefAddrInterruptHandler 02F7        ??_I2C1_SlaveDefAddrInterruptHandler 0070  
       ?_I2C1_SlaveDefAddrInterruptHandler 0070          _I2C1_SlaveDefAddrInterruptHandler 02F0  
                         _I2C1_SlaveIsAddr 02E9                           _I2C1_SlaveIsRead 0313  
                    ?_I2C1_SlaveSendTxData 0070                      ?_I2C1_SlaveWrCallBack 0070  
                  ??_OSCILLATOR_Initialize 0073                   __p_default_in_flash_text 0788  
      _I2C1_SlaveDefBusColInterruptHandler 0000                     ??_I2C1_SlaveRdCallBack 0070  
                               _T0CON0bits 059E                                   __ptext10 024D  
                                 __ptext11 02FD                                   __ptext20 0309  
                                 __ptext12 01DF                                   __ptext21 030E  
                                 __ptext13 0303                                   __ptext30 02CB  
                                 __ptext22 031F                                   __ptext14 02D8  
                                 __ptext31 02F0                                   __ptext23 02BE  
                                 __ptext32 0325                                   __ptext24 0261  
                                 __ptext16 0294                                   __ptext25 02E2  
                                 __ptext17 0237                                   __ptext26 0318  
                                 __ptext18 0128                                   __ptext27 0313  
                                 __ptext19 02B1                                   __ptext28 02E9  
                                 __ptext29 0322                               _SSP1CON1bits 0190  
                             _SSP1CON2bits 0191                      FLASH_WriteWord@ramBuf 002E  
                    FLASH_WriteWord@offset 0032       __end_of_TMR0_DefaultInterruptHandler 024D  
             _TMR0_DefaultInterruptHandler 0237                 __end_of_I2C1_SlaveClearIrq 0325  
                                 int$flags 007E         __end_of_INTERRUPT_InterruptManager 0031  
               _INTERRUPT_InterruptManager 0004                               _SSP1STATbits 018F  
                  __p_status_in_flash_text 0780                          ?_FLASH_EraseBlock 0073  
               __end_of_getSensorBoardType 02B1                         ??_FLASH_EraseBlock 0075  
                               _INTCONbits 000B                    __end_of_FLASH_WriteWord 01DF  
             ??_SensorBoardType_validation 0073                                _NVMCON1bits 081E  
                                 intlevel1 0000                     _I2C1_SlaveReleaseClock 031F  
                  ?_PIN_MANAGER_Initialize 0070                    ?_I2C1_SlaveIsTxBufEmpty 0070  
                   ??_I2C1_SlaveSendTxData 0070                     ??_I2C1_SlaveWrCallBack 0071  
            ?_TMR0_DefaultInterruptHandler 0070                                 _SSP1DATPPS 1EC6  
                               _SSP1CLKPPS 1EC5                            _TMR0_Initialize 024D  
           __end_of_PIN_MANAGER_Initialize 0202             __end_of_I2C1_SlaveIsTxBufEmpty 02E9  
            __end_of_I2C1_SlaveIsRxBufFull 031C  
